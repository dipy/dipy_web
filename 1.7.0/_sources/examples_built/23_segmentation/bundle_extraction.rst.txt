
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built/23_segmentation/bundle_extraction.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_built_23_segmentation_bundle_extraction.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_23_segmentation_bundle_extraction.py:


==================================================
Automatic Fiber Bundle Extraction with RecoBundles
==================================================

This example explains how we can use RecoBundles [Garyfallidis17]_ to extract
bundles from tractograms.

First import the necessary modules.

.. GENERATED FROM PYTHON SOURCE LINES 11-27

.. code-block:: default


    import numpy as np

    from dipy.align.streamlinear import whole_brain_slr
    from dipy.data import get_two_hcp842_bundles
    from dipy.data import (fetch_target_tractogram_hcp,
                           fetch_bundle_atlas_hcp842,
                           get_bundle_atlas_hcp842,
                           get_target_tractogram_hcp)
    from dipy.io.stateful_tractogram import Space, StatefulTractogram
    from dipy.io.streamline import load_trk, save_trk
    from dipy.io.utils import create_tractogram_header
    from dipy.segment.bundles import RecoBundles
    from dipy.viz import actor, window









.. GENERATED FROM PYTHON SOURCE LINES 28-29

Download and read data for this tutorial

.. GENERATED FROM PYTHON SOURCE LINES 29-48

.. code-block:: default




    target_file, target_folder = fetch_target_tractogram_hcp()
    atlas_file, atlas_folder = fetch_bundle_atlas_hcp842()

    atlas_file, all_bundles_files = get_bundle_atlas_hcp842()
    target_file = get_target_tractogram_hcp()

    sft_atlas = load_trk(atlas_file, "same", bbox_valid_check=False)
    atlas = sft_atlas.streamlines
    atlas_header = create_tractogram_header(atlas_file,
                                            *sft_atlas.space_attributes)

    sft_target = load_trk(target_file, "same", bbox_valid_check=False)
    target = sft_target.streamlines
    target_header = create_tractogram_header(target_file,
                                             *sft_target.space_attributes)








.. GENERATED FROM PYTHON SOURCE LINES 49-50

let's visualize atlas tractogram and target tractogram before registration

.. GENERATED FROM PYTHON SOURCE LINES 50-62

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(atlas, colors=(1, 0, 1)))
    scene.add(actor.line(target, colors=(1, 1, 0)))
    window.record(scene, out_path='tractograms_initial.png', size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_001.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 63-68

.. figure:: tractograms_initial.png
   :align: center

   Atlas and target before registration.


.. GENERATED FROM PYTHON SOURCE LINES 71-73

We will register target tractogram to model atlas' space using streamlinear
registration (SLR) [Garyfallidis15]_

.. GENERATED FROM PYTHON SOURCE LINES 73-80

.. code-block:: default



    moved, transform, qb_centroids1, qb_centroids2 = whole_brain_slr(
        atlas, target, x0='affine', verbose=True, progressive=True,
        rng=np.random.RandomState(1984))









.. GENERATED FROM PYTHON SOURCE LINES 81-83

We save the transform generated in this registration, so that we can use
it in the bundle profiles example

.. GENERATED FROM PYTHON SOURCE LINES 83-88

.. code-block:: default



    np.save("slr_transform.npy", transform)









.. GENERATED FROM PYTHON SOURCE LINES 89-90

let's visualize atlas tractogram and target tractogram after registration

.. GENERATED FROM PYTHON SOURCE LINES 90-103

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(atlas, colors=(1, 0, 1)))
    scene.add(actor.line(moved, colors=(1, 1, 0)))
    window.record(scene, out_path='tractograms_after_registration.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_002.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 104-109

.. figure:: tractograms_after_registration.png
   :align: center

   Atlas and target after registration.


.. GENERATED FROM PYTHON SOURCE LINES 113-147

Extracting bundles using RecoBundles [Garyfallidis17]_

RecoBundles requires a model (reference) bundle and tries to extract similar
looking bundle from the input tractogram. There are some key parameters that
users can set as per requirements. Here are the key threshold parameters
measured in millimeters and their function in Recobundles:

    - model_clust_thr : It will use QuickBundles to get the centroids of the
    model bundle and work with centroids instead of all streamlines. This helps
    to make RecoBundles faster. The larger the value of the threshold, the
    fewer centroids will be, the and smaller the threshold value, the more
    centroids will be. If you prefer to use all the streamlines of the model
    bundle, you can set this threshold to 0.01 mm.
    Recommended range of the model_clust_thr is 0.01 - 3.0 mm.

    - reduction_thr : This threshold will be used to reduce the search space
    for finding the streamlines that match model bundle streamlines in shape.
    Instead of looking at the entire tractogram, now we will be looking at
    neighboring region of a model bundle in the tractogram. Increase the
    threshold to increase the search space.
    Recommended range of the reduction_thr is 15 - 30 mm.

    - pruning_thr : This threshold will filter the streamlines for which the
    distance to the model bundle is greater than the pruning_thr.
    This serves to filter the neighborhood area (search space) to get
    streamlines that are like the model bundle.
    Recommended range of the pruning_thr is 8 - 12 mm.

    - reduction_distance and pruning_distance : Distance method used internally.
    Minimum Diferect Flip distance (mdf) or Mean Average Minimum (mam).
    Default is set to mdf.

    - slr : If slr flag is set to True, local registration of model bundle with
    neighbouring area will be performed. Default and recommended is True.

.. GENERATED FROM PYTHON SOURCE LINES 150-153

Read Arcuate Fasciculus Left and Corticospinal Tract Left bundles from already
fetched atlas data to use them as model bundle. Let's visualize the
Arcuate Fasciculus Left model bundle.

.. GENERATED FROM PYTHON SOURCE LINES 153-172

.. code-block:: default



    model_af_l_file, model_cst_l_file = get_two_hcp842_bundles()
    sft_af_l = load_trk(model_af_l_file, "same", bbox_valid_check=False)
    model_af_l = sft_af_l.streamlines

    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(model_af_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_model_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_003.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 173-178

.. figure:: AF_L_model_bundle.png
   :align: center

   Model Arcuate Fasciculus Left bundle


.. GENERATED FROM PYTHON SOURCE LINES 178-191

.. code-block:: default




    rb = RecoBundles(moved, verbose=True, rng=np.random.RandomState(2001))

    recognized_af_l, af_l_labels = rb.recognize(model_bundle=model_af_l,
                                                model_clust_thr=0.1,
                                                reduction_thr=15,
                                                pruning_thr=7,
                                                reduction_distance='mdf',
                                                pruning_distance='mdf',
                                                slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 192-193

let's visualize extracted Arcuate Fasciculus Left bundle

.. GENERATED FROM PYTHON SOURCE LINES 193-208

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_af_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_recognized_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_004.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 209-214

.. figure:: AF_L_recognized_bundle.png
   :align: center

   Extracted Arcuate Fasciculus Left bundle


.. GENERATED FROM PYTHON SOURCE LINES 217-220

Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.


.. GENERATED FROM PYTHON SOURCE LINES 221-227

.. code-block:: default



    reco_af_l = StatefulTractogram(recognized_af_l, atlas_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 228-230

Let's save the recognized bundle in the original space of the subject anatomy.


.. GENERATED FROM PYTHON SOURCE LINES 231-238

.. code-block:: default



    reco_af_l = StatefulTractogram(target[af_l_labels], target_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_1.trk", bbox_valid_check=False)









.. GENERATED FROM PYTHON SOURCE LINES 239-241

Now, let's increase the reduction_thr and pruning_thr values.


.. GENERATED FROM PYTHON SOURCE LINES 242-252

.. code-block:: default



    recognized_af_l, af_l_labels = rb.recognize(model_bundle=model_af_l,
                                                model_clust_thr=0.1,
                                                reduction_thr=20,
                                                pruning_thr=10,
                                                reduction_distance='mdf',
                                                pruning_distance='mdf',
                                                slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 253-254

let's visualize extracted Arcuate Fasciculus Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 254-269

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_af_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_recognized_bundle2.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_005.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 270-275

.. figure:: AF_L_recognized_bundle2.png
   :align: center

   Extracted Arcuate Fasciculus Left bundle


.. GENERATED FROM PYTHON SOURCE LINES 278-281

Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.


.. GENERATED FROM PYTHON SOURCE LINES 282-288

.. code-block:: default



    reco_af_l = StatefulTractogram(recognized_af_l, atlas_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 289-291

Let's save the recognized bundle in the original space of the subject anatomy.


.. GENERATED FROM PYTHON SOURCE LINES 292-298

.. code-block:: default



    reco_af_l = StatefulTractogram(target[af_l_labels], target_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 299-301

Now, let's increase the reduction_thr and pruning_thr values further.


.. GENERATED FROM PYTHON SOURCE LINES 302-312

.. code-block:: default



    recognized_af_l, af_l_labels = rb.recognize(model_bundle=model_af_l,
                                                model_clust_thr=0.1,
                                                reduction_thr=25,
                                                pruning_thr=12,
                                                reduction_distance='mdf',
                                                pruning_distance='mdf',
                                                slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 313-314

let's visualize extracted Arcuate Fasciculus Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 314-329

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_af_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_recognized_bundle3.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_006.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 330-335

.. figure:: AF_L_recognized_bundle3.png
   :align: center

   Extracted Arcuate Fasciculus Left bundle


.. GENERATED FROM PYTHON SOURCE LINES 338-341

Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.


.. GENERATED FROM PYTHON SOURCE LINES 342-348

.. code-block:: default



    reco_af_l = StatefulTractogram(recognized_af_l, atlas_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_3.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 349-351

Let's save the recognized bundle in the original space of the subject anatomy.


.. GENERATED FROM PYTHON SOURCE LINES 352-359

.. code-block:: default



    reco_af_l = StatefulTractogram(target[af_l_labels], target_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_3.trk", bbox_valid_check=False)









.. GENERATED FROM PYTHON SOURCE LINES 360-366

Let's apply auto-calibrated RecoBundles on the output of standard RecoBundles.
This step will filter out the outlier streamlines. This time, the RecoBundles'
extracted bundle will serve as a model bundle. As a rule of thumb, provide
larger threshold values in standard RecoBundles function and smaller values in
the auto-calibrated RecoBundles (refinement) step.


.. GENERATED FROM PYTHON SOURCE LINES 366-377

.. code-block:: default



    r_recognized_af_l, r_af_l_labels = rb.refine(model_bundle=model_af_l,
                                                 pruned_streamlines=recognized_af_l,
                                                 model_clust_thr=0.1,
                                                 reduction_thr=15,
                                                 pruning_thr=6,
                                                 reduction_distance='mdf',
                                                 pruning_distance='mdf',
                                                 slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 378-379

let's visualize extracted refined Arcuate Fasciculus Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 379-394

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(r_recognized_af_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_refine_recognized_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_007.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 395-400

.. figure:: AF_L_refine_recognized_bundle.png
   :align: center

   Extracted Arcuate Fasciculus Left bundle


.. GENERATED FROM PYTHON SOURCE LINES 403-406

Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.


.. GENERATED FROM PYTHON SOURCE LINES 407-413

.. code-block:: default



    reco_af_l = StatefulTractogram(r_recognized_af_l, atlas_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 414-416

Let's save the recognized bundle in the original space of the subject anatomy.


.. GENERATED FROM PYTHON SOURCE LINES 417-424

.. code-block:: default



    reco_af_l = StatefulTractogram(target[r_af_l_labels], target_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_refine.trk", bbox_valid_check=False)









.. GENERATED FROM PYTHON SOURCE LINES 425-426

Let's load Corticospinal Tract Left model bundle and visualize it.

.. GENERATED FROM PYTHON SOURCE LINES 426-444

.. code-block:: default



    sft_cst_l = load_trk(model_cst_l_file, "same", bbox_valid_check=False)
    model_cst_l = sft_cst_l.streamlines

    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(model_cst_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_model_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_008.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 445-450

.. figure:: CST_L_model_bundle.png
   :align: center

   The Corticospinal tract model bundle


.. GENERATED FROM PYTHON SOURCE LINES 450-460

.. code-block:: default



    recognized_cst_l, cst_l_labels = rb.recognize(model_bundle=model_cst_l,
                                                  model_clust_thr=0.1,
                                                  reduction_thr=15,
                                                  pruning_thr=7,
                                                  reduction_distance='mdf',
                                                  pruning_distance='mdf',
                                                  slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 461-462

let's visualize extracted Corticospinal tract Left bundle

.. GENERATED FROM PYTHON SOURCE LINES 462-477

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_cst_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_recognized_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_009.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 478-483

.. figure:: CST_L_recognized_bundle.png
   :align: center

   Extracted Corticospinal tract Left bundle


.. GENERATED FROM PYTHON SOURCE LINES 486-489

Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.


.. GENERATED FROM PYTHON SOURCE LINES 490-496

.. code-block:: default



    reco_cst_l = StatefulTractogram(recognized_cst_l, atlas_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 497-499

Let's save the recognized bundle in the original space of the subject anatomy.


.. GENERATED FROM PYTHON SOURCE LINES 500-507

.. code-block:: default



    reco_cst_l = StatefulTractogram(target[cst_l_labels], target_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_1.trk", bbox_valid_check=False)









.. GENERATED FROM PYTHON SOURCE LINES 508-510

Now, let's increase the reduction_thr and pruning_thr values.


.. GENERATED FROM PYTHON SOURCE LINES 511-521

.. code-block:: default



    recognized_cst_l, cst_l_labels = rb.recognize(model_bundle=model_cst_l,
                                                  model_clust_thr=0.1,
                                                  reduction_thr=20,
                                                  pruning_thr=10,
                                                  reduction_distance='mdf',
                                                  pruning_distance='mdf',
                                                  slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 522-523

let's visualize extracted Corticospinal tract Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 523-538

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_cst_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_recognized_bundle2.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_010.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 539-544

.. figure:: CST_L_recognized_bundle2.png
   :align: center

   Extracted Corticospinal tract Left bundle


.. GENERATED FROM PYTHON SOURCE LINES 547-550

Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.


.. GENERATED FROM PYTHON SOURCE LINES 551-557

.. code-block:: default



    reco_cst_l = StatefulTractogram(recognized_cst_l, atlas_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 558-560

Let's save the recognized bundle in the original space of the subject anatomy.


.. GENERATED FROM PYTHON SOURCE LINES 561-568

.. code-block:: default



    reco_cst_l = StatefulTractogram(target[cst_l_labels], target_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_2.trk", bbox_valid_check=False)









.. GENERATED FROM PYTHON SOURCE LINES 569-571

Now, let's increase the reduction_thr and pruning_thr values further.


.. GENERATED FROM PYTHON SOURCE LINES 572-582

.. code-block:: default



    recognized_cst_l, cst_l_labels = rb.recognize(model_bundle=model_cst_l,
                                                  model_clust_thr=0.1,
                                                  reduction_thr=25,
                                                  pruning_thr=12,
                                                  reduction_distance='mdf',
                                                  pruning_distance='mdf',
                                                  slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 583-584

let's visualize extracted Corticospinal tract Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 584-599

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_cst_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_recognized_bundle3.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_011.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_011.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 600-605

.. figure:: CST_L_recognized_bundle3.png
   :align: center

   Extracted Corticospinal tract Left bundle


.. GENERATED FROM PYTHON SOURCE LINES 608-611

Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.


.. GENERATED FROM PYTHON SOURCE LINES 612-618

.. code-block:: default



    reco_cst_l = StatefulTractogram(recognized_cst_l, atlas_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_3.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 619-621

Let's save the recognized bundle in the original space of the subject anatomy.


.. GENERATED FROM PYTHON SOURCE LINES 622-629

.. code-block:: default



    reco_cst_l = StatefulTractogram(target[cst_l_labels], target_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_3.trk", bbox_valid_check=False)









.. GENERATED FROM PYTHON SOURCE LINES 630-636

Let's apply auto-calibrated RecoBundles on the output of standard RecoBundles.
This step will filter out the outlier streamlines. This time, the RecoBundles'
extracted bundle will serve as a model bundle. As a rule of thumb, provide
larger threshold values in standard RecoBundles function and smaller values in
the auto-calibrated RecoBundles (refinement) step.


.. GENERATED FROM PYTHON SOURCE LINES 636-648

.. code-block:: default



    r_recognized_cst_l, r_cst_l_labels = rb.refine(
                                         model_bundle=model_cst_l,
                                         pruned_streamlines=recognized_cst_l,
                                         model_clust_thr=0.1,
                                         reduction_thr=15,
                                         pruning_thr=6,
                                         reduction_distance='mdf',
                                         pruning_distance='mdf',
                                         slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 649-650

let's visualize extracted refined Corticospinal tract Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 650-665

.. code-block:: default



    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(r_recognized_cst_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_refine_recognized_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_012.png
   :alt: bundle extraction
   :srcset: /examples_built/23_segmentation/images/sphx_glr_bundle_extraction_012.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 666-671

.. figure:: CST_L_refine_recognized_bundle.png
   :align: center

   Extracted refined Corticospinal tract Left bundle


.. GENERATED FROM PYTHON SOURCE LINES 674-677

Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.


.. GENERATED FROM PYTHON SOURCE LINES 678-684

.. code-block:: default



    reco_cst_l = StatefulTractogram(r_recognized_cst_l, atlas_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 685-687

Let's save the recognized bundle in the original space of the subject anatomy.


.. GENERATED FROM PYTHON SOURCE LINES 688-695

.. code-block:: default



    reco_cst_l = StatefulTractogram(target[r_cst_l_labels], target_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_refine.trk", bbox_valid_check=False)









.. GENERATED FROM PYTHON SOURCE LINES 696-700

This example shows how changing different threshold parameters can change the
output. It is up to the user to decide what is the desired output and select
parameters accordingly.


.. GENERATED FROM PYTHON SOURCE LINES 705-718

References
----------

.. [Garyfallidis17] Garyfallidis et al. Recognition of white matter
        bundles using local and global streamline-based registration
        and clustering, Neuroimage, 2017.

.. [Chandio2020] Chandio, B.Q., Risacher, S.L., Pestilli, F.,
        Bullock, D., Yeh, FC., Koudoro, S., Rokem, A., Harezlak, J., and
        Garyfallidis, E. Bundle analytics, a computational framework for
        investigating the shapes and profiles of brain pathways across
        populations. Sci Rep 10, 17149 (2020)



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  5.826 seconds)


.. _sphx_glr_download_examples_built_23_segmentation_bundle_extraction.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: bundle_extraction.py <bundle_extraction.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: bundle_extraction.ipynb <bundle_extraction.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
