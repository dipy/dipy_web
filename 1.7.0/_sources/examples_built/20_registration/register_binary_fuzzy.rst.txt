
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built/20_registration/register_binary_fuzzy.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_built_20_registration_register_binary_fuzzy.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_20_registration_register_binary_fuzzy.py:


=======================================================
Diffeomorphic Registration with binary and fuzzy images
=======================================================

This example demonstrates registration of a binary and a fuzzy image.
This could be seen as aligning a fuzzy (sensed) image to a binary
(e.g., template) image.

.. GENERATED FROM PYTHON SOURCE LINES 10-18

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt
    from skimage import draw, filters
    from dipy.align.imwarp import SymmetricDiffeomorphicRegistration
    from dipy.align.metrics import SSDMetric
    from dipy.viz import regtools








.. GENERATED FROM PYTHON SOURCE LINES 19-22

Let's generate a sample template image as the combination of three ellipses.
We will generate the fuzzy (sensed) version of the image by smoothing
the reference image.

.. GENERATED FROM PYTHON SOURCE LINES 22-39

.. code-block:: default




    def draw_ellipse(img, center, axis):
        rr, cc = draw.ellipse(center[0], center[1], axis[0], axis[1],
                              shape=img.shape)
        img[rr, cc] = 1
        return img


    img_ref = np.zeros((64, 64))
    img_ref = draw_ellipse(img_ref, (25, 15), (10, 5))
    img_ref = draw_ellipse(img_ref, (20, 45), (15, 10))
    img_ref = draw_ellipse(img_ref, (50, 40), (7, 15))

    img_in = filters.gaussian(img_ref, sigma=3)








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Let's define a small visualization function.

.. GENERATED FROM PYTHON SOURCE LINES 41-59

.. code-block:: default




    def show_images(img_ref, img_warp, fig_name):
        fig, axarr = plt.subplots(ncols=2, figsize=(12, 5))
        axarr[0].set_title('warped image & reference contour')
        axarr[0].imshow(img_warp)
        axarr[0].contour(img_ref, colors='r')
        ssd = np.sum((img_warp - img_ref) ** 2)
        axarr[1].set_title('difference, SSD=%.02f' % ssd)
        im = axarr[1].imshow(img_warp - img_ref)
        plt.colorbar(im)
        fig.tight_layout()
        fig.savefig(fig_name + '.png')


    show_images(img_ref, img_in, 'input')




.. image-sg:: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_001.png
   :alt: register binary fuzzy
   :srcset: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 60-64

.. figure:: input.png
   :align: center

   Input images before alignment.

.. GENERATED FROM PYTHON SOURCE LINES 67-71

Let's use the general Registration function with some naive parameters,
such as set `step_length` as 1 assuming maximal step 1 pixel and a reasonably
small number of iterations since the deformation with already aligned images
should be minimal.

.. GENERATED FROM PYTHON SOURCE LINES 71-80

.. code-block:: default



    sdr = SymmetricDiffeomorphicRegistration(metric=SSDMetric(img_ref.ndim),
                                             step_length=1.0,
                                             level_iters=[50, 100],
                                             inv_iter=50,
                                             ss_sigma_factor=0.1,
                                             opt_tol=1.e-3)








.. GENERATED FROM PYTHON SOURCE LINES 81-82

Perform the registration with equal images.

.. GENERATED FROM PYTHON SOURCE LINES 82-89

.. code-block:: default



    mapping = sdr.optimize(img_ref.astype(float), img_ref.astype(float))
    img_warp = mapping.transform(img_ref, 'linear')
    show_images(img_ref, img_warp, 'output-0')
    regtools.plot_2d_diffeomorphic_map(mapping, 5, 'map-0.png')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_002.png
          :alt: register binary fuzzy
          :srcset: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_002.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_003.png
          :alt: register binary fuzzy
          :srcset: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_003.png
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (array([[  0.,   0.,   0., ...,   0.,   0.,   0.],
           [  0., 127., 127., ..., 127., 127., 127.],
           [  0., 127., 127., ..., 127., 127., 127.],
           ...,
           [  0., 127., 127., ..., 127., 127., 127.],
           [  0., 127., 127., ..., 127., 127., 127.],
           [  0., 127., 127., ..., 127., 127., 127.]], dtype=float32), array([[  0.,   0.,   0., ...,   0.,   0.,   0.],
           [  0., 127., 127., ..., 127., 127., 127.],
           [  0., 127., 127., ..., 127., 127., 127.],
           ...,
           [  0., 127., 127., ..., 127., 127., 127.],
           [  0., 127., 127., ..., 127., 127., 127.],
           [  0., 127., 127., ..., 127., 127., 127.]], dtype=float32))



.. GENERATED FROM PYTHON SOURCE LINES 90-96

.. figure:: output-0.png
   :align: center
.. figure:: map-0.png
   :align: center

   Registration results for default parameters and equal images.

.. GENERATED FROM PYTHON SOURCE LINES 99-100

Perform the registration with binary and fuzzy images.

.. GENERATED FROM PYTHON SOURCE LINES 100-107

.. code-block:: default



    mapping = sdr.optimize(img_ref.astype(float), img_in.astype(float))
    img_warp = mapping.transform(img_in, 'linear')
    show_images(img_ref, img_warp, 'output-1')
    regtools.plot_2d_diffeomorphic_map(mapping, 5, 'map-1.png')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_004.png
          :alt: register binary fuzzy
          :srcset: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_004.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_005.png
          :alt: register binary fuzzy
          :srcset: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_005.png
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (array([[  0.      ,   0.      ,   0.      , ...,   0.      ,   0.      ,
              0.      ],
           [  0.      ,  89.38399 ,  81.57997 , ..., 122.46935 , 125.357605,
            127.      ],
           [  0.      ,  99.70613 , 127.00001 , ..., 127.      , 127.      ,
            127.      ],
           ...,
           [  0.      , 113.511505, 127.      , ..., 124.32039 , 110.232216,
            127.      ],
           [  0.      , 127.      , 127.      , ..., 117.77921 , 126.14425 ,
            127.      ],
           [  0.      , 127.      , 127.      , ..., 127.      , 127.      ,
            127.      ]], dtype=float32), array([[  0.      ,   0.      ,   0.      , ...,   0.      ,   0.      ,
              0.      ],
           [  0.      , 127.      , 127.      , ..., 115.19761 ,  76.96389 ,
            127.      ],
           [  0.      , 127.      , 126.99999 , ..., 127.      ,  10.195205,
            127.      ],
           ...,
           [  0.      , 124.391754, 121.773254, ..., 127.      , 127.      ,
            127.      ],
           [  0.      , 127.      , 127.      , ..., 127.      , 127.      ,
            127.      ],
           [  0.      , 127.      , 127.      , ..., 127.      , 127.      ,
            127.      ]], dtype=float32))



.. GENERATED FROM PYTHON SOURCE LINES 108-114

.. figure:: output-1.png
   :align: center
.. figure:: map-1.png
   :align: center

   Registration results for a naive parameter configuration.

.. GENERATED FROM PYTHON SOURCE LINES 117-120

Note, we are still using a multi-scale approach which makes `step_length`
in the upper level multiplicatively larger.
What happens if we set `step_length` to a rather small value?

.. GENERATED FROM PYTHON SOURCE LINES 120-124

.. code-block:: default



    sdr.step_length = 0.1








.. GENERATED FROM PYTHON SOURCE LINES 125-126

Perform the registration and examine the output.

.. GENERATED FROM PYTHON SOURCE LINES 126-133

.. code-block:: default



    mapping = sdr.optimize(img_ref.astype(float), img_in.astype(float))
    img_warp = mapping.transform(img_in, 'linear')
    show_images(img_ref, img_warp, 'output-2')
    regtools.plot_2d_diffeomorphic_map(mapping, 5, 'map-2.png')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_006.png
          :alt: register binary fuzzy
          :srcset: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_006.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_007.png
          :alt: register binary fuzzy
          :srcset: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_007.png
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (array([[  0.      ,   0.      ,   0.      , ...,   0.      ,   0.      ,
              0.      ],
           [  0.      , 107.26481 , 107.818726, ...,  94.22971 , 106.945564,
            127.      ],
           [  0.      , 111.12815 , 127.      , ..., 127.      , 127.      ,
            127.      ],
           ...,
           [  0.      , 122.529335, 127.      , ..., 127.      , 127.      ,
            127.      ],
           [  0.      , 126.99735 , 127.      , ..., 127.      , 126.99999 ,
            127.      ],
           [  0.      , 127.      , 127.      , ..., 127.      , 127.      ,
            127.      ]], dtype=float32), array([[  0.       ,   0.       ,   0.       , ...,   0.       ,
              0.       ,   0.       ],
           [  0.       , 127.       , 127.       , ...,  38.59097  ,
            127.       , 127.       ],
           [  0.       , 127.       , 127.       , ...,  34.39428  ,
            127.       , 127.       ],
           ...,
           [  0.       , 124.35901  , 122.08593  , ...,   3.9184668,
             70.04836  , 127.       ],
           [  0.       , 127.       , 127.       , ...,  65.811745 ,
            127.       , 127.       ],
           [  0.       , 127.       , 127.       , ..., 127.       ,
            127.       , 127.       ]], dtype=float32))



.. GENERATED FROM PYTHON SOURCE LINES 134-140

.. figure:: output-2.png
   :align: center
.. figure:: map-2.png
   :align: center

   Registration results for decreased step size.

.. GENERATED FROM PYTHON SOURCE LINES 143-146

An alternative scenario is to use just a single-scale level.
Even though the warped image may look fine, the estimated deformations show
that it is off the mark.

.. GENERATED FROM PYTHON SOURCE LINES 146-155

.. code-block:: default



    sdr = SymmetricDiffeomorphicRegistration(metric=SSDMetric(img_ref.ndim),
                                             step_length=1.0,
                                             level_iters=[100],
                                             inv_iter=50,
                                             ss_sigma_factor=0.1,
                                             opt_tol=1.e-3)








.. GENERATED FROM PYTHON SOURCE LINES 156-157

Perform the registration.

.. GENERATED FROM PYTHON SOURCE LINES 157-164

.. code-block:: default



    mapping = sdr.optimize(img_ref.astype(float), img_in.astype(float))
    img_warp = mapping.transform(img_in, 'linear')
    show_images(img_ref, img_warp, 'output-3')
    regtools.plot_2d_diffeomorphic_map(mapping, 5, 'map-3.png')




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_008.png
          :alt: register binary fuzzy
          :srcset: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_008.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_009.png
          :alt: register binary fuzzy
          :srcset: /examples_built/20_registration/images/sphx_glr_register_binary_fuzzy_009.png
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (array([[  0.      ,   0.      ,   0.      , ...,   0.      ,   0.      ,
              0.      ],
           [  0.      , 113.813194, 112.31409 , ...,  69.539505,  94.62846 ,
            127.      ],
           [  0.      , 115.748116, 127.      , ..., 127.      , 127.      ,
            127.      ],
           ...,
           [  0.      , 126.96909 , 127.      , ..., 127.      , 123.10664 ,
            127.      ],
           [  0.      , 126.97683 , 127.00001 , ..., 127.      , 127.      ,
            127.      ],
           [  0.      , 127.      , 127.      , ..., 127.      , 127.      ,
            127.      ]], dtype=float32), array([[  0.      ,   0.      ,   0.      , ...,   0.      ,   0.      ,
              0.      ],
           [  0.      , 126.99999 , 127.      , ..., 126.99999 ,  56.18689 ,
            127.      ],
           [  0.      , 127.      , 127.      , ...,  86.738045,  97.76541 ,
            127.      ],
           ...,
           [  0.      , 126.99135 , 126.97298 , ..., 127.      ,  31.17303 ,
            127.      ],
           [  0.      , 127.      , 127.      , ...,  87.87969 ,  36.326607,
            127.      ],
           [  0.      , 127.      , 127.      , ..., 127.      , 127.      ,
            127.      ]], dtype=float32))



.. GENERATED FROM PYTHON SOURCE LINES 165-171

.. figure:: output-3.png
   :align: center
.. figure:: map-3.png
   :align: center

   Registration results for single level.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.320 seconds)


.. _sphx_glr_download_examples_built_20_registration_register_binary_fuzzy.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: register_binary_fuzzy.py <register_binary_fuzzy.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: register_binary_fuzzy.ipynb <register_binary_fuzzy.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
