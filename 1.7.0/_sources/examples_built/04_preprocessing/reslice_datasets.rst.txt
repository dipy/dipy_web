
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built/04_preprocessing/reslice_datasets.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_built_04_preprocessing_reslice_datasets.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_04_preprocessing_reslice_datasets.py:


==========================
Reslice diffusion datasets
==========================

Overview
--------
Often in imaging it is common to reslice images in different resolutions.
Especially in dMRI we usually want images with isotropic voxel size as they
facilitate most tractography algorithms. In this example we show how you
can reslice a dMRI dataset to have isotropic voxel size.

.. GENERATED FROM PYTHON SOURCE LINES 15-22

.. code-block:: default


    import nibabel as nib

    from dipy.align.reslice import reslice
    from dipy.data import get_fnames
    from dipy.io.image import load_nifti, save_nifti








.. GENERATED FROM PYTHON SOURCE LINES 23-25

We use here a very small dataset to show the basic principles but you can
replace the following line with the path of your image.

.. GENERATED FROM PYTHON SOURCE LINES 25-29

.. code-block:: default



    fimg = get_fnames('aniso_vox')








.. GENERATED FROM PYTHON SOURCE LINES 30-33

We load the image, the affine of the image and the voxel size. The affine is
the transformation matrix which maps image coordinates to world (mm)
coordinates. Then, we print the shape of the volume

.. GENERATED FROM PYTHON SOURCE LINES 33-39

.. code-block:: default



    data, affine, voxel_size = load_nifti(fimg, return_voxsize=True)
    print(data.shape)
    print(voxel_size)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (58, 58, 24)
    (4.0, 4.0, 5.0)




.. GENERATED FROM PYTHON SOURCE LINES 40-44

``(58, 58, 24)``
``(4.0, 4.0, 5.0)``

Set the required new voxel size.

.. GENERATED FROM PYTHON SOURCE LINES 44-49

.. code-block:: default



    new_voxel_size = (3., 3., 3.)
    print(new_voxel_size)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (3.0, 3.0, 3.0)




.. GENERATED FROM PYTHON SOURCE LINES 50-53

``(3.0, 3.0, 3.0)``

Start resampling (reslicing). Trilinear interpolation is used by default.

.. GENERATED FROM PYTHON SOURCE LINES 53-58

.. code-block:: default



    data2, affine2 = reslice(data, affine, voxel_size, new_voxel_size)
    print(data2.shape)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (77, 77, 40)




.. GENERATED FROM PYTHON SOURCE LINES 59-62

``(77, 77, 40)``

Save the result as a new Nifti file.

.. GENERATED FROM PYTHON SOURCE LINES 62-66

.. code-block:: default



    save_nifti('iso_vox.nii.gz', data2, affine2)








.. GENERATED FROM PYTHON SOURCE LINES 67-68

Or as analyze format or any other supported format.

.. GENERATED FROM PYTHON SOURCE LINES 68-73

.. code-block:: default



    img3 = nib.Spm2AnalyzeImage(data2, affine2)
    nib.save(img3, 'iso_vox.img')








.. GENERATED FROM PYTHON SOURCE LINES 74-77

Done. Check your datasets. As you may have already realized the same
code can be used for general reslicing problems not only for dMRI data.



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.060 seconds)


.. _sphx_glr_download_examples_built_04_preprocessing_reslice_datasets.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: reslice_datasets.py <reslice_datasets.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: reslice_datasets.ipynb <reslice_datasets.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
