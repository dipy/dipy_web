{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "Examples"}, {"link": "../", "title": "Segmentation"}], "prev": {"link": "../segment_extending_clustering_framework/", "title": "Enhancing QuickBundles with different metrics and features"}, "next": {"link": "../bundle_extraction/", "title": "Automatic Fiber Bundle Extraction with RecoBundles"}, "title": "Tractography Clustering - Available Features", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-23-segmentation-segment-clustering-features-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"tractography-clustering-available-features\">\n<span id=\"sphx-glr-examples-built-23-segmentation-segment-clustering-features-py\"></span><h1>Tractography Clustering - Available Features<a class=\"headerlink\" href=\"#tractography-clustering-available-features\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>This page lists available features that can be used by the tractography\nclustering framework. For every feature a brief description is provided\nexplaining: what it does, when it\u2019s useful and how to use it. If you are not\nfamiliar with the tractography clustering framework, read the\n<a class=\"reference internal\" href=\"../segment_extending_clustering_framework/#clustering-framework\"><span class=\"std std-ref\">Clustering framework</span></a> first.</p>\n<nav class=\"contents local\" id=\"available-features\">\n<p class=\"topic-title\">Available Features</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"#clustering-examples-identityfeature\" id=\"id7\">Identity Feature</a></p></li>\n<li><p><a class=\"reference internal\" href=\"#resample-feature\" id=\"id8\">Resample Feature</a></p></li>\n<li><p><a class=\"reference internal\" href=\"#center-of-mass-feature\" id=\"id9\">Center of Mass Feature</a></p></li>\n<li><p><a class=\"reference internal\" href=\"#midpoint-feature\" id=\"id10\">Midpoint Feature</a></p></li>\n<li><p><a class=\"reference internal\" href=\"#arclength-feature\" id=\"id11\">ArcLength Feature</a></p></li>\n<li><p><a class=\"reference internal\" href=\"#vector-between-endpoints-feature\" id=\"id12\">Vector Between Endpoints Feature</a></p></li>\n</ul>\n</nav>\n<p><strong>Note</strong>:\nAll examples assume a function <cite>get_streamlines</cite> exists. We defined here a\nsimple function to do so. It imports the necessary modules and loads a small\nstreamline bundle.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">get_streamlines</span><span class=\"p\">():</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">dipy.io.streamline</span> <span class=\"kn\">import</span> <span class=\"n\">load_tractogram</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"kn\">import</span> <span class=\"n\">Streamlines</span>\n\n    <span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;fornix&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">fornix</span> <span class=\"o\">=</span> <span class=\"n\">load_tractogram</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"s1\">&#39;same&#39;</span><span class=\"p\">,</span>\n                             <span class=\"n\">bbox_valid_check</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">streamlines</span>\n\n    <span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">Streamlines</span><span class=\"p\">(</span><span class=\"n\">fornix</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">streamlines</span>\n</pre></div>\n</div>\n<section id=\"clustering-examples-identityfeature\">\n<span id=\"identity-feature\"></span><h2><a class=\"toc-backref\" href=\"#id7\" role=\"doc-backlink\">Identity Feature</a><a class=\"headerlink\" href=\"#clustering-examples-identityfeature\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p><strong>What:</strong> Instances of <cite>IdentityFeature</cite> simply return the streamlines\nunaltered.  In other words the features are the original data.</p>\n<p><strong>When:</strong> The QuickBundles algorithm requires streamlines to have the same\nnumber of points. If this is the case for your streamlines, you can tell\nQuickBundles to not perform resampling (see following example). The clustering\nshould be faster than using the default behaviour of QuickBundles since it will\nrequire less computation (i.e. no resampling). However, it highly depends\non the number of points streamlines have. By default, QuickBundles resamples\nstreamlines so that they have 12 points each <a class=\"reference internal\" href=\"../segment_quickbundles/#garyfallidis12\" id=\"id1\"><span>[Garyfallidis12]</span></a>.</p>\n<p><em>Unless stated otherwise, it is the default feature used by `Metric` objects\nin the clustering framework.</em></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.clustering</span> <span class=\"kn\">import</span> <span class=\"n\">QuickBundles</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.metric</span> <span class=\"kn\">import</span> <span class=\"n\">AveragePointwiseEuclideanMetric</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.featurespeed</span> <span class=\"kn\">import</span> <span class=\"n\">IdentityFeature</span>\n\n<span class=\"c1\"># Get some streamlines.</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">get_streamlines</span><span class=\"p\">()</span>  <span class=\"c1\"># Previously defined.</span>\n\n<span class=\"c1\"># Make sure our streamlines have the same number of points.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"kn\">import</span> <span class=\"n\">set_number_of_points</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">set_number_of_points</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">nb_points</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create an instance of `IdentityFeature` and tell metric to use it.</span>\n<span class=\"n\">feature</span> <span class=\"o\">=</span> <span class=\"n\">IdentityFeature</span><span class=\"p\">()</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">AveragePointwiseEuclideanMetric</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"o\">=</span><span class=\"n\">feature</span><span class=\"p\">)</span>\n<span class=\"n\">qb</span> <span class=\"o\">=</span> <span class=\"n\">QuickBundles</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">10.</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n<span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Nb. clusters:&quot;</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Cluster sizes:&quot;</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">clusters</span><span class=\"p\">)))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Nb. clusters: 4\nCluster sizes: [61, 191, 47, 1]\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Nb</span><span class=\"o\">.</span> <span class=\"n\">clusters</span><span class=\"p\">:</span> <span class=\"mi\">4</span>\n\n<span class=\"n\">Cluster</span> <span class=\"n\">sizes</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">191</span><span class=\"p\">,</span> <span class=\"mi\">47</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</section>\n<section id=\"resample-feature\">\n<span id=\"clustering-examples-resamplefeature\"></span><h2><a class=\"toc-backref\" href=\"#id8\" role=\"doc-backlink\">Resample Feature</a><a class=\"headerlink\" href=\"#resample-feature\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p><strong>What:</strong> Instances of <cite>ResampleFeature</cite> resample streamlines to a\npredetermined number of points. The resampling is done on the fly such that\nthere are no permanent modifications made to your streamlines.</p>\n<p><strong>When:</strong> The QuickBundles algorithm requires streamlines to have the same\nnumber of points. By default, QuickBundles uses <cite>ResampleFeature</cite> to resample\nstreamlines so that they have 12 points each <a class=\"reference internal\" href=\"../segment_quickbundles/#garyfallidis12\" id=\"id2\"><span>[Garyfallidis12]</span></a>. If you want to\nuse a different number of points for the resampling, you should provide your\nown instance of <cite>ResampleFeature</cite> (see following example).</p>\n<p><strong>Note:</strong> Resampling streamlines has an impact on clustering results both in\nterm of speed and quality. Setting the number of points too low will result in\na loss of information about the shape of the streamlines. On the contrary,\nsetting the number of points too high will slow down the clustering process.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.clustering</span> <span class=\"kn\">import</span> <span class=\"n\">QuickBundles</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.featurespeed</span> <span class=\"kn\">import</span> <span class=\"n\">ResampleFeature</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.metric</span> <span class=\"kn\">import</span> <span class=\"n\">AveragePointwiseEuclideanMetric</span>\n\n<span class=\"c1\"># Get some streamlines.</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">get_streamlines</span><span class=\"p\">()</span>  <span class=\"c1\"># Previously defined.</span>\n\n<span class=\"c1\"># Streamlines will be resampled to 24 points on the fly.</span>\n<span class=\"n\">feature</span> <span class=\"o\">=</span> <span class=\"n\">ResampleFeature</span><span class=\"p\">(</span><span class=\"n\">nb_points</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">)</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">AveragePointwiseEuclideanMetric</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"o\">=</span><span class=\"n\">feature</span><span class=\"p\">)</span>  <span class=\"c1\"># a.k.a. MDF</span>\n<span class=\"n\">qb</span> <span class=\"o\">=</span> <span class=\"n\">QuickBundles</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">10.</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n<span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Nb. clusters:&quot;</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Cluster sizes:&quot;</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">clusters</span><span class=\"p\">)))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Nb. clusters: 4\nCluster sizes: [64, 191, 44, 1]\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Nb</span><span class=\"o\">.</span> <span class=\"n\">clusters</span><span class=\"p\">:</span> <span class=\"mi\">4</span>\n\n<span class=\"n\">Cluster</span> <span class=\"n\">sizes</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">191</span><span class=\"p\">,</span> <span class=\"mi\">44</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</section>\n<section id=\"center-of-mass-feature\">\n<span id=\"clustering-examples-centerofmassfeature\"></span><h2><a class=\"toc-backref\" href=\"#id9\" role=\"doc-backlink\">Center of Mass Feature</a><a class=\"headerlink\" href=\"#center-of-mass-feature\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p><strong>What:</strong> Instances of <cite>CenterOfMassFeature</cite> compute the center of mass (also\nknown as center of gravity) of a set of points. This is achieved by taking the\nmean of every coordinate independently (for more information see the\n<a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Center_of_mass\">wiki page</a>).</p>\n<p><strong>When:</strong> This feature can be useful when you <em>only</em> need information about the\nspatial position of a streamline.</p>\n<p><strong>Note:</strong> The computed center is not guaranteed to be an existing point in the\nstreamline.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span><span class=\"p\">,</span> <span class=\"n\">colormap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.clustering</span> <span class=\"kn\">import</span> <span class=\"n\">QuickBundles</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.featurespeed</span> <span class=\"kn\">import</span> <span class=\"n\">CenterOfMassFeature</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.metric</span> <span class=\"kn\">import</span> <span class=\"n\">EuclideanMetric</span>\n\n<span class=\"c1\"># Enables/disables interactive visualization</span>\n<span class=\"n\">interactive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"c1\"># Get some streamlines.</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">get_streamlines</span><span class=\"p\">()</span>  <span class=\"c1\"># Previously defined.</span>\n\n\n<span class=\"n\">feature</span> <span class=\"o\">=</span> <span class=\"n\">CenterOfMassFeature</span><span class=\"p\">()</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">EuclideanMetric</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"p\">)</span>\n\n<span class=\"n\">qb</span> <span class=\"o\">=</span> <span class=\"n\">QuickBundles</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">5.</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n<span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Extract feature of every streamline.</span>\n<span class=\"n\">centers</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">,</span> <span class=\"n\">streamlines</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Color each center of mass according to the cluster they belong to.</span>\n<span class=\"n\">colormap</span> <span class=\"o\">=</span> <span class=\"n\">colormap</span><span class=\"o\">.</span><span class=\"n\">create_colormap</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">)))</span>\n<span class=\"n\">colormap_full</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">color</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"p\">):</span>\n    <span class=\"n\">colormap_full</span><span class=\"p\">[</span><span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">indices</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n\n<span class=\"c1\"># Visualization</span>\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">SetBackground</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">streamtube</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">white</span><span class=\"p\">,</span> <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">))</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">point</span><span class=\"p\">(</span><span class=\"n\">centers</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">colormap_full</span><span class=\"p\">,</span> <span class=\"n\">point_radius</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">))</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;center_of_mass_feature.png&#39;</span><span class=\"p\">,</span>\n              <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_segment_clustering_features_001.png\" srcset=\"../../_images/sphx_glr_segment_clustering_features_001.png\" alt=\"segment clustering features\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id3\">\n<img alt=\"examples_built/23_segmentation/center_of_mass_feature.png\" src=\"examples_built/23_segmentation/center_of_mass_feature.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Showing the center of mass of each streamline colored according to\nthe QuickBundles results.</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n</section>\n<section id=\"midpoint-feature\">\n<span id=\"clustering-examples-midpointfeature\"></span><h2><a class=\"toc-backref\" href=\"#id10\" role=\"doc-backlink\">Midpoint Feature</a><a class=\"headerlink\" href=\"#midpoint-feature\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p><strong>What:</strong> Instances of <cite>MidpointFeature</cite> extract the middle point of a\nstreamline. If there is an even number of points, the feature will then\ncorrespond to the point halfway between the two middle points.</p>\n<p><strong>When:</strong> This feature can be useful when you <em>only</em> need information about the\nspatial position of a streamline. This can also be an alternative to the\n<cite>CenterOfMassFeature</cite> if the point extracted must be on the streamline.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span><span class=\"p\">,</span> <span class=\"n\">colormap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.clustering</span> <span class=\"kn\">import</span> <span class=\"n\">QuickBundles</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.featurespeed</span> <span class=\"kn\">import</span> <span class=\"n\">MidpointFeature</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.metric</span> <span class=\"kn\">import</span> <span class=\"n\">EuclideanMetric</span>\n\n<span class=\"c1\"># Get some streamlines.</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">get_streamlines</span><span class=\"p\">()</span>  <span class=\"c1\"># Previously defined.</span>\n\n<span class=\"n\">feature</span> <span class=\"o\">=</span> <span class=\"n\">MidpointFeature</span><span class=\"p\">()</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">EuclideanMetric</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"p\">)</span>\n\n<span class=\"n\">qb</span> <span class=\"o\">=</span> <span class=\"n\">QuickBundles</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">5.</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n<span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Extract feature of every streamline.</span>\n<span class=\"n\">midpoints</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">,</span> <span class=\"n\">streamlines</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Color each midpoint according to the cluster they belong to.</span>\n<span class=\"n\">colormap</span> <span class=\"o\">=</span> <span class=\"n\">colormap</span><span class=\"o\">.</span><span class=\"n\">create_colormap</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">)))</span>\n<span class=\"n\">colormap_full</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">color</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"p\">):</span>\n    <span class=\"n\">colormap_full</span><span class=\"p\">[</span><span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">indices</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n\n<span class=\"c1\"># Visualization</span>\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">SetBackground</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">point</span><span class=\"p\">(</span><span class=\"n\">midpoints</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">colormap_full</span><span class=\"p\">,</span> <span class=\"n\">point_radius</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">))</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">streamtube</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">white</span><span class=\"p\">,</span> <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">))</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;midpoint_feature.png&#39;</span><span class=\"p\">,</span>\n              <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_segment_clustering_features_002.png\" srcset=\"../../_images/sphx_glr_segment_clustering_features_002.png\" alt=\"segment clustering features\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id4\">\n<img alt=\"examples_built/23_segmentation/midpoint_feature.png\" src=\"examples_built/23_segmentation/midpoint_feature.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Showing the middle point of each streamline colored according to the\nQuickBundles results.</span><a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n</section>\n<section id=\"arclength-feature\">\n<span id=\"clustering-examples-arclengthfeature\"></span><h2><a class=\"toc-backref\" href=\"#id11\" role=\"doc-backlink\">ArcLength Feature</a><a class=\"headerlink\" href=\"#arclength-feature\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p><strong>What:</strong> Instances of <cite>ArcLengthFeature</cite> compute the length of a streamline.\nMore specifically, this feature corresponds to the sum of the lengths of every\nstreamline\u2019s segments.</p>\n<p><strong>When:</strong> This feature can be useful when you <em>only</em> need information about the\nlength of a streamline.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span><span class=\"p\">,</span> <span class=\"n\">colormap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.clustering</span> <span class=\"kn\">import</span> <span class=\"n\">QuickBundles</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.featurespeed</span> <span class=\"kn\">import</span> <span class=\"n\">ArcLengthFeature</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.metric</span> <span class=\"kn\">import</span> <span class=\"n\">EuclideanMetric</span>\n\n<span class=\"c1\"># Get some streamlines.</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">get_streamlines</span><span class=\"p\">()</span>  <span class=\"c1\"># Previously defined.</span>\n\n<span class=\"n\">feature</span> <span class=\"o\">=</span> <span class=\"n\">ArcLengthFeature</span><span class=\"p\">()</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">EuclideanMetric</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"p\">)</span>\n<span class=\"n\">qb</span> <span class=\"o\">=</span> <span class=\"n\">QuickBundles</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n<span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Color each streamline according to the cluster they belong to.</span>\n<span class=\"n\">colormap</span> <span class=\"o\">=</span> <span class=\"n\">colormap</span><span class=\"o\">.</span><span class=\"n\">create_colormap</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"o\">.</span><span class=\"n\">centroids</span><span class=\"p\">))</span>\n<span class=\"n\">colormap_full</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">color</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"p\">):</span>\n    <span class=\"n\">colormap_full</span><span class=\"p\">[</span><span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">indices</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n\n<span class=\"c1\"># Visualization</span>\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">SetBackground</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">streamtube</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">colormap_full</span><span class=\"p\">))</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;arclength_feature.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_segment_clustering_features_003.png\" srcset=\"../../_images/sphx_glr_segment_clustering_features_003.png\" alt=\"segment clustering features\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id5\">\n<img alt=\"examples_built/23_segmentation/arclength_feature.png\" src=\"examples_built/23_segmentation/arclength_feature.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Showing the streamlines colored according to their length.</span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n</section>\n<section id=\"vector-between-endpoints-feature\">\n<span id=\"clustering-examples-vectorofendpointsfeature\"></span><h2><a class=\"toc-backref\" href=\"#id12\" role=\"doc-backlink\">Vector Between Endpoints Feature</a><a class=\"headerlink\" href=\"#vector-between-endpoints-feature\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p><strong>What:</strong> Instances of <cite>VectorOfEndpointsFeature</cite> extract the vector going\nfrom one extremity of the streamline to the other. In other words, this feature\nrepresents the vector beginning at the first point and ending at the last point\nof the streamlines.</p>\n<p><strong>When:</strong> This feature can be useful when you <em>only</em> need information about the\norientation of a streamline.</p>\n<p><strong>Note:</strong> Since streamlines endpoints are ambiguous (e.g. the first point could\nbe either the beginning or the end of the streamline), one must be careful when\nusing this feature.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">colormap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.clustering</span> <span class=\"kn\">import</span> <span class=\"n\">QuickBundles</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.featurespeed</span> <span class=\"kn\">import</span> <span class=\"n\">VectorOfEndpointsFeature</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.metric</span> <span class=\"kn\">import</span> <span class=\"n\">CosineMetric</span>\n\n<span class=\"c1\"># Get some streamlines.</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">get_streamlines</span><span class=\"p\">()</span>  <span class=\"c1\"># Previously defined.</span>\n\n<span class=\"n\">feature</span> <span class=\"o\">=</span> <span class=\"n\">VectorOfEndpointsFeature</span><span class=\"p\">()</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">CosineMetric</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"p\">)</span>\n<span class=\"n\">qb</span> <span class=\"o\">=</span> <span class=\"n\">QuickBundles</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n<span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Color each streamline according to the cluster they belong to.</span>\n<span class=\"n\">colormap</span> <span class=\"o\">=</span> <span class=\"n\">colormap</span><span class=\"o\">.</span><span class=\"n\">create_colormap</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">)))</span>\n<span class=\"n\">colormap_full</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">color</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"p\">):</span>\n    <span class=\"n\">colormap_full</span><span class=\"p\">[</span><span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">indices</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n\n<span class=\"c1\"># Visualization</span>\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">SetBackground</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">streamtube</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">colormap_full</span><span class=\"p\">))</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;vector_of_endpoints_feature.png&#39;</span><span class=\"p\">,</span>\n              <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_segment_clustering_features_004.png\" srcset=\"../../_images/sphx_glr_segment_clustering_features_004.png\" alt=\"segment clustering features\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id6\">\n<img alt=\"examples_built/23_segmentation/vector_of_endpoints_feature.png\" src=\"examples_built/23_segmentation/vector_of_endpoints_feature.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Showing the streamlines colored according to their orientation.</span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"garyfallidis12\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis12<span class=\"fn-bracket\">]</span></span>\n<span class=\"backrefs\">(<a role=\"doc-backlink\" href=\"#id1\">1</a>,<a role=\"doc-backlink\" href=\"#id2\">2</a>)</span>\n<p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience, vol 6, no 175, 2012.</p>\n</div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  0.452 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-23-segmentation-segment-clustering-features-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/d8de4634d4b8727992e00f999c54b103/segment_clustering_features.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">segment_clustering_features.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/b5208928af46d0c66d1859635b85776c/segment_clustering_features.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">segment_clustering_features.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples_built/23_segmentation/bundle_extraction", "Automatic Fiber Bundle Extraction with RecoBundles", "N", "next"], ["examples_built/23_segmentation/segment_extending_clustering_framework", "Enhancing QuickBundles with different metrics and features", "P", "previous"]], "sourcename": "examples_built/23_segmentation/segment_clustering_features.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Tractography Clustering - Available Features</a><ul>\n<li><a class=\"reference internal\" href=\"#clustering-examples-identityfeature\">Identity Feature</a></li>\n<li><a class=\"reference internal\" href=\"#resample-feature\">Resample Feature</a></li>\n<li><a class=\"reference internal\" href=\"#center-of-mass-feature\">Center of Mass Feature</a></li>\n<li><a class=\"reference internal\" href=\"#midpoint-feature\">Midpoint Feature</a></li>\n<li><a class=\"reference internal\" href=\"#arclength-feature\">ArcLength Feature</a></li>\n<li><a class=\"reference internal\" href=\"#vector-between-endpoints-feature\">Vector Between Endpoints Feature</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/23_segmentation/segment_clustering_features", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}