{"parents": [], "prev": null, "next": null, "title": "Brain segmentation with median_otsu", "meta": {}, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-23-segmentation-brain-extraction-dwi-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"brain-segmentation-with-median-otsu\">\n<span id=\"sphx-glr-examples-built-23-segmentation-brain-extraction-dwi-py\"></span><h1>Brain segmentation with median_otsu<a class=\"headerlink\" href=\"#brain-segmentation-with-median-otsu\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>We show how to extract brain information and mask from a b0 image using <a href=\"#id2\"><span class=\"problematic\" id=\"id3\">DIPY_</span></a>\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">segment.mask</span></code> module.</p>\n<p>First import the necessary modules:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"kn\">import</span> <span class=\"n\">load_nifti</span><span class=\"p\">,</span> <span class=\"n\">save_nifti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.mask</span> <span class=\"kn\">import</span> <span class=\"n\">median_otsu</span>\n</pre></div>\n</div>\n<p>Download and read the data for this tutorial.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">scil_b0</span></code> dataset contains different data from different companies and\nmodels. For this example, the data comes from a 1.5 Tesla Siemens MRI.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">data_fnames</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;scil_b0&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">data_fnames</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">squeeze</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Segment the brain using DIPY\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">mask</span></code> module.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">median_otsu</span></code> returns the segmented brain data and a binary mask of the\nbrain. It is possible to fine tune the parameters of <code class=\"docutils literal notranslate\"><span class=\"pre\">median_otsu</span></code>\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">median_radius</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">num_pass</span></code>) if extraction yields incorrect results\nbut the default parameters work well on most volumes. For this example,\nwe used 2 as <code class=\"docutils literal notranslate\"><span class=\"pre\">median_radius</span></code> and 1 as <code class=\"docutils literal notranslate\"><span class=\"pre\">num_pass</span></code></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">b0_mask</span><span class=\"p\">,</span> <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">median_otsu</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">median_radius</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">numpass</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Saving the segmentation results is very easy. We need the <code class=\"docutils literal notranslate\"><span class=\"pre\">b0_mask</span></code>, and the\nbinary mask volumes. The affine matrix which transform the image\u2019s coordinates\nto the world coordinates is also needed. Here, we choose to save both images\nin <code class=\"docutils literal notranslate\"><span class=\"pre\">float32</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;se_1.5t&#39;</span>\n<span class=\"n\">save_nifti</span><span class=\"p\">(</span><span class=\"n\">fname</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;_binary_mask.nii.gz&#39;</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">),</span> <span class=\"n\">affine</span><span class=\"p\">)</span>\n<span class=\"n\">save_nifti</span><span class=\"p\">(</span><span class=\"n\">fname</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;_mask.nii.gz&#39;</span><span class=\"p\">,</span> <span class=\"n\">b0_mask</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">),</span> <span class=\"n\">affine</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Quick view of the results middle slice using <code class=\"docutils literal notranslate\"><span class=\"pre\">matplotlib</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.histeq</span> <span class=\"kn\">import</span> <span class=\"n\">histeq</span>\n\n<span class=\"n\">sli</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"s1\">&#39;Brain segmentation&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">histeq</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">sli</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"s1\">&#39;float&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span>\n           <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">histeq</span><span class=\"p\">(</span><span class=\"n\">b0_mask</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">sli</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"s1\">&#39;float&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span>\n           <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;median_otsu.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id1\">\n<img alt=\"examples_built/23_segmentation/median_otsu.png\" src=\"examples_built/23_segmentation/median_otsu.png\" />\n<figcaption>\n<p><span class=\"caption-text\">An application of median_otsu for brain segmentation.</span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">median_otsu</span></code> can also automatically crop the outputs to remove the largest\npossible number of background voxels. This makes outputted data significantly\nsmaller. Auto-cropping in <code class=\"docutils literal notranslate\"><span class=\"pre\">median_otsu</span></code> is activated by setting the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">autocrop</span></code> parameter to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">b0_mask_crop</span><span class=\"p\">,</span> <span class=\"n\">mask_crop</span> <span class=\"o\">=</span> <span class=\"n\">median_otsu</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">median_radius</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">numpass</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n                                      <span class=\"n\">autocrop</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Saving cropped data using nibabel as demonstrated previously.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">save_nifti</span><span class=\"p\">(</span><span class=\"n\">fname</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;_binary_mask_crop.nii.gz&#39;</span><span class=\"p\">,</span> <span class=\"n\">mask_crop</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">),</span>\n           <span class=\"n\">affine</span><span class=\"p\">)</span>\n<span class=\"n\">save_nifti</span><span class=\"p\">(</span><span class=\"n\">fname</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;_mask_crop.nii.gz&#39;</span><span class=\"p\">,</span> <span class=\"n\">b0_mask_crop</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">),</span>\n           <span class=\"n\">affine</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  0.000 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-23-segmentation-brain-extraction-dwi-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/12432a105f438ba0be2fb06c74d72fcd/brain_extraction_dwi.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">brain_extraction_dwi.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/0335874cbb84fa316d24a619f09b9f0c/brain_extraction_dwi.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">brain_extraction_dwi.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/23_segmentation/brain_extraction_dwi.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Brain segmentation with median_otsu</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "examples_built/23_segmentation/brain_extraction_dwi", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}