{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "Examples"}, {"link": "../", "title": "Streamlines Analysis and Connectivity"}], "prev": {"link": "../cluster_confidence/", "title": "Calculation of Outliers with Cluster Confidence Index"}, "next": {"link": "../streamline_tools/", "title": "Connectivity Matrices, ROI Intersections and Density Maps"}, "title": "Calculate Path Length Map", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-17-streamline-analysis-path-length-map-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"calculate-path-length-map\">\n<span id=\"sphx-glr-examples-built-17-streamline-analysis-path-length-map-py\"></span><h1>Calculate Path Length Map<a class=\"headerlink\" href=\"#calculate-path-length-map\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>We show how to calculate a Path Length Map for Anisotropic Radiation Therapy\nContours given a set of streamlines and a region of interest (ROI).\nThe Path Length Map is a volume in which each voxel\u2019s value is the shortest\ndistance along a streamline to a given region of interest (ROI). This map can\nbe used to anisotropically modify radiation therapy treatment contours based\non a tractography model of the local white matter anatomy, as described in\n<a class=\"reference internal\" href=\"#jordan-2018-plm\" id=\"id1\"><span>[Jordan_2018_plm]</span></a>, by executing this tutorial with the gross tumor volume\n(GTV) as the ROI.</p>\n<p>NOTE: The background value is set to -1 by default</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span><span class=\"p\">,</span> <span class=\"n\">default_sphere</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"kn\">import</span> <span class=\"n\">load_nifti_data</span><span class=\"p\">,</span> <span class=\"n\">load_nifti</span><span class=\"p\">,</span> <span class=\"n\">save_nifti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.shm</span> <span class=\"kn\">import</span> <span class=\"n\">CsaOdfModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.direction</span> <span class=\"kn\">import</span> <span class=\"n\">peaks_from_model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.stopping_criterion</span> <span class=\"kn\">import</span> <span class=\"n\">ThresholdStoppingCriterion</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking</span> <span class=\"kn\">import</span> <span class=\"n\">utils</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.local_tracking</span> <span class=\"kn\">import</span> <span class=\"n\">LocalTracking</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"kn\">import</span> <span class=\"n\">Streamlines</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">actor</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">colormap</span> <span class=\"k\">as</span> <span class=\"n\">cmap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.utils</span> <span class=\"kn\">import</span> <span class=\"n\">path_length</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span> <span class=\"k\">as</span> <span class=\"nn\">mpl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mpl_toolkits.axes_grid1</span> <span class=\"kn\">import</span> <span class=\"n\">AxesGrid</span>\n</pre></div>\n</div>\n<p>First, we need to generate some streamlines and visualize. For a more complete\ndescription of these steps, please refer to the\n<span class=\"xref std std-ref\">example_probabilistic_fiber_tracking</span> and the Visualization of ROI\nSurface Rendered with Streamlines Tutorials.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">hardi_fname</span><span class=\"p\">,</span> <span class=\"n\">hardi_bval_fname</span><span class=\"p\">,</span> <span class=\"n\">hardi_bvec_fname</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;stanford_hardi&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">label_fname</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;stanford_labels&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">hardi_img</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">hardi_fname</span><span class=\"p\">,</span> <span class=\"n\">return_img</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti_data</span><span class=\"p\">(</span><span class=\"n\">label_fname</span><span class=\"p\">)</span>\n\n<span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">hardi_bval_fname</span><span class=\"p\">,</span> <span class=\"n\">hardi_bvec_fname</span><span class=\"p\">)</span>\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n\n<span class=\"n\">white_matter</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">labels</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">labels</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">csa_model</span> <span class=\"o\">=</span> <span class=\"n\">CsaOdfModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">sh_order</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">csa_peaks</span> <span class=\"o\">=</span> <span class=\"n\">peaks_from_model</span><span class=\"p\">(</span><span class=\"n\">csa_model</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">default_sphere</span><span class=\"p\">,</span>\n                             <span class=\"n\">relative_peak_threshold</span><span class=\"o\">=</span><span class=\"mf\">.8</span><span class=\"p\">,</span>\n                             <span class=\"n\">min_separation_angle</span><span class=\"o\">=</span><span class=\"mi\">45</span><span class=\"p\">,</span>\n                             <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">white_matter</span><span class=\"p\">)</span>\n\n<span class=\"n\">stopping_criterion</span> <span class=\"o\">=</span> <span class=\"n\">ThresholdStoppingCriterion</span><span class=\"p\">(</span><span class=\"n\">csa_peaks</span><span class=\"o\">.</span><span class=\"n\">gfa</span><span class=\"p\">,</span> <span class=\"mf\">.25</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We will use an anatomically-based corpus callosum ROI as our seed mask to\ndemonstrate the method. In practice, this corpus callosum mask (labels == 2)\nshould be replaced with the desired ROI mask (e.g. gross tumor volume (GTV),\nlesion mask, or electrode mask).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Make a corpus callosum seed mask for tracking</span>\n<span class=\"n\">seed_mask</span> <span class=\"o\">=</span> <span class=\"n\">labels</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"n\">seeds</span> <span class=\"o\">=</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">seeds_from_mask</span><span class=\"p\">(</span><span class=\"n\">seed_mask</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">density</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Make a streamline bundle model of the corpus callosum ROI connectivity</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">LocalTracking</span><span class=\"p\">(</span><span class=\"n\">csa_peaks</span><span class=\"p\">,</span> <span class=\"n\">stopping_criterion</span><span class=\"p\">,</span> <span class=\"n\">seeds</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span>\n                            <span class=\"n\">step_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">Streamlines</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Visualize the streamlines and the Path Length Map base ROI</span>\n<span class=\"c1\"># (in this case also the seed ROI)</span>\n\n<span class=\"n\">streamlines_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">.</span><span class=\"n\">line_colors</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">))</span>\n<span class=\"n\">surface_opacity</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>\n<span class=\"n\">surface_color</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">seedroi_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">contour_from_roi</span><span class=\"p\">(</span><span class=\"n\">seed_mask</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span>\n                                       <span class=\"n\">surface_color</span><span class=\"p\">,</span> <span class=\"n\">surface_opacity</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">streamlines_actor</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">seedroi_actor</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If you set interactive to True (below), the scene will pop up in an\ninteractive window.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">interactive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;plm_roi_sls.png&#39;</span><span class=\"p\">,</span>\n              <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">800</span><span class=\"p\">,</span> <span class=\"mi\">800</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_path_length_map_001.png\" srcset=\"../../_images/sphx_glr_path_length_map_001.png\" alt=\"path length map\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id2\">\n<img alt=\"examples_built/17_streamline_analysis/plm_roi_sls.png\" src=\"examples_built/17_streamline_analysis/plm_roi_sls.png\" />\n<figcaption>\n<p><span class=\"caption-text\"><strong>A top view of corpus callosum streamlines with the blue transparent ROI in\nthe center</strong>.</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>Now we calculate the Path Length Map using the corpus callosum streamline\nbundle and corpus callosum ROI.</p>\n<p>NOTE: the mask used to seed the tracking does not have to be the Path\nLength Map base ROI, as we do here, but it often makes sense for them to be the\nsame ROI if we want a map of the whole brain\u2019s distance back to our ROI.\n(e.g. we could test a hypothesis about the motor system by making a streamline\nbundle model of the cortico-spinal track (CST) and input a lesion mask as our\nPath Length Map base ROI to restrict the analysis to the CST)</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">path_length_map_base_roi</span> <span class=\"o\">=</span> <span class=\"n\">seed_mask</span>\n\n<span class=\"c1\"># calculate the WMPL</span>\n<span class=\"n\">wmpl</span> <span class=\"o\">=</span> <span class=\"n\">path_length</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">path_length_map_base_roi</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># save the WMPL as a nifti</span>\n<span class=\"n\">save_nifti</span><span class=\"p\">(</span><span class=\"s1\">&#39;example_cc_path_length_map.nii.gz&#39;</span><span class=\"p\">,</span> <span class=\"n\">wmpl</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">),</span>\n           <span class=\"n\">affine</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get the T1 to show anatomical context of the WMPL</span>\n<span class=\"n\">t1_fname</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;stanford_t1&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">t1_data</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti_data</span><span class=\"p\">(</span><span class=\"n\">t1_fname</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">pyplot</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">subplots_adjust</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"o\">=</span><span class=\"mf\">0.95</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">AxesGrid</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"mi\">111</span><span class=\"p\">,</span>\n              <span class=\"n\">nrows_ncols</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span>\n              <span class=\"n\">cbar_location</span><span class=\"o\">=</span><span class=\"s2\">&quot;right&quot;</span><span class=\"p\">,</span>\n              <span class=\"n\">cbar_mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;single&quot;</span><span class=\"p\">,</span>\n              <span class=\"n\">cbar_size</span><span class=\"o\">=</span><span class=\"s2\">&quot;10%&quot;</span><span class=\"p\">,</span>\n              <span class=\"n\">cbar_pad</span><span class=\"o\">=</span><span class=\"s2\">&quot;5%&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We will mask our WMPL to ignore values less than zero because negative numbers\nindicate no path back to the ROI was found in the provided streamlines</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">wmpl_show</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ma</span><span class=\"o\">.</span><span class=\"n\">masked_where</span><span class=\"p\">(</span><span class=\"n\">wmpl</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">wmpl</span><span class=\"p\">)</span>\n\n<span class=\"n\">slx</span><span class=\"p\">,</span> <span class=\"n\">sly</span><span class=\"p\">,</span> <span class=\"n\">slz</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">]</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">matshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">t1_data</span><span class=\"p\">[:,</span> <span class=\"n\">slx</span><span class=\"p\">,</span> <span class=\"p\">:]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">bone</span><span class=\"p\">)</span>\n<span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">matshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">wmpl_show</span><span class=\"p\">[:,</span> <span class=\"n\">slx</span><span class=\"p\">,</span> <span class=\"p\">:]),</span>\n                   <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">cool</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">80</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">matshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">t1_data</span><span class=\"p\">[:,</span> <span class=\"n\">sly</span><span class=\"p\">,</span> <span class=\"p\">:]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">bone</span><span class=\"p\">)</span>\n<span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">matshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">wmpl_show</span><span class=\"p\">[:,</span> <span class=\"n\">sly</span><span class=\"p\">,</span> <span class=\"p\">:]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">cool</span><span class=\"p\">,</span>\n                   <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">80</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">matshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">t1_data</span><span class=\"p\">[:,</span> <span class=\"n\">slz</span><span class=\"p\">,</span> <span class=\"p\">:]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">bone</span><span class=\"p\">)</span>\n<span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">matshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">wmpl_show</span><span class=\"p\">[:,</span> <span class=\"n\">slz</span><span class=\"p\">,</span> <span class=\"p\">:]),</span>\n                   <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">cool</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">80</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">cbar_axes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">lax</span> <span class=\"ow\">in</span> <span class=\"n\">ax</span><span class=\"p\">:</span>\n    <span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">set_xticks</span><span class=\"p\">([])</span>\n    <span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">set_yticks</span><span class=\"p\">([])</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s2\">&quot;Path_Length_Map.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_path_length_map_002.png\" srcset=\"../../_images/sphx_glr_path_length_map_002.png\" alt=\"path length map\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id3\">\n<img alt=\"examples_built/17_streamline_analysis/Path_Length_Map.png\" src=\"examples_built/17_streamline_analysis/Path_Length_Map.png\" />\n<figcaption>\n<p><span class=\"caption-text\"><strong>Path Length Map showing the shortest distance, along a streamline,\nfrom the corpus callosum ROI with the background set to -1</strong>.</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<section id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"jordan-2018-plm\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id1\">Jordan_2018_plm</a><span class=\"fn-bracket\">]</span></span>\n<p>Jordan K. et al., \u201cAn Open-Source Tool for Anisotropic</p>\n</div>\n</div>\n<p>Radiation Therapy Planning in Neuro-oncology Using DW-MRI Tractography\u201d,\nPREPRINT (biorxiv), 2018.</p>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 1 minutes  25.726 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-17-streamline-analysis-path-length-map-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/8a3c2b8a5dd8c7eb8ff53e49cb40ad44/path_length_map.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">path_length_map.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/b1ba81e614325d30a59472af70c72b50/path_length_map.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">path_length_map.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples_built/17_streamline_analysis/streamline_tools", "Connectivity Matrices, ROI Intersections and Density Maps", "N", "next"], ["examples_built/17_streamline_analysis/cluster_confidence", "Calculation of Outliers with Cluster Confidence Index", "P", "previous"]], "sourcename": "examples_built/17_streamline_analysis/path_length_map.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Calculate Path Length Map</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/17_streamline_analysis/path_length_map", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}