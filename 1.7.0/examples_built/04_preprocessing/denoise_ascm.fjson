{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "Examples"}, {"link": "../", "title": "Preprocessing"}], "prev": {"link": "../gradients_spheres/", "title": "Gradients and Spheres"}, "next": {"link": "../snr_in_cc/", "title": "SNR estimation for Diffusion-Weighted Images"}, "title": "Denoise images using Adaptive Soft Coefficient Matching (ASCM)", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-04-preprocessing-denoise-ascm-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"denoise-images-using-adaptive-soft-coefficient-matching-ascm\">\n<span id=\"sphx-glr-examples-built-04-preprocessing-denoise-ascm-py\"></span><h1>Denoise images using Adaptive Soft Coefficient Matching (ASCM)<a class=\"headerlink\" href=\"#denoise-images-using-adaptive-soft-coefficient-matching-ascm\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>The adaptive soft coefficient matching (ASCM) as described in <a class=\"reference internal\" href=\"../denoise_nlmeans/#coupe11\" id=\"id1\"><span>[Coupe11]</span></a> is a\nimproved extension of non-local means (NLMEANS) denoising. ASCM gives a better\ndenoised images from two standard non-local means denoised versions of the\noriginal data with different degrees sharpness. Here, one denoised input is\nmore \u201csmooth\u201d than the other (the easiest way to achieve this denoising is use\n<code class=\"docutils literal notranslate\"><span class=\"pre\">non_local_means</span></code> with two different patch radii).</p>\n<p>ASCM involves these basic steps</p>\n<ul class=\"simple\">\n<li><p>Computes wavelet decomposition of the noisy as well as denoised inputs</p></li>\n<li><p>Combines the wavelets for the output image in a way that it takes it\u2019s\nsmoothness (low frequency components) from the input with larger smoothing,\nand the sharp features (high frequency components) from the input with\nless smoothing.</p></li>\n</ul>\n<p>This way ASCM gives us a well denoised output while preserving the sharpness\nof the image features.</p>\n<p>Let us load the necessary modules</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.denoise.noise_estimate</span> <span class=\"kn\">import</span> <span class=\"n\">estimate_sigma</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"kn\">import</span> <span class=\"n\">load_nifti</span><span class=\"p\">,</span> <span class=\"n\">save_nifti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.denoise.non_local_means</span> <span class=\"kn\">import</span> <span class=\"n\">non_local_means</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.denoise.adaptive_soft_matching</span> <span class=\"kn\">import</span> <span class=\"n\">adaptive_soft_matching</span>\n</pre></div>\n</div>\n<p>Choose one of the data from the datasets in <a href=\"#id4\"><span class=\"problematic\" id=\"id5\">dipy_</span></a></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dwi_fname</span><span class=\"p\">,</span> <span class=\"n\">dwi_bval_fname</span><span class=\"p\">,</span> <span class=\"n\">dwi_bvec_fname</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;sherbrooke_3shell&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">dwi_fname</span><span class=\"p\">)</span>\n<span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">dwi_bval_fname</span><span class=\"p\">,</span> <span class=\"n\">dwi_bvec_fname</span><span class=\"p\">)</span>\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n\n<span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">80</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;vol size&quot;</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>vol size (128, 128, 60)\n</pre></div>\n</div>\n<p>In order to generate the two pre-denoised versions of the data we will use the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">non_local_means</span></code> denoising. For <code class=\"docutils literal notranslate\"><span class=\"pre\">non_local_means</span></code> first we need to\nestimate the standard deviation of the noise. We use N=4 since the Sherbrooke\ndataset was acquired on a 1.5T Siemens scanner with a 4 array head coil.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sigma</span> <span class=\"o\">=</span> <span class=\"n\">estimate_sigma</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For the denoised version of the original data which preserves sharper features,\nwe perform non-local means with smaller patch size.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">den_small</span> <span class=\"o\">=</span> <span class=\"n\">non_local_means</span><span class=\"p\">(</span>\n    <span class=\"n\">data</span><span class=\"p\">,</span>\n    <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"n\">sigma</span><span class=\"p\">,</span>\n    <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">mask</span><span class=\"p\">,</span>\n    <span class=\"n\">patch_radius</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">block_radius</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">rician</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For the denoised version of the original data that implies more smoothing, we\nperform non-local means with larger patch size.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">den_large</span> <span class=\"o\">=</span> <span class=\"n\">non_local_means</span><span class=\"p\">(</span>\n    <span class=\"n\">data</span><span class=\"p\">,</span>\n    <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"n\">sigma</span><span class=\"p\">,</span>\n    <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">mask</span><span class=\"p\">,</span>\n    <span class=\"n\">patch_radius</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"n\">block_radius</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">rician</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now we perform the adaptive soft coefficient matching. Empirically we set the\nadaptive parameter in ascm to be the average of the local noise variance,\nin this case the sigma itself.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">den_final</span> <span class=\"o\">=</span> <span class=\"n\">adaptive_soft_matching</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">den_small</span><span class=\"p\">,</span> <span class=\"n\">den_large</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;total time&quot;</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>total time 1.5976557731628418\n</pre></div>\n</div>\n<p>To access the quality of this denoising procedure, we plot the an axial slice\nof the original data, it\u2019s denoised output and residuals.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">axial_middle</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>\n\n<span class=\"n\">original</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">axial_middle</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"n\">final_output</span> <span class=\"o\">=</span> <span class=\"n\">den_final</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">axial_middle</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"n\">difference</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">final_output</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">original</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">))</span>\n<span class=\"n\">difference</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">mask</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">axial_middle</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Original&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">final_output</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;ASCM output&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">difference</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Residual&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n    <span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;denoised_ascm.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">bbox_inches</span><span class=\"o\">=</span><span class=\"s1\">&#39;tight&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;The ascm result saved in denoised_ascm.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_denoise_ascm_001.png\" srcset=\"../../_images/sphx_glr_denoise_ascm_001.png\" alt=\"denoise ascm\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>The ascm result saved in denoised_ascm.png\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id2\">\n<img alt=\"examples_built/04_preprocessing/denoised_ascm.png\" src=\"examples_built/04_preprocessing/denoised_ascm.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Showing the axial slice without (left) and with (middle) ASCM denoising.</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>From the above figure we can see that the residual is really uniform in nature\nwhich dictates that ASCM denoises the data while preserving the sharpness of\nthe features.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">save_nifti</span><span class=\"p\">(</span><span class=\"s1\">&#39;denoised_ascm.nii.gz&#39;</span><span class=\"p\">,</span> <span class=\"n\">den_final</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Saving the entire denoised output in denoised_ascm.nii.gz&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Saving the entire denoised output in denoised_ascm.nii.gz\n</pre></div>\n</div>\n<p>For comparison propose we also plot the outputs of the <code class=\"docutils literal notranslate\"><span class=\"pre\">non_local_means</span></code>\n(both with the larger as well as with the smaller patch radius) with the ASCM\noutput.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Original&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">den_small</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">axial_middle</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span>\n             <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;NLMEANS small&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">den_large</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">axial_middle</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span>\n             <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;NLMEANS large&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">final_output</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;ASCM &#39;</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n    <span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;ascm_comparison.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">bbox_inches</span><span class=\"o\">=</span><span class=\"s1\">&#39;tight&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;The comparison result saved in ascm_comparison.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_denoise_ascm_002.png\" srcset=\"../../_images/sphx_glr_denoise_ascm_002.png\" alt=\"denoise ascm\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>The comparison result saved in ascm_comparison.png\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id3\">\n<img alt=\"examples_built/04_preprocessing/ascm_comparison.png\" src=\"examples_built/04_preprocessing/ascm_comparison.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Comparing outputs of the NLMEANS and ASCM.</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>From the above figure, we can observe that the information of two pre-denoised\nversions of the raw data, ASCM outperforms standard non-local means in\nsuppressing noise and preserving feature sharpness.</p>\n<section id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"coupe11\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id1\">Coupe11</a><span class=\"fn-bracket\">]</span></span>\n<p>Pierrick Coupe, Jose Manjon, Montserrat Robles, Louis Collins.\nAdaptive Multiresolution Non-Local Means Filter for 3D MR Image Denoising.\nIET Image Processing, Institution of Engineering and Technology,\n2011. &lt;00645538&gt;</p>\n</div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  4.101 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-04-preprocessing-denoise-ascm-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/616fb14c00cfa6134f05c54eaca7d9c5/denoise_ascm.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">denoise_ascm.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/f29e194965a8a5a260c7322b9dcdca0b/denoise_ascm.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">denoise_ascm.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples_built/04_preprocessing/snr_in_cc", "SNR estimation for Diffusion-Weighted Images", "N", "next"], ["examples_built/04_preprocessing/gradients_spheres", "Gradients and Spheres", "P", "previous"]], "sourcename": "examples_built/04_preprocessing/denoise_ascm.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Denoise images using Adaptive Soft Coefficient Matching (ASCM)</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/04_preprocessing/denoise_ascm", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}