{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "Examples"}, {"link": "../", "title": "Reconstruction"}], "prev": {"link": "../reconst_forecast/", "title": "Crossing invariant fiber response function with FORECAST model"}, "next": {"link": "../reconst_dki_micro/", "title": "Reconstruction of the diffusion signal with the WMTI model"}, "title": "Using the RESTORE algorithm for robust tensor fitting", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-07-reconstruction-restore-dti-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"using-the-restore-algorithm-for-robust-tensor-fitting\">\n<span id=\"sphx-glr-examples-built-07-reconstruction-restore-dti-py\"></span><h1>Using the RESTORE algorithm for robust tensor fitting<a class=\"headerlink\" href=\"#using-the-restore-algorithm-for-robust-tensor-fitting\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>The diffusion tensor model takes into account certain kinds of noise (thermal),\nbut not other kinds, such as \u201cphysiological\u201d noise. For example, if a subject\nmoves during acquisition of one of the diffusion-weighted samples, this\nmight have a substantial effect on the parameters of the tensor fit calculated\nin all voxels in the brain for that subject. One of the pernicious consequences\nof this is that it can lead to wrong interpretation of group differences. For\nexample, some groups of participants (e.g. young children, patient groups,\netc.) are particularly prone to motion and differences in tensor parameters and\nderived statistics (such as FA) due to motion would be confounded with actual\ndifferences in the physical properties of the white matter. An example of this\nwas shown in a paper by Yendiki et al. <a class=\"reference internal\" href=\"#yendiki2013\" id=\"id1\"><span>[Yendiki2013]</span></a>.</p>\n<p>One of the strategies to deal with this problem is to apply an automatic method\nfor detecting outliers in the data, excluding these outliers and refitting the\nmodel without the presence of these outliers. This is often referred to as\n\u201crobust model fitting\u201d. One of the common algorithms for robust tensor fitting\nis called RESTORE, and was first proposed by Chang et al. <a class=\"reference internal\" href=\"#chang2005\" id=\"id2\"><span>[Chang2005]</span></a>.</p>\n<p>In the following example, we will demonstrate how to use RESTORE on a simulated\ndataset, which we will corrupt by adding intermittent noise.</p>\n<p>We start by importing a few of the libraries we will use.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n</pre></div>\n</div>\n<p>The module <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy.reconst.dti</span></code> contains the implementation of tensor fitting,\nincluding an implementation of the RESTORE algorithm.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy.reconst.dti</span> <span class=\"k\">as</span> <span class=\"nn\">dti</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">dipy.data</span></code> is used for small datasets that we use in tests and examples.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">as</span> <span class=\"nn\">dpd</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">dipy.io.image</span></code> is for loading / saving imaging datasets\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dipy.io.gradients</span></code> is for loading / saving our bvals and bvecs</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"kn\">import</span> <span class=\"n\">load_nifti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">dipy.viz</span></code> package is used for 3D visualization and matplotlib for 2D\nvisualizations:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">dipy.denoise.noise_estimate</span> <span class=\"k\">as</span> <span class=\"nn\">ne</span>\n\n<span class=\"c1\"># Enables/disables interactive visualization</span>\n<span class=\"n\">interactive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre></div>\n</div>\n<p>If needed, the <code class=\"docutils literal notranslate\"><span class=\"pre\">fetch_stanford_hardi</span></code> function will download the raw dMRI\ndataset of a single subject. The size of this dataset is 87 MBytes. You only\nneed to fetch once.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">hardi_fname</span><span class=\"p\">,</span> <span class=\"n\">hardi_bval_fname</span><span class=\"p\">,</span> <span class=\"n\">hardi_bvec_fname</span> <span class=\"o\">=</span> <span class=\"n\">dpd</span><span class=\"o\">.</span><span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;stanford_hardi&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">hardi_fname</span><span class=\"p\">)</span>\n\n<span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">hardi_bval_fname</span><span class=\"p\">,</span> <span class=\"n\">hardi_bvec_fname</span><span class=\"p\">)</span>\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We initialize a DTI model class instance using the gradient table used in the\nmeasurement. By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">dti.TensorModel</span></code> will use a weighted least-squares\nalgorithm (described in <a class=\"reference internal\" href=\"#chang2005\" id=\"id3\"><span>[Chang2005]</span></a>) to fit the parameters of the model. We\ninitialize this model as a baseline for comparison of noise-corrupted models:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dti_wls</span> <span class=\"o\">=</span> <span class=\"n\">dti</span><span class=\"o\">.</span><span class=\"n\">TensorModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For the purpose of this example, we will focus on the data from a region of\ninterest (ROI) surrounding the Corpus Callosum. We define that ROI as the\nfollowing indices:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">roi_idx</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"mi\">55</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">),</span> <span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"mi\">38</span><span class=\"p\">,</span> <span class=\"mi\">39</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>And use them to index into the data:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">roi_idx</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>This dataset is not very noisy, so we will artificially corrupt it to simulate\nthe effects of \u201cphysiological\u201d noise, such as subject motion. But first, let\u2019s\nestablish a baseline, using the data as it is:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fit_wls</span> <span class=\"o\">=</span> <span class=\"n\">dti_wls</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"n\">fa1</span> <span class=\"o\">=</span> <span class=\"n\">fit_wls</span><span class=\"o\">.</span><span class=\"n\">fa</span>\n<span class=\"n\">evals1</span> <span class=\"o\">=</span> <span class=\"n\">fit_wls</span><span class=\"o\">.</span><span class=\"n\">evals</span>\n<span class=\"n\">evecs1</span> <span class=\"o\">=</span> <span class=\"n\">fit_wls</span><span class=\"o\">.</span><span class=\"n\">evecs</span>\n<span class=\"n\">cfa1</span> <span class=\"o\">=</span> <span class=\"n\">dti</span><span class=\"o\">.</span><span class=\"n\">color_fa</span><span class=\"p\">(</span><span class=\"n\">fa1</span><span class=\"p\">,</span> <span class=\"n\">evecs1</span><span class=\"p\">)</span>\n<span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">dpd</span><span class=\"o\">.</span><span class=\"n\">default_sphere</span>\n</pre></div>\n</div>\n<p>We visualize the ODFs in the ROI using <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy.viz</span></code> module:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">tensor_slicer</span><span class=\"p\">(</span><span class=\"n\">evals1</span><span class=\"p\">,</span> <span class=\"n\">evecs1</span><span class=\"p\">,</span> <span class=\"n\">scalar_colors</span><span class=\"o\">=</span><span class=\"n\">cfa1</span><span class=\"p\">,</span>\n                              <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving illustration as tensor_ellipsoids_wls.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;tensor_ellipsoids_wls.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_restore_dti_001.png\" srcset=\"../../_images/sphx_glr_restore_dti_001.png\" alt=\"restore dti\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Saving illustration as tensor_ellipsoids_wls.png\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id5\">\n<img alt=\"examples_built/07_reconstruction/tensor_ellipsoids_wls.png\" src=\"examples_built/07_reconstruction/tensor_ellipsoids_wls.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Tensor Ellipsoids.</span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>Next, we corrupt the data with some noise. To simulate a subject that moves\nintermittently, we will replace a few of the images with a very low signal</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">noisy_data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"n\">noisy_idx</span> <span class=\"o\">=</span> <span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>  <span class=\"c1\"># The last 10 volumes are corrupted</span>\n<span class=\"n\">noisy_data</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">noisy_idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n</pre></div>\n</div>\n<p>We use the same model to fit this noisy data</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fit_wls_noisy</span> <span class=\"o\">=</span> <span class=\"n\">dti_wls</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">noisy_data</span><span class=\"p\">)</span>\n<span class=\"n\">fa2</span> <span class=\"o\">=</span> <span class=\"n\">fit_wls_noisy</span><span class=\"o\">.</span><span class=\"n\">fa</span>\n<span class=\"n\">evals2</span> <span class=\"o\">=</span> <span class=\"n\">fit_wls_noisy</span><span class=\"o\">.</span><span class=\"n\">evals</span>\n<span class=\"n\">evecs2</span> <span class=\"o\">=</span> <span class=\"n\">fit_wls_noisy</span><span class=\"o\">.</span><span class=\"n\">evecs</span>\n<span class=\"n\">cfa2</span> <span class=\"o\">=</span> <span class=\"n\">dti</span><span class=\"o\">.</span><span class=\"n\">color_fa</span><span class=\"p\">(</span><span class=\"n\">fa2</span><span class=\"p\">,</span> <span class=\"n\">evecs2</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">tensor_slicer</span><span class=\"p\">(</span><span class=\"n\">evals2</span><span class=\"p\">,</span> <span class=\"n\">evecs2</span><span class=\"p\">,</span> <span class=\"n\">scalar_colors</span><span class=\"o\">=</span><span class=\"n\">cfa2</span><span class=\"p\">,</span>\n                              <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving illustration as tensor_ellipsoids_wls_noisy.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;tensor_ellipsoids_wls_noisy.png&#39;</span><span class=\"p\">,</span>\n              <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_restore_dti_002.png\" srcset=\"../../_images/sphx_glr_restore_dti_002.png\" alt=\"restore dti\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Saving illustration as tensor_ellipsoids_wls_noisy.png\n</pre></div>\n</div>\n<p>In places where the tensor model is particularly sensitive to noise, the\nresulting tensor field will be distorted</p>\n<figure class=\"align-center\" id=\"id6\">\n<img alt=\"examples_built/07_reconstruction/tensor_ellipsoids_wls_noisy.png\" src=\"examples_built/07_reconstruction/tensor_ellipsoids_wls_noisy.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Tensor Ellipsoids from noisy data.</span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>To estimate the parameters from the noisy data using RESTORE, we need to\nestimate what would be a reasonable amount of noise to expect in the\nmeasurement. To do that, we use the <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy.denoise.noise_estimate</span></code> module:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sigma</span> <span class=\"o\">=</span> <span class=\"n\">ne</span><span class=\"o\">.</span><span class=\"n\">estimate_sigma</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>This estimate of the standard deviation will be used by the RESTORE algorithm\nto identify the outliers in each voxel and is given as an input when\ninitializing the TensorModel object:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dti_restore</span> <span class=\"o\">=</span> <span class=\"n\">dti</span><span class=\"o\">.</span><span class=\"n\">TensorModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">fit_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;RESTORE&#39;</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"n\">sigma</span><span class=\"p\">)</span>\n<span class=\"n\">fit_restore_noisy</span> <span class=\"o\">=</span> <span class=\"n\">dti_restore</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">noisy_data</span><span class=\"p\">)</span>\n<span class=\"n\">fa3</span> <span class=\"o\">=</span> <span class=\"n\">fit_restore_noisy</span><span class=\"o\">.</span><span class=\"n\">fa</span>\n<span class=\"n\">evals3</span> <span class=\"o\">=</span> <span class=\"n\">fit_restore_noisy</span><span class=\"o\">.</span><span class=\"n\">evals</span>\n<span class=\"n\">evecs3</span> <span class=\"o\">=</span> <span class=\"n\">fit_restore_noisy</span><span class=\"o\">.</span><span class=\"n\">evecs</span>\n<span class=\"n\">cfa3</span> <span class=\"o\">=</span> <span class=\"n\">dti</span><span class=\"o\">.</span><span class=\"n\">color_fa</span><span class=\"p\">(</span><span class=\"n\">fa3</span><span class=\"p\">,</span> <span class=\"n\">evecs3</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">tensor_slicer</span><span class=\"p\">(</span><span class=\"n\">evals3</span><span class=\"p\">,</span> <span class=\"n\">evecs3</span><span class=\"p\">,</span> <span class=\"n\">scalar_colors</span><span class=\"o\">=</span><span class=\"n\">cfa3</span><span class=\"p\">,</span>\n                              <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving illustration as tensor_ellipsoids_restore_noisy.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;tensor_ellipsoids_restore_noisy.png&#39;</span><span class=\"p\">,</span>\n              <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_restore_dti_003.png\" srcset=\"../../_images/sphx_glr_restore_dti_003.png\" alt=\"restore dti\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Saving illustration as tensor_ellipsoids_restore_noisy.png\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id7\">\n<img alt=\"examples_built/07_reconstruction/tensor_ellipsoids_restore_noisy.png\" src=\"examples_built/07_reconstruction/tensor_ellipsoids_restore_noisy.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Tensor Ellipsoids from noisy data recovered with RESTORE.</span><a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>The tensor field looks rather restored to its noiseless state in this\nimage, but to convince ourselves further that this did the right thing, we will\ncompare  the distribution of FA in this region relative to the baseline, using\nthe RESTORE estimate and the WLS estimate <a class=\"reference internal\" href=\"#chung2006\" id=\"id4\"><span>[Chung2006]</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fig_hist</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">fa2</span><span class=\"p\">),</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"n\">histtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;step&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;WLS&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">fa3</span><span class=\"p\">),</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span> <span class=\"n\">histtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;step&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;RESTORE&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">fa1</span><span class=\"p\">),</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;g&#39;</span><span class=\"p\">,</span> <span class=\"n\">histtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;step&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;Original&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Fractional Anisotropy&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Count&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"n\">fig_hist</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;dti_fa_distributions.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_restore_dti_004.png\" srcset=\"../../_images/sphx_glr_restore_dti_004.png\" alt=\"restore dti\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>/Users/skoudoro/devel/dipy/doc/examples_revamped/07_reconstruction/restore_dti.py:215: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.\n  fig_hist, ax = plt.subplots(1)\n</pre></div>\n</div>\n<figure class=\"align-center\">\n<img alt=\"examples_built/07_reconstruction/dti_fa_distributions.png\" src=\"examples_built/07_reconstruction/dti_fa_distributions.png\" />\n</figure>\n<p>This demonstrates that RESTORE can recover a distribution of FA that more\nclosely resembles the baseline distribution of the noiseless signal, and\ndemonstrates the utility of the method to data with intermittent\nnoise. Importantly, this method assumes that the tensor is a good\nrepresentation of the diffusion signal in the data. If you have reason to\nbelieve this is not the case (for example, you have data with very high b\nvalues and you are particularly interested in locations in the brain in which\nfibers cross), you might want to use a different method to fit your data.</p>\n<section id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"yendiki2013\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id1\">Yendiki2013</a><span class=\"fn-bracket\">]</span></span>\n<p>Yendiki, A, Koldewynb, K, Kakunooria, S, Kanwisher, N, and\nFischl, B. (2013). Spurious group differences due to head motion in a\ndiffusion MRI study. Neuroimage.</p>\n</div>\n<div class=\"citation\" id=\"chang2005\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Chang2005<span class=\"fn-bracket\">]</span></span>\n<span class=\"backrefs\">(<a role=\"doc-backlink\" href=\"#id2\">1</a>,<a role=\"doc-backlink\" href=\"#id3\">2</a>)</span>\n<p>Chang, L-C, Jones, DK and Pierpaoli, C (2005). RESTORE: robust\nestimation of tensors by outlier rejection. MRM, 53: 1088-95.</p>\n</div>\n<div class=\"citation\" id=\"chung2006\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id4\">Chung2006</a><span class=\"fn-bracket\">]</span></span>\n<p>Chung, SW, Lu, Y, Henry, R-G, (2006). Comparison of bootstrap\napproaches for estimation of uncertainties of DTI parameters. NeuroImage 33,\n531-541.</p>\n</div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  5.081 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-07-reconstruction-restore-dti-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/e72fac14f82275088aea65053c312d53/restore_dti.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">restore_dti.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/0ea070b496661c23bc984b3cbb93c817/restore_dti.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">restore_dti.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples_built/07_reconstruction/reconst_dki_micro", "Reconstruction of the diffusion signal with the WMTI model", "N", "next"], ["examples_built/07_reconstruction/reconst_forecast", "Crossing invariant fiber response function with FORECAST model", "P", "previous"]], "sourcename": "examples_built/07_reconstruction/restore_dti.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Using the RESTORE algorithm for robust tensor fitting</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/07_reconstruction/restore_dti", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}