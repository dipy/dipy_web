{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "Examples"}, {"link": "../", "title": "Reconstruction"}], "prev": {"link": "../kfold_xval/", "title": "K-fold cross-validation for model comparison"}, "next": {"link": "../reconst_dti/", "title": "Reconstruction of the diffusion signal with the Tensor model"}, "title": "Reconstruct with Q-space Trajectory Imaging (QTI)", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-07-reconstruction-reconst-qti-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"reconstruct-with-q-space-trajectory-imaging-qti\">\n<span id=\"sphx-glr-examples-built-07-reconstruction-reconst-qti-py\"></span><h1>Reconstruct with Q-space Trajectory Imaging (QTI)<a class=\"headerlink\" href=\"#reconstruct-with-q-space-trajectory-imaging-qti\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>Q-space trajectory imaging (QTI) by Westin et al. <a class=\"footnote-reference brackets\" href=\"#id5\" id=\"id1\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></a> is a general framework\nfor analyzing diffusion-weighted MRI data acquired with tensor-valued diffusion\nencoding. This tutorial briefly summarizes the theory and provides an example\nof how to estimate the diffusion and covariance tensors using DIPY.</p>\n<section id=\"theory\">\n<h2>Theory<a class=\"headerlink\" href=\"#theory\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>In QTI, the tissue microstructure is represented by a diffusion tensor\ndistribution (DTD). Here, DTD is denoted by <span class=\"math notranslate nohighlight\">\\(\\mathbf{D}\\)</span> and the voxel-level\ndiffusion tensor from DTI by <span class=\"math notranslate nohighlight\">\\(\\langle\\mathbf{D}\nangle\\)</span>, where\n<span class=\"math notranslate nohighlight\">\\(\\langle \\\nangle\\)</span> denotes averaging over the DTD. The covariance of\n<span class=\"math notranslate nohighlight\">\\(\\mathbf{D}\\)</span> is given by a fourth-order covariance tensor <span class=\"math notranslate nohighlight\">\\(\\mathbb{C}\\)</span> defined\nas</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\mathbb{C} = \\langle \\mathbf{D} \\otimes \\mathbf{D}\\]</div>\n<dl class=\"simple\">\n<dt>angle - langle</dt><dd><p>mathbf{D}</p>\n</dd>\n</dl>\n<p>angle otimes langle mathbf{D}\nangle ,</p>\n<p>where <span class=\"math notranslate nohighlight\">\\(\\otimes\\)</span> denotes a tensor outer product. <span class=\"math notranslate nohighlight\">\\(\\mathbb{C}\\)</span> has 21 unique\nelements and enables the calculation of several microstructural parameters.</p>\n<p>Using the cumulant expansion, the diffusion-weighted signal can be approximated\nas</p>\n<div class=\"math notranslate nohighlight\">\n\\[S \u0007pprox S_0 \\exp \\left(- \\mathbf{b} : \\langle \\mathbf{D}\\]</div>\n<p>angle +</p>\n<p>rac{1}{2}(mathbf{b} otimes mathbf{b}) : mathbb{C}\night) ,</p>\n<p>where <span class=\"math notranslate nohighlight\">\\(S_0\\)</span> is the signal without diffusion-weighting, <span class=\"math notranslate nohighlight\">\\(\\mathbf{b}\\)</span> is the\nb-tensor used in the acquisition, and <span class=\"math notranslate nohighlight\">\\(:\\)</span> denotes a tensor inner product.</p>\n<p>The model parameters <span class=\"math notranslate nohighlight\">\\(S_0\\)</span>, <span class=\"math notranslate nohighlight\">\\(\\langle\\mathbf{D}\nangle\\)</span>, and <span class=\"math notranslate nohighlight\">\\(\\mathbb{C}\\)</span> can be\nestimated by solving the following equation:</p>\n<div class=\"math notranslate nohighlight\">\n\\[S = \beta X,\\]</div>\n<p>where</p>\n<div class=\"math notranslate nohighlight\">\n\\[S = \begin{pmatrix} \\ln S_1 \\\\]</div>\n<p>dots ln S_n end{pmatrix} ,</p>\n<div class=\"math notranslate nohighlight\">\n\\[\beta = \begin{pmatrix} \\ln S_0 &amp; \\langle \\mathbf{D}\\]</div>\n<dl class=\"simple\">\n<dt>angle &amp; mathbb{C}</dt><dd><p>end{pmatrix}^       ext{T} ,</p>\n</dd>\n</dl>\n<div class=\"math notranslate nohighlight\">\n\\[X =\n\begin{pmatrix}\n1 &amp; -\\mathbf{b}_1^   ext{T} &amp;\\]</div>\n<dl class=\"simple\">\n<dt>rac{1}{2} (mathbf{b}_1 otimes mathbf{b}_1)</dt><dd><p>ext{T} </p>\n</dd>\n</dl>\n<p>dots &amp;\ndots &amp;\ndots </p>\n<blockquote>\n<div><p>1 &amp; -mathbf{b}_n^   ext{T} &amp;</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>rac{1}{2} (mathbf{b}_n otimes mathbf{b}_n)</dt><dd><p>^    ext{T}\nend{pmatrix} ,</p>\n</dd>\n</dl>\n<p>where <span class=\"math notranslate nohighlight\">\\(n\\)</span> is the number of acquisitions and <span class=\"math notranslate nohighlight\">\\(\\langle\\mathbf{D}\nangle\\)</span>,\n<span class=\"math notranslate nohighlight\">\\(\\mathbb{C}\\)</span>, <span class=\"math notranslate nohighlight\">\\(\\mathbf{b}_i\\)</span>, and <span class=\"math notranslate nohighlight\">\\((\\mathbf{b}_i \\otimes \\mathbf{b}_i)\\)</span> are\nrepresented by column vectors using Voigt notation. Estimation of the model\nparameters requires that :math:`      ext{rank}(mathbf{X}^   ext{T}mathbf{X}) = 28`.\nThis can be achieved by combining acquisitions with b-tensors with different\nshapes, sizes, and orientations.</p>\n<p>For details, please see <a class=\"footnote-reference brackets\" href=\"#id5\" id=\"id2\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></a>.</p>\n</section>\n<section id=\"usage-example\">\n<h2>Usage example<a class=\"headerlink\" href=\"#usage-example\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>QTI can be fit to data using the module <cite>dipy.reconst.qti</cite>. Let\u2019s start by\nimporting the required modules and functions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"kn\">import</span> <span class=\"n\">load_nifti</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dipy.reconst.qti</span> <span class=\"k\">as</span> <span class=\"nn\">qti</span>\n</pre></div>\n</div>\n<p>As QTI requires data with tensor-valued encoding, let\u2019s load an example dataset\nacquired with q-space trajectory encoding (QTE):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fdata</span><span class=\"p\">,</span> <span class=\"n\">fbvals</span><span class=\"p\">,</span> <span class=\"n\">fbvecs</span><span class=\"p\">,</span> <span class=\"n\">fmask</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;qte_lte_pte&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">fdata</span><span class=\"p\">)</span>\n<span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">fmask</span><span class=\"p\">)</span>\n<span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">fbvals</span><span class=\"p\">,</span> <span class=\"n\">fbvecs</span><span class=\"p\">)</span>\n<span class=\"n\">btens</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"s1\">&#39;LTE&#39;</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">61</span><span class=\"p\">)]</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"s1\">&#39;PTE&#39;</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">61</span><span class=\"p\">)])</span>\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">,</span> <span class=\"n\">btens</span><span class=\"o\">=</span><span class=\"n\">btens</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The dataset contains 122 volumes of which the first half were acquired with\nlinear tensor encoding (LTE) and the second half with planar tensor encoding\n(PTE). We can confirm this by calculating the ranks of the b-tensors in the\ngradient table.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ranks</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">matrix_rank</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">b</span> <span class=\"ow\">in</span> <span class=\"n\">gtab</span><span class=\"o\">.</span><span class=\"n\">btens</span><span class=\"p\">])</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">l</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">([</span><span class=\"s1\">&#39;b = 0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LTE&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;PTE&#39;</span><span class=\"p\">]):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\"> volumes with </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">ranks</span> <span class=\"o\">==</span> <span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"n\">l</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>2 volumes with b = 0\n60 volumes with LTE\n60 volumes with PTE\n</pre></div>\n</div>\n<p>Now that we have data acquired with tensor-valued diffusion encoding and the\ncorresponding gradient table containing the b-tensors, we can fit QTI to the\ndata as follows:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">qtimodel</span> <span class=\"o\">=</span> <span class=\"n\">qti</span><span class=\"o\">.</span><span class=\"n\">QtiModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n<span class=\"n\">qtifit</span> <span class=\"o\">=</span> <span class=\"n\">qtimodel</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>QTI parameter maps can accessed as the attributes of <cite>qtifit</cite>. For instance,\nfractional anisotropy (FA) and microscopic fractional anisotropy (\u03bcFA) maps can\nbe calculated as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fa</span> <span class=\"o\">=</span> <span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">fa</span>\n<span class=\"n\">ufa</span> <span class=\"o\">=</span> <span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">ufa</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>/opt/homebrew/Caskroom/miniforge/base/envs/dipy-39-x86/lib/python3.9/site-packages/dipy/reconst/qti.py:954: RuntimeWarning: invalid value encountered in sqrt\n  ufa = np.sqrt(self.c_mu)\n</pre></div>\n</div>\n<p>Finally, let\u2019s reproduce Figure 9 from <a class=\"footnote-reference brackets\" href=\"#id5\" id=\"id3\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></a> to visualize more QTI parameter\nmaps:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"mi\">36</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">))</span>\n\n<span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span>  <span class=\"c1\"># Black background for figures</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n        <span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">background</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_xticks</span><span class=\"p\">([])</span>\n        <span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_yticks</span><span class=\"p\">([])</span>\n\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">md</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">3e-3</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;MD&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">v_md</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span>\n                <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">.5e-6</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;V:math:`_</span><span class=\"si\">{MD}</span><span class=\"s1\">`&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">v_shear</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">.5e-6</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;V:math:`_</span><span class=\"si\">{shear}</span><span class=\"s1\">`&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">v_iso</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span>\n                <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">1e-6</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;V:math:`_</span><span class=\"si\">{iso}</span><span class=\"s1\">`&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">c_md</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">.25</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;C:math:`_</span><span class=\"si\">{MD}</span><span class=\"s1\">`&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">c_mu</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;C:math:`_</span><span class=\"si\">{\u03bc}</span><span class=\"s1\">` = \u03bcFA:math:`^2`&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">c_m</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;C:math:`_</span><span class=\"si\">{M}</span><span class=\"s1\">` = FA:math:`^2`&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">c_c</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;C:math:`_</span><span class=\"si\">{c}</span><span class=\"s1\">`&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">mk</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">1.5</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;MK&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">k_bulk</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span>\n                <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">1.5</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;K:math:`_</span><span class=\"si\">{bulk}</span><span class=\"s1\">`&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">k_shear</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">1.5</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;K:math:`_</span><span class=\"si\">{shear}</span><span class=\"s1\">`&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rot90</span><span class=\"p\">(</span><span class=\"n\">qtifit</span><span class=\"o\">.</span><span class=\"n\">k_mu</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">]),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">1.5</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;K:math:`_</span><span class=\"si\">{\u03bc}</span><span class=\"s1\">`&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>For more information about QTI, please read the article by Westin et al. <a class=\"footnote-reference brackets\" href=\"#id5\" id=\"id4\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></a>.</p>\n<section id=\"references\">\n<h3>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id5\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<span class=\"backrefs\">(<a role=\"doc-backlink\" href=\"#id1\">1</a>,<a role=\"doc-backlink\" href=\"#id2\">2</a>,<a role=\"doc-backlink\" href=\"#id3\">3</a>,<a role=\"doc-backlink\" href=\"#id4\">4</a>)</span>\n<p>Westin, Carl-Fredrik, et al. \u201cQ-space trajectory imaging for\nmultidimensional diffusion MRI of the human brain.\u201d Neuroimage 135\n(2016): 345-362. <a class=\"reference external\" href=\"https://doi.org/10.1016/j.neuroimage.2016.02.039\">https://doi.org/10.1016/j.neuroimage.2016.02.039</a>.</p>\n</aside>\n</aside>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 1 minutes  43.578 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-07-reconstruction-reconst-qti-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/e1b8f8a6a209f8d3b36528e89616a55d/reconst_qti.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">reconst_qti.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/e7782576b5b371047edcbc5b77d045d1/reconst_qti.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">reconst_qti.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples_built/07_reconstruction/reconst_dti", "Reconstruction of the diffusion signal with the Tensor model", "N", "next"], ["examples_built/07_reconstruction/kfold_xval", "K-fold cross-validation for model comparison", "P", "previous"]], "sourcename": "examples_built/07_reconstruction/reconst_qti.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Reconstruct with Q-space Trajectory Imaging (QTI)</a><ul>\n<li><a class=\"reference internal\" href=\"#theory\">Theory</a></li>\n<li><a class=\"reference internal\" href=\"#usage-example\">Usage example</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/07_reconstruction/reconst_qti", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}