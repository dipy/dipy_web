{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "Examples"}, {"link": "../", "title": "Reconstruction"}], "prev": {"link": "../reconst_dsid/", "title": "DSI Deconvolution vs DSI"}, "next": {"link": "../reconst_gqi/", "title": "Reconstruct with Generalized Q-Sampling Imaging"}, "title": "Calculate SHORE scalar maps", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-07-reconstruction-reconst-shore-metrics-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"calculate-shore-scalar-maps\">\n<span id=\"sphx-glr-examples-built-07-reconstruction-reconst-shore-metrics-py\"></span><h1>Calculate SHORE scalar maps<a class=\"headerlink\" href=\"#calculate-shore-scalar-maps\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>We show how to calculate two SHORE-based scalar maps: return to origin\nprobability (RTOP) <a class=\"reference internal\" href=\"#descoteaux2011\" id=\"id1\"><span>[Descoteaux2011]</span></a> and mean square displacement (MSD)\n<a class=\"reference internal\" href=\"#wu2007\" id=\"id2\"><span>[Wu2007]</span></a>, <a class=\"reference internal\" href=\"#wu2008\" id=\"id3\"><span>[Wu2008]</span></a> on your data. SHORE can be used with any multiple b-value\ndataset like multi-shell or DSI.</p>\n<p>First import the necessary modules:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"kn\">import</span> <span class=\"n\">load_nifti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.shore</span> <span class=\"kn\">import</span> <span class=\"n\">ShoreModel</span>\n</pre></div>\n</div>\n<p>Download and get the data filenames for this tutorial.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fraw</span><span class=\"p\">,</span> <span class=\"n\">fbval</span><span class=\"p\">,</span> <span class=\"n\">fbvec</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;taiwan_ntu_dsi&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>img contains a nibabel Nifti1Image object (data) and gtab contains a\nGradientTable object (gradient information e.g. b-values). For example, to\nread the b-values it is possible to write print(gtab.bvals).</p>\n<p>Load the raw diffusion data and the affine.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">fraw</span><span class=\"p\">)</span>\n<span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">fbval</span><span class=\"p\">,</span> <span class=\"n\">fbvec</span><span class=\"p\">)</span>\n<span class=\"n\">bvecs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">bvecs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span> <span class=\"o\">/</span>\n             <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">bvecs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span> <span class=\"o\">*</span> <span class=\"n\">bvecs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:],</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))[:,</span> <span class=\"kc\">None</span><span class=\"p\">])</span>\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;data.shape (</span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>data.shape (96, 96, 60, 203)\n</pre></div>\n</div>\n<p>Instantiate the Model.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">asm</span> <span class=\"o\">=</span> <span class=\"n\">ShoreModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Let\u2019s just use only one slice only from the data.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dataslice</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Fit the signal with the model and calculate the SHORE coefficients.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">asmfit</span> <span class=\"o\">=</span> <span class=\"n\">asm</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">dataslice</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>  0%|          | 0/2400 [00:00&lt;?, ?it/s]\n 10%|#         | 244/2400 [00:00&lt;00:00, 2434.25it/s]\n 21%|##1       | 504/2400 [00:00&lt;00:00, 2526.83it/s]\n 32%|###1      | 766/2400 [00:00&lt;00:00, 2567.48it/s]\n 43%|####3     | 1043/2400 [00:00&lt;00:00, 2646.80it/s]\n 55%|#####4    | 1308/2400 [00:00&lt;00:00, 2581.71it/s]\n 65%|######5   | 1567/2400 [00:00&lt;00:00, 2580.23it/s]\n 76%|#######6  | 1828/2400 [00:00&lt;00:00, 2589.56it/s]\n 87%|########7 | 2094/2400 [00:00&lt;00:00, 2610.44it/s]\n 98%|#########8| 2363/2400 [00:00&lt;00:00, 2633.67it/s]\n100%|##########| 2400/2400 [00:00&lt;00:00, 2597.90it/s]\n</pre></div>\n</div>\n<p>Calculate the analytical RTOP on the signal\nthat corresponds to the integral of the signal.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Calculating... rtop_signal&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">rtop_signal</span> <span class=\"o\">=</span> <span class=\"n\">asmfit</span><span class=\"o\">.</span><span class=\"n\">rtop_signal</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Calculating... rtop_signal\n</pre></div>\n</div>\n<p>Now we calculate the analytical RTOP on the propagator,\nthat corresponds to its central value.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Calculating... rtop_pdf&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">rtop_pdf</span> <span class=\"o\">=</span> <span class=\"n\">asmfit</span><span class=\"o\">.</span><span class=\"n\">rtop_pdf</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Calculating... rtop_pdf\n</pre></div>\n</div>\n<p>In theory, these two measures must be equal,\nto show that we calculate the mean square error on this two measures.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mse</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">((</span><span class=\"n\">rtop_signal</span> <span class=\"o\">-</span> <span class=\"n\">rtop_pdf</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">rtop_signal</span><span class=\"o\">.</span><span class=\"n\">size</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;MSE = </span><span class=\"si\">%f</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">mse</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>MSE = 0.000000\n</pre></div>\n</div>\n<p>MSE = 0.000000</p>\n<p>Let\u2019s calculate the analytical mean square displacement on the propagator.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Calculating... msd&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">msd</span> <span class=\"o\">=</span> <span class=\"n\">asmfit</span><span class=\"o\">.</span><span class=\"n\">msd</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Calculating... msd\n</pre></div>\n</div>\n<p>Show the maps and save them to a file.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n<span class=\"n\">ax1</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">add_subplot</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;rtop_signal&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n<span class=\"n\">ind</span> <span class=\"o\">=</span> <span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">rtop_signal</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">(</span><span class=\"n\">ind</span><span class=\"p\">)</span>\n<span class=\"n\">ax2</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">add_subplot</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;rtop_pdf&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n<span class=\"n\">ind</span> <span class=\"o\">=</span> <span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">rtop_pdf</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">(</span><span class=\"n\">ind</span><span class=\"p\">)</span>\n<span class=\"n\">ax3</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">add_subplot</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;msd&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax3</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n<span class=\"n\">ind</span> <span class=\"o\">=</span> <span class=\"n\">ax3</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">msd</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">(</span><span class=\"n\">ind</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;SHORE_maps.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_reconst_shore_metrics_001.png\" srcset=\"../../_images/sphx_glr_reconst_shore_metrics_001.png\" alt=\"reconst shore metrics\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id4\">\n<img alt=\"examples_built/07_reconstruction/SHORE_maps.png\" src=\"examples_built/07_reconstruction/SHORE_maps.png\" />\n<figcaption>\n<p><span class=\"caption-text\">RTOP and MSD calculated using the SHORE model.</span><a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<section id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"descoteaux2011\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id1\">Descoteaux2011</a><span class=\"fn-bracket\">]</span></span>\n<p>Descoteaux M. et al., \u201cMultiple q-shell diffusion\npropagator imaging\u201d, Medical Image Analysis, vol 15, No. 4, p. 603-621,\n2011.</p>\n</div>\n<div class=\"citation\" id=\"wu2007\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id2\">Wu2007</a><span class=\"fn-bracket\">]</span></span>\n<p>Wu Y. et al., \u201cHybrid diffusion imaging\u201d, NeuroImage, vol 36, p.\n617-629, 2007.</p>\n</div>\n<div class=\"citation\" id=\"wu2008\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id3\">Wu2008</a><span class=\"fn-bracket\">]</span></span>\n<p>Wu Y. et al., \u201cComputation of Diffusion Function Measures in\nq-Space Using Magnetic Resonance Hybrid Diffusion Imaging\u201d, IEEE\nTRANSACTIONS ON MEDICAL IMAGING, vol. 27, No. 6, p. 858-865, 2008.</p>\n</div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  2.959 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-07-reconstruction-reconst-shore-metrics-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/d753b96099db6edf53dffeceaa6372d9/reconst_shore_metrics.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">reconst_shore_metrics.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/208c6796de9c682de884919fc8ebaeab/reconst_shore_metrics.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">reconst_shore_metrics.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples_built/07_reconstruction/reconst_gqi", "Reconstruct with Generalized Q-Sampling Imaging", "N", "next"], ["examples_built/07_reconstruction/reconst_dsid", "DSI Deconvolution vs DSI", "P", "previous"]], "sourcename": "examples_built/07_reconstruction/reconst_shore_metrics.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Calculate SHORE scalar maps</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/07_reconstruction/reconst_shore_metrics", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}