{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "Examples"}, {"link": "../", "title": "Reconstruction"}], "prev": {"link": "../reconst_qtiplus/", "title": "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)"}, "next": {"link": "../reconst_dsi/", "title": "Reconstruct with Diffusion Spectrum Imaging"}, "title": "Continuous and analytical diffusion signal modelling with 3D-SHORE", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-07-reconstruction-reconst-shore-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"continuous-and-analytical-diffusion-signal-modelling-with-3d-shore\">\n<span id=\"sphx-glr-examples-built-07-reconstruction-reconst-shore-py\"></span><h1>Continuous and analytical diffusion signal modelling with 3D-SHORE<a class=\"headerlink\" href=\"#continuous-and-analytical-diffusion-signal-modelling-with-3d-shore\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>We show how to model the diffusion signal as a linear combination\nof continuous functions from the SHORE basis <a class=\"reference internal\" href=\"#merlet2013\" id=\"id1\"><span>[Merlet2013]</span></a>, <a class=\"reference internal\" href=\"#ozarslan2008\" id=\"id2\"><span>[\u00d6zarslan2008]</span></a>,\n<a class=\"reference internal\" href=\"#ozarslan2009\" id=\"id3\"><span>[\u00d6zarslan2009]</span></a>. We also compute the analytical Orientation Distribution\nFunction (ODF).</p>\n<p>First import the necessary modules:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.shore</span> <span class=\"kn\">import</span> <span class=\"n\">ShoreModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span><span class=\"p\">,</span> <span class=\"n\">get_sphere</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"kn\">import</span> <span class=\"n\">load_nifti</span>\n</pre></div>\n</div>\n<p>Download and read the data for this tutorial.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">fetch_isbi2013_2shell()</span></code> provides data from the <a class=\"reference external\" href=\"http://hardi.epfl.ch/static/events/2013_ISBI/\">ISBI HARDI contest 2013</a> acquired for two shells at\nb-values 1500 <span class=\"math notranslate nohighlight\">\\(s/mm^2\\)</span> and 2500 <span class=\"math notranslate nohighlight\">\\(s/mm^2\\)</span>.</p>\n<p>The six parameters of these two functions define the ROI where to reconstruct\nthe data. They respectively correspond to <code class=\"docutils literal notranslate\"><span class=\"pre\">(xmin,xmax,ymin,ymax,zmin,zmax)</span></code>\nwith x, y, z and the three axis defining the spatial positions of the voxels.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fraw</span><span class=\"p\">,</span> <span class=\"n\">fbval</span><span class=\"p\">,</span> <span class=\"n\">fbvec</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;isbi2013_2shell&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">fraw</span><span class=\"p\">)</span>\n<span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">fbval</span><span class=\"p\">,</span> <span class=\"n\">fbvec</span><span class=\"p\">)</span>\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n<span class=\"n\">data_small</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;data.shape (</span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>data.shape (50, 50, 50, 64)\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">data</span></code> contains the voxel data and <code class=\"docutils literal notranslate\"><span class=\"pre\">gtab</span></code> contains a <code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable</span></code>\nobject (gradient information e.g. b-values). For example, to show the b-values\nit is possible to write:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"o\">.</span><span class=\"n\">bvals</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Instantiate the SHORE Model.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">radial_order</span></code> is the radial order of the SHORE basis.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">zeta</span></code> is the scale factor of the SHORE basis.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">lambdaN</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">lambdaL</span></code> are the radial and angular regularization\nconstants, respectively.</p>\n<p>For details regarding these four parameters see <a class=\"reference internal\" href=\"#cheng2011\" id=\"id4\"><span>[Cheng2011]</span></a> and <a class=\"reference internal\" href=\"#merlet2013\" id=\"id5\"><span>[Merlet2013]</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">radial_order</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n<span class=\"n\">zeta</span> <span class=\"o\">=</span> <span class=\"mi\">700</span>\n<span class=\"n\">lambdaN</span> <span class=\"o\">=</span> <span class=\"mf\">1e-8</span>\n<span class=\"n\">lambdaL</span> <span class=\"o\">=</span> <span class=\"mf\">1e-8</span>\n<span class=\"n\">asm</span> <span class=\"o\">=</span> <span class=\"n\">ShoreModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">radial_order</span><span class=\"o\">=</span><span class=\"n\">radial_order</span><span class=\"p\">,</span>\n                 <span class=\"n\">zeta</span><span class=\"o\">=</span><span class=\"n\">zeta</span><span class=\"p\">,</span> <span class=\"n\">lambdaN</span><span class=\"o\">=</span><span class=\"n\">lambdaN</span><span class=\"p\">,</span> <span class=\"n\">lambdaL</span><span class=\"o\">=</span><span class=\"n\">lambdaL</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Fit the SHORE model to the data</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">asmfit</span> <span class=\"o\">=</span> <span class=\"n\">asm</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data_small</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>  0%|          | 0/900 [00:00&lt;?, ?it/s]\n 30%|###       | 274/900 [00:00&lt;00:00, 2734.45it/s]\n 66%|######5   | 593/900 [00:00&lt;00:00, 3000.43it/s]\n100%|##########| 900/900 [00:00&lt;00:00, 3061.28it/s]\n</pre></div>\n</div>\n<p>Load an odf reconstruction sphere</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;repulsion724&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Compute the ODFs</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">odf</span> <span class=\"o\">=</span> <span class=\"n\">asmfit</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf.shape (</span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">odf</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>odf.shape (30, 30, 724)\n</pre></div>\n</div>\n<p>Display the ODFs</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Enables/disables interactive visualization</span>\n<span class=\"n\">interactive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">sfu</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">odf_slicer</span><span class=\"p\">(</span><span class=\"n\">odf</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"s1\">&#39;plasma&#39;</span><span class=\"p\">,</span>\n                       <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">sfu</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">sfu</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">sfu</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;odfs.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_reconst_shore_001.png\" srcset=\"../../_images/sphx_glr_reconst_shore_001.png\" alt=\"reconst shore\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id6\">\n<img alt=\"examples_built/07_reconstruction/odfs.png\" src=\"examples_built/07_reconstruction/odfs.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Orientation distribution functions.</span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<section id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"ozarslan2008\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id2\">\u00d6zarslan2008</a><span class=\"fn-bracket\">]</span></span>\n<p>\u00d6zarslan E. et al., \u201cSimple harmonic oscillator based\nestimation and reconstruction for one-dimensional q-space MR,\u201d in Proc Intl\nSoc Mag Reson Med, 16, Toronto, Canada, 2008</p>\n</div>\n<div class=\"citation\" id=\"ozarslan2009\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id3\">\u00d6zarslan2009</a><span class=\"fn-bracket\">]</span></span>\n<p>\u00d6zarslan E. et al., \u201cSimple harmonic oscillator based\nreconstruction and estimation for three-dimensional q-space MRI,\u201d in Proc\nIntl Soc Mag Reson Med, 17, Honolulu, HI, 2009</p>\n</div>\n<div class=\"citation\" id=\"merlet2013\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Merlet2013<span class=\"fn-bracket\">]</span></span>\n<span class=\"backrefs\">(<a role=\"doc-backlink\" href=\"#id1\">1</a>,<a role=\"doc-backlink\" href=\"#id5\">2</a>)</span>\n<p>Merlet S. et al., \u201cContinuous diffusion signal, EAP and ODF\nestimation via Compressive Sensing in diffusion MRI\u201d, Medical Image\nAnalysis, 2013.</p>\n</div>\n<div class=\"citation\" id=\"cheng2011\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id4\">Cheng2011</a><span class=\"fn-bracket\">]</span></span>\n<p>Cheng J. et al., \u201cTheoretical Analysis and Practical Insights on\nEAP Estimation via Unified HARDI Framework\u201d, MICCAI workshop on\nComputational Diffusion MRI, 2011.</p>\n</div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  1.426 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-07-reconstruction-reconst-shore-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/d10c20be1d0c54a4bf0c8da08895ac17/reconst_shore.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">reconst_shore.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/73f86f34eabc90f53f384927901ff821/reconst_shore.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">reconst_shore.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples_built/07_reconstruction/reconst_dsi", "Reconstruct with Diffusion Spectrum Imaging", "N", "next"], ["examples_built/07_reconstruction/reconst_qtiplus", "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)", "P", "previous"]], "sourcename": "examples_built/07_reconstruction/reconst_shore.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Continuous and analytical diffusion signal modelling with 3D-SHORE</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/07_reconstruction/reconst_shore", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}