{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "Examples"}, {"link": "../", "title": "Registration"}], "prev": {"link": "../bundle_group_registration/", "title": "Groupwise Bundle Registration"}, "next": {"link": "../syn_registration_3d/", "title": "Symmetric Diffeomorphic Registration in 3D"}, "title": "Direct Bundle Registration", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-20-registration-bundle-registration-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"direct-bundle-registration\">\n<span id=\"sphx-glr-examples-built-20-registration-bundle-registration-py\"></span><h1>Direct Bundle Registration<a class=\"headerlink\" href=\"#direct-bundle-registration\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>This example explains how you can register two bundles from two different\nsubjects directly in the space of streamlines <a class=\"reference internal\" href=\"#garyfallidis15\" id=\"id1\"><span>[Garyfallidis15]</span></a>, <a class=\"reference internal\" href=\"#garyfallidis14\" id=\"id2\"><span>[Garyfallidis14]</span></a>.</p>\n<p>To show the concept we will use two pre-saved cingulum bundles. The algorithm\nused here is called Streamline-based Linear Registration (SLR) <a class=\"reference internal\" href=\"#garyfallidis15\" id=\"id3\"><span>[Garyfallidis15]</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">two_cingulum_bundles</span>\n\n<span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"n\">cb_subj2</span> <span class=\"o\">=</span> <span class=\"n\">two_cingulum_bundles</span><span class=\"p\">()</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.align.streamlinear</span> <span class=\"kn\">import</span> <span class=\"n\">StreamlineLinearRegistration</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"kn\">import</span> <span class=\"n\">set_number_of_points</span>\n</pre></div>\n</div>\n<p>An important step before running the registration is to resample the\nstreamlines so that they both have the same number of points per streamline.\nHere we will use 20 points. This step is not optional. Inputting streamlines\nwith a different number of points will break the theoretical advantages of using\nthe SLR as explained in <a class=\"reference internal\" href=\"#garyfallidis15\" id=\"id4\"><span>[Garyfallidis15]</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cb_subj1</span> <span class=\"o\">=</span> <span class=\"n\">set_number_of_points</span><span class=\"p\">(</span><span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">cb_subj2</span> <span class=\"o\">=</span> <span class=\"n\">set_number_of_points</span><span class=\"p\">(</span><span class=\"n\">cb_subj2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Let\u2019s say now that we want to move the <code class=\"docutils literal notranslate\"><span class=\"pre\">cb_subj2</span></code> (moving) so that it can be\naligned with <code class=\"docutils literal notranslate\"><span class=\"pre\">cb_subj1</span></code> (static). Here is how this is done.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">srr</span> <span class=\"o\">=</span> <span class=\"n\">StreamlineLinearRegistration</span><span class=\"p\">()</span>\n\n<span class=\"n\">srm</span> <span class=\"o\">=</span> <span class=\"n\">srr</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"o\">=</span><span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"o\">=</span><span class=\"n\">cb_subj2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>After the optimization is finished we can apply the transformation to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cb_subj2</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cb_subj2_aligned</span> <span class=\"o\">=</span> <span class=\"n\">srm</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">cb_subj2</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">show_both_bundles</span><span class=\"p\">(</span><span class=\"n\">bundles</span><span class=\"p\">,</span> <span class=\"n\">colors</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n\n    <span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n    <span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">SetBackground</span><span class=\"p\">(</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">bundle</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">bundles</span><span class=\"p\">):</span>\n        <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">colors</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"n\">lines_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">streamtube</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n        <span class=\"n\">lines_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n        <span class=\"n\">lines_actor</span><span class=\"o\">.</span><span class=\"n\">RotateZ</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n        <span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">lines_actor</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">show</span><span class=\"p\">:</span>\n        <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">fname</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">900</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">show_both_bundles</span><span class=\"p\">([</span><span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"n\">cb_subj2</span><span class=\"p\">],</span>\n                  <span class=\"n\">colors</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">orange</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">],</span>\n                  <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                  <span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"s1\">&#39;before_registration.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_bundle_registration_001.png\" srcset=\"../../_images/sphx_glr_bundle_registration_001.png\" alt=\"bundle registration\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id5\">\n<img alt=\"examples_built/20_registration/before_registration.png\" src=\"examples_built/20_registration/before_registration.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Before bundle registration.</span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">show_both_bundles</span><span class=\"p\">([</span><span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"n\">cb_subj2_aligned</span><span class=\"p\">],</span>\n                  <span class=\"n\">colors</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">orange</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">],</span>\n                  <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                  <span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"s1\">&#39;after_registration.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_bundle_registration_002.png\" srcset=\"../../_images/sphx_glr_bundle_registration_002.png\" alt=\"bundle registration\" class = \"sphx-glr-single-img\"/><figure class=\"align-center\" id=\"id6\">\n<img alt=\"examples_built/20_registration/after_registration.png\" src=\"examples_built/20_registration/after_registration.png\" />\n<figcaption>\n<p><span class=\"caption-text\">After bundle registration.</span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>As you can see the two cingulum bundles are well aligned although they contain\nmany streamlines of different lengths and shapes.</p>\n<p>Streamline-based Linear Registration (SLR) is a method which given two sets of\nstreamlines (fixed and moving) and a streamline-based cost function, will\nminimize the cost function and transform the moving set of streamlines (target)\nto the fixed (reference), so that they maximally overlap under the condition\nthat the transform stays linear.</p>\n<p>We denote a single streamline with s and a set of streamlines with S.\nA streamline s is an ordered sequence of line segments connecting 3D vector\npoints <span class=\"math notranslate nohighlight\">\\(\\mathbf{x}_{k} \\in \\mathbb{R}^{3}\\)</span> with <span class=\"math notranslate nohighlight\">\\(k \\in[1, K]\\)</span> where K is the\ntotal number of points of streamline s. Given two bundles(two sets of\nstreamlines), we denote <span class=\"math notranslate nohighlight\">\\(S_{a}=\\left\\{s_{1}^{a}, \\ldots, S_{A}^{a}\\right\\}\\)</span> and\n<span class=\"math notranslate nohighlight\">\\(S_{b}=\\left\\{s_{1}^{b}, \\ldots, s_{B}^{b}\\right\\}\\)</span>, where A and B are the\ntotal numbers of streamlines in each set respectively. We want to minimize a\ncost function so that we can align the two sets together. For this purpose, we\nintroduce a new cost function, the Bundle-based Minimum Distance (BMD), which\nis defined as:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\begin{split}\\operatorname{BMD}\\left(S_{a}, S_{b}\\right)=\\frac{1}{4}\\left(\\frac{1}{A} \\\\\n    \\sum_{i=1}^{A} \\min _{j} D(i, j)+\\frac{1}{B} \\sum_{j=1}^{B} \\\\\n    \\min _{i} D(i, j)\\right)^{2}\\end{split}\\]</div>\n<p>where D is the rectangular matrix given by all pairwise Minimum average\nDirect-Flip (MDF) streamline distances (Garyfallidis et al., 2012). Therefore,\nevery element of matrix D is equal to\n<span class=\"math notranslate nohighlight\">\\(D_{i j}=M D F\\left(s^{a}{ }_{i}, s^{b}{ }_{j}\\right)\\)</span>.</p>\n<p>Notice, how in Eq. (1), the most similar streamlines from one streamline set\nto the other are weighted more by averaging the minimum values of the rows\nand columns of matrix D. This makes our method robust to fanning streamlines\nnear endpoints of bundles and spurious streamlines if any in the bundle. The\nMDF is a symmetric distance between two individual streamlines. It was\nprimarily used for clustering (Garyfallidis et al., 2010; Visser et al., 2011)\nand tractography simplification (see Garyfallidis et al., 2012). This distance\ncan be applied only when both streamlines have the same number of points.\nTherefore we assume from now on that an initial interpolation of streamlines\nhas been applied, so that all streamlines have the same number of points K,\nand all segments of each streamline have equal length. The length of each\nsegment is equal to the length of the streamline divided by the number of\nsegments <span class=\"math notranslate nohighlight\">\\((K-1)\\)</span>. This is achieved by a simple linear interpolation with the\nstarting and ending points of the streamlines intact. When K is small, the\ninterpolation provides a rough representation of the streamline, but as K\nbecomes larger and larger the shape of the interpolated streamline becomes\nidentical with the shape of the initial streamline. Under this assumption, the\nMDF for two streamlines <span class=\"math notranslate nohighlight\">\\(S_{a}\\)</span> and <span class=\"math notranslate nohighlight\">\\(S_{b}\\)</span> is defined as:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\begin{split}\\operatorname{MDF}\\left(s_{i}^{a}, s_{j}^{b}\\right)=\\min \\\\\n    \\left(d_{\\text {direct }}\\left(s_{i}^{a}, s_{j}^{b}\\right), \\\\\n    d_{\\text {flipped }}\\left(s_{i}^{a}, s_{j}^{b}\\right)\\right)\\end{split}\\]</div>\n<p>where <span class=\"math notranslate nohighlight\">\\(d_{\\text {direct }}\\)</span> is the direct distance which is defined as:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\begin{split}d_{\\text {direct }}\\left(s_{i}^{a}, s_{j}^{b}\\right)=\\frac{1}{K} \\\\\n    \\sum_{k=1}^{K}\\left\\|\\mathbf{x}_{k}^{a}-\\mathbf{x}_{k}^{b}\\right\\|_{2}\\end{split}\\]</div>\n<p>where <span class=\"math notranslate nohighlight\">\\(x_{k}^{a}\\)</span> is the k-th point of streamline <span class=\"math notranslate nohighlight\">\\(S_{i}^{a}\\)</span> and <span class=\"math notranslate nohighlight\">\\(x_{k}^{b}\\)</span>\nis the k-th point of streamline <span class=\"math notranslate nohighlight\">\\(S_{j}^{b}\\)</span>. <span class=\"math notranslate nohighlight\">\\(d_{\\text {flipped }}\\)</span> is the one\nof the streamlines flipped and it is defined as:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\begin{split}d_{\\text {flipped }}\\left(s_{i}^{a}, s_{j}^{b}\\right)=\\frac{1}{K} \\\\\n    \\sum_{k=1}^{K}\\left\\|\\mathbf{x}_{k}^{a}-\\mathbf{x}_{K-k+1}^{b}\\\\\n    \\right\\|_{2}\\end{split}\\]</div>\n<p>and K is the total number of points in <span class=\"math notranslate nohighlight\">\\(x^{a}\\)</span> and <span class=\"math notranslate nohighlight\">\\(x^{b}\\)</span>.\nThe MDF has two very useful properties. First, it takes into consideration that\nstreamlines have no preferred orientation. Second, it is a mathematically sound\nmetric distance in the space of streamlines as proved in Garyfallidis et al.\n(2012). This means that the MDF is nonnegative, 0 only when both streamlines\nare identical, symmetric and it satisfies the triangle inequality. Now that we\nhave defined our cost function in Eq. (1) we can formulate the following\noptimization problem. Given a fixed bundle S and a moving bundle M we would\nlike to find the vector of parameters t which transforms M to S using a linear\ntransformation T so that BMD is minimum:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\begin{split}\\operatorname{SLR}(S, M)=\\\\underset{\\mathbf{t}}{\\operatorname{argmin}} \\\\\n    \\operatorname{BMD}(S, T(M, \\mathbf{t}))\\end{split}\\]</div>\n<p>Here, <span class=\"math notranslate nohighlight\">\\(\\mathbf{t}\\)</span> is a vector in <span class=\"math notranslate nohighlight\">\\(\\mathbb{R}^{n}\\)</span> holding the parameters of\nthe linear transform where n = 12 for affine or n = 6 for rigid registration.\nFrom this vector we can then compose the transformation matrix which is applied\nto all the points of bundle M.</p>\n<section id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"garyfallidis15\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis15<span class=\"fn-bracket\">]</span></span>\n<span class=\"backrefs\">(<a role=\"doc-backlink\" href=\"#id1\">1</a>,<a role=\"doc-backlink\" href=\"#id3\">2</a>,<a role=\"doc-backlink\" href=\"#id4\">3</a>)</span>\n<p>Garyfallidis et al., \u201cRobust and efficient linear\nregistration of white-matter fascicles in the space\nof streamlines\u201d, Neuroimage, 117:124-140, 2015.</p>\n</div>\n<div class=\"citation\" id=\"garyfallidis14\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id2\">Garyfallidis14</a><span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis et al., \u201cDirect native-space fiber bundle\nalignment for group comparisons\u201d, ISMRM, 2014.</p>\n</div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  2.323 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-20-registration-bundle-registration-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/deebe9b43217ccf52e460eb0188af816/bundle_registration.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">bundle_registration.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/265002e69ebe1f77b6393128f0fe3530/bundle_registration.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">bundle_registration.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples_built/20_registration/syn_registration_3d", "Symmetric Diffeomorphic Registration in 3D", "N", "next"], ["examples_built/20_registration/bundle_group_registration", "Groupwise Bundle Registration", "P", "previous"]], "sourcename": "examples_built/20_registration/bundle_registration.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Direct Bundle Registration</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/20_registration/bundle_registration", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}