{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "Examples"}, {"link": "../", "title": "Registration"}], "prev": {"link": "../streamline_registration/", "title": "Applying image-based deformations to streamlines"}, "next": {"link": "../../23_segmentation/", "title": "Segmentation"}, "title": "Affine Registration in 3D", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-20-registration-affine-registration-3d-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"affine-registration-in-3d\">\n<span id=\"sphx-glr-examples-built-20-registration-affine-registration-3d-py\"></span><h1>Affine Registration in 3D<a class=\"headerlink\" href=\"#affine-registration-in-3d\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>This example explains how to compute an affine transformation to register two\n3D volumes by maximization of their Mutual Information <a class=\"reference internal\" href=\"../affine_registration_masks/#mattes03\" id=\"id1\"><span>[Mattes03]</span></a>. The\noptimization strategy is similar to that implemented in ANTS <a class=\"reference internal\" href=\"../syn_registration_3d/#avants11\" id=\"id2\"><span>[Avants11]</span></a>.</p>\n<p>We will do this twice. The first part of this tutorial will walk through the\ndetails of the process with the object-oriented interface implemented in\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy.align</span></code> module. The second part will use a simplified functional\ninterface.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"kn\">import</span> <span class=\"n\">join</span> <span class=\"k\">as</span> <span class=\"n\">pjoin</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">regtools</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">fetch_stanford_hardi</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data.fetcher</span> <span class=\"kn\">import</span> <span class=\"n\">fetch_syn_data</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"kn\">import</span> <span class=\"n\">load_nifti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.align.imaffine</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">transform_centers_of_mass</span><span class=\"p\">,</span>\n                                 <span class=\"n\">AffineMap</span><span class=\"p\">,</span>\n                                 <span class=\"n\">MutualInformationMetric</span><span class=\"p\">,</span>\n                                 <span class=\"n\">AffineRegistration</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.align.transforms</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">TranslationTransform3D</span><span class=\"p\">,</span>\n                                   <span class=\"n\">RigidTransform3D</span><span class=\"p\">,</span>\n                                   <span class=\"n\">AffineTransform3D</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Let\u2019s fetch two b0 volumes, the static image will be the b0 from the Stanford\nHARDI dataset</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">files</span><span class=\"p\">,</span> <span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">fetch_stanford_hardi</span><span class=\"p\">()</span>\n<span class=\"n\">static_data</span><span class=\"p\">,</span> <span class=\"n\">static_affine</span><span class=\"p\">,</span> <span class=\"n\">static_img</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span>\n                                            <span class=\"n\">pjoin</span><span class=\"p\">(</span><span class=\"n\">folder</span><span class=\"p\">,</span> <span class=\"s1\">&#39;HARDI150.nii.gz&#39;</span><span class=\"p\">),</span>\n                                            <span class=\"n\">return_img</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">static</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">squeeze</span><span class=\"p\">(</span><span class=\"n\">static_data</span><span class=\"p\">)[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">static_grid2world</span> <span class=\"o\">=</span> <span class=\"n\">static_affine</span>\n</pre></div>\n</div>\n<p>Now the moving image</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">files</span><span class=\"p\">,</span> <span class=\"n\">folder2</span> <span class=\"o\">=</span> <span class=\"n\">fetch_syn_data</span><span class=\"p\">()</span>\n<span class=\"n\">moving_data</span><span class=\"p\">,</span> <span class=\"n\">moving_affine</span><span class=\"p\">,</span> <span class=\"n\">moving_img</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span>\n                                            <span class=\"n\">pjoin</span><span class=\"p\">(</span><span class=\"n\">folder2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b0.nii.gz&#39;</span><span class=\"p\">),</span>\n                                            <span class=\"n\">return_img</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">moving</span> <span class=\"o\">=</span> <span class=\"n\">moving_data</span>\n<span class=\"n\">moving_grid2world</span> <span class=\"o\">=</span> <span class=\"n\">moving_affine</span>\n</pre></div>\n</div>\n<p>We can see that the images are far from aligned by drawing one on top of\nthe other. The images don\u2019t even have the same number of voxels, so in order\nto draw one on top of the other we need to resample the moving image on a grid\nof the same dimensions as the static image, we can do this by \u201ctransforming\u201d\nthe moving image using an identity transform</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">identity</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">affine_map</span> <span class=\"o\">=</span> <span class=\"n\">AffineMap</span><span class=\"p\">(</span><span class=\"n\">identity</span><span class=\"p\">,</span>\n                       <span class=\"n\">static</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">static_grid2world</span><span class=\"p\">,</span>\n                       <span class=\"n\">moving</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">moving_grid2world</span><span class=\"p\">)</span>\n<span class=\"n\">resampled</span> <span class=\"o\">=</span> <span class=\"n\">affine_map</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">resampled</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Moving&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;resampled_0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">resampled</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Moving&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;resampled_1.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">resampled</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Moving&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;resampled_2.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_001.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_001.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_002.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_002.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_003.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_003.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n</ul>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/resampled_0.png\" src=\"examples_built/20_registration/resampled_0.png\" />\n</figure>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/resampled_1.png\" src=\"examples_built/20_registration/resampled_1.png\" />\n</figure>\n<figure class=\"align-center\" id=\"id4\">\n<img alt=\"examples_built/20_registration/resampled_2.png\" src=\"examples_built/20_registration/resampled_2.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Input images before alignment.</span><a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>We can obtain a very rough (and fast) registration by just aligning the centers\nof mass of the two images</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">c_of_mass</span> <span class=\"o\">=</span> <span class=\"n\">transform_centers_of_mass</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">static_grid2world</span><span class=\"p\">,</span>\n                                      <span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"n\">moving_grid2world</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We can now transform the moving image and draw it on top of the static image,\nregistration is not likely to be good, but at least they will occupy roughly\nthe same space</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">transformed</span> <span class=\"o\">=</span> <span class=\"n\">c_of_mass</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_com_0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_com_1.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_com_2.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_004.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_004.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_005.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_005.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_006.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_006.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n</ul>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/transformed_com_0.png\" src=\"examples_built/20_registration/transformed_com_0.png\" />\n</figure>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/transformed_com_1.png\" src=\"examples_built/20_registration/transformed_com_1.png\" />\n</figure>\n<figure class=\"align-center\" id=\"id5\">\n<img alt=\"examples_built/20_registration/transformed_com_2.png\" src=\"examples_built/20_registration/transformed_com_2.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Registration result by aligning the centers of mass of the images.</span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>This was just a translation of the moving image towards the static image, now\nwe will refine it by looking for an affine transform. We first create the\nsimilarity metric (Mutual Information) to be used. We need to specify the\nnumber of bins to be used to discretize the joint and marginal probability\ndistribution functions (PDF), a typical value is 32. We also need to specify\nthe percentage (an integer in (0, 100]) of voxels to be used for computing the\nPDFs, the most accurate registration will be obtained by using all voxels, but\nit is also the most time-consuming choice. We specify full sampling by passing\nNone instead of an integer</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">nbins</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>\n<span class=\"n\">sampling_prop</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">MutualInformationMetric</span><span class=\"p\">(</span><span class=\"n\">nbins</span><span class=\"p\">,</span> <span class=\"n\">sampling_prop</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>To avoid getting stuck at local optima, and to accelerate convergence, we use a\nmulti-resolution strategy (similar to ANTS <a class=\"reference internal\" href=\"../syn_registration_3d/#avants11\" id=\"id3\"><span>[Avants11]</span></a>) by building a Gaussian\nPyramid. To have as much flexibility as possible, the user can specify how this\nGaussian Pyramid is built. First of all, we need to specify how many\nresolutions we want to use. This is indirectly specified by just providing a\nlist of the number of iterations we want to perform at each resolution. Here we\nwill just specify 3 resolutions and a large number of iterations, 10000 at the\ncoarsest resolution, 1000 at the medium resolution and 100 at the finest. These\nare the default settings</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">level_iters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">10000</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>To compute the Gaussian pyramid, the original image is first smoothed at each\nlevel of the pyramid using a Gaussian kernel with the requested sigma. A good\ninitial choice is [3.0, 1.0, 0.0], this is the default</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sigmas</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Now we specify the sub-sampling factors. A good configuration is [4, 2, 1],\nwhich means that, if the original image shape was (nx, ny, nz) voxels, then the\nshape of the coarsest image will be about (nx//4, ny//4, nz//4), the shape in\nthe middle resolution will be about (nx//2, ny//2, nz//2) and the image at the\nfinest scale has the same size as the original image. This set of factors is\nthe default</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">factors</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Now we go ahead and instantiate the registration class with the configuration\nwe just prepared</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">affreg</span> <span class=\"o\">=</span> <span class=\"n\">AffineRegistration</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">,</span>\n                            <span class=\"n\">level_iters</span><span class=\"o\">=</span><span class=\"n\">level_iters</span><span class=\"p\">,</span>\n                            <span class=\"n\">sigmas</span><span class=\"o\">=</span><span class=\"n\">sigmas</span><span class=\"p\">,</span>\n                            <span class=\"n\">factors</span><span class=\"o\">=</span><span class=\"n\">factors</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Using AffineRegistration we can register our images in as many stages as we\nwant, providing previous results as initialization for the next (the same logic\nas in ANTS). The reason why it is useful is that registration is a non-convex\noptimization problem (it may have more than one local optima), which means that\nit is very important to initialize as close to the solution as possible. For\nexample, let\u2019s start with our (previously computed) rough transformation\naligning the centers of mass of our images, and then refine it in three stages.\nFirst look for an optimal translation. The dictionary regtransforms contains\nall available transforms, we obtain one of them by providing its name and the\ndimension (either 2 or 3) of the image we are working with (since we are\naligning volumes, the dimension is 3)</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"n\">TranslationTransform3D</span><span class=\"p\">()</span>\n<span class=\"n\">params0</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">starting_affine</span> <span class=\"o\">=</span> <span class=\"n\">c_of_mass</span><span class=\"o\">.</span><span class=\"n\">affine</span>\n<span class=\"n\">translation</span> <span class=\"o\">=</span> <span class=\"n\">affreg</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"p\">,</span> <span class=\"n\">params0</span><span class=\"p\">,</span>\n                              <span class=\"n\">static_grid2world</span><span class=\"p\">,</span> <span class=\"n\">moving_grid2world</span><span class=\"p\">,</span>\n                              <span class=\"n\">starting_affine</span><span class=\"o\">=</span><span class=\"n\">starting_affine</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Optimizing level 2 [max iter: 10000]\nOptimizing level 1 [max iter: 1000]\nOptimizing level 0 [max iter: 100]\n</pre></div>\n</div>\n<p>If we look at the result, we can see that this translation is much better than\nsimply aligning the centers of mass</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">transformed</span> <span class=\"o\">=</span> <span class=\"n\">translation</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_trans_0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_trans_1.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_trans_2.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_007.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_007.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_008.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_008.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_009.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_009.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n</ul>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/transformed_trans_0.png\" src=\"examples_built/20_registration/transformed_trans_0.png\" />\n</figure>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/transformed_trans_1.png\" src=\"examples_built/20_registration/transformed_trans_1.png\" />\n</figure>\n<figure class=\"align-center\" id=\"id6\">\n<img alt=\"examples_built/20_registration/transformed_trans_2.png\" src=\"examples_built/20_registration/transformed_trans_2.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Registration result by translating the moving image, using\nMutual Information.</span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>Now let\u2019s refine with a rigid transform (this may even modify our previously\nfound optimal translation)</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"n\">RigidTransform3D</span><span class=\"p\">()</span>\n<span class=\"n\">params0</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">starting_affine</span> <span class=\"o\">=</span> <span class=\"n\">translation</span><span class=\"o\">.</span><span class=\"n\">affine</span>\n<span class=\"n\">rigid</span> <span class=\"o\">=</span> <span class=\"n\">affreg</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"p\">,</span> <span class=\"n\">params0</span><span class=\"p\">,</span>\n                        <span class=\"n\">static_grid2world</span><span class=\"p\">,</span> <span class=\"n\">moving_grid2world</span><span class=\"p\">,</span>\n                        <span class=\"n\">starting_affine</span><span class=\"o\">=</span><span class=\"n\">starting_affine</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Optimizing level 2 [max iter: 10000]\nOptimizing level 1 [max iter: 1000]\nOptimizing level 0 [max iter: 100]\n</pre></div>\n</div>\n<p>This produces a slight rotation, and the images are now better aligned</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">transformed</span> <span class=\"o\">=</span> <span class=\"n\">rigid</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_rigid_0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_rigid_1.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_rigid_2.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_010.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_010.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_011.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_011.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_012.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_012.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n</ul>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/transformed_rigid_0.png\" src=\"examples_built/20_registration/transformed_rigid_0.png\" />\n</figure>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/transformed_rigid_1.png\" src=\"examples_built/20_registration/transformed_rigid_1.png\" />\n</figure>\n<figure class=\"align-center\" id=\"id7\">\n<img alt=\"examples_built/20_registration/transformed_rigid_2.png\" src=\"examples_built/20_registration/transformed_rigid_2.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Registration result with a rigid transform, using Mutual Information.</span><a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>Finally, let\u2019s refine with a full affine transform (translation, rotation, scale\nand shear), it is safer to fit more degrees of freedom now since we must be\nvery close to the optimal transform</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"n\">AffineTransform3D</span><span class=\"p\">()</span>\n<span class=\"n\">params0</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">starting_affine</span> <span class=\"o\">=</span> <span class=\"n\">rigid</span><span class=\"o\">.</span><span class=\"n\">affine</span>\n<span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">affreg</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"p\">,</span> <span class=\"n\">params0</span><span class=\"p\">,</span>\n                         <span class=\"n\">static_grid2world</span><span class=\"p\">,</span> <span class=\"n\">moving_grid2world</span><span class=\"p\">,</span>\n                         <span class=\"n\">starting_affine</span><span class=\"o\">=</span><span class=\"n\">starting_affine</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Optimizing level 2 [max iter: 10000]\nOptimizing level 1 [max iter: 1000]\nOptimizing level 0 [max iter: 100]\n</pre></div>\n</div>\n<p>This results in a slight shear and scale</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">transformed</span> <span class=\"o\">=</span> <span class=\"n\">affine</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_affine_0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_affine_1.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">transformed</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;transformed_affine_2.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_013.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_013.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_014.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_014.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_015.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_015.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n</ul>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/transformed_affine_0.png\" src=\"examples_built/20_registration/transformed_affine_0.png\" />\n</figure>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/transformed_affine_1.png\" src=\"examples_built/20_registration/transformed_affine_1.png\" />\n</figure>\n<figure class=\"align-center\" id=\"id8\">\n<img alt=\"examples_built/20_registration/transformed_affine_2.png\" src=\"examples_built/20_registration/transformed_affine_2.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Registration result with an affine transform, using Mutual Information.</span><a class=\"headerlink\" href=\"#id8\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>Now, let\u2019s repeat this process with a simplified functional interface:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.align</span> <span class=\"kn\">import</span> <span class=\"n\">affine_registration</span><span class=\"p\">,</span> <span class=\"n\">register_dwi_to_template</span>\n</pre></div>\n</div>\n<p>This interface constructs a pipeline of operations from a given list of\ntransformations.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pipeline</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;center_of_mass&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;translation&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rigid&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;affine&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>And then applies the transformations in the pipeline on the input (from left to\nright) with a call to an <cite>affine_registration</cite> function, which takes optional\nsettings for things like the iterations, sigmas and factors. The pipeline must\nbe a list of strings with one or more of the following transformations:\ncenter_of_mass, translation, rigid, rigid_isoscaling, rigid_scaling and affine.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">xformed_img</span><span class=\"p\">,</span> <span class=\"n\">reg_affine</span> <span class=\"o\">=</span> <span class=\"n\">affine_registration</span><span class=\"p\">(</span>\n    <span class=\"n\">moving</span><span class=\"p\">,</span>\n    <span class=\"n\">static</span><span class=\"p\">,</span>\n    <span class=\"n\">moving_affine</span><span class=\"o\">=</span><span class=\"n\">moving_affine</span><span class=\"p\">,</span>\n    <span class=\"n\">static_affine</span><span class=\"o\">=</span><span class=\"n\">static_affine</span><span class=\"p\">,</span>\n    <span class=\"n\">nbins</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span>\n    <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;MI&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pipeline</span><span class=\"o\">=</span><span class=\"n\">pipeline</span><span class=\"p\">,</span>\n    <span class=\"n\">level_iters</span><span class=\"o\">=</span><span class=\"n\">level_iters</span><span class=\"p\">,</span>\n    <span class=\"n\">sigmas</span><span class=\"o\">=</span><span class=\"n\">sigmas</span><span class=\"p\">,</span>\n    <span class=\"n\">factors</span><span class=\"o\">=</span><span class=\"n\">factors</span><span class=\"p\">)</span>\n\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">xformed_img</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;xformed_affine_0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">xformed_img</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;xformed_affine_1.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">xformed_img</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;xformed_affine_2.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_016.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_016.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_017.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_017.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_018.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_018.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n</ul>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Optimizing level 2 [max iter: 10000]\nOptimizing level 1 [max iter: 1000]\nOptimizing level 0 [max iter: 100]\nOptimizing level 2 [max iter: 10000]\nOptimizing level 1 [max iter: 1000]\nOptimizing level 0 [max iter: 100]\nOptimizing level 2 [max iter: 10000]\nOptimizing level 1 [max iter: 1000]\nOptimizing level 0 [max iter: 100]\n\n&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/xformed_affine_0.png\" src=\"examples_built/20_registration/xformed_affine_0.png\" />\n</figure>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/xformed_affine_1.png\" src=\"examples_built/20_registration/xformed_affine_1.png\" />\n</figure>\n<figure class=\"align-center\" id=\"id9\">\n<img alt=\"examples_built/20_registration/xformed_affine_2.png\" src=\"examples_built/20_registration/xformed_affine_2.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Registration result with an affine transform, using functional interface.</span><a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>Alternatively, you can also use the <cite>register_dwi_to_template</cite> function that\nneeds to also know about the gradient table of the DWI data, provided as a\ntuple of (bvals_file, bvecs_file). In this case, we are going to move the\ndiffusion data to the B0 image (the opposite of the previous examples), which\nreverses what is the \u201cmoving\u201d image and what is \u201cstatic\u201d.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">xformed_dwi</span><span class=\"p\">,</span> <span class=\"n\">reg_affine</span> <span class=\"o\">=</span> <span class=\"n\">register_dwi_to_template</span><span class=\"p\">(</span>\n    <span class=\"n\">dwi</span><span class=\"o\">=</span><span class=\"n\">static_img</span><span class=\"p\">,</span>\n    <span class=\"n\">gtab</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">pjoin</span><span class=\"p\">(</span><span class=\"n\">folder</span><span class=\"p\">,</span> <span class=\"s1\">&#39;HARDI150.bval&#39;</span><span class=\"p\">),</span>\n          <span class=\"n\">pjoin</span><span class=\"p\">(</span><span class=\"n\">folder</span><span class=\"p\">,</span> <span class=\"s1\">&#39;HARDI150.bvec&#39;</span><span class=\"p\">)),</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">moving_img</span><span class=\"p\">,</span>\n    <span class=\"n\">reg_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;aff&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">nbins</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span>\n    <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;MI&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pipeline</span><span class=\"o\">=</span><span class=\"n\">pipeline</span><span class=\"p\">,</span>\n    <span class=\"n\">level_iters</span><span class=\"o\">=</span><span class=\"n\">level_iters</span><span class=\"p\">,</span>\n    <span class=\"n\">sigmas</span><span class=\"o\">=</span><span class=\"n\">sigmas</span><span class=\"p\">,</span>\n    <span class=\"n\">factors</span><span class=\"o\">=</span><span class=\"n\">factors</span><span class=\"p\">)</span>\n\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"n\">xformed_dwi</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;xformed_dwi_0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"n\">xformed_dwi</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;xformed_dwi_1.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_slices</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"n\">xformed_dwi</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Static&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transformed&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;xformed_dwi_2.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_019.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_019.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_020.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_020.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_affine_registration_3d_021.png\" srcset=\"../../_images/sphx_glr_affine_registration_3d_021.png\" alt=\"affine registration 3d\" class = \"sphx-glr-multi-img\"/></li>\n</ul>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Optimizing level 2 [max iter: 10000]\nOptimizing level 1 [max iter: 1000]\nOptimizing level 0 [max iter: 100]\nOptimizing level 2 [max iter: 10000]\nOptimizing level 1 [max iter: 1000]\nOptimizing level 0 [max iter: 100]\nOptimizing level 2 [max iter: 10000]\nOptimizing level 1 [max iter: 1000]\nOptimizing level 0 [max iter: 100]\n\n&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/xformed_dwi_0.png\" src=\"examples_built/20_registration/xformed_dwi_0.png\" />\n</figure>\n<figure class=\"align-center\">\n<img alt=\"examples_built/20_registration/xformed_dwi_1.png\" src=\"examples_built/20_registration/xformed_dwi_1.png\" />\n</figure>\n<figure class=\"align-center\" id=\"id10\">\n<img alt=\"examples_built/20_registration/xformed_dwi_2.png\" src=\"examples_built/20_registration/xformed_dwi_2.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Same again, using the <cite>dwi_to_template</cite> functional interface.</span><a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"mattes03\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id1\">Mattes03</a><span class=\"fn-bracket\">]</span></span>\n<p>Mattes, D., Haynor, D. R., Vesselle, H., Lewellen, T. K.,\nEubank, W. (2003). PET-CT image registration in the chest using\nfree-form deformations. IEEE Transactions on Medical Imaging,\n22(1), 120-8.</p>\n</div>\n<div class=\"citation\" id=\"avants11\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Avants11<span class=\"fn-bracket\">]</span></span>\n<span class=\"backrefs\">(<a role=\"doc-backlink\" href=\"#id2\">1</a>,<a role=\"doc-backlink\" href=\"#id3\">2</a>)</span>\n<p>Avants, B. B., Tustison, N., &amp; Song, G. (2011). Advanced\nNormalization Tools (ANTS), 1-35.</p>\n</div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 2 minutes  53.718 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-20-registration-affine-registration-3d-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/d7e6adc004b6358344045d87f390f7b5/affine_registration_3d.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">affine_registration_3d.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/c8dcfb1ca7ebb277211bd65577d0cad4/affine_registration_3d.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">affine_registration_3d.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples_built/23_segmentation/index", "Segmentation", "N", "next"], ["examples_built/20_registration/streamline_registration", "Applying image-based deformations to streamlines", "P", "previous"]], "sourcename": "examples_built/20_registration/affine_registration_3d.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Affine Registration in 3D</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "examples_built/20_registration/affine_registration_3d", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}