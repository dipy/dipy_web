{"parents": [], "prev": null, "next": null, "title": "DSI Deconvolution vs DSI", "meta": {}, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-26-simulations-reconst-dsid-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"dsi-deconvolution-vs-dsi\">\n<span id=\"sphx-glr-examples-built-26-simulations-reconst-dsid-py\"></span><h1>DSI Deconvolution vs DSI<a class=\"headerlink\" href=\"#dsi-deconvolution-vs-dsi\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>An alternative method to DSI is the method proposed by <a class=\"reference internal\" href=\"../reconst_dsid_1/#canales10\" id=\"id1\"><span>[Canales10]</span></a> which is\ncalled DSI with Deconvolution. This algorithm is using Lucy-Richardson\ndeconvolution in the diffusion propagator with the goal to create sharper ODFs\nwith higher angular resolution.</p>\n<p>In this example we will show with simulated data how this method\u2019s ODF\nperforms against standard DSI ODF and a ground truth multi tensor ODF.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.sims.voxel</span> <span class=\"kn\">import</span> <span class=\"n\">multi_tensor</span><span class=\"p\">,</span> <span class=\"n\">multi_tensor_odf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span><span class=\"p\">,</span> <span class=\"n\">get_sphere</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.dsi</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">DiffusionSpectrumDeconvModel</span><span class=\"p\">,</span>\n                              <span class=\"n\">DiffusionSpectrumModel</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For the simulation we will use a standard DSI acquisition scheme with 514\ngradient directions and 1 S0.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">btable</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;dsi515btable&#39;</span><span class=\"p\">))</span>\n\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">btable</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">btable</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">:])</span>\n</pre></div>\n</div>\n<p>Let\u2019s create a multi tensor with 2 fiber directions at 60 degrees.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">evals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">],</span>\n                  <span class=\"p\">[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">]])</span>\n\n<span class=\"n\">directions</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"o\">-</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n\n<span class=\"n\">fractions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">]</span>\n\n<span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">evals</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"n\">directions</span><span class=\"p\">,</span>\n                         <span class=\"n\">fractions</span><span class=\"o\">=</span><span class=\"n\">fractions</span><span class=\"p\">,</span> <span class=\"n\">snr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;repulsion724&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">subdivide</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">odf_gt</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor_odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">evals</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"n\">directions</span><span class=\"p\">,</span>\n                          <span class=\"n\">fractions</span><span class=\"o\">=</span><span class=\"n\">fractions</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Perform the reconstructions with standard DSI and DSI with deconvolution.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dsi_model</span> <span class=\"o\">=</span> <span class=\"n\">DiffusionSpectrumModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n\n<span class=\"n\">dsi_odf</span> <span class=\"o\">=</span> <span class=\"n\">dsi_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n\n<span class=\"n\">dsid_model</span> <span class=\"o\">=</span> <span class=\"n\">DiffusionSpectrumDeconvModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n\n<span class=\"n\">dsid_odf</span> <span class=\"o\">=</span> <span class=\"n\">dsid_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Finally, we can visualize the ground truth ODF, together with the DSI and DSI\nwith deconvolution ODFs and observe that with the deconvolved method it is\neasier to resolve the correct fiber directions because the ODF is sharper.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span>\n\n<span class=\"c1\"># Enables/disables interactive visualization</span>\n<span class=\"n\">interactive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># concatenate data as 4D array</span>\n<span class=\"n\">odfs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">odf_gt</span><span class=\"p\">,</span> <span class=\"n\">dsi_odf</span><span class=\"p\">,</span> <span class=\"n\">dsid_odf</span><span class=\"p\">))[:,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n<span class=\"n\">odf_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">odf_slicer</span><span class=\"p\">(</span><span class=\"n\">odfs</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"s1\">&#39;plasma&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">odf_actor</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">odf_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">odf_actor</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;dsid.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id2\">\n<img alt=\"examples_built/26_simulations/dsid.png\" src=\"examples_built/26_simulations/dsid.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Ground truth ODF (left), DSI ODF (middle), DSI with Deconvolution ODF (right).</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"canales10\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id1\">Canales10</a><span class=\"fn-bracket\">]</span></span>\n<p>Canales-Rodriguez et al., Deconvolution in Diffusion Spectrum Imaging,\nNeuroimage, vol 50, no 1, p. 136-149, 2010.</p>\n</div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  0.000 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-26-simulations-reconst-dsid-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/5d966d4c7e9e8ca22ae9e9f4cd2d8598/reconst_dsid.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">reconst_dsid.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/718c7bfbcf29a1d59926a5438b8505f7/reconst_dsid.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">reconst_dsid.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/26_simulations/reconst_dsid.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">DSI Deconvolution vs DSI</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "examples_built/26_simulations/reconst_dsid", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}