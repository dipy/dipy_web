{"parents": [{"link": "../../../documentation/", "title": "Documentation"}, {"link": "../../", "title": "DIPY development"}, {"link": "../", "title": "Working with DIPY source code"}, {"link": "../git_development/", "title": "Git for development"}], "prev": {"link": "../configure_git/", "title": "Configure git"}, "next": {"link": "../maintainer_workflow/", "title": "Maintainer workflow"}, "title": "Development workflow", "meta": null, "body": "<section id=\"development-workflow\">\n<span id=\"id1\"></span><h1>Development workflow<a class=\"headerlink\" href=\"#development-workflow\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>You already have your own forked copy of the <a class=\"reference external\" href=\"https://dipy.org\">dipy</a> repository, by\nfollowing <a class=\"reference internal\" href=\"../forking_hell/#forking\"><span class=\"std std-ref\">Making your own copy (fork) of DIPY</span></a>. You have <a class=\"reference internal\" href=\"../set_up_fork/#set-up-fork\"><span class=\"std std-ref\">Set up your fork</span></a>. You have configured\ngit by following <a class=\"reference internal\" href=\"../configure_git/#configure-git\"><span class=\"std std-ref\">Configure git</span></a>.  Now you are ready for some real work.</p>\n<section id=\"workflow-summary\">\n<h2>Workflow summary<a class=\"headerlink\" href=\"#workflow-summary\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>In what follows we\u2019ll refer to the upstream dipy <code class=\"docutils literal notranslate\"><span class=\"pre\">master</span></code> branch, as\n\u201ctrunk\u201d.</p>\n<ul class=\"simple\">\n<li><p>Don\u2019t use your <code class=\"docutils literal notranslate\"><span class=\"pre\">master</span></code> branch for anything.  Consider deleting it.</p></li>\n<li><p>When you are starting a new set of changes, fetch any changes from trunk,\nand start a new <em>feature branch</em> from that.</p></li>\n<li><p>Make a new branch for each separable set of changes \u2014 \u201cone task, one\nbranch\u201d (<a class=\"reference external\" href=\"http://mail.scipy.org/pipermail/ipython-dev/2010-October/006746.html\">ipython git workflow</a>).</p></li>\n<li><p>Name your branch for the purpose of the changes - e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">bugfix-for-issue-14</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">refactor-database-code</span></code>.</p></li>\n<li><p>If you can possibly avoid it, avoid merging trunk or any other branches into\nyour feature branch while you are working.</p></li>\n<li><p>If you do find yourself merging from trunk, consider <a class=\"reference internal\" href=\"#rebase-on-trunk\"><span class=\"std std-ref\">Rebasing on trunk</span></a></p></li>\n<li><p>Ask on the <a class=\"reference external\" href=\"https://mail.python.org/mailman/listinfo/neuroimaging\">DIPY mailing list</a> if you get stuck.</p></li>\n<li><p>Ask for code review!</p></li>\n</ul>\n<p>This way of working helps to keep work well organized, with readable history.\nThis in turn makes it easier for project maintainers (that might be you) to see\nwhat you\u2019ve done, and why you did it.</p>\n<p>See <a class=\"reference external\" href=\"http://www.mail-archive.com/dri-devel&#64;lists.sourceforge.net/msg39091.html\">linux git workflow</a> and <a class=\"reference external\" href=\"http://mail.scipy.org/pipermail/ipython-dev/2010-October/006746.html\">ipython git workflow</a> for some explanation.</p>\n</section>\n<section id=\"consider-deleting-your-master-branch\">\n<h2>Consider deleting your master branch<a class=\"headerlink\" href=\"#consider-deleting-your-master-branch\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>It may sound strange, but deleting your own <code class=\"docutils literal notranslate\"><span class=\"pre\">master</span></code> branch can help reduce\nconfusion about which branch you are on.  See <a class=\"reference external\" href=\"http://matthew-brett.github.com/pydagogue/gh_delete_master.html\">deleting master on github</a> for\ndetails.</p>\n</section>\n<section id=\"update-the-mirror-of-trunk\">\n<span id=\"update-mirror-trunk\"></span><h2>Update the mirror of trunk<a class=\"headerlink\" href=\"#update-the-mirror-of-trunk\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>First make sure you have done <a class=\"reference internal\" href=\"../set_up_fork/#linking-to-upstream\"><span class=\"std std-ref\">Linking your repository to the upstream repo</span></a>.</p>\n<p>From time to time you should fetch the upstream (trunk) changes from github:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">fetch</span> <span class=\"n\">upstream</span>\n</pre></div>\n</div>\n<p>This will pull down any commits you don\u2019t have, and set the remote branches to\npoint to the right commit.  For example, \u2018trunk\u2019 is the branch referred to by\n(remote/branchname) <code class=\"docutils literal notranslate\"><span class=\"pre\">upstream/master</span></code> - and if there have been commits since\nyou last checked, <code class=\"docutils literal notranslate\"><span class=\"pre\">upstream/master</span></code> will change after you do the fetch.</p>\n</section>\n<section id=\"make-a-new-feature-branch\">\n<span id=\"make-feature-branch\"></span><h2>Make a new feature branch<a class=\"headerlink\" href=\"#make-a-new-feature-branch\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>When you are ready to make some changes to the code, you should start a new\nbranch.  Branches that are for a collection of related edits are often called\n\u2018feature branches\u2019.</p>\n<p>Making an new branch for each set of related changes will make it easier for\nsomeone reviewing your branch to see what you are doing.</p>\n<p>Choose an informative name for the branch to remind yourself and the rest of us\nwhat the changes in the branch are for.  For example <code class=\"docutils literal notranslate\"><span class=\"pre\">add-ability-to-fly</span></code>, or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">bugfix-for-issue-42</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Update the mirror of trunk</span>\n<span class=\"n\">git</span> <span class=\"n\">fetch</span> <span class=\"n\">upstream</span>\n<span class=\"c1\"># Make new feature branch starting at current trunk</span>\n<span class=\"n\">git</span> <span class=\"n\">branch</span> <span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">new</span><span class=\"o\">-</span><span class=\"n\">feature</span> <span class=\"n\">upstream</span><span class=\"o\">/</span><span class=\"n\">master</span>\n<span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">new</span><span class=\"o\">-</span><span class=\"n\">feature</span>\n</pre></div>\n</div>\n<p>Generally, you will want to keep your feature branches on your public <a class=\"reference external\" href=\"http://github.com\">github</a>\nfork of <a class=\"reference external\" href=\"https://dipy.org\">dipy</a>. To do this, you <a class=\"reference external\" href=\"http://schacon.github.com/git/git-push.html\">git push</a> this new branch up to your\ngithub repo.  Generally (if you followed the instructions in these pages, and by\ndefault), git will have a link to your github repo, called <code class=\"docutils literal notranslate\"><span class=\"pre\">origin</span></code>.  You push\nup to your own repo on github with:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">push</span> <span class=\"n\">origin</span> <span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">new</span><span class=\"o\">-</span><span class=\"n\">feature</span>\n</pre></div>\n</div>\n<p>In git &gt;= 1.7 you can ensure that the link is correctly set by using the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">--set-upstream</span></code> option:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">push</span> <span class=\"o\">--</span><span class=\"nb\">set</span><span class=\"o\">-</span><span class=\"n\">upstream</span> <span class=\"n\">origin</span> <span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">new</span><span class=\"o\">-</span><span class=\"n\">feature</span>\n</pre></div>\n</div>\n<p>From now on git will know that <code class=\"docutils literal notranslate\"><span class=\"pre\">my-new-feature</span></code> is related to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">my-new-feature</span></code> branch in the github repo.</p>\n</section>\n<section id=\"the-editing-workflow\">\n<span id=\"edit-flow\"></span><h2>The editing workflow<a class=\"headerlink\" href=\"#the-editing-workflow\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<section id=\"overview\">\n<h3>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># hack hack</span>\n<span class=\"n\">git</span> <span class=\"n\">add</span> <span class=\"n\">my_new_file</span>\n<span class=\"n\">git</span> <span class=\"n\">commit</span> <span class=\"o\">-</span><span class=\"n\">am</span> <span class=\"s1\">&#39;NF - some message&#39;</span>\n<span class=\"n\">git</span> <span class=\"n\">push</span>\n</pre></div>\n</div>\n</section>\n<section id=\"in-more-detail\">\n<h3>In more detail<a class=\"headerlink\" href=\"#in-more-detail\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<ol class=\"arabic\">\n<li><p>Make some changes</p></li>\n<li><p>See which files have changed with <code class=\"docutils literal notranslate\"><span class=\"pre\">git</span> <span class=\"pre\">status</span></code> (see <a class=\"reference external\" href=\"http://schacon.github.com/git/git-status.html\">git status</a>).\nYou\u2019ll see a listing like this one:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># On branch ny-new-feature</span>\n<span class=\"c1\"># Changed but not updated:</span>\n<span class=\"c1\">#   (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span>\n<span class=\"c1\">#   (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#  modified:   README</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Untracked files:</span>\n<span class=\"c1\">#   (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#  INSTALL</span>\n<span class=\"n\">no</span> <span class=\"n\">changes</span> <span class=\"n\">added</span> <span class=\"n\">to</span> <span class=\"n\">commit</span> <span class=\"p\">(</span><span class=\"n\">use</span> <span class=\"s2\">&quot;git add&quot;</span> <span class=\"ow\">and</span><span class=\"o\">/</span><span class=\"ow\">or</span> <span class=\"s2\">&quot;git commit -a&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</li>\n<li><p>Check what the actual changes are with <code class=\"docutils literal notranslate\"><span class=\"pre\">git</span> <span class=\"pre\">diff</span></code> (<a class=\"reference external\" href=\"http://schacon.github.com/git/git-diff.html\">git diff</a>).</p></li>\n<li><p>Add any new files to version control <code class=\"docutils literal notranslate\"><span class=\"pre\">git</span> <span class=\"pre\">add</span> <span class=\"pre\">new_file_name</span></code> (see\n<a class=\"reference external\" href=\"http://schacon.github.com/git/git-add.html\">git add</a>).</p></li>\n<li><p>To commit all modified files into the local copy of your repo,, do\n<code class=\"docutils literal notranslate\"><span class=\"pre\">git</span> <span class=\"pre\">commit</span> <span class=\"pre\">-am</span> <span class=\"pre\">'A</span> <span class=\"pre\">commit</span> <span class=\"pre\">message'</span></code>.  Note the <code class=\"docutils literal notranslate\"><span class=\"pre\">-am</span></code> options to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">commit</span></code>. The <code class=\"docutils literal notranslate\"><span class=\"pre\">m</span></code> flag just signals that you\u2019re going to type a\nmessage on the command line.  The <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> flag \u2014 you can just take on\nfaith \u2014 or see <a class=\"reference external\" href=\"http://www.gitready.com/beginner/2009/01/18/the-staging-area.html\">why the -a flag?</a> \u2014 and the helpful use-case\ndescription in the <a class=\"reference external\" href=\"http://tomayko.com/writings/the-thing-about-git\">tangled working copy problem</a>. The <a class=\"reference external\" href=\"http://schacon.github.com/git/git-commit.html\">git commit</a> manual\npage might also be useful.</p></li>\n<li><p>To push the changes up to your forked repo on github, do a <code class=\"docutils literal notranslate\"><span class=\"pre\">git</span>\n<span class=\"pre\">push</span></code> (see <a class=\"reference external\" href=\"http://schacon.github.com/git/git-push.html\">git push</a>).</p></li>\n</ol>\n</section>\n</section>\n<section id=\"ask-for-your-changes-to-be-reviewed-or-merged\">\n<h2>Ask for your changes to be reviewed or merged<a class=\"headerlink\" href=\"#ask-for-your-changes-to-be-reviewed-or-merged\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>When you are ready to ask for someone to review your code and consider a merge:</p>\n<ol class=\"arabic\">\n<li><p>Go to the URL of your forked repo, say\n<code class=\"docutils literal notranslate\"><span class=\"pre\">http://github.com/your-user-name/dipy</span></code>.</p></li>\n<li><p>Use the \u2018Branch\u2019 dropdown menu near the top left of the page to\nselect the branch with your changes:</p>\n<img alt=\"../../../_images/branch_dropdown.png\" src=\"../../../_images/branch_dropdown.png\" />\n</li>\n<li><p>Click on the \u2018New pull request\u2019 button near the \u2018Branch\u2019 dropdown.</p>\n<p>Enter a title for the set of changes, and some explanation of what you\u2019ve\ndone.  Say if there is anything you\u2019d like particular attention for - like a\ncomplicated change or some code you are not happy with.</p>\n<p>If you don\u2019t think your request is ready to be merged, just say so in your\npull request message.  This is still a good way of getting some preliminary\ncode review.</p>\n</li>\n</ol>\n</section>\n<section id=\"some-other-things-you-might-want-to-do\">\n<h2>Some other things you might want to do<a class=\"headerlink\" href=\"#some-other-things-you-might-want-to-do\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<section id=\"delete-a-branch-on-github\">\n<h3>Delete a branch on github<a class=\"headerlink\" href=\"#delete-a-branch-on-github\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"n\">master</span>\n<span class=\"c1\"># delete branch locally</span>\n<span class=\"n\">git</span> <span class=\"n\">branch</span> <span class=\"o\">-</span><span class=\"n\">D</span> <span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">unwanted</span><span class=\"o\">-</span><span class=\"n\">branch</span>\n<span class=\"c1\"># delete branch on github</span>\n<span class=\"n\">git</span> <span class=\"n\">push</span> <span class=\"n\">origin</span> <span class=\"p\">:</span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">unwanted</span><span class=\"o\">-</span><span class=\"n\">branch</span>\n</pre></div>\n</div>\n<p>(Note the colon <code class=\"docutils literal notranslate\"><span class=\"pre\">:</span></code> before <code class=\"docutils literal notranslate\"><span class=\"pre\">test-branch</span></code>.  See also: <a class=\"reference external\" href=\"https://www.git-tower.com/learn/git/faq/delete-remote-branch\">remove remote branch</a>.</p>\n</section>\n<section id=\"several-people-sharing-a-single-repository\">\n<h3>Several people sharing a single repository<a class=\"headerlink\" href=\"#several-people-sharing-a-single-repository\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>If you want to work on some stuff with other people, where you are all\ncommitting into the same repository, or even the same branch, then just\nshare it via github.</p>\n<p>First fork dipy into your account, as from <a class=\"reference internal\" href=\"../forking_hell/#forking\"><span class=\"std std-ref\">Making your own copy (fork) of DIPY</span></a>.</p>\n<p>Then, go to your forked repository github page, say\n<code class=\"docutils literal notranslate\"><span class=\"pre\">http://github.com/your-user-name/dipy</span></code></p>\n<p>Click on the \u2018Settings\u2019 on the right, then \u2018Collaborators\u2019 on the left, and add anyone else to the repo as a\ncollaborator:</p>\n<blockquote>\n<div><img alt=\"../../../_images/collaborators.png\" src=\"../../../_images/collaborators.png\" />\n</div></blockquote>\n<p>Now all those people can do:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">git</span><span class=\"nd\">@githhub</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"p\">:</span><span class=\"n\">your</span><span class=\"o\">-</span><span class=\"n\">user</span><span class=\"o\">-</span><span class=\"n\">name</span><span class=\"o\">/</span><span class=\"n\">dipy</span><span class=\"o\">.</span><span class=\"n\">git</span>\n</pre></div>\n</div>\n<p>Remember that links starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">git&#64;</span></code> use the ssh protocol and are\nread-write; links starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">git://</span></code> are read-only.</p>\n<p>Your collaborators can then commit directly into that repo with the\nusual:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">commit</span> <span class=\"o\">-</span><span class=\"n\">am</span> <span class=\"s1\">&#39;ENH - much better code&#39;</span>\n<span class=\"n\">git</span> <span class=\"n\">push</span> <span class=\"n\">origin</span> <span class=\"n\">master</span> <span class=\"c1\"># pushes directly into your repo</span>\n</pre></div>\n</div>\n</section>\n<section id=\"explore-your-repository\">\n<h3>Explore your repository<a class=\"headerlink\" href=\"#explore-your-repository\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>To see a graphical representation of the repository branches and\ncommits:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gitk</span> <span class=\"o\">--</span><span class=\"nb\">all</span>\n</pre></div>\n</div>\n<p>To see a linear list of commits for this branch:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">log</span>\n</pre></div>\n</div>\n<p>You can also look at the <a class=\"reference external\" href=\"http://github.com/blog/39-say-hello-to-the-network-graph-visualizer\">network graph visualizer</a> for your github\nrepo.</p>\n<p>Finally the <a class=\"reference internal\" href=\"../configure_git/#fancy-log\"><span class=\"std std-ref\">Fancy log output</span></a> <code class=\"docutils literal notranslate\"><span class=\"pre\">lg</span></code> alias will give you a reasonable text-based\ngraph of the repository.</p>\n</section>\n<section id=\"rebasing-on-trunk\">\n<span id=\"rebase-on-trunk\"></span><h3>Rebasing on trunk<a class=\"headerlink\" href=\"#rebasing-on-trunk\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Let\u2019s say you thought of some work you\u2019d like to do. You\n<a class=\"reference internal\" href=\"#update-mirror-trunk\"><span class=\"std std-ref\">Update the mirror of trunk</span></a> and <a class=\"reference internal\" href=\"#make-feature-branch\"><span class=\"std std-ref\">Make a new feature branch</span></a> called\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cool-feature</span></code>. At this stage trunk is at some commit, let\u2019s call it E. Now\nyou make some new commits on your <code class=\"docutils literal notranslate\"><span class=\"pre\">cool-feature</span></code> branch, let\u2019s call them A, B,\nC.  Maybe your changes take a while, or you come back to them after a while.  In\nthe meantime, trunk has progressed from commit E to commit (say) G:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>      <span class=\"n\">A</span><span class=\"o\">---</span><span class=\"n\">B</span><span class=\"o\">---</span><span class=\"n\">C</span> <span class=\"n\">cool</span><span class=\"o\">-</span><span class=\"n\">feature</span>\n     <span class=\"o\">/</span>\n<span class=\"n\">D</span><span class=\"o\">---</span><span class=\"n\">E</span><span class=\"o\">---</span><span class=\"n\">F</span><span class=\"o\">---</span><span class=\"n\">G</span> <span class=\"n\">trunk</span>\n</pre></div>\n</div>\n<p>At this stage you consider merging trunk into your feature branch, and you\nremember that this here page sternly advises you not to do that, because the\nhistory will get messy. Most of the time you can just ask for a review, and not\nworry that trunk has got a little ahead.  But sometimes, the changes in trunk\nmight affect your changes, and you need to harmonize them.  In this situation\nyou may prefer to do a rebase.</p>\n<p>rebase takes your changes (A, B, C) and replays them as if they had been made to\nthe current state of <code class=\"docutils literal notranslate\"><span class=\"pre\">trunk</span></code>.  In other words, in this case, it takes the\nchanges represented by A, B, C and replays them on top of G. After the rebase,\nyour history will look like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>              <span class=\"n\">A</span><span class=\"s1\">&#39;--B&#39;</span><span class=\"o\">--</span><span class=\"n\">C</span><span class=\"s1\">&#39; cool-feature</span>\n             <span class=\"o\">/</span>\n<span class=\"n\">D</span><span class=\"o\">---</span><span class=\"n\">E</span><span class=\"o\">---</span><span class=\"n\">F</span><span class=\"o\">---</span><span class=\"n\">G</span> <span class=\"n\">trunk</span>\n</pre></div>\n</div>\n<p>See <a class=\"reference external\" href=\"http://matthew-brett.github.com/pydagogue/rebase_without_tears.html\">rebase without tears</a> for more detail.</p>\n<p>To do a rebase on trunk:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Update the mirror of trunk</span>\n<span class=\"n\">git</span> <span class=\"n\">fetch</span> <span class=\"n\">upstream</span>\n<span class=\"c1\"># go to the feature branch</span>\n<span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"n\">cool</span><span class=\"o\">-</span><span class=\"n\">feature</span>\n<span class=\"c1\"># make a backup in case you mess up</span>\n<span class=\"n\">git</span> <span class=\"n\">branch</span> <span class=\"n\">tmp</span> <span class=\"n\">cool</span><span class=\"o\">-</span><span class=\"n\">feature</span>\n<span class=\"c1\"># rebase cool-feature onto trunk</span>\n<span class=\"n\">git</span> <span class=\"n\">rebase</span> <span class=\"o\">--</span><span class=\"n\">onto</span> <span class=\"n\">upstream</span><span class=\"o\">/</span><span class=\"n\">master</span> <span class=\"n\">upstream</span><span class=\"o\">/</span><span class=\"n\">master</span> <span class=\"n\">cool</span><span class=\"o\">-</span><span class=\"n\">feature</span>\n</pre></div>\n</div>\n<p>In this situation, where you are already on branch <code class=\"docutils literal notranslate\"><span class=\"pre\">cool-feature</span></code>, the last\ncommand can be written more succinctly as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">rebase</span> <span class=\"n\">upstream</span><span class=\"o\">/</span><span class=\"n\">master</span>\n</pre></div>\n</div>\n<p>When all looks good you can delete your backup branch:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">branch</span> <span class=\"o\">-</span><span class=\"n\">D</span> <span class=\"n\">tmp</span>\n</pre></div>\n</div>\n<p>If it doesn\u2019t look good you may need to have a look at\n<a class=\"reference internal\" href=\"#recovering-from-mess-up\"><span class=\"std std-ref\">Recovering from mess-ups</span></a>.</p>\n<p>If you have made changes to files that have also changed in trunk, this may\ngenerate merge conflicts that you need to resolve - see the <a class=\"reference external\" href=\"http://schacon.github.com/git/git-rebase.html\">git rebase</a> man\npage for some instructions at the end of the \u201cDescription\u201d section. There is\nsome related help on merging in the git user manual - see <a class=\"reference external\" href=\"http://schacon.github.com/git/user-manual.html#resolving-a-merge\">resolving a merge</a>.</p>\n</section>\n<section id=\"recovering-from-mess-ups\">\n<span id=\"recovering-from-mess-up\"></span><h3>Recovering from mess-ups<a class=\"headerlink\" href=\"#recovering-from-mess-ups\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Sometimes, you mess up merges or rebases. Luckily, in git it is\nrelatively straightforward to recover from such mistakes.</p>\n<p>If you mess up during a rebase:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">rebase</span> <span class=\"o\">--</span><span class=\"n\">abort</span>\n</pre></div>\n</div>\n<p>If you notice you messed up after the rebase:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># reset branch back to the saved point</span>\n<span class=\"n\">git</span> <span class=\"n\">reset</span> <span class=\"o\">--</span><span class=\"n\">hard</span> <span class=\"n\">tmp</span>\n</pre></div>\n</div>\n<p>If you forgot to make a backup branch:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># look at the reflog of the branch</span>\n<span class=\"n\">git</span> <span class=\"n\">reflog</span> <span class=\"n\">show</span> <span class=\"n\">cool</span><span class=\"o\">-</span><span class=\"n\">feature</span>\n\n<span class=\"mi\">8630830</span> <span class=\"n\">cool</span><span class=\"o\">-</span><span class=\"n\">feature</span><span class=\"o\">@</span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">}:</span> <span class=\"n\">commit</span><span class=\"p\">:</span> <span class=\"n\">BUG</span><span class=\"p\">:</span> <span class=\"n\">io</span><span class=\"p\">:</span> <span class=\"n\">close</span> <span class=\"n\">file</span> <span class=\"n\">handles</span> <span class=\"n\">immediately</span>\n<span class=\"mi\">278</span><span class=\"n\">dd2a</span> <span class=\"n\">cool</span><span class=\"o\">-</span><span class=\"n\">feature</span><span class=\"o\">@</span><span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">}:</span> <span class=\"n\">rebase</span> <span class=\"n\">finished</span><span class=\"p\">:</span> <span class=\"n\">refs</span><span class=\"o\">/</span><span class=\"n\">heads</span><span class=\"o\">/</span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">feature</span><span class=\"o\">-</span><span class=\"n\">branch</span> <span class=\"n\">onto</span> <span class=\"mi\">11</span><span class=\"n\">ee694744f2552d</span>\n<span class=\"mi\">26</span><span class=\"n\">aa21a</span> <span class=\"n\">cool</span><span class=\"o\">-</span><span class=\"n\">feature</span><span class=\"o\">@</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">}:</span> <span class=\"n\">commit</span><span class=\"p\">:</span> <span class=\"n\">BUG</span><span class=\"p\">:</span> <span class=\"n\">lib</span><span class=\"p\">:</span> <span class=\"n\">make</span> <span class=\"n\">seek_gzip_factory</span> <span class=\"ow\">not</span> <span class=\"n\">leak</span> <span class=\"n\">gzip</span> <span class=\"n\">obj</span>\n<span class=\"o\">...</span>\n\n<span class=\"c1\"># reset the branch to where it was before the botched rebase</span>\n<span class=\"n\">git</span> <span class=\"n\">reset</span> <span class=\"o\">--</span><span class=\"n\">hard</span> <span class=\"n\">cool</span><span class=\"o\">-</span><span class=\"n\">feature</span><span class=\"o\">@</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n</section>\n<section id=\"rewriting-commit-history\">\n<span id=\"id2\"></span><h3>Rewriting commit history<a class=\"headerlink\" href=\"#rewriting-commit-history\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Do this only for your own feature branches.</p>\n</div>\n<p>There\u2019s an embarrassing typo in a commit you made? Or perhaps the you\nmade several false starts you would like the posterity not to see.</p>\n<p>This can be done via <em>interactive rebasing</em>.</p>\n<p>Suppose that the commit history looks like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">log</span> <span class=\"o\">--</span><span class=\"n\">oneline</span>\n<span class=\"n\">eadc391</span> <span class=\"n\">Fix</span> <span class=\"n\">some</span> <span class=\"n\">remaining</span> <span class=\"n\">bugs</span>\n<span class=\"n\">a815645</span> <span class=\"n\">Modify</span> <span class=\"n\">it</span> <span class=\"n\">so</span> <span class=\"n\">that</span> <span class=\"n\">it</span> <span class=\"n\">works</span>\n<span class=\"mi\">2</span><span class=\"n\">dec1ac</span> <span class=\"n\">Fix</span> <span class=\"n\">a</span> <span class=\"n\">few</span> <span class=\"n\">bugs</span> <span class=\"o\">+</span> <span class=\"n\">disable</span>\n<span class=\"mi\">13</span><span class=\"n\">d7934</span> <span class=\"n\">First</span> <span class=\"n\">implementation</span>\n<span class=\"mi\">6</span><span class=\"n\">ad92e5</span> <span class=\"o\">*</span> <span class=\"n\">masked</span> <span class=\"ow\">is</span> <span class=\"n\">now</span> <span class=\"n\">an</span> <span class=\"n\">instance</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"n\">new</span> <span class=\"nb\">object</span><span class=\"p\">,</span> <span class=\"n\">MaskedConstant</span>\n<span class=\"mi\">29001</span><span class=\"n\">ed</span> <span class=\"n\">Add</span> <span class=\"n\">pre</span><span class=\"o\">-</span><span class=\"n\">nep</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"n\">copule</span> <span class=\"n\">of</span> <span class=\"n\">structured_array_extensions</span><span class=\"o\">.</span>\n<span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>and <code class=\"docutils literal notranslate\"><span class=\"pre\">6ad92e5</span></code> is the last commit in the <code class=\"docutils literal notranslate\"><span class=\"pre\">cool-feature</span></code> branch. Suppose we\nwant to make the following changes:</p>\n<ul class=\"simple\">\n<li><p>Rewrite the commit message for <code class=\"docutils literal notranslate\"><span class=\"pre\">13d7934</span></code> to something more sensible.</p></li>\n<li><p>Combine the commits <code class=\"docutils literal notranslate\"><span class=\"pre\">2dec1ac</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">a815645</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">eadc391</span></code> into a single one.</p></li>\n</ul>\n<p>We do as follows:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># make a backup of the current state</span>\n<span class=\"n\">git</span> <span class=\"n\">branch</span> <span class=\"n\">tmp</span> <span class=\"n\">HEAD</span>\n<span class=\"c1\"># interactive rebase</span>\n<span class=\"n\">git</span> <span class=\"n\">rebase</span> <span class=\"o\">-</span><span class=\"n\">i</span> <span class=\"mi\">6</span><span class=\"n\">ad92e5</span>\n</pre></div>\n</div>\n<p>This will open an editor with the following text in it:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pick</span> <span class=\"mi\">13</span><span class=\"n\">d7934</span> <span class=\"n\">First</span> <span class=\"n\">implementation</span>\n<span class=\"n\">pick</span> <span class=\"mi\">2</span><span class=\"n\">dec1ac</span> <span class=\"n\">Fix</span> <span class=\"n\">a</span> <span class=\"n\">few</span> <span class=\"n\">bugs</span> <span class=\"o\">+</span> <span class=\"n\">disable</span>\n<span class=\"n\">pick</span> <span class=\"n\">a815645</span> <span class=\"n\">Modify</span> <span class=\"n\">it</span> <span class=\"n\">so</span> <span class=\"n\">that</span> <span class=\"n\">it</span> <span class=\"n\">works</span>\n<span class=\"n\">pick</span> <span class=\"n\">eadc391</span> <span class=\"n\">Fix</span> <span class=\"n\">some</span> <span class=\"n\">remaining</span> <span class=\"n\">bugs</span>\n\n<span class=\"c1\"># Rebase 6ad92e5..eadc391 onto 6ad92e5</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Commands:</span>\n<span class=\"c1\">#  p, pick = use commit</span>\n<span class=\"c1\">#  r, reword = use commit, but edit the commit message</span>\n<span class=\"c1\">#  e, edit = use commit, but stop for amending</span>\n<span class=\"c1\">#  s, squash = use commit, but meld into previous commit</span>\n<span class=\"c1\">#  f, fixup = like &quot;squash&quot;, but discard this commit&#39;s log message</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># If you remove a line here THAT COMMIT WILL BE LOST.</span>\n<span class=\"c1\"># However, if you remove everything, the rebase will be aborted.</span>\n<span class=\"c1\">#</span>\n</pre></div>\n</div>\n<p>To achieve what we want, we will make the following changes to it:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">r</span> <span class=\"mi\">13</span><span class=\"n\">d7934</span> <span class=\"n\">First</span> <span class=\"n\">implementation</span>\n<span class=\"n\">pick</span> <span class=\"mi\">2</span><span class=\"n\">dec1ac</span> <span class=\"n\">Fix</span> <span class=\"n\">a</span> <span class=\"n\">few</span> <span class=\"n\">bugs</span> <span class=\"o\">+</span> <span class=\"n\">disable</span>\n<span class=\"n\">f</span> <span class=\"n\">a815645</span> <span class=\"n\">Modify</span> <span class=\"n\">it</span> <span class=\"n\">so</span> <span class=\"n\">that</span> <span class=\"n\">it</span> <span class=\"n\">works</span>\n<span class=\"n\">f</span> <span class=\"n\">eadc391</span> <span class=\"n\">Fix</span> <span class=\"n\">some</span> <span class=\"n\">remaining</span> <span class=\"n\">bugs</span>\n</pre></div>\n</div>\n<p>This means that (i) we want to edit the commit message for\n<code class=\"docutils literal notranslate\"><span class=\"pre\">13d7934</span></code>, and (ii) collapse the last three commits into one. Now we\nsave and quit the editor.</p>\n<p>Git will then immediately bring up an editor for editing the commit\nmessage. After revising it, we get the output:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">detached</span> <span class=\"n\">HEAD</span> <span class=\"mi\">721</span><span class=\"n\">fc64</span><span class=\"p\">]</span> <span class=\"n\">FOO</span><span class=\"p\">:</span> <span class=\"n\">First</span> <span class=\"n\">implementation</span>\n <span class=\"mi\">2</span> <span class=\"n\">files</span> <span class=\"n\">changed</span><span class=\"p\">,</span> <span class=\"mi\">199</span> <span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span> <span class=\"mi\">66</span> <span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">detached</span> <span class=\"n\">HEAD</span> <span class=\"mi\">0</span><span class=\"n\">f22701</span><span class=\"p\">]</span> <span class=\"n\">Fix</span> <span class=\"n\">a</span> <span class=\"n\">few</span> <span class=\"n\">bugs</span> <span class=\"o\">+</span> <span class=\"n\">disable</span>\n <span class=\"mi\">1</span> <span class=\"n\">files</span> <span class=\"n\">changed</span><span class=\"p\">,</span> <span class=\"mi\">79</span> <span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span> <span class=\"mi\">61</span> <span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"n\">Successfully</span> <span class=\"n\">rebased</span> <span class=\"ow\">and</span> <span class=\"n\">updated</span> <span class=\"n\">refs</span><span class=\"o\">/</span><span class=\"n\">heads</span><span class=\"o\">/</span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">feature</span><span class=\"o\">-</span><span class=\"n\">branch</span><span class=\"o\">.</span>\n</pre></div>\n</div>\n<p>and the history looks now like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"mi\">0</span><span class=\"n\">f22701</span> <span class=\"n\">Fix</span> <span class=\"n\">a</span> <span class=\"n\">few</span> <span class=\"n\">bugs</span> <span class=\"o\">+</span> <span class=\"n\">disable</span>\n<span class=\"mi\">721</span><span class=\"n\">fc64</span> <span class=\"n\">ENH</span><span class=\"p\">:</span> <span class=\"n\">Sophisticated</span> <span class=\"n\">feature</span>\n<span class=\"mi\">6</span><span class=\"n\">ad92e5</span> <span class=\"o\">*</span> <span class=\"n\">masked</span> <span class=\"ow\">is</span> <span class=\"n\">now</span> <span class=\"n\">an</span> <span class=\"n\">instance</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"n\">new</span> <span class=\"nb\">object</span><span class=\"p\">,</span> <span class=\"n\">MaskedConstant</span>\n</pre></div>\n</div>\n<p>If it went wrong, recovery is again possible as explained <a class=\"reference internal\" href=\"#recovering-from-mess-up\"><span class=\"std std-ref\">above</span></a>.</p>\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["devel/gitwash/maintainer_workflow", "Maintainer workflow", "N", "next"], ["devel/gitwash/configure_git", "Configure git", "P", "previous"]], "sourcename": "devel/gitwash/development_workflow.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Development workflow</a><ul>\n<li><a class=\"reference internal\" href=\"#workflow-summary\">Workflow summary</a></li>\n<li><a class=\"reference internal\" href=\"#consider-deleting-your-master-branch\">Consider deleting your master branch</a></li>\n<li><a class=\"reference internal\" href=\"#update-the-mirror-of-trunk\">Update the mirror of trunk</a></li>\n<li><a class=\"reference internal\" href=\"#make-a-new-feature-branch\">Make a new feature branch</a></li>\n<li><a class=\"reference internal\" href=\"#the-editing-workflow\">The editing workflow</a><ul>\n<li><a class=\"reference internal\" href=\"#overview\">Overview</a></li>\n<li><a class=\"reference internal\" href=\"#in-more-detail\">In more detail</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ask-for-your-changes-to-be-reviewed-or-merged\">Ask for your changes to be reviewed or merged</a></li>\n<li><a class=\"reference internal\" href=\"#some-other-things-you-might-want-to-do\">Some other things you might want to do</a><ul>\n<li><a class=\"reference internal\" href=\"#delete-a-branch-on-github\">Delete a branch on github</a></li>\n<li><a class=\"reference internal\" href=\"#several-people-sharing-a-single-repository\">Several people sharing a single repository</a></li>\n<li><a class=\"reference internal\" href=\"#explore-your-repository\">Explore your repository</a></li>\n<li><a class=\"reference internal\" href=\"#rebasing-on-trunk\">Rebasing on trunk</a></li>\n<li><a class=\"reference internal\" href=\"#recovering-from-mess-ups\">Recovering from mess-ups</a></li>\n<li><a class=\"reference internal\" href=\"#rewriting-commit-history\">Rewriting commit history</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "devel/gitwash/development_workflow", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}