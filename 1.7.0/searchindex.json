{"docnames": ["api_changes", "cite", "data", "dataset_list", "dependencies", "devel/coding_style_guideline", "devel/commit_codes", "devel/gitwash/configure_git", "devel/gitwash/development_workflow", "devel/gitwash/dot2_dot3", "devel/gitwash/following_latest", "devel/gitwash/forking_hell", "devel/gitwash/git_development", "devel/gitwash/git_install", "devel/gitwash/git_intro", "devel/gitwash/git_resources", "devel/gitwash/index", "devel/gitwash/maintainer_workflow", "devel/gitwash/patching", "devel/gitwash/set_up_fork", "devel/index", "devel/intro", "devel/make_release", "devel/python3", "developers", "documentation", "examples_built/01_quick_start/index", "examples_built/01_quick_start/quick_start", "examples_built/01_quick_start/sg_execution_times", "examples_built/01_quick_start/tracking_introduction_eudx", "examples_built/04_preprocessing/brain_extraction_dwi", "examples_built/04_preprocessing/denoise_ascm", "examples_built/04_preprocessing/denoise_gibbs", "examples_built/04_preprocessing/denoise_localpca", "examples_built/04_preprocessing/denoise_mppca", "examples_built/04_preprocessing/denoise_nlmeans", "examples_built/04_preprocessing/denoise_patch2self", "examples_built/04_preprocessing/gradients_spheres", "examples_built/04_preprocessing/index", "examples_built/04_preprocessing/motion_correction", "examples_built/04_preprocessing/piesno", "examples_built/04_preprocessing/reslice_datasets", "examples_built/04_preprocessing/sg_execution_times", "examples_built/04_preprocessing/snr_in_cc", "examples_built/07_reconstruction/index", "examples_built/07_reconstruction/kfold_xval", "examples_built/07_reconstruction/reconst_csa", "examples_built/07_reconstruction/reconst_csd", "examples_built/07_reconstruction/reconst_dki", "examples_built/07_reconstruction/reconst_dki_micro", "examples_built/07_reconstruction/reconst_dsi", "examples_built/07_reconstruction/reconst_dsi_metrics", "examples_built/07_reconstruction/reconst_dsid", "examples_built/07_reconstruction/reconst_dti", "examples_built/07_reconstruction/reconst_forecast", "examples_built/07_reconstruction/reconst_fwdti", "examples_built/07_reconstruction/reconst_gqi", "examples_built/07_reconstruction/reconst_ivim", "examples_built/07_reconstruction/reconst_mapmri", "examples_built/07_reconstruction/reconst_mcsd", "examples_built/07_reconstruction/reconst_msdki", "examples_built/07_reconstruction/reconst_qtdmri", "examples_built/07_reconstruction/reconst_qti", "examples_built/07_reconstruction/reconst_qtiplus", "examples_built/07_reconstruction/reconst_rumba", "examples_built/07_reconstruction/reconst_sfm", "examples_built/07_reconstruction/reconst_sh", "examples_built/07_reconstruction/reconst_shore", "examples_built/07_reconstruction/reconst_shore_metrics", "examples_built/07_reconstruction/restore_dti", "examples_built/07_reconstruction/sg_execution_times", "examples_built/10_contextual_enhancement/contextual_enhancement", "examples_built/10_contextual_enhancement/fiber_to_bundle_coherence", "examples_built/10_contextual_enhancement/index", "examples_built/10_contextual_enhancement/sg_execution_times", "examples_built/13_fiber_tracking/index", "examples_built/13_fiber_tracking/linear_fascicle_evaluation", "examples_built/13_fiber_tracking/sg_execution_times", "examples_built/13_fiber_tracking/surface_seed", "examples_built/13_fiber_tracking/tracking_bootstrap_peaks", "examples_built/13_fiber_tracking/tracking_deterministic", "examples_built/13_fiber_tracking/tracking_introduction_eudx", "examples_built/13_fiber_tracking/tracking_introduction_eudx_0", "examples_built/13_fiber_tracking/tracking_introduction_eudx_1", "examples_built/13_fiber_tracking/tracking_pft", "examples_built/13_fiber_tracking/tracking_probabilistic", "examples_built/13_fiber_tracking/tracking_ptt", "examples_built/13_fiber_tracking/tracking_rumba", "examples_built/13_fiber_tracking/tracking_sfm", "examples_built/13_fiber_tracking/tracking_stopping_criterion", "examples_built/17_streamline_analysis/afq_tract_profiles", "examples_built/17_streamline_analysis/bundle_assignment_maps", "examples_built/17_streamline_analysis/bundle_shape_similarity", "examples_built/17_streamline_analysis/cluster_confidence", "examples_built/17_streamline_analysis/index", "examples_built/17_streamline_analysis/path_length_map", "examples_built/17_streamline_analysis/sg_execution_times", "examples_built/17_streamline_analysis/streamline_length", "examples_built/17_streamline_analysis/streamline_tools", "examples_built/20_registration/affine_registration_3d", "examples_built/20_registration/affine_registration_masks", "examples_built/20_registration/bundle_group_registration", "examples_built/20_registration/bundle_registration", "examples_built/20_registration/bundlewarp_registration", "examples_built/20_registration/index", "examples_built/20_registration/register_binary_fuzzy", "examples_built/20_registration/sg_execution_times", "examples_built/20_registration/streamline_registration", "examples_built/20_registration/syn_registration_2d", "examples_built/20_registration/syn_registration_3d", "examples_built/23_segmentation/brain_extraction_dwi", "examples_built/23_segmentation/brain_extraction_dwi_0", "examples_built/23_segmentation/brain_extraction_dwi_1", "examples_built/23_segmentation/bundle_extraction", "examples_built/23_segmentation/fast_streamline_search", "examples_built/23_segmentation/index", "examples_built/23_segmentation/segment_clustering_features", "examples_built/23_segmentation/segment_clustering_metrics", "examples_built/23_segmentation/segment_extending_clustering_framework", "examples_built/23_segmentation/segment_quickbundles", "examples_built/23_segmentation/sg_execution_times", "examples_built/23_segmentation/tissue_classification", "examples_built/26_simulations/index", "examples_built/26_simulations/reconst_dsid", "examples_built/26_simulations/reconst_dsid_0", "examples_built/26_simulations/reconst_dsid_1", "examples_built/26_simulations/sg_execution_times", "examples_built/26_simulations/simulate_dki", "examples_built/26_simulations/simulate_multi_tensor", "examples_built/29_Multiprocessing/index", "examples_built/29_Multiprocessing/reconst_csa_parallel", "examples_built/29_Multiprocessing/reconst_csd_parallel", "examples_built/29_Multiprocessing/sg_execution_times", "examples_built/32_file_formats/index", "examples_built/32_file_formats/sg_execution_times", "examples_built/32_file_formats/streamline_formats", "examples_built/35_visualization/index", "examples_built/35_visualization/sg_execution_times", "examples_built/35_visualization/viz_advanced", "examples_built/35_visualization/viz_bundles", "examples_built/35_visualization/viz_roi_contour", "examples_built/35_visualization/viz_slice", "examples_built/37_workflows/combined_workflow_creation", "examples_built/37_workflows/index", "examples_built/37_workflows/sg_execution_times", "examples_built/37_workflows/workflow_creation", "examples_built/index", "examples_index", "examples_revamped/01_quick_start/README", "examples_revamped/04_preprocessing/README", "examples_revamped/07_reconstruction/README", "examples_revamped/10_contextual_enhancement/README", "examples_revamped/13_fiber_tracking/README", "examples_revamped/17_streamline_analysis/README", "examples_revamped/20_registration/README", "examples_revamped/23_segmentation/README", "examples_revamped/26_simulations/README", "examples_revamped/29_Multiprocessing/README", "examples_revamped/32_file_formats/README", "examples_revamped/35_visualization/README", "examples_revamped/37_workflows/README", "examples_revamped/README", "faq", "gimbal_lock", "glossary", "index", "installation", "interfaces/basic_flow", "interfaces/buan_flow", "interfaces/bundle_segmentation_flow", "interfaces/bundlewarp_registration_flow", "interfaces/data_fetch", "interfaces/denoise_flow", "interfaces/gibbs_unringing_flow", "interfaces/index", "interfaces/motion_flow", "interfaces/reconstruction_flow", "interfaces/registration_flow", "interfaces/tracking_flow", "introduction", "mission", "note_about_examples", "old_highlights", "old_news", "reconstruction_models_list", "reference/dipy", "reference/dipy.__config__", "reference/dipy.align", "reference/dipy.boots", "reference/dipy.core", "reference/dipy.data", "reference/dipy.denoise", "reference/dipy.direction", "reference/dipy.io", "reference/dipy.nn", "reference/dipy.reconst", "reference/dipy.segment", "reference/dipy.sims", "reference/dipy.stats", "reference/dipy.tracking", "reference/dipy.viz", "reference/dipy.workflows", "reference/index", "reference_cmd/dipy_align_affine", "reference_cmd/dipy_align_syn", "reference_cmd/dipy_apply_transform", "reference_cmd/dipy_buan_lmm", "reference_cmd/dipy_buan_profiles", "reference_cmd/dipy_bundlewarp", "reference_cmd/dipy_correct_motion", "reference_cmd/dipy_denoise_lpca", "reference_cmd/dipy_denoise_mppca", "reference_cmd/dipy_denoise_nlmeans", "reference_cmd/dipy_denoise_patch2self", "reference_cmd/dipy_evac_plus", "reference_cmd/dipy_fetch", "reference_cmd/dipy_fit_csa", "reference_cmd/dipy_fit_csd", "reference_cmd/dipy_fit_dki", "reference_cmd/dipy_fit_dti", "reference_cmd/dipy_fit_ivim", "reference_cmd/dipy_fit_mapmri", "reference_cmd/dipy_gibbs_ringing", "reference_cmd/dipy_horizon", "reference_cmd/dipy_info", "reference_cmd/dipy_labelsbundles", "reference_cmd/dipy_mask", "reference_cmd/dipy_median_otsu", "reference_cmd/dipy_recobundles", "reference_cmd/dipy_reslice", "reference_cmd/dipy_slr", "reference_cmd/dipy_snr_in_cc", "reference_cmd/dipy_split", "reference_cmd/dipy_track", "reference_cmd/dipy_track_pft", "reference_cmd/index", "release_notes/release0.10", "release_notes/release0.11", "release_notes/release0.12", "release_notes/release0.13", "release_notes/release0.14", "release_notes/release0.15", "release_notes/release0.16", "release_notes/release0.6", "release_notes/release0.7", "release_notes/release0.8", "release_notes/release0.9", "release_notes/release1.0", "release_notes/release1.1", "release_notes/release1.2", "release_notes/release1.3", "release_notes/release1.4", "release_notes/release1.4.1", "release_notes/release1.5", "release_notes/release1.6", "release_notes/release1.7", "stateoftheart", "subscribe", "theory/b_and_q", "theory/bmatrix", "theory/gqi", "theory/index", "theory/sh_basis", "theory/spherical"], "filenames": ["api_changes.rst", "cite.rst", "data.rst", "dataset_list.rst", "dependencies.rst", "devel/coding_style_guideline.rst", "devel/commit_codes.rst", "devel/gitwash/configure_git.rst", "devel/gitwash/development_workflow.rst", "devel/gitwash/dot2_dot3.rst", "devel/gitwash/following_latest.rst", "devel/gitwash/forking_hell.rst", "devel/gitwash/git_development.rst", "devel/gitwash/git_install.rst", "devel/gitwash/git_intro.rst", "devel/gitwash/git_resources.rst", "devel/gitwash/index.rst", "devel/gitwash/maintainer_workflow.rst", "devel/gitwash/patching.rst", "devel/gitwash/set_up_fork.rst", "devel/index.rst", "devel/intro.rst", "devel/make_release.rst", "devel/python3.rst", "developers.rst", "documentation.rst", "examples_built/01_quick_start/index.rst", "examples_built/01_quick_start/quick_start.rst", "examples_built/01_quick_start/sg_execution_times.rst", "examples_built/01_quick_start/tracking_introduction_eudx.rst", "examples_built/04_preprocessing/brain_extraction_dwi.rst", "examples_built/04_preprocessing/denoise_ascm.rst", "examples_built/04_preprocessing/denoise_gibbs.rst", "examples_built/04_preprocessing/denoise_localpca.rst", "examples_built/04_preprocessing/denoise_mppca.rst", "examples_built/04_preprocessing/denoise_nlmeans.rst", "examples_built/04_preprocessing/denoise_patch2self.rst", "examples_built/04_preprocessing/gradients_spheres.rst", "examples_built/04_preprocessing/index.rst", "examples_built/04_preprocessing/motion_correction.rst", "examples_built/04_preprocessing/piesno.rst", "examples_built/04_preprocessing/reslice_datasets.rst", "examples_built/04_preprocessing/sg_execution_times.rst", "examples_built/04_preprocessing/snr_in_cc.rst", "examples_built/07_reconstruction/index.rst", "examples_built/07_reconstruction/kfold_xval.rst", "examples_built/07_reconstruction/reconst_csa.rst", "examples_built/07_reconstruction/reconst_csd.rst", "examples_built/07_reconstruction/reconst_dki.rst", "examples_built/07_reconstruction/reconst_dki_micro.rst", "examples_built/07_reconstruction/reconst_dsi.rst", "examples_built/07_reconstruction/reconst_dsi_metrics.rst", "examples_built/07_reconstruction/reconst_dsid.rst", "examples_built/07_reconstruction/reconst_dti.rst", "examples_built/07_reconstruction/reconst_forecast.rst", "examples_built/07_reconstruction/reconst_fwdti.rst", "examples_built/07_reconstruction/reconst_gqi.rst", "examples_built/07_reconstruction/reconst_ivim.rst", "examples_built/07_reconstruction/reconst_mapmri.rst", "examples_built/07_reconstruction/reconst_mcsd.rst", "examples_built/07_reconstruction/reconst_msdki.rst", "examples_built/07_reconstruction/reconst_qtdmri.rst", "examples_built/07_reconstruction/reconst_qti.rst", "examples_built/07_reconstruction/reconst_qtiplus.rst", "examples_built/07_reconstruction/reconst_rumba.rst", "examples_built/07_reconstruction/reconst_sfm.rst", "examples_built/07_reconstruction/reconst_sh.rst", "examples_built/07_reconstruction/reconst_shore.rst", "examples_built/07_reconstruction/reconst_shore_metrics.rst", "examples_built/07_reconstruction/restore_dti.rst", "examples_built/07_reconstruction/sg_execution_times.rst", "examples_built/10_contextual_enhancement/contextual_enhancement.rst", "examples_built/10_contextual_enhancement/fiber_to_bundle_coherence.rst", "examples_built/10_contextual_enhancement/index.rst", "examples_built/10_contextual_enhancement/sg_execution_times.rst", "examples_built/13_fiber_tracking/index.rst", "examples_built/13_fiber_tracking/linear_fascicle_evaluation.rst", "examples_built/13_fiber_tracking/sg_execution_times.rst", "examples_built/13_fiber_tracking/surface_seed.rst", "examples_built/13_fiber_tracking/tracking_bootstrap_peaks.rst", "examples_built/13_fiber_tracking/tracking_deterministic.rst", "examples_built/13_fiber_tracking/tracking_introduction_eudx.rst", "examples_built/13_fiber_tracking/tracking_introduction_eudx_0.rst", "examples_built/13_fiber_tracking/tracking_introduction_eudx_1.rst", "examples_built/13_fiber_tracking/tracking_pft.rst", "examples_built/13_fiber_tracking/tracking_probabilistic.rst", "examples_built/13_fiber_tracking/tracking_ptt.rst", "examples_built/13_fiber_tracking/tracking_rumba.rst", "examples_built/13_fiber_tracking/tracking_sfm.rst", "examples_built/13_fiber_tracking/tracking_stopping_criterion.rst", "examples_built/17_streamline_analysis/afq_tract_profiles.rst", "examples_built/17_streamline_analysis/bundle_assignment_maps.rst", "examples_built/17_streamline_analysis/bundle_shape_similarity.rst", "examples_built/17_streamline_analysis/cluster_confidence.rst", "examples_built/17_streamline_analysis/index.rst", "examples_built/17_streamline_analysis/path_length_map.rst", "examples_built/17_streamline_analysis/sg_execution_times.rst", "examples_built/17_streamline_analysis/streamline_length.rst", "examples_built/17_streamline_analysis/streamline_tools.rst", "examples_built/20_registration/affine_registration_3d.rst", "examples_built/20_registration/affine_registration_masks.rst", "examples_built/20_registration/bundle_group_registration.rst", "examples_built/20_registration/bundle_registration.rst", "examples_built/20_registration/bundlewarp_registration.rst", "examples_built/20_registration/index.rst", "examples_built/20_registration/register_binary_fuzzy.rst", "examples_built/20_registration/sg_execution_times.rst", "examples_built/20_registration/streamline_registration.rst", "examples_built/20_registration/syn_registration_2d.rst", "examples_built/20_registration/syn_registration_3d.rst", "examples_built/23_segmentation/brain_extraction_dwi.rst", "examples_built/23_segmentation/brain_extraction_dwi_0.rst", "examples_built/23_segmentation/brain_extraction_dwi_1.rst", "examples_built/23_segmentation/bundle_extraction.rst", "examples_built/23_segmentation/fast_streamline_search.rst", "examples_built/23_segmentation/index.rst", "examples_built/23_segmentation/segment_clustering_features.rst", "examples_built/23_segmentation/segment_clustering_metrics.rst", "examples_built/23_segmentation/segment_extending_clustering_framework.rst", "examples_built/23_segmentation/segment_quickbundles.rst", "examples_built/23_segmentation/sg_execution_times.rst", "examples_built/23_segmentation/tissue_classification.rst", "examples_built/26_simulations/index.rst", "examples_built/26_simulations/reconst_dsid.rst", "examples_built/26_simulations/reconst_dsid_0.rst", "examples_built/26_simulations/reconst_dsid_1.rst", "examples_built/26_simulations/sg_execution_times.rst", "examples_built/26_simulations/simulate_dki.rst", "examples_built/26_simulations/simulate_multi_tensor.rst", "examples_built/29_Multiprocessing/index.rst", "examples_built/29_Multiprocessing/reconst_csa_parallel.rst", "examples_built/29_Multiprocessing/reconst_csd_parallel.rst", "examples_built/29_Multiprocessing/sg_execution_times.rst", "examples_built/32_file_formats/index.rst", "examples_built/32_file_formats/sg_execution_times.rst", "examples_built/32_file_formats/streamline_formats.rst", "examples_built/35_visualization/index.rst", "examples_built/35_visualization/sg_execution_times.rst", "examples_built/35_visualization/viz_advanced.rst", "examples_built/35_visualization/viz_bundles.rst", "examples_built/35_visualization/viz_roi_contour.rst", "examples_built/35_visualization/viz_slice.rst", "examples_built/37_workflows/combined_workflow_creation.rst", "examples_built/37_workflows/index.rst", "examples_built/37_workflows/sg_execution_times.rst", "examples_built/37_workflows/workflow_creation.rst", "examples_built/index.rst", "examples_index.rst", "examples_revamped/01_quick_start/README.rst", "examples_revamped/04_preprocessing/README.rst", "examples_revamped/07_reconstruction/README.rst", "examples_revamped/10_contextual_enhancement/README.rst", "examples_revamped/13_fiber_tracking/README.rst", "examples_revamped/17_streamline_analysis/README.rst", "examples_revamped/20_registration/README.rst", "examples_revamped/23_segmentation/README.rst", "examples_revamped/26_simulations/README.rst", "examples_revamped/29_Multiprocessing/README.rst", "examples_revamped/32_file_formats/README.rst", "examples_revamped/35_visualization/README.rst", "examples_revamped/37_workflows/README.rst", "examples_revamped/README.rst", "faq.rst", "gimbal_lock.rst", "glossary.rst", "index.rst", "installation.rst", "interfaces/basic_flow.rst", "interfaces/buan_flow.rst", "interfaces/bundle_segmentation_flow.rst", "interfaces/bundlewarp_registration_flow.rst", "interfaces/data_fetch.rst", "interfaces/denoise_flow.rst", "interfaces/gibbs_unringing_flow.rst", "interfaces/index.rst", "interfaces/motion_flow.rst", "interfaces/reconstruction_flow.rst", "interfaces/registration_flow.rst", "interfaces/tracking_flow.rst", "introduction.rst", "mission.rst", "note_about_examples.rst", "old_highlights.rst", "old_news.rst", "reconstruction_models_list.rst", "reference/dipy.rst", "reference/dipy.__config__.rst", "reference/dipy.align.rst", "reference/dipy.boots.rst", "reference/dipy.core.rst", "reference/dipy.data.rst", "reference/dipy.denoise.rst", "reference/dipy.direction.rst", "reference/dipy.io.rst", "reference/dipy.nn.rst", "reference/dipy.reconst.rst", "reference/dipy.segment.rst", "reference/dipy.sims.rst", "reference/dipy.stats.rst", "reference/dipy.tracking.rst", "reference/dipy.viz.rst", "reference/dipy.workflows.rst", "reference/index.rst", "reference_cmd/dipy_align_affine.rst", "reference_cmd/dipy_align_syn.rst", "reference_cmd/dipy_apply_transform.rst", "reference_cmd/dipy_buan_lmm.rst", "reference_cmd/dipy_buan_profiles.rst", "reference_cmd/dipy_bundlewarp.rst", "reference_cmd/dipy_correct_motion.rst", "reference_cmd/dipy_denoise_lpca.rst", "reference_cmd/dipy_denoise_mppca.rst", "reference_cmd/dipy_denoise_nlmeans.rst", "reference_cmd/dipy_denoise_patch2self.rst", "reference_cmd/dipy_evac_plus.rst", "reference_cmd/dipy_fetch.rst", "reference_cmd/dipy_fit_csa.rst", "reference_cmd/dipy_fit_csd.rst", "reference_cmd/dipy_fit_dki.rst", "reference_cmd/dipy_fit_dti.rst", "reference_cmd/dipy_fit_ivim.rst", "reference_cmd/dipy_fit_mapmri.rst", "reference_cmd/dipy_gibbs_ringing.rst", "reference_cmd/dipy_horizon.rst", "reference_cmd/dipy_info.rst", "reference_cmd/dipy_labelsbundles.rst", "reference_cmd/dipy_mask.rst", "reference_cmd/dipy_median_otsu.rst", "reference_cmd/dipy_recobundles.rst", "reference_cmd/dipy_reslice.rst", "reference_cmd/dipy_slr.rst", "reference_cmd/dipy_snr_in_cc.rst", "reference_cmd/dipy_split.rst", "reference_cmd/dipy_track.rst", "reference_cmd/dipy_track_pft.rst", "reference_cmd/index.rst", "release_notes/release0.10.rst", "release_notes/release0.11.rst", "release_notes/release0.12.rst", "release_notes/release0.13.rst", "release_notes/release0.14.rst", "release_notes/release0.15.rst", "release_notes/release0.16.rst", "release_notes/release0.6.rst", "release_notes/release0.7.rst", "release_notes/release0.8.rst", "release_notes/release0.9.rst", "release_notes/release1.0.rst", "release_notes/release1.1.rst", "release_notes/release1.2.rst", "release_notes/release1.3.rst", "release_notes/release1.4.rst", "release_notes/release1.4.1.rst", "release_notes/release1.5.rst", "release_notes/release1.6.rst", "release_notes/release1.7.rst", "stateoftheart.rst", "subscribe.rst", "theory/b_and_q.rst", "theory/bmatrix.rst", "theory/gqi.rst", "theory/index.rst", "theory/sh_basis.rst", "theory/spherical.rst"], "titles": ["API changes", "Publications", "Data", "&lt;no title&gt;", "Dependencies", "DIPY Coding Style Guideline", "Commit message codes", "Configure git", "Development workflow", "Two and three dots in difference specs", "Following the latest source", "Making your own copy (fork) of DIPY", "Git for development", "Install git", "Introduction", "git resources", "Working with DIPY source code", "Maintainer workflow", "Making a patch", "Set up your fork", "DIPY development", "Introduction", "A guide to making a DIPY release", "Keeping code compatible with Pythons 2 and 3", "Developers", "Documentation", "Quick Start", "Getting started with DIPY", "Computation times", "Introduction to Basic Tracking", "Brain segmentation with median_otsu", "Denoise images using Adaptive Soft Coefficient Matching (ASCM)", "Suppress Gibbs oscillations", "Denoise images using Local PCA via empirical thresholds", "Denoise images using the Marcenko-Pastur PCA algorithm", "Denoise images using Non-Local Means (NLMEANS)", "Patch2Self: Self-Supervised Denoising via Statistical Independence", "Gradients and Spheres", "Preprocessing", "Between-volumes Motion Correction on DWI datasets", "Noise estimation using PIESNO", "Reslice diffusion datasets", "Computation times", "SNR estimation for Diffusion-Weighted Images", "Reconstruction", "K-fold cross-validation for model comparison", "Reconstruct with Constant Solid Angle (Q-Ball)", "Reconstruction with Constrained Spherical Deconvolution", "Reconstruction of the diffusion signal with the kurtosis tensor model", "Reconstruction of the diffusion signal with the WMTI model", "Reconstruct with Diffusion Spectrum Imaging", "Calculate DSI-based scalar maps", "DSI Deconvolution vs DSI", "Reconstruction of the diffusion signal with the Tensor model", "Crossing invariant fiber response function with FORECAST model", "Using the free water elimination model to remove DTI free water contamination", "Reconstruct with Generalized Q-Sampling Imaging", "Intravoxel incoherent motion", "Continuous and analytical diffusion signal modelling with MAP-MRI", "Reconstruction with Multi-Shell Multi-Tissue CSD", "Mean signal diffusion kurtosis imaging (MSDKI)", "Estimating diffusion time dependent q-space indices using qt-dMRI", "Reconstruct with Q-space Trajectory Imaging (QTI)", "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)", "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution", "Reconstruction with the Sparse Fascicle Model", "Signal Reconstruction Using Spherical Harmonics", "Continuous and analytical diffusion signal modelling with 3D-SHORE", "Calculate SHORE scalar maps", "Using the RESTORE algorithm for robust tensor fitting", "Computation times", "Crossing-preserving contextual enhancement", "Fiber to bundle coherence measures", "Contextual Enhancement", "Computation times", "Fiber Tracking", "Linear fascicle evaluation (LiFE)", "Computation times", "Surface seeding for tractography", "Bootstrap and Closest Peak Direction Getters Example", "An introduction to the Deterministic Maximum Direction Getter", "Introduction to Basic Tracking", "Introduction to Basic Tracking", "Introduction to Basic Tracking", "Particle Filtering Tractography", "An introduction to the Probabilistic Direction Getter", "Parallel Transport Tractography", "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)", "Tracking with the Sparse Fascicle Model", "Using Various Stopping Criterion for Tractography", "Extracting AFQ tract profiles from segmented bundles", "BUAN Bundle Assignment Maps Creation", "BUAN Bundle Shape Similarity Score", "Calculation of Outliers with Cluster Confidence Index", "Streamlines Analysis and Connectivity", "Calculate Path Length Map", "Computation times", "Streamline length and size reduction", "Connectivity Matrices, ROI Intersections and Density Maps", "Affine Registration in 3D", "Affine Registration with Masks", "Groupwise Bundle Registration", "Direct Bundle Registration", "Nonrigid Bundle Registration with BundleWarp", "Registration", "Diffeomorphic Registration with binary and fuzzy images", "Computation times", "Applying image-based deformations to streamlines", "Symmetric Diffeomorphic Registration in 2D", "Symmetric Diffeomorphic Registration in 3D", "Brain segmentation with median_otsu", "Brain segmentation with median_otsu", "Brain segmentation with median_otsu", "Automatic Fiber Bundle Extraction with RecoBundles", "Fast Streamline Search", "Segmentation", "Tractography Clustering - Available Features", "Tractography Clustering - Available Metrics", "Enhancing QuickBundles with different metrics and features", "Tractography Clustering with QuickBundles", "Computation times", "Tissue Classification of a T1-weighted Structural Image", "Simulation", "DSI Deconvolution vs DSI", "DSI Deconvolution vs DSI", "DSI Deconvolution vs DSI", "Computation times", "DKI MultiTensor Simulation", "MultiTensor Simulation", "Multiprocessing", "Parallel reconstruction using Q-Ball", "Parallel reconstruction using CSD", "Computation times", "File Formats", "Computation times", "Read/Write streamline files", "Visualization", "Computation times", "Advanced interactive visualization", "Visualize bundles and metrics on bundles", "Visualization of ROI Surface Rendered with Streamlines", "Simple volume slicing", "Creating a new combined workflow", "Workflows", "Computation times", "Creating a new workflow.", "Examples", "Examples", "Quick Start", "Preprocessing", "Reconstruction", "Contextual Enhancement", "Fiber Tracking", "Streamlines Analysis and Connectivity", "Registration", "Segmentation", "Simulation", "Multiprocessing", "File Formats", "Visualization", "Workflows", "Examples", "Frequently Asked Questions", "Gimbal lock", "Glossary", "Diffusion Imaging In Python", "Installation", "Introduction to command line interfaces", "BUndle ANalytics (BUAN) framework", "White Matter Bundle Segmentation with RecoBundles", "Nonrigid White Matter Bundle Registration with BundleWarp", "Downloading DIPY datasets", "Denoising", "Gibbs Unringing", "DIPY Workflows Interfaces", "Between-Volumes Motion Correction", "Reconstruction", "Registration", "Tracking", "What is DIPY?", "Mission statement", "A note about the examples", "Older Highlights", "Past Announcements", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dipy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__config__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">align</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">boots</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>", "API Reference", "dipy_align_affine", "dipy_align_syn", "dipy_apply_transform", "dipy_buan_lmm", "dipy_buan_profiles", "dipy_bundlewarp", "dipy_correct_motion", "dipy_denoise_lpca", "dipy_denoise_mppca", "dipy_denoise_nlmeans", "dipy_denoise_patch2self", "dipy_evac_plus", "dipy_fetch", "dipy_fit_csa", "dipy_fit_csd", "dipy_fit_dki", "dipy_fit_dti", "dipy_fit_ivim", "dipy_fit_mapmri", "dipy_gibbs_ringing", "dipy_horizon", "dipy_info", "dipy_labelsbundles", "dipy_mask", "dipy_median_otsu", "dipy_recobundles", "dipy_reslice", "dipy_slr", "dipy_snr_in_cc", "dipy_split", "dipy_track", "dipy_track_pft", "Command Line Utilities Reference", "Release notes for DIPY version 0.10", "Release notes for DIPY version 0.11", "Release notes for DIPY version 0.12", "Release notes for DIPY version 0.13", "Release notes for DIPY version 0.14", "Release notes for DIPY version 0.15", "Release notes for DIPY version 0.16", "Release notes for DIPY version 0.6", "Release notes for DIPY version 0.7", "Release notes for DIPY version 0.8", "Release notes for DIPY version 0.9", "Release notes for DIPY version 1.0", "Release notes for DIPY version 1.1", "Release notes for DIPY version 1.2", "Release notes for DIPY version 1.3", "Release notes for DIPY version 1.4", "Release notes for DIPY version 1.4.1", "Release notes for DIPY version 1.5", "Release notes for DIPY version 1.6", "Release notes for DIPY version 1.7", "A quick overview of features", "Subscribe", "DIY Stuff about b and q", "The B matrix and Siemens DICOM", "Generalised Q-Sampling Imaging", "Theory and concepts", "Spherical Harmonic bases", "Spherical coordinates"], "terms": {"here": [0, 7, 8, 11, 13, 14, 15, 18, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 163, 165, 166, 169, 170, 176, 181, 182, 187, 189, 193, 195, 196, 197, 199, 246, 254, 256, 259, 260, 263], "we": [0, 4, 5, 8, 11, 18, 19, 21, 22, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 182, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263], "provid": [0, 5, 27, 29, 34, 36, 47, 48, 49, 54, 57, 58, 59, 60, 61, 62, 63, 67, 76, 80, 81, 82, 83, 87, 88, 93, 95, 99, 100, 102, 103, 107, 109, 113, 116, 117, 118, 119, 135, 138, 139, 140, 167, 168, 170, 176, 178, 181, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 221, 223, 224, 233, 236, 243, 244, 245, 247, 250, 254, 256, 263], "inform": [0, 2, 3, 5, 8, 13, 22, 27, 29, 30, 31, 33, 34, 36, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 81, 82, 83, 84, 89, 90, 97, 99, 100, 107, 110, 111, 112, 116, 117, 118, 119, 127, 135, 162, 166, 167, 168, 169, 170, 172, 175, 177, 178, 182, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 201, 203, 204, 213, 224, 243, 247, 250, 256, 263], "about": [0, 2, 5, 8, 18, 22, 25, 27, 34, 47, 48, 49, 50, 53, 57, 58, 59, 60, 61, 62, 63, 64, 76, 85, 87, 95, 99, 107, 116, 117, 118, 119, 127, 130, 131, 142, 145, 146, 147, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 182, 187, 189, 190, 193, 194, 195, 198, 201, 224, 236, 240, 241, 245, 247, 249, 253], "function": [0, 5, 6, 20, 22, 27, 29, 32, 34, 35, 37, 39, 40, 44, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 76, 81, 82, 83, 85, 87, 88, 97, 98, 99, 100, 101, 102, 103, 105, 108, 113, 114, 116, 117, 118, 127, 128, 130, 131, 135, 138, 141, 146, 162, 165, 166, 167, 176, 178, 181, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 262, 263], "class": [0, 5, 53, 55, 59, 69, 76, 99, 108, 109, 114, 118, 121, 135, 138, 142, 145, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 236, 243, 244, 245], "have": [0, 8, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 27, 29, 35, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 50, 53, 56, 57, 58, 59, 60, 62, 64, 65, 66, 69, 76, 79, 81, 82, 83, 85, 88, 90, 93, 95, 97, 98, 99, 101, 102, 103, 107, 109, 116, 117, 118, 119, 121, 127, 135, 138, 139, 141, 142, 145, 146, 147, 150, 162, 163, 164, 166, 168, 169, 170, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 208, 221, 223, 228, 230, 236, 240, 243, 245, 246, 247, 250, 251, 258, 259, 262], "been": [0, 5, 8, 17, 23, 33, 34, 45, 48, 53, 57, 58, 69, 76, 101, 102, 107, 119, 121, 176, 187, 189, 193, 195, 196, 199, 262], "remov": [0, 8, 23, 30, 32, 33, 34, 44, 46, 49, 53, 60, 64, 70, 72, 76, 88, 93, 107, 108, 109, 110, 111, 112, 119, 135, 146, 166, 173, 182, 187, 189, 191, 193, 195, 196, 199, 201, 222, 230, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], "renam": [0, 18, 167, 237, 238, 243, 244, 245, 247, 249], "ar": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 27, 29, 32, 33, 34, 36, 37, 40, 43, 45, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 71, 72, 76, 80, 81, 82, 83, 85, 88, 89, 90, 92, 93, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 113, 114, 116, 117, 118, 121, 127, 128, 131, 135, 138, 139, 141, 142, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 178, 179, 181, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 209, 210, 219, 221, 224, 227, 228, 229, 230, 233, 236, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263], "deprec": [0, 5, 139, 182, 189, 193, 195, 199, 236, 238, 240, 241, 242, 243, 247, 248, 249, 250, 252, 253, 254], "recommend": [0, 5, 32, 39, 47, 48, 50, 58, 61, 63, 64, 113, 114, 135, 138, 141, 162, 166, 172, 173, 175, 187, 189, 194, 195, 199, 201, 205, 218, 219, 242, 256], "dure": [0, 7, 8, 39, 55, 58, 63, 69, 76, 100, 107, 165, 175, 176, 177, 187, 189, 194, 195, 201, 216, 217, 236, 241, 249], "differ": [0, 14, 23, 30, 31, 32, 34, 35, 36, 37, 40, 41, 45, 47, 48, 50, 55, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 72, 76, 85, 88, 90, 97, 100, 102, 103, 105, 107, 108, 110, 111, 112, 113, 115, 116, 119, 120, 121, 127, 135, 138, 141, 146, 162, 163, 166, 168, 170, 173, 177, 178, 182, 187, 189, 190, 191, 194, 195, 196, 199, 200, 201, 204, 223, 224, 236, 240, 241, 244, 245, 247, 249, 250, 254, 256, 258, 259, 262, 263], "releas": [0, 20, 25, 165, 182, 183, 187, 195, 256], "circl": [0, 108, 189, 199], "denois": [0, 2, 3, 25, 32, 38, 40, 42, 48, 59, 60, 69, 71, 72, 142, 146, 165, 166, 174, 182, 185, 190, 202, 210, 211, 212, 213, 222, 238, 245, 247, 250, 251, 253, 254, 255], "localpca": [0, 34, 59, 60, 202, 210, 239, 247, 250], "genpca": [0, 202], "can": [0, 2, 4, 5, 7, 8, 15, 17, 18, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 76, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 131, 135, 138, 139, 141, 142, 145, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 210, 213, 217, 218, 219, 223, 224, 228, 237, 241, 245, 247, 250, 253, 254, 256, 257, 258, 259, 262, 263], "us": [0, 1, 2, 3, 4, 6, 7, 8, 13, 15, 19, 21, 22, 23, 27, 29, 30, 32, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 64, 65, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 129, 132, 135, 138, 139, 141, 142, 145, 146, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 181, 182, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263], "fewer": [0, 113], "imag": [0, 1, 2, 3, 5, 22, 27, 29, 30, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 97, 98, 99, 100, 103, 104, 106, 108, 109, 110, 111, 112, 115, 120, 123, 124, 125, 127, 130, 131, 138, 139, 140, 141, 146, 162, 164, 167, 172, 173, 174, 175, 178, 180, 182, 187, 189, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 216, 218, 219, 220, 223, 224, 226, 227, 233, 234, 237, 238, 241, 242, 245, 247, 249, 253, 256, 258, 262], "than": [0, 5, 17, 18, 19, 22, 24, 31, 34, 36, 39, 47, 48, 49, 53, 55, 57, 58, 59, 60, 61, 63, 65, 69, 72, 89, 93, 95, 97, 98, 99, 100, 113, 116, 127, 141, 146, 147, 163, 164, 166, 176, 182, 183, 184, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 210, 223, 228, 230, 236, 237, 240, 243, 249, 253, 254], "patch": [0, 16, 17, 20, 31, 33, 36, 172, 191, 201, 210, 211, 212, 240, 247, 249, 252, 254], "voxel": [0, 2, 3, 27, 29, 30, 32, 33, 34, 36, 40, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 76, 80, 81, 82, 83, 85, 88, 89, 95, 97, 98, 99, 107, 110, 111, 112, 123, 124, 125, 127, 128, 131, 135, 138, 141, 162, 167, 172, 176, 177, 178, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 217, 220, 227, 229, 233, 234, 236, 237, 238, 243, 245, 246, 247, 249, 250, 256], "pca_noise_estim": [0, 33, 255], "ha": [0, 5, 8, 15, 17, 22, 23, 29, 33, 34, 36, 39, 40, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 60, 62, 63, 64, 71, 76, 80, 81, 82, 83, 85, 89, 97, 98, 99, 102, 107, 109, 116, 118, 119, 121, 131, 141, 162, 163, 164, 166, 168, 176, 178, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 233, 236, 238, 241, 243, 245, 249, 255, 258, 262, 263], "new": [0, 5, 6, 10, 12, 17, 18, 19, 21, 22, 24, 27, 36, 37, 39, 41, 47, 61, 64, 71, 72, 76, 100, 102, 118, 135, 141, 143, 144, 146, 165, 166, 182, 183, 187, 189, 190, 191, 194, 195, 196, 197, 199, 201, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 262], "argument": [0, 57, 64, 76, 98, 101, 142, 145, 169, 170, 171, 172, 173, 175, 176, 177, 178, 187, 189, 193, 194, 195, 198, 200, 201, 235, 241, 243, 247, 249, 251, 252, 254], "images_as_sampl": 0, "gener": [0, 1, 5, 8, 11, 14, 18, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 162, 165, 166, 167, 168, 173, 181, 182, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 216, 217, 221, 223, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "furi": [0, 29, 64, 78, 81, 82, 83, 107, 138, 139, 162, 166, 182, 200, 241, 247, 248, 249, 253], "minimum": [0, 61, 72, 102, 113, 118, 182, 187, 189, 192, 194, 195, 196, 199, 201, 241, 245, 248], "version": [0, 2, 3, 4, 8, 22, 23, 31, 32, 33, 34, 35, 36, 55, 56, 71, 72, 80, 98, 105, 107, 127, 162, 167, 178, 182, 183, 185, 187, 189, 190, 193, 195, 197, 199, 202, 256, 262], "i": [0, 1, 4, 5, 6, 7, 8, 9, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 147, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263], "distutil": [0, 22, 249, 253], "drop": [0, 237, 238, 242, 247, 253], "io": [0, 2, 3, 8, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 98, 99, 100, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 127, 130, 131, 135, 140, 141, 162, 165, 182, 185, 187, 190, 196, 197, 202, 236, 238, 240, 242, 243, 247, 248, 253, 254], "bvectxt": [0, 182, 202, 253, 254], "modul": [0, 4, 5, 20, 22, 30, 31, 32, 33, 34, 36, 40, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 76, 79, 91, 92, 98, 99, 110, 111, 112, 113, 114, 116, 117, 118, 119, 127, 130, 131, 138, 162, 166, 182, 185, 202, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 258, 260, 262], "The": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 71, 72, 76, 80, 81, 82, 83, 85, 87, 88, 89, 90, 93, 95, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 121, 127, 128, 130, 135, 138, 140, 141, 142, 145, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 178, 180, 181, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 210, 211, 218, 220, 223, 224, 225, 228, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262], "default": [0, 8, 11, 18, 23, 27, 29, 30, 35, 36, 41, 51, 53, 57, 63, 64, 65, 69, 71, 72, 81, 82, 83, 87, 88, 95, 99, 101, 105, 110, 111, 112, 113, 114, 116, 117, 121, 130, 138, 141, 142, 145, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 240, 241, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 262], "option": [0, 4, 8, 17, 18, 29, 32, 34, 36, 46, 48, 57, 58, 59, 64, 81, 82, 83, 99, 102, 130, 139, 142, 145, 166, 167, 171, 172, 173, 175, 176, 177, 178, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 235, 236, 237, 238, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "command": [0, 7, 8, 10, 15, 18, 22, 25, 27, 32, 72, 141, 142, 145, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 190, 201, 217, 227, 238, 243, 244, 245, 247, 249, 253], "line": [0, 5, 7, 8, 10, 17, 18, 22, 23, 25, 29, 34, 39, 41, 43, 60, 61, 63, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 93, 95, 98, 102, 113, 114, 138, 139, 140, 141, 142, 145, 164, 166, 168, 169, 170, 174, 176, 178, 182, 187, 194, 195, 199, 200, 201, 217, 227, 236, 237, 238, 240, 241, 244, 245, 246, 247, 248, 249, 253, 263], "patch2self": [0, 38, 42, 146, 182, 201, 202, 213, 251, 252, 253, 254], "ridg": [0, 36, 191, 195, 201, 213, 253], "ol": [0, 36, 191, 195, 201, 213, 218, 219, 253], "track": [0, 1, 5, 7, 17, 25, 26, 28, 53, 65, 72, 76, 77, 78, 79, 80, 84, 85, 86, 89, 90, 93, 95, 97, 98, 102, 103, 107, 116, 117, 118, 135, 138, 139, 140, 167, 174, 182, 185, 187, 189, 190, 193, 195, 196, 198, 202, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "pmf": [0, 79, 85, 86, 87, 178, 238, 241, 253], "parent": [0, 189, 201, 202], "pmfgen": 0, "mandatori": [0, 142, 145, 187], "paramet": [0, 5, 22, 27, 30, 31, 32, 33, 34, 36, 45, 48, 49, 51, 53, 56, 57, 58, 59, 60, 62, 63, 65, 67, 69, 80, 89, 102, 103, 105, 108, 110, 111, 112, 113, 121, 127, 131, 135, 142, 145, 162, 170, 172, 176, 177, 178, 182, 203, 204, 212, 213, 219, 220, 223, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 253, 254, 255, 258], "sphere": [0, 38, 42, 46, 47, 50, 52, 53, 54, 56, 58, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 79, 80, 84, 85, 86, 87, 88, 89, 98, 123, 124, 125, 128, 130, 131, 146, 178, 185, 190, 192, 194, 195, 197, 199, 200, 201, 202, 236, 238, 241, 243, 245, 247, 248, 262, 263], "vertic": [0, 37, 47, 50, 52, 60, 64, 65, 66, 72, 78, 88, 123, 124, 125, 128, 189, 190, 192, 195, 197, 199, 200, 202, 241, 263], "correspond": [0, 1, 5, 27, 32, 34, 36, 43, 45, 51, 57, 59, 60, 61, 62, 63, 64, 67, 68, 71, 90, 97, 108, 109, 116, 127, 135, 139, 162, 166, 178, 187, 189, 191, 192, 194, 195, 199, 200, 201, 203, 208, 222, 256], "spheric": [0, 5, 25, 34, 37, 44, 45, 46, 49, 54, 59, 60, 63, 65, 70, 71, 72, 75, 77, 80, 84, 85, 89, 128, 130, 146, 165, 174, 182, 183, 185, 189, 190, 192, 194, 200, 201, 202, 216, 217, 236, 241, 243, 244, 245, 247, 249, 261], "distribut": [0, 22, 29, 34, 36, 37, 40, 45, 46, 47, 53, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 72, 76, 80, 81, 82, 83, 85, 88, 98, 99, 121, 130, 166, 167, 172, 176, 178, 181, 185, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 210, 211, 213, 217, 233, 234, 245, 248, 260, 262], "valu": [0, 2, 3, 27, 29, 32, 33, 34, 36, 37, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 80, 81, 82, 83, 85, 89, 90, 92, 93, 95, 98, 99, 102, 103, 105, 113, 121, 127, 128, 130, 135, 138, 146, 147, 162, 164, 165, 167, 168, 170, 172, 173, 175, 176, 178, 182, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 208, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262], "get_pmf_valu": 0, "point": [0, 5, 8, 18, 19, 22, 29, 32, 37, 45, 48, 56, 58, 59, 60, 61, 65, 66, 71, 72, 76, 81, 82, 83, 85, 87, 88, 97, 102, 103, 116, 117, 118, 119, 128, 162, 163, 164, 170, 177, 178, 182, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 208, 221, 222, 229, 230, 233, 234, 236, 238, 241, 242, 243, 247, 248, 249, 250, 252, 253, 254, 260, 263], "xyz": [0, 37, 66, 189, 190, 193, 195, 199, 249], "which": [0, 5, 6, 7, 8, 22, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 95, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 118, 119, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 162, 165, 166, 167, 169, 172, 173, 176, 177, 178, 181, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 223, 240, 247, 250, 256, 259, 262], "return": [0, 18, 23, 30, 33, 34, 46, 47, 48, 49, 51, 53, 57, 58, 59, 61, 64, 65, 68, 80, 84, 90, 97, 98, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 128, 130, 138, 142, 176, 178, 211, 237, 238, 241, 244, 246, 248, 253, 255], "locat": [0, 5, 40, 53, 69, 90, 100, 108, 142, 145, 168, 172, 176, 177, 187, 189, 190, 199], "orient": [0, 29, 43, 46, 47, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 67, 71, 72, 78, 80, 81, 82, 83, 85, 90, 98, 99, 102, 107, 116, 117, 130, 162, 167, 176, 178, 182, 187, 189, 190, 192, 193, 194, 195, 197, 198, 199, 201, 217, 240, 241, 247, 262], "segment": [0, 5, 25, 29, 32, 34, 38, 42, 43, 45, 46, 48, 49, 53, 59, 60, 64, 71, 81, 82, 83, 84, 88, 91, 92, 94, 96, 97, 102, 103, 107, 108, 109, 113, 114, 116, 117, 118, 119, 120, 121, 130, 131, 142, 168, 174, 178, 182, 185, 187, 195, 197, 199, 202, 223, 227, 233, 234, 238, 243, 244, 247, 249, 252, 253, 254, 255], "from": [0, 2, 3, 5, 7, 9, 10, 13, 15, 16, 17, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 140, 142, 145, 146, 162, 163, 164, 165, 167, 168, 169, 170, 173, 176, 178, 181, 182, 183, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 210, 213, 217, 218, 219, 223, 227, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263], "metric": [0, 1, 32, 49, 53, 55, 60, 63, 64, 90, 92, 93, 99, 100, 101, 102, 105, 107, 108, 109, 115, 116, 119, 120, 136, 137, 146, 176, 177, 178, 182, 185, 190, 192, 193, 194, 195, 198, 201, 202, 203, 204, 206, 218, 219, 220, 221, 230, 233, 234, 236, 238, 241, 242, 243, 244, 247, 250, 252, 253, 254], "import": [0, 2, 6, 20, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 162, 165, 166, 187, 189, 190, 192, 193, 195, 196, 197, 200, 202, 236, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 252, 253, 254, 255, 258], "resamplefeatur": [0, 90, 116, 196], "wa": [0, 8, 9, 22, 23, 24, 31, 32, 34, 35, 40, 43, 46, 48, 49, 54, 55, 57, 58, 59, 60, 63, 64, 65, 69, 76, 95, 98, 99, 102, 127, 135, 142, 163, 167, 176, 182, 183, 187, 189, 190, 191, 193, 194, 195, 196, 200, 201, 243, 244, 245, 246, 247], "replac": [0, 7, 23, 39, 41, 69, 95, 135, 165, 172, 182, 187, 191, 195, 196, 199, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252], "featurespe": [0, 90, 116, 117, 118, 196, 238], "name": [0, 2, 3, 5, 8, 11, 17, 18, 19, 21, 22, 27, 53, 59, 86, 98, 99, 121, 142, 145, 163, 166, 168, 169, 170, 171, 172, 176, 177, 182, 187, 189, 190, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 226, 227, 229, 231, 232, 233, 234, 236, 238, 239, 241, 242, 245, 247, 248, 249, 250, 252, 258], "number": [0, 1, 22, 27, 30, 32, 34, 36, 37, 39, 40, 45, 47, 48, 53, 55, 57, 59, 61, 62, 63, 64, 65, 78, 85, 95, 97, 98, 99, 100, 101, 102, 103, 105, 110, 111, 112, 116, 117, 118, 119, 121, 130, 131, 135, 164, 167, 173, 177, 178, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 215, 216, 217, 222, 223, 224, 227, 229, 230, 232, 233, 234, 236, 238, 241, 242, 245, 246, 247, 250, 252, 253, 254, 256, 260], "core": [0, 4, 7, 13, 24, 25, 27, 29, 30, 31, 33, 34, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 107, 110, 111, 112, 123, 124, 125, 127, 128, 130, 131, 140, 165, 173, 182, 185, 187, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 216, 217, 222, 229, 236, 238, 240, 243, 244, 245, 247, 248, 249, 252, 255], "thread": [0, 187, 191, 194, 195, 196, 201, 230, 236, 237, 241, 242, 252, 254], "standard": [0, 2, 3, 4, 5, 31, 35, 40, 43, 48, 49, 52, 55, 59, 60, 61, 66, 69, 72, 90, 108, 113, 123, 124, 125, 141, 146, 147, 166, 172, 182, 184, 187, 189, 190, 191, 193, 195, 197, 198, 199, 200, 201, 204, 210, 211, 219, 236, 241, 245, 247, 252, 254, 256, 258, 263], "num_thread": [0, 187, 191, 196, 201, 230, 251, 252], "openmp": [0, 182, 187, 191, 196, 201, 230, 236, 238, 239], "parallel": [0, 40, 47, 54, 58, 61, 64, 75, 77, 85, 88, 129, 132, 141, 146, 165, 176, 187, 189, 191, 192, 195, 196, 197, 201, 216, 217, 221, 230, 237, 238, 241, 245, 247, 250, 253, 254, 255], "num_process": [0, 32, 47, 64, 85, 88, 130, 131, 173, 187, 191, 192, 195, 201, 216, 217, 222, 229], "multiprocess": [0, 25, 130, 131, 182, 192, 195, 201, 216, 217, 237, 238, 241, 245, 246, 252], "packag": [0, 5, 22, 29, 48, 55, 58, 59, 62, 63, 66, 69, 81, 82, 83, 139, 179, 187, 189, 190, 193, 194, 195, 196, 199, 201, 236, 240, 242, 244, 245, 247, 250, 252, 258, 259], "logic": [0, 99, 194, 195, 199, 236, 243], "when": [0, 1, 5, 6, 7, 8, 9, 18, 22, 23, 29, 48, 50, 55, 58, 63, 64, 69, 81, 82, 83, 84, 89, 90, 97, 98, 101, 102, 107, 116, 117, 118, 127, 135, 139, 142, 145, 162, 163, 166, 178, 187, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 204, 236, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 258, 262], "If": [0, 1, 2, 5, 8, 11, 17, 18, 21, 22, 23, 24, 29, 36, 47, 50, 57, 59, 61, 63, 64, 65, 69, 76, 79, 81, 82, 83, 84, 93, 95, 97, 99, 107, 113, 116, 117, 130, 131, 135, 138, 139, 140, 141, 162, 166, 168, 169, 170, 177, 178, 179, 181, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 208, 210, 211, 212, 213, 216, 217, 219, 222, 223, 227, 229, 230, 233, 234, 236, 257, 258, 259, 263], "none": [0, 27, 29, 31, 33, 34, 36, 46, 47, 50, 51, 52, 53, 56, 60, 64, 66, 67, 68, 69, 76, 81, 82, 83, 88, 92, 99, 100, 102, 107, 109, 123, 124, 125, 127, 128, 130, 131, 141, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 210, 217, 228, 230, 244, 245, 251, 252], "omp_num_thread": [0, 187, 191, 196, 201, 230], "environ": [0, 165, 166, 187, 191, 196, 201, 230, 238], "variabl": [0, 34, 53, 57, 65, 76, 100, 107, 138, 146, 147, 166, 182, 184, 187, 189, 191, 194, 195, 196, 199, 201, 230, 236, 238, 241, 244, 245, 246, 249, 251, 252, 255], "set": [0, 2, 3, 5, 7, 8, 12, 16, 17, 18, 22, 29, 30, 31, 33, 34, 36, 37, 40, 41, 43, 45, 48, 55, 57, 58, 59, 61, 63, 64, 65, 66, 71, 72, 76, 78, 79, 81, 82, 83, 87, 88, 89, 90, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 110, 111, 112, 113, 116, 118, 119, 121, 128, 130, 131, 138, 139, 140, 141, 163, 166, 170, 172, 173, 177, 178, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 204, 208, 210, 213, 221, 230, 236, 237, 238, 240, 241, 242, 245, 249, 250, 253, 254, 255, 258, 259], "all": [0, 2, 5, 6, 7, 8, 18, 19, 22, 27, 29, 32, 34, 36, 40, 43, 44, 45, 47, 48, 49, 50, 53, 55, 57, 58, 59, 60, 61, 63, 64, 69, 72, 76, 79, 81, 82, 83, 85, 88, 89, 90, 92, 97, 98, 99, 100, 101, 102, 107, 113, 114, 116, 117, 127, 135, 138, 141, 142, 145, 146, 147, 150, 163, 168, 171, 173, 175, 181, 182, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 215, 228, 230, 238, 240, 243, 247, 248, 249, 252], "avail": [0, 2, 13, 27, 40, 44, 48, 59, 60, 61, 63, 89, 98, 99, 103, 115, 118, 120, 121, 131, 138, 139, 142, 145, 146, 147, 150, 162, 165, 167, 171, 172, 173, 176, 177, 178, 181, 182, 183, 187, 189, 190, 191, 194, 195, 196, 201, 204, 215, 230, 236, 238, 243, 245, 254, 258, 259, 262], "maximum": [0, 56, 61, 64, 66, 75, 77, 89, 101, 114, 118, 146, 173, 178, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 204, 208, 233, 234, 240, 241, 245, 253, 262], "num_cpu_cor": 0, "select": [0, 8, 32, 34, 45, 49, 57, 58, 59, 60, 61, 63, 65, 71, 72, 76, 88, 92, 108, 113, 178, 187, 194, 195, 196, 199, 200, 201, 204, 205, 233, 236, 256, 262], "an": [0, 5, 7, 8, 15, 18, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 69, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 93, 95, 98, 99, 100, 101, 102, 105, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 121, 123, 124, 125, 127, 128, 130, 131, 138, 140, 141, 142, 145, 146, 147, 150, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 213, 216, 217, 218, 219, 221, 222, 223, 229, 230, 236, 237, 240, 241, 243, 244, 245, 247, 248, 249, 250, 253, 254, 255, 258, 259, 262], "error": [0, 22, 23, 45, 51, 53, 55, 68, 76, 130, 131, 135, 166, 187, 189, 190, 191, 192, 193, 194, 195, 196, 201, 204, 216, 217, 222, 229, 230, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255], "rais": [0, 23, 187, 191, 192, 193, 194, 195, 196, 201, 216, 217, 222, 229, 230, 236, 238, 239, 240, 241, 243, 245], "same": [0, 5, 8, 15, 21, 23, 29, 36, 40, 41, 47, 49, 53, 55, 56, 57, 58, 60, 61, 64, 69, 76, 79, 80, 81, 82, 83, 90, 91, 92, 95, 97, 99, 100, 102, 103, 107, 109, 113, 114, 116, 117, 118, 119, 131, 135, 139, 141, 162, 163, 166, 168, 169, 172, 178, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 238, 243, 247, 249, 250, 252, 254, 256, 257, 259], "directli": [0, 7, 8, 17, 29, 45, 59, 60, 81, 82, 83, 85, 102, 103, 162, 169, 177, 189, 193, 195, 201, 237, 239, 262], "directiongett": [0, 199, 240, 253], "direct": [0, 2, 3, 5, 25, 29, 33, 34, 36, 40, 45, 46, 47, 48, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 65, 71, 72, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 95, 98, 103, 104, 106, 108, 109, 123, 124, 125, 127, 130, 131, 140, 146, 162, 172, 176, 178, 182, 185, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 216, 217, 230, 233, 236, 237, 238, 239, 240, 243, 244, 245, 247, 249, 253, 258, 259, 262, 263], "closest_peak_direction_gett": 0, "basedirectiongett": 0, "basepmfdirectiongett": 0, "reconst": [0, 25, 29, 32, 34, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 123, 124, 125, 127, 130, 131, 140, 165, 185, 202, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 253], "eudxdirectiongett": [0, 192], "eudx_direction_gett": 0, "migrat": [0, 182, 253], "tavi": 0, "azur": [0, 182, 248, 249, 250, 251, 253], "depend": [0, 29, 36, 43, 44, 47, 48, 57, 59, 60, 70, 81, 82, 83, 85, 98, 100, 116, 121, 146, 162, 166, 167, 172, 173, 176, 178, 182, 187, 189, 190, 191, 195, 196, 197, 199, 201, 220, 238, 241, 243, 245, 247, 248, 251, 253], "ad": [0, 5, 6, 7, 8, 18, 34, 48, 58, 59, 69, 71, 89, 103, 130, 131, 141, 163, 165, 166, 167, 168, 182, 187, 191, 193, 195, 196, 197, 199, 201, 202, 204, 210, 211, 218, 219, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255], "tqdm": [0, 182, 250], "registr": [0, 1, 2, 3, 25, 39, 90, 92, 106, 107, 113, 114, 165, 166, 174, 175, 182, 185, 187, 190, 193, 196, 200, 201, 203, 208, 225, 228, 230, 236, 238, 240, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256], "interp": [0, 250], "method": [0, 1, 2, 3, 23, 29, 32, 33, 34, 36, 39, 40, 45, 47, 48, 52, 53, 57, 58, 59, 60, 63, 64, 69, 71, 76, 81, 82, 83, 89, 90, 93, 95, 97, 101, 102, 103, 113, 116, 117, 118, 119, 121, 123, 124, 125, 138, 139, 141, 142, 145, 146, 147, 165, 166, 170, 173, 174, 175, 176, 177, 182, 184, 189, 191, 194, 195, 196, 197, 199, 201, 208, 210, 211, 212, 213, 222, 227, 240, 241, 243, 244, 245, 248, 249, 251, 253, 254, 255], "align": [0, 25, 39, 41, 43, 48, 49, 60, 71, 72, 99, 100, 101, 102, 103, 105, 107, 108, 109, 113, 127, 138, 141, 162, 163, 170, 176, 177, 185, 189, 193, 195, 196, 202, 204, 230, 236, 238, 239, 245, 249, 250, 251, 253, 255], "imaffin": [0, 99, 100, 107, 109, 202, 238, 247, 253], "affinemap": [0, 99, 100, 109, 202, 236, 240, 248, 250, 255], "transform": [0, 30, 32, 39, 41, 47, 53, 57, 64, 71, 76, 90, 98, 99, 100, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 135, 138, 139, 141, 162, 163, 164, 169, 170, 174, 182, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 228, 230, 236, 241, 242, 244, 245, 246, 247, 249, 250, 254, 255, 258], "interpol": [0, 31, 33, 34, 36, 41, 49, 51, 54, 57, 61, 68, 84, 89, 98, 102, 135, 141, 164, 182, 187, 195, 199, 201, 229, 238, 243, 247, 251, 253, 255], "transform_invers": [0, 108, 109, 187, 202], "tissu": [0, 2, 3, 29, 32, 44, 48, 53, 55, 57, 58, 60, 61, 62, 63, 70, 81, 82, 83, 84, 98, 107, 115, 120, 127, 146, 173, 176, 178, 182, 190, 194, 195, 197, 201, 202, 219, 237, 238, 246, 247, 248, 249, 250], "tissueclassifierhmrf": [0, 59, 121, 202, 250], "now": [0, 7, 8, 10, 11, 17, 18, 19, 22, 23, 27, 31, 32, 36, 37, 40, 47, 48, 50, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 72, 76, 87, 88, 92, 93, 95, 98, 99, 100, 101, 102, 103, 107, 108, 109, 113, 118, 121, 128, 131, 135, 138, 141, 142, 145, 163, 165, 166, 167, 182, 183, 189, 195, 236, 237, 243, 244, 245, 262], "check": [0, 5, 8, 18, 22, 27, 36, 41, 47, 48, 53, 58, 64, 108, 117, 118, 166, 167, 172, 173, 175, 176, 177, 178, 189, 190, 193, 194, 196, 201, 209, 210, 215, 219, 224, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 250, 253, 256], "toler": [0, 93, 101, 187, 189, 191, 192, 193, 195, 196, 199, 236, 238, 241, 253], "base": [0, 1, 2, 3, 8, 25, 32, 33, 34, 44, 45, 46, 47, 48, 49, 54, 55, 57, 59, 60, 62, 63, 66, 67, 68, 70, 72, 75, 76, 77, 90, 93, 95, 98, 100, 102, 103, 104, 106, 113, 130, 131, 139, 142, 145, 146, 165, 167, 170, 172, 173, 174, 182, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 202, 208, 211, 213, 222, 225, 228, 230, 236, 237, 238, 240, 241, 244, 245, 247, 248, 249, 250, 253, 255, 259, 261], "stop": [0, 8, 29, 72, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 98, 146, 178, 187, 195, 196, 201, 204, 233, 241, 245, 247, 249], "criterion": [0, 5, 72, 75, 77, 79, 80, 85, 86, 87, 98, 146, 177, 178, 191, 195, 199, 201, 233], "everi": [0, 22, 37, 58, 61, 65, 76, 85, 88, 97, 98, 102, 116, 117, 128, 135, 138, 142, 145, 162, 166, 189, 190, 195, 196, 198, 199, 201, 241, 243, 256], "iter": [0, 23, 37, 39, 43, 45, 47, 50, 59, 64, 66, 99, 100, 101, 105, 107, 108, 109, 121, 128, 142, 145, 187, 189, 191, 194, 195, 196, 197, 199, 201, 202, 203, 204, 208, 227, 236, 240, 247, 252], "previous": [0, 30, 37, 51, 55, 59, 60, 61, 99, 110, 111, 112, 116, 117, 118, 121, 128, 142, 145, 177, 195], "onli": [0, 5, 8, 9, 11, 17, 19, 22, 27, 32, 34, 36, 41, 45, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 64, 65, 68, 69, 71, 72, 76, 88, 89, 90, 98, 100, 102, 107, 108, 116, 117, 118, 119, 127, 128, 130, 135, 139, 142, 145, 162, 167, 168, 172, 173, 176, 177, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 218, 219, 222, 223, 229, 230, 236, 237, 238, 241, 243, 245, 247, 248, 250, 255, 258, 259, 262], "10th": [0, 187], "thi": [0, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 22, 23, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 141, 142, 145, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 262, 263], "mai": [0, 5, 7, 8, 10, 14, 22, 23, 36, 41, 47, 48, 49, 53, 58, 59, 60, 63, 69, 90, 99, 100, 105, 107, 139, 142, 145, 166, 172, 173, 175, 178, 183, 187, 189, 192, 193, 194, 195, 196, 199, 200, 201, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 227, 229, 231, 233, 234, 236, 238, 239, 240, 241, 242, 247, 248, 249, 251, 252, 253, 254, 255, 258, 259], "result": [0, 4, 5, 22, 23, 27, 29, 30, 31, 32, 33, 34, 36, 41, 47, 48, 53, 57, 58, 59, 60, 61, 63, 64, 65, 69, 71, 72, 76, 79, 81, 82, 83, 87, 93, 98, 99, 100, 103, 105, 107, 108, 110, 111, 112, 114, 116, 118, 119, 121, 142, 145, 163, 164, 165, 167, 172, 173, 174, 175, 182, 187, 189, 190, 191, 194, 195, 196, 199, 200, 201, 206, 207, 208, 210, 211, 212, 213, 222, 223, 227, 231, 232, 241, 247, 252, 253], "earlier": [0, 169], "termin": [0, 90, 166, 167, 171, 187, 189, 195], "previou": [0, 8, 40, 48, 49, 59, 99, 103, 166, 167, 168, 178, 187, 189, 194, 195, 199, 201, 237, 262], "reconstruct": [0, 2, 3, 25, 29, 32, 33, 40, 43, 52, 54, 57, 58, 63, 67, 70, 72, 80, 81, 82, 83, 84, 85, 88, 89, 123, 124, 125, 129, 132, 162, 165, 167, 172, 173, 174, 178, 182, 185, 189, 191, 194, 195, 197, 201, 216, 218, 219, 220, 237, 238, 239, 240, 243, 245, 248, 249, 250, 251, 252, 254, 256, 262], "csdeconv": [0, 29, 45, 47, 64, 65, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 131, 202, 237, 239, 244, 249], "auto_respons": [0, 202, 239], "auto_response_ssst": [0, 29, 45, 47, 64, 65, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 131, 202], "response_from_mask": [0, 59, 202], "response_from_mask_ssst": [0, 47, 202], "sim": [0, 25, 47, 52, 60, 64, 66, 71, 123, 124, 125, 127, 128, 185, 189, 190, 195, 202, 238, 241, 243, 247], "multi_shell_fiber_respons": [0, 59, 202], "move": [0, 16, 20, 37, 57, 66, 69, 71, 72, 98, 99, 100, 101, 102, 103, 107, 108, 109, 113, 128, 135, 138, 141, 167, 169, 170, 176, 177, 182, 187, 189, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 208, 230, 236, 238, 239, 241, 242, 245, 247, 249, 250, 252, 253], "mcsd": [0, 59, 202, 248, 253], "In": [0, 5, 12, 16, 21, 22, 23, 27, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 76, 80, 81, 82, 83, 84, 85, 88, 90, 95, 97, 98, 99, 100, 101, 107, 108, 116, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 141, 142, 145, 162, 163, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 182, 183, 187, 189, 191, 193, 194, 195, 196, 199, 200, 201, 221, 236, 250, 258, 259, 262], "prior": [0, 33, 34, 93, 172, 189, 196, 246], "user": [0, 8, 15, 18, 19, 22, 27, 48, 49, 50, 57, 59, 64, 69, 89, 99, 101, 103, 113, 138, 166, 167, 168, 172, 173, 177, 182, 187, 189, 193, 194, 196, 197, 199, 200, 201, 236, 240, 241, 247, 253, 260], "scipi": [0, 4, 5, 43, 45, 48, 49, 55, 57, 98, 162, 166, 182, 187, 189, 195, 196, 199, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 253], "memori": [0, 23, 46, 50, 69, 76, 85, 88, 114, 162, 182, 187, 189, 193, 194, 195, 197, 200, 201, 227, 236, 237, 239, 241, 245, 247, 249, 251, 253, 256], "overlap": [0, 61, 102, 108, 109, 182, 196, 249], "bug": [0, 6, 7, 8, 18, 182, 187, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 253, 255], "occur": [0, 55, 63, 195, 199], "multi_median": [0, 182, 202, 249], "caus": [0, 48, 135, 163, 187, 189, 191, 195, 196, 201, 236, 244, 245], "overli": 0, "smooth": [0, 31, 33, 48, 49, 58, 59, 61, 64, 71, 72, 99, 105, 121, 187, 195, 196, 199, 201, 203, 204, 229, 243], "output": [0, 5, 8, 9, 22, 29, 30, 31, 33, 34, 35, 36, 48, 66, 72, 81, 82, 83, 89, 92, 105, 110, 111, 112, 113, 118, 138, 142, 145, 168, 169, 172, 173, 175, 176, 177, 178, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 235, 236, 237, 238, 241, 244, 245, 247, 249, 250, 251, 253], "fix": [0, 1, 6, 7, 8, 18, 22, 57, 72, 84, 89, 102, 145, 170, 182, 187, 189, 194, 195, 196, 197, 199, 200, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "regardless": [0, 195], "": [0, 1, 2, 3, 5, 7, 8, 14, 15, 17, 18, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 135, 138, 139, 141, 145, 146, 147, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 183, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 244, 246, 247, 250, 253, 255, 256, 258, 259, 260, 262], "instal": [0, 5, 8, 10, 16, 20, 22, 25, 58, 145, 179, 236, 238, 239, 241, 244, 245, 246, 247, 248, 249], "via": [0, 8, 22, 38, 42, 65, 67, 71, 72, 76, 93, 142, 145, 146, 166, 187, 189, 190, 194, 195, 196, 201, 204, 236, 240, 258, 259], "median_otsu": [0, 32, 34, 38, 42, 43, 46, 48, 49, 53, 59, 60, 64, 71, 107, 108, 109, 115, 120, 130, 131, 146, 201, 202, 227, 247, 249], "threshold": [0, 6, 29, 36, 38, 42, 43, 47, 55, 57, 58, 59, 64, 72, 81, 82, 83, 84, 90, 92, 93, 113, 116, 117, 118, 119, 146, 168, 172, 176, 178, 187, 191, 195, 200, 201, 202, 204, 209, 210, 213, 216, 217, 218, 219, 220, 221, 223, 224, 228, 230, 231, 233, 234, 238, 241, 244, 245, 246, 247, 249], "should": [0, 5, 6, 7, 8, 11, 14, 17, 22, 34, 36, 39, 45, 46, 47, 48, 53, 57, 58, 59, 60, 61, 63, 64, 76, 85, 89, 95, 97, 98, 105, 116, 142, 145, 146, 147, 162, 165, 166, 167, 175, 184, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 205, 217, 221, 223, 236, 238, 239, 241, 246, 247, 248, 250, 252, 253, 254, 255], "process": [0, 5, 27, 31, 35, 36, 47, 48, 49, 55, 57, 60, 61, 71, 72, 76, 92, 97, 99, 101, 107, 108, 116, 118, 130, 131, 138, 142, 145, 165, 166, 168, 172, 173, 175, 176, 177, 178, 182, 187, 189, 190, 191, 193, 194, 195, 196, 197, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 227, 229, 231, 238, 247, 249, 253, 262], "pipelin": [0, 36, 88, 99, 100, 138, 141, 182, 187, 194, 195, 249, 250, 253], "after": [0, 8, 11, 32, 35, 36, 47, 57, 61, 71, 72, 91, 97, 101, 102, 103, 107, 108, 113, 119, 121, 138, 141, 145, 164, 166, 169, 170, 172, 173, 187, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 204, 213, 228, 234, 238, 243, 244, 245, 249, 252], "make": [0, 5, 6, 7, 12, 15, 16, 17, 19, 20, 23, 25, 30, 36, 40, 46, 51, 53, 57, 58, 59, 61, 90, 93, 95, 98, 100, 102, 105, 108, 110, 111, 112, 113, 116, 117, 118, 130, 138, 139, 142, 145, 162, 166, 168, 170, 180, 187, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 250, 253, 254, 257, 259, 262], "sure": [0, 5, 7, 8, 22, 46, 53, 90, 100, 108, 116, 117, 118, 138, 166, 168, 169, 170, 196, 198, 200], "still": [0, 8, 22, 29, 36, 43, 50, 53, 58, 61, 63, 81, 82, 83, 87, 98, 105, 166, 176, 189, 193, 195, 196, 199, 237, 238, 245, 250, 262], "oper": [0, 4, 5, 43, 71, 72, 99, 130, 135, 138, 145, 187, 193, 195, 199, 201, 236, 256], "expect": [0, 48, 55, 69, 76, 89, 121, 162, 173, 177, 187, 190, 191, 193, 194, 195, 196, 199, 201, 202, 204, 238, 258, 259], "try": [0, 5, 19, 22, 48, 53, 59, 63, 66, 93, 100, 108, 118, 119, 165, 166, 167, 172, 173, 175, 176, 177, 178, 179, 180, 182, 187, 191, 195, 239, 243, 244, 245, 247, 258, 259], "readjust": 0, "median_radiu": [0, 30, 32, 34, 46, 48, 49, 53, 59, 60, 64, 107, 108, 109, 110, 111, 112, 130, 131, 167, 196, 201, 227], "peak_direction_gett": [0, 247], "dipy_track_loc": [0, 247], "dipy_track": [0, 25, 167, 178, 235, 249], "other": [0, 5, 6, 12, 15, 17, 20, 21, 27, 29, 31, 34, 36, 41, 43, 45, 47, 48, 49, 53, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 72, 76, 80, 81, 82, 83, 88, 92, 93, 98, 99, 100, 101, 102, 107, 108, 116, 121, 127, 130, 138, 142, 145, 162, 166, 168, 172, 173, 175, 176, 178, 187, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 213, 219, 239, 243, 244, 247, 250, 252, 258, 259], "gradient": [0, 2, 3, 27, 29, 31, 33, 34, 36, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 99, 107, 108, 123, 124, 125, 127, 128, 130, 131, 140, 146, 162, 165, 167, 172, 176, 182, 185, 187, 190, 191, 194, 195, 197, 201, 202, 204, 220, 221, 236, 237, 240, 241, 243, 245, 248, 249, 250, 254, 255, 258, 259, 260], "unique_bv": [0, 202], "unique_bvals_magnitud": [0, 202], "visual": [0, 8, 25, 27, 29, 32, 34, 36, 37, 46, 47, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 101, 103, 105, 108, 109, 113, 114, 116, 117, 118, 119, 123, 124, 125, 127, 128, 135, 137, 141, 162, 164, 165, 166, 167, 168, 169, 170, 181, 182, 185, 187, 191, 192, 195, 196, 201, 202, 223, 238, 239, 240, 241, 243, 244, 247, 250, 252, 253, 256], "window": [0, 6, 13, 22, 29, 34, 37, 46, 47, 52, 53, 54, 58, 59, 64, 65, 66, 67, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 102, 103, 107, 108, 113, 114, 116, 117, 118, 119, 123, 124, 125, 128, 130, 131, 138, 139, 140, 141, 162, 167, 168, 182, 187, 195, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 255, 256], "scene": [0, 29, 37, 46, 47, 52, 53, 54, 58, 59, 64, 65, 66, 67, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 102, 107, 113, 114, 116, 117, 118, 119, 123, 124, 125, 128, 138, 139, 140, 141, 200, 201, 223, 249], "instead": [0, 17, 18, 22, 23, 33, 36, 48, 64, 87, 99, 113, 166, 168, 187, 189, 191, 193, 194, 195, 196, 198, 199, 200, 237, 238, 239, 240, 242, 245, 246, 248, 249, 252, 253, 254, 255], "render": [0, 5, 93, 95, 136, 137, 138, 146, 200, 236, 238, 239, 240, 241, 242, 245, 249, 252], "clear": [0, 5, 36, 37, 47, 53, 58, 65, 66, 69, 116, 117, 119, 139, 141, 195, 196, 202, 245, 249], "rm_all": 0, "img": [0, 27, 32, 41, 46, 50, 51, 54, 55, 56, 68, 105, 187, 190, 193, 247], "get_data": [0, 241, 247, 248], "sinc": [0, 8, 18, 31, 32, 34, 35, 36, 43, 48, 53, 57, 58, 63, 64, 72, 76, 90, 93, 99, 105, 107, 116, 117, 119, 127, 145, 173, 187, 189, 191, 193, 194, 195, 196, 197, 201, 262], "nibabel": [0, 4, 5, 22, 30, 33, 34, 41, 46, 48, 50, 51, 54, 55, 56, 68, 107, 110, 111, 112, 135, 162, 166, 182, 187, 190, 193, 239, 241, 245, 248, 250, 254, 256], "np": [0, 5, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 71, 72, 76, 78, 84, 89, 90, 91, 92, 95, 97, 98, 99, 100, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 135, 138, 139, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 236, 238, 243, 250, 252, 254], "asanyarrai": 0, "dataobj": [0, 32, 54, 55, 107], "tractogram": [0, 2, 3, 87, 90, 113, 114, 135, 169, 178, 182, 187, 190, 193, 196, 200, 201, 223, 228, 230, 233, 234, 247, 252, 253, 254], "streamlin": [0, 1, 2, 3, 25, 29, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 104, 106, 113, 115, 116, 117, 118, 119, 120, 133, 134, 136, 137, 138, 165, 168, 170, 174, 178, 182, 185, 187, 190, 195, 196, 198, 201, 202, 208, 223, 225, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 253, 254, 255, 256], "statefultractogram": [0, 29, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 103, 107, 113, 135, 182, 200, 202, 249, 253], "creat": [0, 5, 7, 12, 27, 29, 32, 37, 47, 48, 49, 52, 53, 55, 57, 59, 63, 66, 69, 71, 72, 76, 78, 79, 81, 82, 83, 84, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 107, 109, 116, 117, 118, 123, 124, 125, 128, 135, 138, 139, 140, 143, 144, 146, 163, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 187, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 226, 236, 240, 241, 243, 244, 245, 246, 247, 249, 252], "anoth": [0, 7, 22, 48, 57, 59, 63, 72, 76, 114, 135, 145, 187, 189, 193, 195, 196, 197, 244, 245, 248, 255, 258], "one": [0, 5, 6, 8, 11, 18, 22, 27, 29, 31, 33, 34, 36, 37, 39, 40, 43, 45, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 64, 65, 67, 68, 69, 72, 76, 81, 82, 83, 90, 97, 98, 99, 102, 107, 109, 114, 116, 118, 127, 128, 135, 140, 142, 162, 163, 164, 166, 178, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 213, 218, 219, 223, 236, 238, 240, 242, 245, 247, 248, 250, 252, 255, 258, 259, 262], "workflow": [0, 2, 12, 14, 16, 18, 25, 144, 165, 168, 169, 170, 172, 173, 175, 176, 177, 178, 182, 202, 206, 207, 210, 211, 212, 213, 218, 219, 220, 221, 222, 226, 227, 233, 234, 237, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255], "dipy_nlmean": [0, 145], "dipy_denoise_nlmean": [0, 25, 172, 235], "get_fdata": [0, 39, 54, 55, 63, 248], "modif": [0, 116, 187, 189, 195, 196, 201, 238, 239], "appli": [0, 32, 33, 36, 44, 46, 47, 48, 49, 50, 51, 56, 60, 64, 69, 70, 71, 72, 97, 98, 99, 102, 104, 106, 108, 109, 113, 119, 131, 141, 146, 162, 172, 173, 174, 175, 182, 187, 189, 191, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 212, 213, 222, 223, 227, 229, 230, 233, 241, 242, 245, 248, 249, 253, 256, 259], "codebas": [0, 165, 182], "datatyp": [0, 193, 245], "float64": [0, 31, 35, 71, 187, 195, 236, 241, 247, 254], "some": [0, 4, 7, 11, 12, 15, 17, 18, 21, 22, 23, 27, 29, 37, 39, 40, 44, 45, 48, 55, 57, 58, 59, 60, 61, 63, 64, 66, 69, 76, 81, 82, 83, 90, 93, 95, 97, 98, 100, 105, 107, 109, 113, 116, 117, 128, 135, 138, 139, 140, 142, 145, 146, 147, 150, 162, 163, 165, 166, 167, 168, 177, 181, 187, 189, 190, 191, 195, 196, 199, 201, 218, 219, 227, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 259], "introduc": [0, 5, 32, 47, 57, 59, 63, 64, 87, 102, 103, 176, 191, 195, 237, 245], "break": [0, 6, 102, 141, 189, 190, 191, 236, 241, 243, 245, 247, 248, 253, 255], "backward": [0, 6, 71, 187, 195, 245, 253], "compat": [0, 6, 20, 25, 182, 193, 194, 195, 196, 237, 241, 242, 243, 244, 245, 246, 247, 250, 253], "python": [0, 1, 4, 5, 20, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 162, 179, 181, 182, 187, 189, 193, 194, 195, 196, 200, 201, 202, 217, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 252, 253, 254, 255], "harmon": [0, 8, 25, 44, 46, 54, 67, 70, 80, 85, 130, 146, 176, 182, 185, 190, 192, 195, 200, 201, 216, 217, 236, 241, 243, 245, 261], "mrtrix": [0, 190, 192, 195, 196, 247, 249, 250, 262], "fibernav": 0, "tournier07": [0, 192, 194, 195, 262], "descoteaux07": [0, 66, 192, 194, 195, 262], "cycl": [0, 187, 189, 256], "start": [0, 8, 14, 22, 24, 25, 28, 39, 40, 41, 47, 55, 57, 61, 62, 64, 69, 79, 85, 86, 87, 88, 90, 92, 97, 98, 99, 101, 102, 103, 118, 130, 131, 138, 141, 163, 166, 176, 178, 179, 187, 189, 194, 195, 196, 199, 200, 201, 208, 234, 245, 247, 256, 260], "data": [0, 1, 3, 5, 7, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 146, 147, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 184, 185, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255], "default_spher": [0, 29, 46, 47, 69, 71, 72, 80, 81, 82, 83, 84, 85, 86, 89, 93, 95, 98, 131, 140, 195, 197, 200, 202], "symmetric724": [0, 59, 66, 190, 247], "repulsion724": [0, 50, 52, 53, 54, 56, 58, 64, 67, 86, 123, 124, 125, 128, 130, 190, 195, 201, 247], "more": [0, 4, 5, 6, 11, 18, 21, 23, 24, 31, 34, 35, 45, 48, 49, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 72, 76, 87, 88, 89, 92, 93, 95, 97, 98, 99, 102, 103, 107, 113, 116, 117, 118, 127, 135, 138, 140, 141, 162, 164, 165, 166, 167, 168, 169, 170, 175, 179, 182, 183, 185, 187, 189, 191, 194, 195, 196, 197, 199, 200, 201, 210, 211, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 254, 256, 263], "evenli": [0, 37, 60, 66, 88, 189, 195, 199], "mask": [0, 2, 3, 8, 29, 30, 31, 32, 34, 35, 40, 43, 46, 47, 48, 49, 53, 55, 56, 59, 60, 61, 62, 63, 64, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 104, 106, 107, 108, 109, 110, 111, 112, 130, 131, 135, 140, 146, 167, 176, 178, 182, 187, 190, 191, 192, 194, 195, 199, 200, 202, 214, 216, 217, 218, 219, 220, 226, 227, 231, 233, 234, 236, 237, 238, 241, 242, 243, 244, 245, 247, 249, 251, 253, 255], "follow": [0, 2, 5, 6, 7, 8, 16, 18, 19, 20, 21, 22, 23, 24, 27, 29, 32, 33, 34, 36, 37, 39, 41, 43, 48, 49, 50, 53, 57, 59, 60, 61, 62, 63, 65, 69, 76, 80, 81, 82, 83, 85, 89, 99, 102, 116, 128, 135, 138, 140, 141, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 176, 177, 178, 180, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 213, 218, 219, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259], "wai": [0, 5, 7, 8, 14, 15, 17, 18, 21, 22, 23, 27, 29, 31, 32, 37, 39, 45, 47, 48, 49, 50, 53, 55, 58, 59, 60, 61, 64, 78, 80, 81, 82, 83, 85, 90, 98, 118, 128, 138, 139, 141, 142, 162, 166, 167, 175, 176, 178, 187, 189, 195, 196, 197, 199, 201, 221, 246, 259], "you": [0, 1, 2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 29, 32, 34, 35, 37, 39, 41, 45, 46, 47, 48, 50, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 69, 79, 81, 82, 83, 88, 90, 93, 95, 97, 99, 102, 103, 113, 116, 117, 118, 130, 131, 135, 138, 139, 140, 141, 142, 145, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 187, 189, 190, 193, 194, 195, 196, 197, 198, 200, 201, 223, 225, 228, 229, 237, 241, 243, 254, 256, 257], "4d": [0, 27, 33, 35, 36, 47, 52, 53, 57, 64, 123, 124, 125, 165, 172, 176, 187, 191, 193, 194, 195, 196, 197, 199, 201, 222, 227, 229, 232, 241, 247, 249], "volum": [0, 1, 2, 3, 25, 27, 30, 33, 34, 36, 38, 41, 42, 47, 49, 50, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 69, 76, 84, 87, 89, 90, 95, 99, 100, 107, 108, 109, 110, 111, 112, 121, 135, 136, 137, 142, 146, 162, 167, 172, 173, 174, 176, 178, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 227, 229, 231, 232, 233, 234, 236, 238, 240, 244, 247, 249, 250, 253, 260], "vol_idx": [0, 32, 34, 43, 46, 48, 49, 53, 59, 60, 64, 107, 130, 131, 167, 176, 196, 201, 227, 232, 247], "requir": [0, 4, 5, 36, 41, 48, 49, 54, 58, 60, 61, 62, 63, 64, 65, 71, 72, 76, 88, 100, 113, 114, 116, 118, 119, 127, 135, 138, 141, 146, 147, 166, 167, 168, 169, 172, 176, 177, 178, 184, 187, 189, 193, 194, 195, 197, 201, 227, 232, 238, 245, 247, 249, 250, 251, 255], "order": [0, 5, 22, 23, 29, 31, 35, 36, 46, 48, 51, 53, 54, 57, 58, 61, 62, 63, 66, 67, 71, 72, 76, 81, 82, 83, 98, 99, 100, 102, 107, 118, 130, 131, 135, 141, 171, 172, 176, 177, 178, 187, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 216, 217, 221, 229, 236, 239, 241, 243, 247, 249, 253, 254, 262, 263], "also": [0, 1, 5, 7, 8, 19, 22, 23, 27, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 81, 82, 83, 85, 87, 88, 89, 92, 95, 97, 98, 99, 100, 101, 103, 107, 108, 109, 110, 111, 112, 116, 118, 119, 121, 127, 128, 135, 138, 139, 141, 142, 145, 162, 163, 164, 165, 166, 168, 172, 173, 175, 176, 177, 178, 180, 187, 191, 194, 196, 200, 201, 223, 227, 236, 256, 262, 263], "load": [0, 27, 29, 31, 33, 34, 36, 37, 39, 40, 41, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 60, 62, 63, 64, 67, 68, 69, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 98, 101, 108, 113, 116, 117, 118, 119, 135, 138, 141, 162, 185, 189, 190, 193, 194, 201, 223, 236, 241, 243, 247, 254], "save": [0, 7, 8, 27, 29, 30, 31, 33, 34, 36, 37, 39, 41, 43, 46, 47, 50, 51, 53, 54, 56, 59, 64, 65, 66, 68, 69, 81, 82, 83, 88, 92, 95, 98, 102, 103, 107, 110, 111, 112, 113, 117, 119, 127, 128, 135, 138, 141, 142, 145, 162, 165, 168, 169, 170, 172, 173, 175, 176, 177, 178, 182, 185, 187, 189, 190, 192, 193, 194, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 227, 229, 231, 233, 234, 238, 241, 242, 245, 247, 248, 249, 250, 252, 254], "load_tractogram": [0, 107, 116, 117, 118, 119, 135, 196, 202, 248], "save_tractogram": [0, 103, 107, 135, 202], "trk": [0, 2, 3, 29, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98, 103, 107, 113, 135, 162, 167, 168, 169, 170, 190, 193, 201, 208, 223, 244, 247, 248, 250], "tck": [0, 2, 3, 135, 193, 201, 223, 241, 247, 248, 249], "vtk": [0, 4, 135, 166, 182, 202, 236, 238, 239, 240, 241, 245, 246, 249, 253, 255], "fib": [0, 2, 3, 135, 193], "dpy": [0, 2, 3, 135, 162, 185, 201, 202, 223, 238, 256], "refer": [0, 1, 8, 14, 19, 22, 25, 57, 61, 105, 135, 140, 146, 147, 166, 174, 182, 184, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 248, 249, 250, 260, 261, 263], "nifti": [0, 27, 39, 41, 53, 95, 135, 142, 162, 165, 168, 176, 177, 187, 190, 193, 195, 198, 199, 201, 202, 205, 216, 217, 219, 221, 240, 242, 247, 256], "file": [0, 2, 3, 4, 5, 7, 8, 18, 22, 23, 25, 27, 28, 29, 36, 39, 41, 42, 53, 57, 68, 70, 74, 76, 77, 81, 82, 83, 88, 90, 96, 98, 99, 100, 106, 107, 113, 120, 126, 132, 134, 137, 142, 144, 145, 162, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 182, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256], "need": [0, 5, 7, 8, 10, 11, 17, 20, 23, 29, 30, 31, 34, 35, 36, 37, 45, 46, 48, 50, 53, 57, 58, 59, 60, 61, 65, 66, 69, 76, 79, 81, 82, 83, 85, 90, 93, 95, 97, 98, 99, 100, 101, 107, 108, 109, 110, 111, 112, 116, 117, 118, 127, 128, 130, 135, 138, 139, 140, 141, 142, 145, 146, 147, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 184, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 213, 223, 229, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 254, 257, 259], "guarante": [0, 58, 116, 135, 195], "proper": [0, 64, 195, 201, 236], "spatial": [0, 34, 53, 55, 57, 64, 67, 71, 76, 87, 98, 107, 116, 135, 165, 176, 182, 189, 191, 193, 195, 199, 201, 243, 247, 254, 260], "handl": [0, 4, 8, 23, 27, 32, 135, 138, 165, 182, 187, 189, 190, 193, 194, 200, 201, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 254], "were": [0, 33, 36, 47, 55, 57, 60, 61, 62, 76, 93, 98, 103, 107, 162, 187, 189, 190, 191, 195, 199, 201, 243, 244], "modifi": [0, 8, 95, 98, 99, 100, 101, 119, 135, 189, 190, 195, 196, 201, 208, 244, 249, 250, 262], "enforc": [0, 7, 48, 58, 63, 97, 189, 190, 193, 195, 252], "affin": [0, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 56, 58, 59, 60, 62, 64, 65, 67, 68, 69, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 98, 101, 102, 103, 104, 106, 107, 110, 111, 112, 113, 130, 131, 135, 138, 139, 140, 141, 146, 162, 164, 165, 167, 175, 177, 182, 189, 190, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 230, 236, 238, 240, 241, 242, 245, 246, 247, 249, 253], "uniform": [0, 31, 40, 187, 189, 195], "docstr": [0, 5, 142, 145, 201, 236, 237, 238, 239, 242, 243, 245, 246, 248, 250, 251, 253, 254, 263], "deform_streamlin": [0, 107, 202, 253, 254], "select_by_roi": [0, 202], "orient_by_roi": [0, 202, 238, 241], "_extract_v": 0, "values_from_volum": [0, 202, 238], "util": [0, 22, 23, 25, 29, 53, 57, 69, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 97, 98, 113, 135, 139, 140, 167, 176, 182, 187, 189, 200, 202, 237, 238, 239, 241, 243, 245, 247, 248, 249, 253, 255], "density_map": [0, 98, 135, 202, 249], "connectivity_matrix": [0, 98, 202, 241, 245, 248], "seeds_from_mask": [0, 29, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 140, 202], "random_seeds_from_mask": [0, 202], "target": [0, 22, 36, 89, 98, 101, 102, 107, 113, 169, 187, 194, 196, 198, 201, 202, 208, 238, 241, 245], "target_line_bas": [0, 202, 249], "near_roi": [0, 72, 202, 253], "length": [0, 57, 58, 90, 93, 94, 96, 102, 103, 116, 117, 118, 138, 139, 146, 162, 164, 187, 189, 190, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 223, 228, 230, 236, 238, 241, 245, 246, 253, 263], "path_length": [0, 95, 202], "affine_for_trackvi": 0, "move_streamlin": 0, "flexi_tvis_affin": 0, "get_flexi_tvis_affin": [0, 254], "delet": [0, 12, 22, 56, 166, 187, 189, 190, 193, 236, 240, 244, 245, 247], "life": [0, 75, 77, 146, 182, 189, 202, 237, 245, 246, 247, 248, 249, 250], "voxel2streamlin": [0, 202], "setup": [0, 22, 166, 187, 202, 237, 238, 245, 255], "fit": [0, 29, 32, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 107, 123, 124, 125, 131, 146, 165, 176, 180, 182, 187, 189, 192, 194, 195, 196, 199, 200, 201, 202, 216, 217, 219, 220, 221, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 249, 253, 254, 255], "fibermodel": [0, 76, 202], "afq_profil": [0, 90, 202, 252], "stat": [0, 7, 25, 45, 65, 90, 91, 168, 182, 185, 187, 189, 195, 202, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "analysi": [0, 1, 5, 21, 25, 27, 29, 32, 34, 39, 43, 48, 51, 54, 55, 58, 59, 60, 67, 68, 81, 82, 83, 84, 88, 89, 90, 91, 95, 103, 165, 167, 168, 169, 170, 172, 175, 176, 178, 181, 182, 187, 189, 190, 191, 195, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 247, 249, 254, 258], "similarli": [0, 57, 61, 63, 187, 190, 201, 204], "simul": [0, 25, 37, 52, 58, 60, 66, 69, 97, 123, 124, 125, 126, 185, 189, 190, 191, 195, 197, 236, 243, 250], "singletensor": [0, 247], "single_tensor": [0, 127, 202, 238, 247], "multitensor": [0, 60, 122, 126, 146, 197], "multi_tensor": [0, 52, 60, 123, 124, 125, 128, 195, 202, 238], "sticksandbal": 0, "sticks_and_bal": [0, 195, 202], "voxel_s": [0, 41, 50, 56, 84, 135, 193, 202, 247], "stremline_map": 0, "_util": [0, 202], "_mapping_to_voxel": 0, "peaksandmetricsdirectiongett": [0, 240, 247], "localtrack": [0, 29, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 140, 202, 238, 247, 253], "particlefilteringtrack": [0, 84, 202], "local": [0, 1, 2, 3, 8, 16, 19, 22, 29, 31, 32, 34, 36, 38, 42, 47, 53, 60, 64, 72, 80, 81, 82, 83, 84, 86, 90, 95, 99, 108, 113, 146, 166, 169, 174, 176, 182, 187, 190, 191, 192, 194, 195, 196, 197, 199, 201, 210, 211, 212, 222, 225, 228, 230, 233, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 260], "local_track": [0, 29, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 140, 202], "thei": [0, 5, 8, 19, 22, 33, 41, 43, 45, 48, 53, 61, 64, 67, 93, 98, 99, 101, 102, 103, 116, 117, 118, 119, 135, 138, 142, 145, 164, 167, 168, 172, 176, 187, 189, 190, 192, 195, 196, 199, 200, 201, 247, 258, 259], "tissue_classifi": 0, "stopping_criterion": [0, 29, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 140, 199], "tissueclassifi": 0, "stoppingcriterion": [0, 199], "binarytissueclassifi": [0, 241, 242], "binarystoppingcriterion": [0, 89, 98], "thresholdtissueclassifi": 0, "thresholdstoppingcriterion": [0, 29, 72, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 93, 95, 140], "constrainedtissueclassifi": 0, "anatomicalstoppingcriterion": [0, 199], "acttissueclassifi": 0, "actstoppingcriterion": [0, 89], "cmctissueclassifi": 0, "cmcstoppingcriterion": [0, 84], "tissueclass": 0, "streamlinestatu": 0, "eudx": [0, 29, 80, 81, 82, 83, 98, 167, 174, 201, 233, 244, 245, 247, 250], "tractographi": [0, 1, 2, 3, 29, 41, 48, 50, 58, 60, 72, 75, 76, 77, 79, 80, 81, 82, 83, 90, 93, 95, 101, 102, 103, 107, 114, 115, 118, 120, 127, 135, 146, 162, 165, 167, 169, 176, 178, 179, 182, 185, 189, 193, 195, 196, 197, 199, 201, 234, 238, 240, 245, 246, 252, 254, 255], "perform": [0, 5, 29, 31, 32, 34, 36, 39, 43, 45, 48, 52, 57, 59, 60, 63, 71, 72, 81, 82, 83, 99, 101, 103, 105, 107, 108, 109, 113, 116, 118, 119, 121, 123, 124, 125, 127, 135, 167, 172, 173, 175, 176, 177, 178, 182, 187, 189, 191, 193, 194, 195, 196, 197, 199, 201, 204, 218, 219, 220, 249, 253, 258], "trackvi": [0, 29, 81, 82, 83, 98, 135, 162, 190, 193, 202, 240, 242, 247, 250, 256], "extern": [0, 47, 59, 145, 200, 201, 238, 247, 256], "quickbund": [0, 247], "peak": [0, 29, 46, 47, 56, 59, 64, 65, 75, 76, 77, 80, 81, 82, 83, 85, 88, 98, 130, 146, 167, 174, 176, 182, 185, 195, 197, 198, 201, 202, 216, 217, 233, 234, 238, 239, 240, 243, 244, 247, 248, 258], "welcom": [0, 5, 21], "viz": [0, 25, 29, 37, 46, 47, 48, 52, 53, 54, 58, 59, 63, 64, 65, 66, 67, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 113, 114, 116, 117, 118, 119, 123, 124, 125, 128, 138, 139, 140, 141, 162, 185, 202, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 253, 255], "integr": [0, 1, 5, 12, 29, 43, 49, 51, 53, 68, 81, 82, 83, 165, 178, 182, 194, 195, 240, 241, 246, 255, 258], "variou": [0, 57, 75, 76, 77, 146, 189, 190, 194, 195, 199, 238, 258, 259], "analys": [0, 32, 191], "adjust": [0, 33, 36, 48, 59, 60, 63, 138, 141, 187, 191, 195, 196, 201, 210, 238, 242, 245], "slr": [0, 101, 102, 103, 113, 169, 177, 182, 187, 196, 201, 230, 237, 241, 242, 245, 248, 253], "recobundl": [0, 25, 115, 120, 146, 174, 182, 202, 239, 240, 241, 242, 248, 249, 250, 252], "algorithm": [0, 29, 32, 33, 36, 38, 40, 41, 42, 44, 48, 52, 53, 54, 55, 57, 60, 64, 65, 70, 72, 76, 81, 82, 83, 97, 102, 103, 107, 108, 109, 116, 118, 119, 121, 123, 124, 125, 146, 165, 167, 172, 177, 182, 183, 185, 187, 189, 191, 194, 195, 196, 199, 200, 201, 204, 210, 212, 213, 247, 248, 254, 255, 256], "exclud": [0, 17, 43, 49, 55, 69, 89, 93, 98, 195, 250], "insid": [0, 5, 27, 58, 78, 118, 187, 191, 195, 196, 199, 201, 233, 234, 243], "note": [0, 5, 7, 8, 17, 18, 19, 22, 25, 36, 44, 45, 47, 48, 49, 53, 58, 59, 60, 61, 63, 71, 76, 95, 100, 103, 105, 107, 109, 116, 117, 142, 145, 146, 147, 150, 161, 168, 170, 172, 173, 176, 194, 202, 208, 222, 256, 258, 259, 260], "nose": [0, 163, 182, 241, 253], "pytest": [0, 21, 22, 166, 182, 195, 196, 199, 241, 242, 250, 253], "load_tck": [0, 135, 202], "save_tck": [0, 202], "highli": [0, 39, 43, 48, 60, 116, 166, 172, 175, 201, 208], "manag": [0, 97, 141, 166, 182, 185, 240, 245, 253], "tabl": [0, 2, 33, 37, 58, 59, 61, 62, 63, 69, 71, 72, 76, 99, 141, 166, 182, 185, 189, 190, 191, 193, 195, 197, 199, 201, 221, 239, 241, 243, 245, 249, 250, 254], "b0_thresold": 0, "50": [0, 32, 33, 36, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 69, 72, 76, 84, 89, 95, 97, 101, 105, 108, 123, 124, 125, 127, 128, 130, 131, 132, 140, 167, 182, 183, 187, 189, 191, 195, 196, 197, 201, 243], "impact": [0, 48, 60, 79, 116, 127, 176, 191, 195, 196, 197, 201, 212], "your": [0, 5, 6, 7, 12, 15, 16, 17, 18, 21, 22, 23, 24, 27, 29, 35, 37, 39, 41, 46, 51, 53, 57, 68, 69, 81, 82, 83, 90, 116, 117, 130, 131, 142, 145, 162, 165, 166, 168, 169, 172, 173, 175, 176, 177, 178, 179, 181, 182, 189, 190, 191, 195, 196, 238, 256, 257], "want": [0, 2, 7, 10, 12, 18, 19, 21, 22, 23, 24, 37, 41, 43, 50, 59, 69, 90, 92, 93, 95, 97, 98, 99, 100, 101, 102, 108, 109, 116, 117, 118, 138, 139, 141, 142, 162, 163, 166, 168, 172, 173, 175, 179, 181, 187, 189, 193, 194, 195, 196, 200, 201, 225, 228, 229, 236, 257, 259], "assur": [0, 29, 43, 81, 82, 83, 92, 193], "code": [0, 4, 7, 8, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 162, 165, 166, 179, 182, 189, 193, 196, 201, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 250, 252, 253, 254, 256], "run": [0, 2, 6, 7, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 185, 187, 189, 194, 195, 196, 199, 201, 202, 234, 236, 237, 238, 241, 245, 247, 252, 254, 256, 258, 263], "exactli": [0, 5, 29, 79, 81, 82, 83, 103, 163, 187, 189, 193, 194, 195, 196, 245], "manner": [0, 47, 177, 190, 199, 201], "befor": [0, 5, 8, 22, 29, 33, 35, 39, 43, 46, 48, 49, 60, 64, 76, 81, 82, 83, 91, 99, 101, 102, 103, 105, 107, 108, 113, 114, 118, 121, 164, 166, 169, 170, 172, 173, 175, 187, 189, 193, 194, 195, 196, 197, 198, 199, 201, 234, 240, 242, 243, 244, 245, 247, 253, 254], "pleas": [0, 1, 5, 6, 11, 18, 21, 23, 24, 32, 33, 35, 36, 40, 55, 57, 62, 63, 93, 95, 130, 131, 138, 140, 166, 167, 168, 169, 170, 185, 189, 190, 191, 193, 195, 199, 201, 215, 242, 245], "initi": [0, 7, 10, 29, 45, 49, 55, 57, 58, 61, 64, 65, 66, 69, 71, 76, 78, 81, 82, 83, 87, 88, 97, 99, 100, 102, 119, 131, 138, 140, 141, 166, 168, 187, 189, 191, 192, 194, 195, 196, 197, 199, 201, 236, 243, 246, 249, 253], "keyword": [0, 5, 76, 187, 189, 193, 194, 195, 197, 198, 200], "b0_threshold": [0, 36, 57, 176, 189, 191, 195, 201, 209, 210, 213, 216, 217, 218, 219, 220, 221, 224, 241], "fvtk": [0, 182, 236, 237, 238, 240, 241, 243, 244, 245], "impli": [0, 17, 31, 39, 92, 175, 187, 189, 190, 195, 196, 197, 201, 203, 245, 263], "actor": [0, 29, 37, 46, 47, 52, 53, 54, 58, 59, 64, 65, 66, 67, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 102, 107, 113, 114, 116, 117, 118, 119, 123, 124, 125, 128, 138, 139, 140, 141, 162, 200, 236, 240, 241, 249], "ren": [0, 141, 238, 241], "ui": [0, 138, 141, 238, 239, 240, 241], "element": [0, 40, 45, 47, 48, 53, 57, 62, 63, 64, 72, 102, 117, 127, 141, 176, 187, 189, 191, 193, 195, 196, 197, 199, 201, 219, 238, 241], "To": [0, 2, 7, 8, 23, 27, 29, 31, 32, 33, 34, 48, 57, 59, 61, 63, 64, 65, 66, 69, 81, 82, 83, 87, 88, 90, 92, 98, 99, 101, 102, 103, 108, 109, 118, 119, 127, 128, 135, 166, 169, 172, 173, 175, 176, 177, 178, 187, 189, 190, 193, 194, 195, 196, 197, 199, 201, 215], "learn": [0, 14, 15, 21, 27, 36, 45, 54, 57, 165, 171, 179, 182, 190, 191, 194, 195, 201, 202, 213, 242, 251], "go": [0, 7, 8, 11, 17, 18, 19, 21, 22, 27, 29, 48, 53, 57, 60, 76, 81, 82, 83, 89, 90, 99, 107, 116, 138, 141, 142, 145, 162, 163, 166, 168, 189, 194, 196, 199, 238, 240, 247], "http": [0, 1, 2, 3, 8, 11, 22, 23, 27, 32, 34, 48, 58, 60, 62, 63, 64, 87, 103, 118, 138, 162, 163, 166, 168, 169, 170, 173, 185, 187, 189, 190, 191, 193, 194, 195, 199, 201, 210, 222, 238, 250], "gl": 0, "furthermor": [0, 162], "load_trk": [0, 76, 90, 91, 103, 113, 114, 135, 202, 249], "save_trk": [0, 29, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 113, 202], "object": [0, 5, 7, 8, 23, 27, 29, 33, 37, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 76, 81, 82, 83, 88, 98, 99, 108, 109, 116, 117, 118, 119, 130, 135, 138, 139, 140, 141, 142, 145, 162, 163, 164, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 223, 238, 239, 241, 248, 249, 250, 254], "much": [0, 5, 6, 8, 23, 45, 57, 63, 69, 93, 99, 103, 187, 189, 193, 194, 195, 196, 199, 237], "less": [0, 5, 31, 39, 50, 61, 64, 95, 97, 116, 146, 147, 162, 164, 182, 184, 187, 189, 190, 192, 195, 196, 199, 200, 201, 223, 228, 230, 237, 253, 254], "easier": [0, 6, 8, 52, 98, 123, 124, 125, 167, 180, 189, 195, 197, 201], "No": [0, 5, 68, 135, 146, 147, 166, 184, 189, 190, 195, 197, 201, 216, 217, 218, 220, 238, 239, 248, 255], "major": [0, 23, 163, 187, 189, 195, 197, 243], "support": [0, 21, 23, 25, 41, 64, 93, 135, 162, 167, 182, 187, 189, 193, 194, 195, 196, 199, 200, 236, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 253, 255], "It": [0, 7, 8, 14, 17, 18, 23, 30, 33, 37, 40, 43, 46, 47, 48, 53, 56, 57, 58, 59, 60, 61, 65, 71, 80, 84, 92, 98, 102, 103, 108, 110, 111, 112, 113, 114, 116, 117, 119, 135, 139, 141, 142, 145, 162, 163, 168, 177, 178, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 205, 208, 212, 213], "year": [0, 22, 242, 245], "multipl": [0, 2, 3, 5, 32, 40, 43, 45, 46, 47, 48, 51, 53, 55, 57, 61, 64, 68, 105, 141, 142, 145, 162, 165, 167, 172, 173, 175, 176, 177, 178, 182, 187, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 227, 229, 231, 233, 234, 237, 240, 245, 249, 250, 254, 258], "As": [0, 5, 23, 34, 41, 45, 48, 49, 55, 57, 58, 59, 60, 61, 62, 66, 76, 80, 102, 107, 109, 113, 165, 172, 173, 175, 176, 178, 187, 195, 199], "far": [0, 22, 58, 90, 99], "know": [0, 8, 21, 24, 40, 43, 76, 99, 135, 164, 166, 179, 180, 187, 189, 195, 196, 200, 250], "work": [0, 5, 8, 14, 15, 18, 20, 21, 22, 23, 25, 30, 36, 40, 43, 55, 57, 59, 64, 66, 98, 99, 100, 107, 110, 111, 112, 113, 142, 145, 163, 166, 172, 176, 182, 189, 194, 195, 199, 201, 221, 236, 237, 238, 241, 243, 245, 247, 248, 249, 253, 254], "well": [0, 5, 7, 8, 14, 22, 30, 31, 43, 48, 49, 59, 60, 61, 64, 65, 66, 76, 85, 90, 101, 102, 107, 110, 111, 112, 162, 166, 172, 176, 178, 187, 189, 195, 197, 241, 262], "longer": [0, 17, 162, 187, 199, 246], "test": [0, 2, 3, 5, 6, 7, 8, 18, 21, 22, 23, 45, 53, 61, 69, 95, 100, 168, 185, 189, 190, 194, 195, 196, 200, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256], "upgrad": [0, 241, 242, 248], "newer": [0, 166, 238, 240, 241], "probabilistic_direction_gett": 0, "probabilisticdirectiongett": [0, 72, 84, 85, 87, 199], "input": [0, 29, 31, 33, 34, 40, 46, 57, 59, 66, 69, 72, 79, 81, 82, 83, 95, 99, 101, 102, 105, 108, 113, 117, 118, 121, 130, 135, 138, 139, 142, 145, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 227, 229, 231, 232, 233, 234, 236, 237, 238, 241, 244, 245, 247, 250, 252, 253, 258, 259], "pmf_threshold": [0, 178, 201, 233, 234], "probabl": [0, 18, 51, 58, 61, 68, 71, 80, 84, 85, 99, 121, 166, 176, 178, 187, 194, 195, 196, 197, 199, 260], "lower": [0, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 47, 48, 49, 51, 54, 55, 57, 59, 60, 61, 64, 68, 72, 81, 82, 83, 87, 89, 100, 103, 109, 110, 111, 112, 162, 170, 187, 189, 193, 194, 195, 196, 201, 208, 221, 226], "mass": [0, 85, 99, 100, 177, 178, 187, 199, 201, 203], "dki": [0, 34, 49, 60, 122, 126, 146, 147, 165, 174, 182, 184, 197, 201, 202, 218, 236, 237, 238, 240, 241, 247, 248, 249, 251, 252, 253, 254, 255, 256], "model": [0, 1, 2, 3, 18, 29, 30, 32, 34, 35, 36, 43, 44, 46, 47, 50, 51, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 93, 95, 98, 110, 111, 112, 113, 114, 121, 127, 130, 131, 146, 150, 165, 167, 168, 169, 176, 178, 182, 187, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 213, 221, 225, 228, 230, 238, 239, 240, 242, 243, 244, 245, 247, 249, 250, 253, 254], "wl": [0, 69, 146, 147, 184, 195, 201, 218, 219], "max_kurtosi": [0, 195], "axial_kurtosi": [0, 202], "mean_kurtosi": [0, 202], "radial_kuroti": 0, "prefer": [0, 8, 23, 102, 103, 113, 141, 162, 168, 196, 236, 242, 253], "rather": [0, 17, 19, 22, 69, 100, 105, 163, 166, 189, 195, 196, 236, 240], "widget": [0, 138, 238], "slicer": [0, 72, 76, 87, 88, 98, 107, 138, 141, 200, 238, 239, 240, 241, 244, 249], "power": [0, 2, 3, 57, 59, 146, 147, 173, 182, 184, 190, 195, 199, 236, 238], "rgb": [0, 53, 139, 167, 168, 193, 195, 201, 218, 219, 244], "too": [0, 48, 69, 108, 116, 166, 192, 201, 237, 247], "see": [0, 6, 8, 11, 13, 14, 18, 19, 21, 22, 23, 27, 31, 32, 33, 34, 36, 43, 45, 48, 49, 50, 53, 55, 57, 58, 59, 60, 61, 62, 65, 66, 67, 69, 72, 76, 87, 88, 89, 97, 98, 99, 102, 103, 108, 109, 116, 117, 118, 119, 130, 135, 138, 139, 141, 142, 145, 163, 164, 165, 166, 167, 168, 172, 173, 180, 182, 183, 187, 191, 194, 196, 198, 201, 215, 222, 258, 263], "tutori": [0, 16, 30, 44, 46, 48, 50, 51, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 79, 87, 91, 93, 95, 99, 100, 103, 109, 110, 111, 112, 113, 114, 117, 118, 138, 140, 146, 147, 150, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 182, 183, 189, 236, 237, 239, 240, 241, 242, 243, 245, 247, 248, 249, 251, 252, 253, 254], "viz_slic": [0, 137, 141], "py": [0, 5, 18, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 166, 168, 181, 189, 195, 196, 199, 201, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "behavior": [0, 23, 141, 187, 194, 195, 201, 240, 241, 247], "interp_rbf": [0, 238, 244], "addit": [0, 5, 34, 48, 55, 59, 63, 71, 101, 138, 162, 172, 176, 183, 187, 190, 193, 194, 195, 198, 201, 238, 243, 247, 256, 257], "norm": [0, 5, 36, 47, 58, 59, 64, 71, 118, 164, 187, 189, 201, 202, 209, 210, 216, 219, 221, 224, 244], "angl": [0, 29, 44, 52, 58, 60, 62, 63, 66, 70, 72, 80, 81, 82, 83, 118, 123, 124, 125, 127, 128, 130, 146, 163, 164, 167, 174, 178, 189, 190, 195, 197, 199, 200, 201, 216, 233, 234, 244, 253, 254, 263], "euclidean_norm": 0, "discourag": [0, 238], "11": [0, 1, 22, 48, 49, 51, 54, 55, 57, 58, 59, 61, 72, 76, 84, 89, 90, 91, 98, 113, 114, 119, 121, 131, 165, 166, 182, 183, 187, 189, 190, 195, 198, 199, 236, 238, 243, 246, 247, 248, 250, 251, 252, 254, 256], "vector_field": [0, 238], "warp_2d_affin": 0, "transform_2d_affin": 0, "warp_2d_affine_nn": 0, "transform_2d_affine_nn": 0, "warp_3d_affin": 0, "transform_3d_affin": 0, "warp_3d_affine_nn": 0, "transform_3d_affine_nn": 0, "gqi": [0, 56, 146, 147, 162, 184, 190, 202, 243, 256, 260], "calcul": [0, 29, 32, 44, 45, 46, 47, 48, 50, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 69, 70, 72, 76, 79, 81, 82, 83, 90, 92, 94, 96, 97, 130, 131, 146, 165, 167, 168, 176, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 203, 210, 217, 222, 229, 236, 241, 243, 244, 245, 249, 256, 258, 259], "gqi2": [0, 146, 147, 184, 195, 246], "match": [0, 22, 35, 38, 42, 64, 101, 103, 107, 113, 146, 170, 177, 178, 187, 189, 190, 191, 193, 194, 195, 196, 201, 208, 228, 255], "either": [0, 5, 17, 29, 36, 58, 59, 64, 76, 81, 82, 83, 88, 89, 90, 98, 99, 103, 116, 170, 187, 189, 190, 191, 193, 195, 197, 199, 201, 210, 211, 221, 238], "doc": [0, 5, 6, 22, 23, 63, 69, 166, 181, 189, 193, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "therein": 0, "access": [0, 11, 17, 18, 22, 27, 31, 57, 59, 62, 135, 138, 141, 166, 189, 190, 191, 195, 200, 201, 222, 239, 248], "complet": [0, 17, 22, 27, 29, 58, 63, 81, 82, 83, 87, 93, 95, 103, 119, 140, 166, 167, 168, 170, 178, 187, 195, 238, 243, 244, 253], "resampl": [0, 41, 99, 100, 102, 103, 109, 117, 118, 119, 141, 162, 176, 185, 195, 196, 198, 199, 201, 202, 229, 236, 238, 245, 256], "aniso2iso": [0, 162, 236, 238], "reslic": [0, 38, 42, 50, 56, 107, 146, 201, 202, 229, 236, 238, 245, 253, 256], "peaks_from_model": [0, 29, 46, 47, 56, 59, 64, 65, 72, 81, 82, 83, 85, 86, 88, 93, 95, 98, 130, 131, 140, 202, 238, 243, 244, 245, 247, 253], "like": [0, 2, 3, 6, 7, 8, 9, 17, 19, 22, 23, 27, 40, 45, 47, 57, 64, 65, 68, 85, 99, 100, 102, 103, 109, 113, 119, 135, 138, 141, 142, 145, 162, 163, 165, 166, 168, 177, 178, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 227, 236, 247, 252, 254], "odf": [0, 29, 46, 47, 50, 52, 53, 54, 56, 58, 59, 61, 64, 65, 66, 67, 69, 71, 72, 79, 81, 82, 83, 85, 86, 87, 123, 124, 125, 128, 130, 131, 176, 182, 192, 194, 197, 200, 201, 202, 216, 217, 233, 234, 237, 238, 243, 244, 245, 249, 251, 256, 262], "take": [0, 8, 18, 21, 31, 33, 36, 47, 48, 50, 55, 57, 59, 61, 63, 64, 65, 69, 71, 72, 85, 87, 88, 98, 99, 102, 107, 116, 117, 118, 162, 166, 168, 187, 189, 190, 191, 194, 195, 198, 199, 201, 210, 211, 240, 243, 250, 251, 262], "size": [0, 1, 27, 29, 31, 34, 35, 36, 37, 41, 46, 47, 48, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 109, 113, 114, 116, 117, 118, 119, 123, 124, 125, 128, 138, 139, 140, 141, 146, 162, 167, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 208, 212, 223, 227, 229, 233, 234, 240, 241, 245, 247, 249, 254], "arrai": [0, 5, 6, 7, 27, 31, 33, 35, 36, 37, 40, 43, 47, 48, 50, 52, 53, 57, 58, 59, 60, 61, 62, 64, 65, 66, 89, 91, 97, 98, 100, 105, 107, 108, 109, 117, 118, 119, 123, 124, 125, 127, 128, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 222, 227, 229, 236, 237, 238, 239, 240, 241, 245, 247, 248, 249, 252, 253, 254, 258, 259], "updat": [0, 7, 12, 16, 22, 37, 64, 66, 138, 165, 182, 187, 189, 193, 194, 195, 196, 201, 202, 204, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 262], "similar": [0, 11, 22, 40, 46, 48, 50, 58, 60, 61, 63, 90, 93, 94, 96, 97, 99, 100, 102, 108, 109, 113, 114, 121, 130, 146, 174, 182, 187, 189, 190, 191, 195, 196, 198, 199, 201, 203, 213, 228, 230, 245, 247, 262], "nib": [0, 5, 22, 33, 34, 41, 54, 55, 107, 135, 187, 193], "anat": 0, "voxel_dim": 0, "header": [0, 27, 90, 107, 135, 193, 201, 223, 238, 247, 250, 252, 258, 259], "pixdim": 0, "someth": [0, 6, 7, 8, 18, 19, 22, 23, 45, 58, 61, 166, 167, 189, 193, 195, 197, 199, 200, 201, 223, 227], "1": [1, 2, 3, 5, 8, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 130, 131, 135, 138, 139, 140, 141, 162, 163, 164, 165, 167, 168, 169, 170, 173, 176, 177, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 256, 258, 259, 260, 262], "garyfallidi": [1, 2, 3, 5, 21, 24, 29, 36, 55, 56, 71, 72, 81, 82, 83, 90, 91, 92, 101, 102, 103, 113, 116, 117, 118, 119, 138, 167, 168, 169, 170, 177, 178, 187, 190, 191, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "e": [1, 2, 3, 5, 8, 9, 15, 22, 23, 24, 27, 29, 32, 34, 36, 40, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 67, 68, 69, 71, 72, 76, 78, 80, 81, 82, 83, 84, 87, 89, 90, 91, 92, 95, 100, 101, 105, 107, 113, 114, 116, 117, 118, 119, 127, 138, 162, 163, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 245, 256, 257, 258, 259, 262], "brett": [1, 5, 7, 21, 22, 24, 167, 168, 169, 170, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 244, 245, 246], "m": [1, 2, 3, 5, 8, 18, 22, 32, 39, 43, 47, 48, 49, 51, 54, 55, 61, 62, 63, 64, 65, 68, 76, 78, 84, 87, 89, 90, 97, 98, 102, 107, 108, 109, 118, 121, 167, 168, 169, 170, 175, 177, 178, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 262], "amirbekian": [1, 5, 21, 24, 79, 93, 167, 168, 169, 170, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 243, 244, 245, 246], "b": [1, 2, 3, 5, 8, 9, 22, 27, 32, 33, 34, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 76, 91, 92, 93, 97, 99, 100, 102, 107, 108, 109, 113, 118, 121, 127, 128, 140, 146, 147, 162, 165, 167, 168, 169, 170, 172, 173, 175, 176, 177, 182, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 245, 246, 247, 249, 253, 254], "rokem": [1, 2, 3, 5, 21, 24, 45, 55, 65, 76, 88, 91, 92, 113, 146, 147, 167, 168, 169, 170, 184, 195, 196, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "van": [1, 2, 3, 5, 21, 24, 48, 65, 88, 167, 168, 169, 170, 195, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 243, 244, 245, 246], "der": [1, 2, 3, 5, 21, 24, 48, 65, 88, 167, 168, 169, 170, 195, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 243, 244, 245, 246], "walt": [1, 2, 3, 5, 21, 24, 65, 88, 167, 168, 169, 170, 195, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 243, 244, 245, 246], "descoteaux": [1, 5, 24, 43, 51, 68, 78, 84, 89, 146, 147, 167, 168, 169, 170, 178, 184, 190, 191, 192, 195, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 241, 243, 244, 245, 246, 262], "nimmo": [1, 5, 21, 24, 167, 168, 169, 170, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243], "smith": [1, 5, 21, 24, 39, 84, 89, 121, 167, 168, 169, 170, 175, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 262], "dipi": [1, 2, 3, 8, 10, 12, 14, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 147, 150, 162, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 256, 257, 260, 262], "contributor": [1, 5, 21, 22, 24, 138, 189, 196, 236, 238], "2014": [1, 2, 3, 5, 45, 47, 48, 55, 57, 59, 64, 76, 84, 89, 102, 146, 147, 167, 168, 169, 170, 178, 183, 184, 187, 195, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 245, 248], "librari": [1, 4, 22, 27, 63, 69, 138, 162, 165, 166, 167, 168, 169, 170, 182, 189, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 240, 245, 254], "diffus": [1, 2, 3, 5, 21, 27, 29, 32, 33, 34, 36, 37, 38, 40, 42, 44, 45, 46, 47, 51, 52, 54, 55, 56, 57, 59, 62, 63, 64, 65, 68, 69, 70, 71, 72, 76, 81, 82, 83, 84, 85, 87, 88, 89, 93, 98, 99, 107, 114, 123, 124, 125, 127, 138, 146, 162, 166, 167, 168, 169, 170, 173, 174, 178, 179, 180, 182, 183, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 251, 253, 258, 259, 260, 262], "mri": [1, 2, 3, 5, 21, 27, 29, 30, 32, 34, 36, 40, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 76, 81, 82, 83, 84, 87, 88, 89, 93, 95, 100, 110, 111, 112, 114, 146, 162, 167, 168, 169, 170, 172, 173, 174, 178, 179, 182, 183, 184, 185, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 249, 251, 253, 262], "frontier": [1, 5, 90, 101, 116, 117, 118, 119, 167, 168, 169, 170, 182, 183, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "neuroinformat": [1, 5, 24, 114, 121, 165, 167, 168, 169, 170, 182, 183, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "vol": [1, 2, 3, 5, 31, 35, 37, 47, 50, 51, 52, 56, 59, 68, 79, 90, 101, 116, 117, 118, 119, 123, 124, 125, 167, 189, 191, 195, 196, 197, 199], "8": [1, 5, 25, 29, 33, 34, 36, 43, 47, 48, 49, 54, 55, 57, 58, 59, 61, 64, 65, 66, 67, 68, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 89, 93, 95, 98, 99, 100, 113, 119, 121, 131, 140, 141, 176, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 210, 233, 234, 236, 240, 241, 243, 246, 247, 248, 249, 251, 256, 260], "2": [1, 2, 3, 4, 7, 8, 20, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 116, 118, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 162, 163, 164, 166, 167, 172, 175, 176, 177, 178, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 210, 211, 212, 218, 219, 220, 221, 222, 223, 233, 234, 236, 237, 238, 241, 242, 244, 245, 247, 248, 250, 253, 255, 256, 258, 260, 262, 263], "2010": [1, 2, 3, 22, 46, 48, 52, 54, 55, 56, 71, 72, 102, 123, 124, 125, 130, 146, 147, 166, 167, 176, 184, 187, 189, 190, 195, 197, 248], "fast": [1, 2, 3, 17, 29, 48, 49, 57, 59, 60, 61, 71, 81, 82, 83, 98, 99, 115, 118, 120, 121, 146, 165, 166, 167, 176, 182, 187, 192, 195, 196, 197, 200, 201, 223, 236, 238, 243, 255, 262], "dimension": [1, 32, 33, 58, 61, 67, 118, 164, 172, 187, 189, 194, 195, 196, 197, 199, 201, 219, 236, 238, 245], "reduct": [1, 76, 94, 96, 101, 146, 163, 195, 196, 201, 228], "brain": [1, 2, 3, 24, 29, 32, 34, 38, 39, 42, 43, 45, 47, 48, 49, 53, 54, 55, 60, 62, 63, 64, 65, 69, 72, 76, 81, 82, 83, 89, 91, 92, 95, 98, 103, 107, 108, 109, 113, 114, 115, 120, 121, 135, 146, 167, 168, 170, 175, 177, 178, 182, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 214, 222, 223, 228, 231, 240, 245, 247, 251, 253], "cluster": [1, 2, 3, 5, 90, 92, 94, 96, 101, 102, 113, 115, 120, 146, 167, 169, 182, 187, 189, 190, 195, 199, 201, 202, 223, 225, 228, 230, 236, 238, 249, 255, 256], "16th": 1, "annual": [1, 2, 3, 49, 190, 195], "meet": [1, 2, 3, 47, 49, 59, 103, 183, 190, 194, 247, 248, 249, 250, 251, 253], "organ": [1, 2, 3, 8, 142, 165, 187, 189, 190, 193, 194, 195, 196], "human": [1, 2, 3, 5, 24, 48, 53, 62, 63, 72, 168, 169, 182, 190, 195], "map": [1, 2, 3, 27, 29, 34, 36, 39, 41, 43, 44, 48, 49, 50, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 70, 71, 72, 76, 81, 82, 83, 84, 87, 88, 89, 90, 94, 96, 103, 105, 107, 108, 109, 114, 116, 117, 119, 121, 135, 138, 139, 146, 165, 167, 174, 177, 178, 182, 184, 187, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 204, 205, 221, 236, 238, 240, 241, 246, 249, 250, 252, 253, 254], "3": [1, 2, 3, 5, 7, 20, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 46, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 92, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 113, 114, 116, 117, 118, 119, 121, 130, 131, 135, 138, 139, 141, 162, 163, 164, 166, 167, 176, 177, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 205, 208, 210, 217, 218, 219, 223, 227, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262], "tsiara": 1, "v": [1, 2, 3, 5, 7, 19, 32, 44, 48, 49, 60, 62, 70, 122, 126, 146, 166, 168, 187, 189, 190, 192, 194, 195, 196, 200, 201, 214, 238, 239, 247, 249, 258, 259], "vogiatzi": 1, "g": [1, 5, 8, 9, 15, 22, 23, 27, 32, 40, 46, 48, 50, 51, 53, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 69, 71, 72, 76, 78, 80, 84, 89, 93, 95, 97, 99, 100, 105, 107, 108, 109, 116, 118, 138, 140, 162, 163, 167, 169, 172, 173, 175, 176, 177, 178, 182, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 233, 234, 256, 258, 259], "identif": [1, 40, 191], "proc": [1, 67, 189, 195], "intl": [1, 67, 195], "soc": [1, 65, 67, 189, 195], "mag": [1, 67, 195], "reson": [1, 32, 34, 35, 36, 37, 46, 48, 49, 50, 51, 54, 55, 57, 59, 60, 64, 67, 68, 167, 172, 173, 176, 191, 192, 194, 195, 196, 197, 200, 201, 210, 211, 218, 219, 222, 223, 262], "med": [1, 32, 39, 55, 67, 86, 173, 175, 189, 191, 192, 195, 201, 218, 222, 262], "18": [1, 48, 51, 54, 55, 57, 58, 59, 61, 72, 79, 84, 85, 86, 89, 91, 113, 114, 119, 121, 138, 139, 167, 168, 169, 170, 183, 189, 191, 195, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 243, 246, 248, 249], "4": [1, 2, 3, 4, 22, 25, 30, 31, 32, 34, 35, 36, 40, 41, 43, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 68, 71, 72, 76, 78, 79, 80, 84, 85, 86, 88, 89, 91, 93, 98, 99, 100, 102, 107, 108, 109, 110, 111, 112, 116, 117, 119, 121, 130, 135, 138, 141, 162, 164, 166, 167, 172, 173, 176, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 217, 219, 227, 236, 237, 238, 241, 247, 250, 253, 256, 258, 262], "correia": [1, 48, 55, 60, 176, 190, 195], "william": [1, 195], "yeh": [1, 2, 3, 56, 91, 92, 113, 146, 147, 168, 169, 184, 195, 196, 198, 201, 207, 228, 260], "f": [1, 2, 3, 8, 9, 32, 36, 43, 45, 47, 49, 51, 55, 56, 57, 59, 60, 63, 64, 68, 71, 76, 84, 89, 90, 91, 92, 102, 113, 131, 168, 169, 173, 189, 190, 191, 192, 195, 196, 197, 198, 199, 201, 202, 207, 228, 262], "c": [1, 2, 3, 7, 8, 9, 18, 22, 32, 35, 36, 40, 43, 46, 47, 49, 55, 56, 61, 62, 63, 64, 69, 100, 107, 108, 109, 121, 162, 166, 167, 168, 169, 172, 177, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 218, 219, 239, 242, 244, 245, 246, 247], "2011": [1, 2, 3, 22, 31, 35, 43, 48, 49, 51, 57, 67, 68, 71, 72, 99, 100, 102, 107, 108, 109, 121, 146, 147, 168, 172, 176, 177, 184, 189, 191, 195, 196, 201, 218, 243, 248], "robust": [1, 5, 29, 34, 39, 44, 47, 48, 58, 59, 60, 61, 70, 75, 77, 81, 82, 83, 101, 102, 127, 146, 169, 175, 176, 177, 178, 182, 187, 190, 192, 193, 195, 196, 197, 201, 217, 218, 219, 230, 247, 253, 262], "scalar": [1, 44, 54, 58, 70, 89, 118, 139, 146, 176, 187, 189, 194, 195, 199, 200, 236], "estim": [1, 29, 31, 32, 35, 36, 38, 42, 44, 45, 48, 49, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 67, 69, 70, 72, 80, 81, 82, 83, 84, 85, 89, 98, 105, 107, 146, 162, 172, 173, 176, 178, 182, 187, 189, 191, 192, 195, 196, 197, 199, 201, 204, 210, 211, 212, 218, 219, 220, 221, 234, 236, 237, 238, 239, 245, 247, 249, 250, 251, 258, 259], "q": [1, 36, 43, 44, 50, 51, 58, 59, 67, 68, 70, 79, 91, 92, 113, 129, 132, 146, 162, 167, 168, 172, 182, 184, 187, 189, 190, 192, 194, 195, 196, 197, 198, 200, 201, 207, 216, 223, 228, 247, 251, 253, 259, 262], "sampl": [1, 44, 48, 58, 60, 63, 66, 69, 70, 71, 85, 87, 93, 99, 100, 105, 109, 127, 145, 146, 162, 168, 187, 189, 194, 195, 198, 199, 236, 238, 242, 253, 255], "acquisit": [1, 5, 27, 36, 37, 39, 40, 43, 48, 52, 58, 60, 61, 62, 63, 69, 76, 123, 124, 125, 172, 175, 182, 189, 190, 191, 194, 195, 201, 258, 259], "scheme": [1, 5, 33, 37, 52, 53, 61, 76, 123, 124, 125, 187, 191, 194, 195], "19": [1, 28, 29, 34, 48, 54, 57, 58, 59, 61, 72, 80, 84, 85, 89, 91, 107, 113, 114, 121, 167, 182, 195, 236, 243, 245, 251], "5": [1, 2, 3, 22, 23, 25, 29, 30, 32, 34, 39, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 95, 97, 98, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 116, 121, 123, 124, 125, 130, 131, 135, 138, 139, 140, 141, 165, 166, 167, 168, 175, 176, 178, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 219, 227, 229, 237, 238, 241, 243, 245, 247, 249, 254, 256], "chamberlain": 1, "sr": [1, 189], "hampshir": 1, "menzi": 1, "la": [1, 167], "grant": [1, 190], "je": 1, "odlaug": 1, "bl": 1, "craig": 1, "k": [1, 2, 3, 5, 27, 32, 36, 43, 44, 46, 48, 60, 62, 63, 69, 70, 71, 72, 76, 84, 89, 93, 95, 99, 100, 102, 116, 118, 141, 146, 162, 167, 173, 176, 178, 187, 189, 190, 194, 195, 196, 197, 199, 200, 201, 219, 223, 234, 258, 260, 262], "fineberg": 1, "n": [1, 2, 3, 5, 22, 23, 31, 32, 35, 36, 39, 40, 45, 46, 48, 55, 57, 60, 62, 63, 64, 65, 69, 71, 76, 87, 88, 89, 91, 97, 99, 100, 102, 107, 108, 109, 118, 119, 121, 167, 172, 175, 177, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 258, 259], "sahakian": 1, "bj": 1, "reduc": [1, 5, 8, 20, 39, 58, 61, 71, 84, 89, 97, 98, 101, 113, 135, 163, 166, 178, 182, 187, 189, 190, 195, 196, 199, 201, 227, 228, 234, 238, 244, 245, 249], "white": [1, 2, 3, 25, 29, 32, 40, 43, 45, 48, 49, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 69, 72, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 95, 97, 98, 100, 101, 102, 103, 113, 116, 119, 121, 139, 168, 174, 176, 177, 178, 187, 190, 194, 195, 196, 197, 198, 201, 208, 225, 228, 230, 234, 238, 239, 243, 255], "matter": [1, 2, 3, 25, 29, 32, 40, 43, 45, 48, 49, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 69, 72, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 95, 98, 101, 102, 103, 113, 121, 135, 168, 174, 176, 177, 178, 187, 190, 193, 194, 195, 196, 197, 198, 201, 208, 225, 228, 230, 234, 243, 255, 258], "trichotillomania": 1, "tensor": [1, 43, 44, 45, 47, 49, 52, 54, 55, 58, 59, 60, 62, 63, 64, 65, 70, 76, 123, 124, 125, 127, 128, 146, 162, 165, 167, 174, 182, 185, 189, 190, 194, 195, 197, 199, 201, 218, 219, 236, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 252, 254, 258, 259], "studi": [1, 2, 3, 48, 49, 54, 58, 61, 69, 189, 190, 195, 249], "arch": 1, "gen": 1, "psychiatri": 1, "67": [1, 34, 47, 48, 54, 55, 57, 58, 59, 61, 64, 72, 80, 84, 86, 89, 245, 255], "9": [1, 25, 33, 34, 36, 40, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 71, 72, 76, 79, 80, 84, 85, 86, 89, 109, 121, 135, 139, 166, 182, 183, 187, 190, 191, 193, 194, 195, 199, 201, 210, 236, 237, 243, 252, 255, 256], "965": [1, 197, 238], "71": [1, 46, 48, 53, 54, 55, 57, 58, 59, 61, 72, 79, 84, 85, 89, 243], "6": [1, 6, 22, 23, 25, 29, 32, 34, 36, 40, 43, 45, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 67, 68, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 93, 95, 98, 101, 102, 109, 113, 114, 116, 117, 118, 119, 121, 138, 140, 165, 166, 176, 182, 183, 187, 189, 190, 193, 195, 196, 197, 199, 201, 218, 219, 227, 231, 236, 238, 239, 241, 242, 244, 245, 253, 255, 256, 258, 259], "nguyen": [1, 24], "olivetti": [1, 24, 243], "halchenko": [1, 9, 238, 243, 255], "y": [1, 5, 43, 51, 52, 55, 57, 58, 63, 64, 65, 67, 68, 69, 71, 72, 76, 86, 87, 107, 121, 123, 124, 125, 138, 141, 162, 163, 164, 177, 187, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 205, 219, 252, 258, 263], "novel": [1, 48, 49, 58, 60, 127, 176, 195, 197], "softwar": [1, 5, 29, 81, 82, 83, 88, 107, 108, 109, 135, 138, 177, 180, 181, 189, 190, 195, 196, 201, 219, 258, 259, 262], "mr": [1, 31, 32, 33, 35, 37, 43, 53, 57, 64, 67, 85, 121, 162, 172, 173, 175, 176, 178, 180, 189, 190, 191, 195, 201, 220, 243, 258], "17th": 1, "7": [1, 8, 22, 25, 29, 34, 40, 45, 47, 48, 49, 51, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 105, 113, 114, 119, 121, 131, 162, 165, 166, 176, 182, 183, 187, 189, 190, 194, 195, 196, 198, 199, 201, 237, 241, 245, 246, 247, 249, 256], "wedeen": [1, 50, 146, 147, 184, 195], "vj": 1, "tseng": 1, "wy": 1, "ieee": [1, 2, 3, 35, 36, 51, 56, 64, 68, 86, 99, 100, 121, 172, 183, 187, 189, 191, 195], "tran": [1, 86, 189, 191, 201, 203], "2012": [1, 29, 48, 49, 56, 81, 82, 83, 84, 89, 90, 101, 102, 116, 117, 118, 119, 166, 167, 178, 195, 196, 197, 198, 199, 201, 233, 248], "quickbundl": [1, 90, 101, 113, 115, 116, 117, 120, 146, 182, 187, 199, 202, 236, 237, 239, 240, 243, 244, 256], "simplif": [1, 90, 101, 102, 116, 117, 118, 119, 196, 199], "neurosci": [1, 24, 90, 101, 107, 116, 117, 118, 119, 181, 196, 199], "175": [1, 57, 58, 90, 101, 116, 117, 118, 119, 124, 196, 199], "cote": [1, 200, 201, 223, 245], "rheault": [1, 2, 3, 241, 242, 247, 248, 249, 253, 254, 255], "sidhu": 1, "j": [1, 2, 3, 5, 27, 32, 34, 36, 43, 45, 47, 48, 49, 53, 54, 55, 57, 59, 62, 63, 64, 65, 67, 71, 72, 76, 79, 84, 87, 89, 90, 91, 92, 102, 107, 108, 109, 113, 121, 141, 162, 168, 169, 173, 176, 177, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 207, 210, 211, 213, 214, 217, 218, 219, 220, 223, 228, 243, 254, 258, 260, 262], "hau": 1, "petit": 1, "l": [1, 2, 3, 33, 34, 36, 45, 48, 49, 54, 55, 61, 62, 64, 69, 87, 91, 92, 107, 108, 109, 113, 167, 168, 177, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 210, 218, 219, 228, 245, 262], "fortin": 1, "d": [1, 2, 3, 5, 7, 8, 9, 22, 23, 32, 34, 36, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 71, 84, 88, 89, 90, 91, 92, 97, 99, 100, 101, 102, 113, 118, 121, 163, 168, 169, 172, 173, 176, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210, 211, 217, 219, 220, 223, 228, 244, 250, 258, 260, 262], "cunann": 1, "recognit": [1, 2, 3, 90, 113, 169, 187, 196, 201, 225, 228, 230, 240], "bundl": [1, 2, 3, 25, 61, 73, 74, 80, 85, 93, 94, 95, 96, 97, 104, 106, 107, 114, 115, 116, 117, 118, 119, 120, 136, 137, 138, 146, 165, 166, 174, 177, 182, 187, 190, 198, 199, 200, 201, 202, 206, 207, 208, 223, 225, 228, 238, 240, 241, 242, 245, 247, 249, 250, 252, 254, 255], "global": [1, 2, 3, 7, 18, 39, 58, 64, 87, 90, 100, 113, 138, 169, 175, 187, 195, 196, 197, 201, 225, 228, 230, 245], "10": [1, 2, 3, 25, 27, 29, 32, 33, 34, 36, 39, 43, 45, 46, 47, 48, 49, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 97, 100, 103, 105, 106, 107, 108, 109, 113, 114, 116, 117, 119, 121, 127, 130, 131, 138, 141, 146, 147, 166, 167, 168, 172, 173, 176, 182, 183, 184, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 204, 207, 210, 211, 217, 220, 222, 228, 237, 238, 239, 240, 241, 242, 247, 248, 249, 253, 254, 255, 256], "ocegueda": [1, 24, 190, 236, 237, 238, 245, 246, 254], "o": [1, 13, 27, 32, 45, 54, 55, 57, 71, 76, 90, 99, 100, 103, 107, 135, 141, 166, 173, 176, 190, 193, 195, 196, 201, 220, 237, 245, 247, 256], "wassermann": [1, 2, 3, 24, 190, 241, 245], "effici": [1, 64, 87, 101, 102, 141, 166, 169, 177, 182, 187, 189, 190, 199, 201, 230, 250], "linear": [1, 8, 36, 48, 49, 57, 58, 62, 63, 67, 75, 77, 101, 102, 103, 105, 108, 109, 146, 164, 168, 170, 174, 177, 182, 187, 189, 190, 191, 192, 196, 199, 201, 202, 206, 213, 219, 228, 230, 238, 242, 243, 245, 250, 254, 255], "fascicl": [1, 44, 70, 75, 77, 101, 102, 146, 169, 177, 182, 187, 190, 195, 199, 201, 230, 245], "space": [1, 2, 3, 5, 29, 32, 36, 44, 47, 48, 50, 51, 53, 58, 60, 67, 68, 70, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 101, 102, 103, 107, 108, 113, 135, 138, 139, 146, 162, 168, 169, 172, 173, 176, 177, 182, 187, 189, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 225, 228, 230, 238, 239, 240, 251, 253, 256, 258, 259, 260], "yeatman": [1, 2, 3, 45, 65, 76, 88, 90, 195, 198, 199], "jd": 1, "pestilli": [1, 2, 3, 45, 65, 76, 88, 91, 92, 113, 168, 195, 196, 198, 199, 201, 207, 228], "kai": [1, 2, 3, 65, 76, 88, 195, 199], "kn": 1, "mezer": [1, 2, 3, 45, 65, 88, 195], "et": [1, 2, 3, 24, 33, 37, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 79, 89, 90, 95, 101, 102, 103, 107, 108, 109, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 130, 146, 147, 169, 170, 176, 177, 182, 184, 187, 189, 190, 191, 194, 195, 196, 197, 199, 201, 208, 216, 217, 220, 225, 228, 230, 240, 262], "al": [1, 2, 3, 33, 37, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 79, 89, 90, 95, 101, 102, 103, 107, 108, 109, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 130, 146, 147, 169, 170, 176, 177, 182, 184, 187, 189, 190, 191, 194, 195, 196, 197, 199, 201, 208, 216, 217, 220, 225, 228, 230, 240, 262], "2015": [1, 2, 3, 32, 48, 54, 57, 60, 64, 65, 71, 72, 87, 88, 101, 102, 127, 146, 147, 165, 166, 169, 173, 176, 177, 182, 183, 184, 187, 189, 190, 195, 197, 199, 201, 230, 236, 237, 238, 246, 248], "evalu": [1, 2, 3, 45, 46, 48, 49, 59, 60, 61, 65, 71, 72, 75, 77, 88, 107, 108, 109, 118, 121, 130, 146, 167, 177, 178, 182, 187, 189, 190, 192, 194, 195, 197, 199, 202, 250], "accuraci": [1, 2, 3, 45, 47, 48, 58, 63, 65, 88, 107, 187, 194, 195, 196, 252], "12": [1, 25, 32, 34, 36, 40, 45, 48, 54, 55, 57, 58, 59, 61, 62, 64, 72, 76, 77, 79, 80, 84, 85, 86, 89, 97, 98, 100, 102, 105, 107, 108, 109, 113, 116, 117, 119, 121, 166, 177, 182, 183, 187, 189, 195, 196, 199, 201, 237, 239, 241, 242, 243, 244, 245, 246, 249, 254, 256], "dalmau": 1, "rivera": 1, "On": [1, 8, 48, 58, 72, 116, 166, 187, 189, 195, 241], "comput": [1, 4, 7, 19, 29, 31, 32, 33, 34, 36, 43, 47, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 64, 67, 68, 71, 72, 78, 81, 82, 83, 87, 91, 92, 99, 100, 101, 103, 107, 113, 114, 116, 117, 118, 127, 130, 131, 135, 140, 165, 166, 168, 173, 176, 177, 182, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 207, 217, 218, 219, 220, 228, 231, 238, 241, 249, 262], "over": [1, 22, 33, 58, 61, 62, 63, 71, 72, 76, 100, 103, 109, 135, 162, 163, 164, 172, 187, 189, 190, 193, 195, 199, 200, 238, 248, 252, 258], "rectangl": 1, "arbitrari": [1, 19, 187, 189, 193, 194, 195, 196, 199, 245, 259], "dimens": [1, 27, 40, 53, 57, 64, 72, 76, 99, 108, 118, 135, 141, 162, 176, 178, 187, 189, 191, 193, 194, 195, 196, 197, 199, 201, 202, 219, 233, 234, 240, 247], "13": [1, 25, 46, 48, 53, 54, 55, 57, 58, 59, 61, 63, 72, 79, 80, 84, 85, 89, 119, 121, 182, 183, 195, 200, 240, 243, 247, 249, 250, 251, 252, 256], "rafael": [1, 24, 182, 236, 238, 239, 241, 247, 248, 249, 250, 253], "neto": [1, 24, 32, 48, 60, 127, 176, 191, 195, 197, 201, 222, 236, 238, 239, 247, 248, 249, 250, 253], "henriqu": [1, 24, 32, 34, 48, 55, 60, 127, 146, 147, 176, 182, 184, 191, 195, 197, 201, 222, 236, 238, 239, 247, 248, 249, 250, 253], "ariel": [1, 21, 24, 65, 88, 195, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "eleftherio": [1, 21, 22, 24, 138, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "samuel": [1, 24, 236, 237, 238, 243, 244, 245, 246], "st": [1, 7, 24, 55, 78, 114, 195, 196, 200, 201, 223, 236, 237, 238, 243, 244, 245, 246, 252, 255], "jean": [1, 24, 55, 195, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249], "eric": [1, 2, 3, 24, 238, 248, 250, 253, 254], "thoma": 1, "peterson": [1, 2, 3, 55, 195, 238], "marta": 1, "morgado": 1, "rescienc": [1, 55, 195], "issu": [1, 2, 3, 8, 22, 39, 48, 55, 60, 92, 138, 165, 175, 182, 189, 195, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "articl": [1, 2, 3, 49, 55, 62, 63, 103, 168, 169, 170, 189, 191, 195], "2017": [1, 2, 3, 54, 55, 57, 90, 93, 107, 113, 146, 147, 166, 169, 183, 184, 187, 190, 195, 196, 199, 201, 225, 228, 230, 233, 238, 239, 240, 248], "re": [1, 8, 11, 17, 18, 19, 55, 98, 109, 135, 138, 166, 187, 194, 195, 196, 240, 248, 259, 262], "optim": [1, 2, 3, 6, 34, 35, 36, 37, 39, 49, 55, 57, 58, 59, 60, 61, 65, 76, 99, 100, 102, 105, 107, 108, 109, 121, 167, 172, 177, 182, 187, 191, 192, 193, 194, 195, 196, 201, 202, 204, 213, 236, 241, 245, 247, 248, 252, 253], "free": [1, 5, 44, 45, 53, 61, 63, 70, 99, 100, 127, 146, 162, 173, 175, 176, 179, 182, 187, 190, 195, 238, 240, 247, 250, 254], "water": [1, 29, 44, 48, 49, 60, 63, 70, 81, 82, 83, 93, 127, 146, 162, 176, 182, 190, 195, 197, 201, 218, 238, 247, 250, 254], "elimin": [1, 44, 70, 146, 195, 238, 247, 250], "two": [1, 22, 27, 31, 32, 34, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 60, 61, 63, 65, 67, 68, 72, 76, 79, 92, 97, 98, 99, 100, 102, 103, 107, 108, 109, 116, 117, 118, 121, 127, 128, 141, 162, 163, 166, 168, 169, 170, 176, 177, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 208, 220, 244, 258, 259, 262], "compart": [1, 48, 49, 55, 57, 59, 60, 64, 76, 87, 127, 176, 195, 197, 201], "14": [1, 8, 25, 48, 54, 57, 58, 59, 61, 63, 72, 80, 84, 86, 89, 119, 121, 166, 182, 183, 190, 195, 196, 239, 241, 242, 243, 250, 252, 256], "rn": [1, 60], "mm": [1, 2, 3, 37, 39, 41, 48, 55, 60, 61, 65, 67, 71, 72, 97, 103, 107, 113, 114, 128, 162, 176, 187, 189, 195, 196, 197, 199, 200, 201, 221, 223, 227, 228, 233, 234, 258], "marral": 1, "diffusion": [1, 48, 60, 176, 195, 201, 218], "kurtosi": [1, 2, 3, 32, 34, 44, 49, 59, 70, 127, 146, 165, 167, 174, 182, 195, 197, 201, 218, 236, 237, 250], "project": [1, 2, 3, 8, 11, 14, 15, 22, 57, 61, 141, 146, 147, 162, 179, 182, 184, 187, 189, 195, 199, 202, 236, 243, 245, 263], "front": [1, 5, 142, 145, 245, 247], "hum": 1, "2021": [1, 54, 57, 63, 86, 138, 146, 147, 183, 184, 195, 248, 251, 252, 253], "15": [1, 25, 32, 43, 47, 48, 51, 54, 55, 57, 58, 59, 61, 63, 64, 68, 71, 72, 74, 79, 80, 84, 85, 86, 89, 100, 103, 105, 113, 119, 121, 131, 138, 141, 166, 167, 182, 183, 187, 189, 194, 195, 196, 197, 199, 200, 201, 208, 217, 223, 236, 242, 243, 254, 256, 262], "390": [1, 48, 54, 58, 236], "www": [1, 48, 58, 63, 162, 163, 189, 193, 195, 199], "frontiersin": 1, "org": [1, 2, 3, 22, 23, 32, 34, 48, 58, 60, 62, 63, 64, 87, 118, 138, 162, 163, 168, 169, 170, 173, 179, 185, 187, 189, 190, 191, 193, 194, 195, 199, 201, 210, 222, 244, 250], "3389": [1, 57, 80], "fnhum": 1, "675433": 1, "full": [1, 21, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 177, 187, 189, 190, 193, 195, 199, 201, 203, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262], "main": [1, 5, 17, 18, 19, 21, 22, 33, 34, 35, 56, 58, 60, 61, 130, 131, 187, 195, 201, 253], "citat": [1, 2, 3, 236, 238, 239, 245, 250, 251, 253], "detail": [2, 11, 12, 15, 16, 32, 34, 35, 36, 40, 48, 49, 55, 57, 59, 60, 62, 67, 72, 76, 89, 93, 99, 135, 162, 166, 167, 171, 189, 190, 195, 196, 236, 245, 249], "describ": [2, 5, 14, 29, 31, 45, 48, 53, 57, 58, 61, 63, 65, 69, 79, 81, 82, 83, 88, 89, 90, 95, 176, 178, 187, 189, 190, 195, 197, 199], "below": [2, 32, 33, 34, 36, 44, 48, 49, 53, 55, 59, 72, 78, 89, 93, 95, 97, 118, 135, 139, 141, 146, 147, 150, 163, 166, 168, 178, 187, 189, 193, 194, 195, 197, 198, 199, 201, 204, 242, 262], "synthet": [2, 3, 165, 181, 190, 195], "phantom": [2, 3, 185, 190, 202], "anim": [2, 3, 200, 201, 223], "featur": [2, 3, 5, 6, 7, 12, 17, 18, 31, 87, 90, 100, 115, 117, 119, 120, 127, 146, 165, 182, 183, 189, 193, 194, 195, 196, 197, 201, 219, 236, 238, 251, 254, 255], "structur": [2, 3, 29, 32, 34, 36, 43, 53, 61, 71, 76, 81, 82, 83, 98, 100, 107, 115, 120, 138, 142, 145, 146, 165, 168, 169, 170, 174, 176, 178, 190, 191, 195, 196, 199, 246, 253], "label": [2, 3, 5, 6, 7, 18, 22, 29, 45, 57, 60, 61, 69, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 97, 98, 107, 108, 109, 119, 127, 128, 138, 140, 177, 190, 194, 199, 200, 201, 225, 236, 239, 241, 247, 249], "scanner": [2, 3, 31, 35, 64, 76, 87, 162, 189, 190, 191, 195, 201, 258, 259], "format": [2, 3, 4, 5, 7, 18, 22, 25, 27, 41, 57, 59, 98, 127, 135, 141, 162, 166, 168, 187, 189, 190, 193, 194, 195, 197, 201, 219, 221, 236, 238, 239, 240, 242, 245, 247, 249, 254, 256], "exampl": [2, 3, 5, 7, 8, 17, 18, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 162, 165, 166, 167, 168, 169, 171, 176, 177, 179, 182, 183, 191, 192, 196, 201, 204, 210, 211, 217, 222, 223, 227, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256], "bundle_file_formats_exampl": [2, 3], "2019": [2, 3, 57, 60, 63, 146, 147, 183, 184, 190, 194, 195, 200, 201, 223, 242, 247, 248, 249, 262], "0": [2, 3, 5, 8, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 162, 163, 165, 166, 167, 168, 170, 175, 176, 178, 182, 183, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 208, 210, 213, 216, 217, 222, 223, 229, 230, 231, 233, 234, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 262], "zenodo": [2, 3, 190], "doi": [2, 3, 32, 33, 34, 36, 46, 48, 49, 55, 57, 59, 60, 62, 63, 64, 65, 76, 86, 87, 88, 138, 167, 168, 173, 176, 189, 190, 191, 194, 195, 199, 201, 210, 211, 220, 222, 242], "5281": [2, 3, 190], "3352379": [2, 3], "cenir": [2, 3, 32, 190, 236, 237, 240, 253], "hcp": [2, 3, 36, 58, 182, 190, 195, 236, 241, 245, 253, 254], "multi": [2, 3, 5, 32, 33, 34, 36, 37, 44, 48, 49, 52, 54, 57, 58, 60, 64, 68, 70, 99, 105, 108, 109, 123, 124, 125, 146, 147, 167, 172, 182, 184, 187, 190, 194, 195, 197, 201, 204, 214, 236, 237, 238, 241, 243, 244, 245, 246, 248, 249, 250, 252, 254], "shell": [2, 3, 32, 34, 36, 37, 40, 43, 44, 46, 48, 49, 51, 54, 58, 60, 61, 64, 67, 68, 70, 128, 146, 147, 166, 167, 182, 184, 190, 195, 197, 201, 224, 247, 248, 249, 250, 252, 253, 254], "val": [2, 3, 64, 100, 195, 200, 237, 254], "200": [2, 3, 32, 36, 47, 54, 57, 58, 61, 64, 87, 108, 119, 127, 138, 167, 190, 195, 201, 238, 253, 255], "400": [2, 3, 32, 48, 57, 58, 121, 167, 190, 195, 196, 201, 241], "1000": [2, 3, 27, 32, 34, 37, 39, 50, 54, 57, 59, 60, 65, 84, 88, 99, 100, 107, 128, 135, 146, 147, 167, 184, 187, 189, 190, 194, 195, 197, 200, 201, 238, 258, 259], "2000": [2, 3, 27, 32, 34, 47, 54, 57, 58, 59, 60, 64, 65, 71, 72, 146, 147, 167, 184, 189, 190, 195, 201, 221, 248], "3000": [2, 3, 48, 67, 167, 190], "20": [2, 3, 30, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 72, 79, 80, 84, 86, 89, 102, 103, 105, 113, 121, 127, 128, 139, 141, 187, 189, 190, 195, 196, 197, 199, 201, 208, 236, 243], "202": [2, 3, 54, 57, 58, 195, 244, 262], "204": [2, 3, 58, 244], "206": [2, 3, 47, 48, 54, 57, 58, 65, 244], "correct": [2, 3, 22, 25, 32, 33, 37, 38, 42, 48, 52, 55, 63, 98, 107, 121, 123, 124, 125, 146, 162, 174, 182, 187, 189, 190, 191, 193, 194, 200, 201, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 253], "eddi": [2, 3, 190, 240], "current": [2, 3, 7, 8, 17, 19, 22, 59, 61, 71, 89, 97, 100, 108, 138, 145, 166, 172, 173, 175, 176, 177, 183, 187, 189, 190, 193, 195, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 241, 242], "cenir_multib": [2, 3, 248], "cfin": [2, 3, 190, 240], "t1": [2, 3, 32, 59, 72, 88, 95, 115, 120, 138, 145, 146, 167, 172, 190, 191, 194, 236], "600": [2, 3, 46, 47, 53, 54, 58, 59, 64, 67, 69, 78, 91, 113, 114, 116, 117, 118, 119, 139, 141, 167, 195, 196, 201, 236], "800": [2, 3, 29, 57, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 167, 197], "1200": [2, 3, 48, 54, 57, 59, 138, 140, 141, 167, 238], "1400": [2, 3, 167, 240], "1600": [2, 3, 166, 167, 241], "1800": [2, 3, 48, 54, 55, 57, 166, 167, 247], "2200": [2, 3, 54, 167, 249], "2400": [2, 3, 51, 68, 167], "2600": [2, 3, 57, 167, 254], "2800": [2, 3, 167], "496": [2, 3, 54, 57, 58, 167, 245, 255], "cfin_multib": [2, 3, 34, 48, 49, 58, 59, 60, 167, 172, 176], "hansen": [2, 3, 34, 48, 49, 59, 60, 167, 182, 194, 195], "jespersen": [2, 3, 34, 48, 49, 59, 60, 167, 195], "strategi": [2, 3, 22, 37, 43, 47, 48, 49, 58, 59, 60, 64, 69, 90, 99, 100, 107, 142, 145, 167, 187, 195, 201, 233], "explor": [2, 3, 33, 48, 49, 59, 60, 127, 167, 172, 176, 195, 197], "contrast": [2, 3, 32, 48, 49, 51, 53, 57, 58, 59, 60, 97, 107, 167, 172, 190, 195], "sci": [2, 3, 54, 91, 92, 113, 168, 190, 196, 198, 201, 207, 228], "160072": [2, 3, 48, 49, 59, 60, 167], "2016": [2, 3, 32, 34, 36, 48, 49, 54, 57, 58, 59, 60, 62, 63, 71, 72, 79, 146, 147, 165, 167, 183, 184, 189, 190, 191, 195, 196, 201, 210, 211, 237, 238, 248], "1038": [2, 3, 48, 49, 57, 59, 60, 76, 167, 190, 199, 238], "sdata": [2, 3, 48, 49, 59, 60, 167, 190], "72": [2, 3, 48, 49, 53, 54, 57, 58, 59, 60, 61, 72, 80, 84, 85, 86, 89, 167, 182, 196, 243, 253], "gold": [2, 3, 190], "gold_standard_io": [2, 3], "2651349": [2, 3], "hcp842": [2, 3, 190], "atla": [2, 3, 90, 91, 101, 113, 114, 168, 169, 190, 196, 198], "whole": [2, 3, 47, 61, 64, 72, 95, 191, 196, 199], "wise": [2, 3, 64, 93, 195, 197, 199, 201], "mni": [2, 3, 107, 113, 168, 169, 190, 236, 238], "80": [2, 3, 31, 47, 48, 51, 54, 55, 57, 58, 59, 60, 61, 64, 68, 71, 72, 79, 80, 84, 85, 86, 89, 95, 97, 139, 176, 190, 243, 246], "connectom": [2, 3, 76, 168, 169, 182, 190, 199], "bundle_atlas_hcp842": [2, 3], "neuroimag": [2, 3, 27, 32, 34, 43, 47, 48, 49, 50, 51, 52, 55, 58, 59, 60, 62, 63, 64, 68, 69, 71, 78, 79, 84, 89, 90, 93, 101, 102, 113, 123, 124, 125, 127, 166, 168, 169, 173, 176, 177, 178, 179, 187, 189, 190, 191, 192, 195, 196, 197, 199, 201, 210, 211, 217, 219, 225, 228, 230, 234, 236, 257, 262], "170": [2, 3, 52, 54, 57, 58, 61, 244], "283": [2, 3, 54, 57, 58, 247], "297": [2, 3, 54, 57, 58, 119], "popul": [2, 3, 45, 47, 48, 53, 60, 64, 91, 92, 101, 113, 127, 169, 174, 176, 195, 196, 198, 201], "averag": [2, 3, 31, 47, 48, 57, 60, 62, 63, 64, 65, 72, 84, 102, 103, 113, 162, 168, 169, 172, 187, 190, 191, 194, 195, 196, 197, 198, 200, 201, 223, 238, 260], "macroscal": [2, 3, 168, 169], "its": [2, 3, 4, 22, 34, 36, 40, 51, 58, 59, 60, 61, 64, 65, 68, 69, 71, 87, 99, 118, 121, 127, 138, 139, 141, 163, 164, 168, 169, 171, 182, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 201, 224, 245, 249, 250, 252], "network": [2, 3, 8, 54, 57, 107, 168, 169, 176, 182, 190, 194], "topologi": [2, 3, 168, 169], "178": [2, 3, 54, 58, 244], "2018": [2, 3, 32, 34, 48, 54, 60, 78, 95, 146, 147, 165, 168, 169, 183, 184, 190, 191, 195, 201, 222, 240, 241, 242, 248], "57": [2, 3, 48, 54, 55, 57, 58, 59, 60, 61, 72, 79, 80, 84, 85, 86, 89, 101, 195, 243], "68": [2, 3, 48, 54, 55, 57, 58, 59, 72, 79, 80, 84, 85, 86, 89, 243], "figshar": [2, 3, 103, 168, 169, 170], "com": [2, 3, 7, 8, 10, 11, 17, 18, 19, 22, 23, 48, 58, 63, 103, 162, 166, 168, 169, 170, 177, 187, 189, 199, 201, 203, 238], "advanced_atlas_of_80_bundles_in_mni_spac": [2, 3], "7375883": [2, 3], "fa": [2, 3, 27, 34, 43, 46, 47, 48, 53, 54, 55, 59, 61, 62, 63, 64, 69, 89, 90, 107, 130, 138, 139, 165, 167, 168, 176, 189, 190, 193, 195, 198, 200, 201, 202, 216, 217, 218, 219, 233, 241, 243, 245, 246, 248], "fraction": [2, 3, 29, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 69, 72, 81, 82, 83, 87, 88, 89, 90, 123, 124, 125, 127, 128, 139, 182, 194, 195, 196, 197, 198, 201, 218, 219, 220, 247], "anisotropi": [2, 3, 29, 50, 53, 54, 55, 58, 59, 60, 61, 62, 69, 72, 81, 82, 83, 87, 88, 89, 90, 139, 182, 189, 195, 196, 198, 201, 218, 219, 246, 247, 249], "bundle_fa_hcp": [2, 3], "target_tractogram_hcp": [2, 3], "isbi": [2, 3, 58, 67, 183, 190, 195, 243], "2013": [2, 3, 22, 33, 34, 36, 43, 48, 49, 57, 58, 64, 67, 69, 146, 147, 166, 182, 183, 184, 190, 191, 195, 201, 210, 243, 244, 245, 248], "1500": [2, 3, 35, 57, 67, 166, 189, 241], "2500": [2, 3, 37, 54, 67, 128, 195, 253], "64": [2, 3, 32, 33, 37, 46, 48, 54, 57, 58, 59, 61, 66, 67, 72, 84, 89, 101, 105, 116, 117, 119, 128, 138, 166, 167, 190, 194, 195, 197, 237, 238, 245], "isbi2013_2shel": [2, 3, 33, 67], "daducci": [2, 3, 64, 78, 87, 195, 201], "A": [2, 3, 5, 8, 9, 15, 20, 23, 25, 29, 32, 33, 34, 36, 39, 40, 45, 47, 48, 49, 54, 55, 58, 59, 60, 63, 64, 65, 69, 71, 72, 76, 78, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 102, 113, 118, 121, 138, 139, 140, 141, 142, 145, 146, 147, 161, 162, 164, 166, 167, 168, 169, 170, 173, 175, 176, 178, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 241, 242, 243, 244, 246, 247, 258, 259, 262], "quantit": [2, 3, 48, 54, 72, 84, 89, 178, 195, 198, 199, 201, 219], "comparison": [2, 3, 31, 40, 43, 44, 49, 55, 60, 61, 63, 69, 70, 102, 127, 146, 174, 187, 195, 201, 219, 230, 238, 249], "intra": [2, 3, 49, 60, 127, 195, 201, 220], "fiber": [2, 3, 25, 29, 43, 44, 45, 48, 49, 50, 52, 53, 57, 59, 60, 65, 69, 70, 71, 73, 74, 76, 79, 80, 81, 82, 83, 85, 86, 87, 90, 98, 102, 115, 120, 123, 124, 125, 127, 174, 176, 182, 187, 194, 195, 197, 198, 199, 201, 217, 233, 238, 241, 247, 250, 253, 254, 256], "recoveri": [2, 3, 8], "transact": [2, 3, 35, 36, 51, 56, 64, 68, 99, 100, 121, 172, 187, 191, 195], "medic": [2, 3, 24, 35, 36, 43, 51, 56, 64, 67, 68, 99, 100, 103, 121, 165, 167, 172, 182, 187, 190, 191, 195, 196, 200, 201, 223, 224, 238, 239, 241, 262], "33": [2, 3, 36, 48, 54, 57, 58, 59, 61, 69, 71, 72, 80, 84, 86, 89, 119, 131, 166, 187, 189, 191, 195, 201, 213, 219, 236, 243], "pp": [2, 3, 36, 47, 59, 195, 197], "384": [2, 3, 48, 54, 57, 58, 245], "399": [2, 3, 57, 58, 245], "feb": [2, 3, 86], "hardi": [2, 3, 29, 59, 65, 67, 71, 72, 76, 81, 82, 83, 88, 99, 100, 107, 109, 183, 190, 191, 195, 201, 262], "challeng": [2, 3, 61, 76, 90, 183], "ivim": [2, 3, 57, 146, 174, 182, 184, 190, 201, 202, 220, 238, 241, 242, 247, 248, 249, 253, 254], "30": [2, 3, 32, 45, 48, 51, 52, 54, 55, 57, 58, 59, 61, 67, 68, 71, 72, 77, 79, 80, 84, 85, 86, 87, 89, 91, 97, 113, 114, 119, 123, 124, 125, 139, 168, 169, 183, 187, 189, 201, 241, 243], "40": [2, 3, 32, 41, 43, 45, 48, 54, 57, 58, 59, 61, 64, 67, 71, 72, 76, 79, 84, 85, 86, 87, 88, 89, 91, 93, 97, 98, 105, 108, 113, 114, 187, 189, 195, 196, 201, 218, 243], "60": [2, 3, 27, 31, 36, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 71, 72, 79, 80, 84, 85, 86, 89, 92, 95, 97, 123, 124, 125, 128, 162, 190, 195, 243], "100": [2, 3, 32, 37, 39, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 76, 79, 80, 84, 85, 86, 89, 90, 91, 93, 97, 99, 100, 105, 107, 108, 119, 121, 123, 124, 125, 128, 135, 187, 190, 191, 195, 196, 197, 198, 199, 201, 203, 243], "120": [2, 3, 32, 48, 54, 57, 58, 99, 100, 138, 173, 187, 243], "140": [2, 3, 48, 54, 57, 58, 59, 61, 101, 102, 135, 138, 169, 177, 187, 190, 201, 230, 243], "160": [2, 3, 46, 48, 53, 54, 57, 58, 61, 190, 244], "180": [2, 3, 48, 58, 119, 244], "300": [2, 3, 36, 37, 48, 52, 54, 57, 58, 66, 123, 124, 125, 128, 138, 190, 200, 245], "500": [2, 3, 32, 78, 199, 245], "700": [2, 3, 47, 48, 54, 57, 67, 195, 236], "900": [2, 3, 29, 47, 67, 71, 72, 81, 82, 83, 88, 92, 97, 102, 107, 138, 140, 141, 237], "21": [2, 3, 34, 48, 54, 55, 57, 58, 59, 61, 62, 63, 64, 68, 72, 79, 84, 85, 89, 111, 112, 120, 132, 183, 195, 237, 238, 243, 255], "fetch_ivim": [2, 3, 202], "ivim_dataset": [2, 3], "3395704": [2, 3], "templat": [2, 3, 99, 105, 107, 187, 190, 195, 236, 238, 249], "2009a": [2, 3, 190], "t2": [2, 3, 107, 190, 191, 236], "2009c": [2, 3, 190, 238], "mni_templ": [2, 3], "fonov": [2, 3, 190], "evan": [2, 3, 190], "botteron": [2, 3, 190], "almli": [2, 3, 190], "r": [2, 3, 5, 8, 24, 32, 34, 36, 43, 45, 48, 49, 55, 60, 61, 64, 65, 69, 71, 72, 84, 87, 89, 93, 97, 99, 100, 102, 105, 127, 140, 163, 164, 176, 178, 187, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 204, 219, 222, 223, 234, 237, 238, 245, 258, 260, 262, 263], "mckinstri": [2, 3, 190], "collin": [2, 3, 31, 33, 34, 35, 36, 172, 190, 191, 201, 210], "bdcg": [2, 3, 190], "unbias": [2, 3, 44, 70, 75, 77, 101, 146, 182, 187, 190, 195, 201, 254], "ag": [2, 3, 32, 34, 48, 55, 60, 190, 191, 195, 201, 222], "appropri": [2, 3, 5, 107, 108, 138, 141, 173, 189, 190, 193, 200, 253], "atlas": [2, 3, 101, 187, 190], "pediatr": [2, 3, 54, 190], "54": [2, 3, 34, 48, 54, 55, 57, 58, 59, 61, 64, 72, 79, 80, 84, 85, 86, 87, 89, 98, 190, 195, 244], "januari": [2, 3, 57, 165, 176, 183, 201, 220], "issn": [2, 3, 189], "1053": [2, 3, 48, 57, 190, 239], "8119": [2, 3, 190], "1016": [2, 3, 32, 34, 48, 54, 55, 62, 63, 64, 173, 189, 190, 191, 195, 201, 210, 211, 238], "07": [2, 3, 48, 54, 57, 58, 59, 61, 64, 72, 79, 80, 84, 85, 86, 89, 189, 190, 192, 195], "033": [2, 3, 79, 190], "nonlinear": [2, 3, 64, 103, 165, 170, 187, 190, 195, 201, 208, 252, 255], "birth": [2, 3, 190], "adulthood": [2, 3, 190], "47": [2, 3, 43, 48, 54, 55, 57, 58, 59, 61, 71, 72, 84, 89, 116, 119, 135, 182, 190, 196, 243, 251], "supplement": [2, 3, 189], "juli": [2, 3, 190], "2009": [2, 3, 40, 55, 67, 107, 108, 109, 146, 147, 177, 184, 187, 189, 190, 191, 195, 201, 216, 248], "page": [2, 3, 5, 8, 11, 13, 14, 16, 17, 22, 57, 116, 117, 168, 189, 236, 238, 241, 245, 247, 254], "s102": [2, 3, 190], "s1053": [2, 3, 190], "09": [2, 3, 48, 54, 55, 57, 58, 59, 61, 72, 84, 86, 89, 106, 190, 195, 249, 250], "70884": [2, 3, 190], "icbm": [2, 3], "152": [2, 3, 54, 57, 58], "qt": [2, 3, 44, 70, 146, 190, 195], "dmri": [2, 3, 21, 27, 39, 41, 44, 49, 53, 69, 70, 146, 162, 175, 182, 183, 190, 191, 195, 241], "c57bl6": [2, 3, 190], "mice": [2, 3, 61, 190], "retest": [2, 3, 61, 190], "corpu": [2, 3, 29, 43, 45, 46, 47, 53, 58, 61, 64, 65, 69, 76, 79, 80, 81, 82, 83, 84, 85, 86, 89, 93, 95, 98, 107, 140, 190, 195, 196, 199, 201, 231], "callosum": [2, 3, 29, 43, 45, 46, 47, 53, 58, 61, 64, 65, 69, 76, 79, 80, 81, 82, 83, 84, 85, 86, 89, 93, 95, 98, 107, 140, 190, 195, 196, 199, 201, 231], "cc": [2, 3, 43, 45, 46, 53, 105, 109, 135, 166, 177, 187, 201, 204, 231, 244], "qtdmri_test_retest_2subject": [2, 3], "santin": [2, 3], "philipp": [2, 3, 249, 250, 251], "fick": [2, 3, 24, 58, 71, 72, 146, 147, 184, 190, 195, 238, 239, 241], "derich": [2, 3, 43, 84, 89, 178, 191, 192, 195, 197, 199, 201, 212, 234, 262], "leherici": [2, 3], "petiet": [2, 3], "non": [2, 3, 7, 27, 31, 33, 34, 36, 38, 40, 42, 47, 48, 49, 55, 57, 58, 59, 60, 64, 71, 72, 76, 87, 99, 100, 103, 107, 127, 139, 141, 146, 162, 172, 176, 182, 187, 189, 190, 191, 192, 195, 196, 199, 201, 212, 213, 217, 218, 219, 221, 238, 240, 242, 243, 244, 245, 246, 249, 253, 254, 255, 258, 259, 262], "parametr": [2, 3, 48, 162, 187, 190, 195, 196, 243], "graphnet": [2, 3, 61, 190, 195], "regular": [2, 3, 5, 58, 61, 64, 65, 67, 87, 103, 108, 170, 176, 182, 187, 189, 190, 191, 192, 195, 197, 200, 201, 208, 213, 221, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 262], "represent": [2, 3, 8, 17, 29, 58, 61, 63, 69, 80, 81, 82, 83, 85, 93, 98, 102, 119, 164, 178, 187, 189, 190, 193, 195, 199, 241, 262], "time": [2, 3, 5, 8, 10, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 162, 166, 168, 176, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 201, 204, 213, 220, 239, 241, 243, 244, 245, 249, 258, 260], "996889": [2, 3, 190], "scil": [2, 3, 190, 241], "b0": [2, 3, 30, 32, 34, 36, 37, 43, 47, 51, 60, 64, 99, 100, 107, 108, 109, 110, 111, 112, 128, 165, 167, 176, 182, 187, 189, 190, 191, 194, 195, 197, 201, 209, 210, 213, 216, 217, 218, 219, 220, 221, 224, 236, 237, 241, 245], "ge": [2, 3, 35, 40, 64, 190, 191, 195, 196, 201], "t": [2, 3, 5, 8, 10, 11, 18, 19, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 45, 47, 49, 50, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 68, 71, 72, 81, 82, 83, 87, 89, 90, 97, 98, 99, 100, 102, 107, 110, 111, 112, 117, 118, 130, 138, 141, 162, 164, 166, 168, 169, 176, 179, 187, 189, 190, 195, 196, 197, 199, 200, 201, 204, 228, 229, 236, 237, 238, 240, 241, 243, 245, 246, 247, 249, 250, 253, 254, 258, 259, 262], "philip": [2, 3, 32, 48, 64, 173, 190, 191, 195, 196, 201], "siemen": [2, 3, 30, 31, 40, 64, 110, 111, 112, 162, 190, 191, 195, 196, 201], "scil_b0": [2, 3, 30, 110, 111, 112], "sherbrook": [2, 3, 24, 31, 190], "connect": [2, 3, 19, 25, 29, 65, 76, 81, 82, 83, 84, 85, 89, 93, 95, 96, 102, 107, 135, 138, 178, 190, 199, 201, 234, 238, 253, 263], "lab": [2, 3, 247, 248, 249, 250], "3500": [2, 3, 27, 54, 57], "193": [2, 3, 27, 39, 48, 54, 57, 58], "sherbrooke_3shel": [2, 3, 27, 31, 39, 40, 171, 172, 175], "snail": [2, 3, 190], "subject": [2, 3, 39, 53, 55, 61, 63, 69, 88, 90, 102, 103, 113, 138, 162, 166, 168, 169, 172, 175, 179, 189, 190, 194, 195, 196, 198, 201, 206, 207, 257], "27": [2, 3, 22, 35, 36, 43, 48, 49, 51, 54, 57, 58, 59, 61, 68, 72, 79, 84, 85, 89, 172, 190, 191, 195, 239, 243, 249], "bundles_2_subject": [2, 3, 90, 138, 141, 190], "stanford": [2, 3, 24, 29, 35, 43, 65, 71, 72, 76, 81, 82, 83, 88, 99, 100, 107, 109, 190, 236, 246, 250], "discoveri": [2, 3], "mr750": [2, 3], "stanford_hardi": [2, 3, 29, 36, 43, 45, 46, 47, 53, 64, 65, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 107, 109, 130, 131, 140, 172, 176, 178], "weight": [2, 3, 27, 32, 33, 34, 36, 38, 40, 42, 45, 48, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 69, 76, 88, 90, 93, 102, 115, 120, 146, 162, 172, 173, 176, 189, 190, 191, 195, 197, 198, 199, 201, 202, 210, 218, 219, 221, 258, 259], "collect": [2, 3, 8, 64, 72, 187, 190, 193, 194, 195, 198, 199, 241, 253, 262], "high": [2, 3, 31, 32, 36, 43, 47, 48, 54, 55, 57, 58, 59, 66, 69, 88, 116, 128, 162, 187, 191, 194, 195, 196, 197, 199, 201, 208, 240], "angular": [2, 3, 52, 54, 67, 71, 123, 124, 125, 127, 189, 195, 197], "resolut": [2, 3, 21, 41, 52, 54, 66, 99, 107, 108, 109, 123, 124, 125, 128, 162, 187, 191, 193, 195, 196, 197, 201, 204, 227, 229, 241, 249, 253], "repeat": [2, 3, 11, 29, 47, 63, 64, 79, 81, 82, 83, 85, 99, 253], "measur": [2, 3, 32, 34, 37, 45, 47, 48, 49, 51, 53, 54, 55, 57, 58, 60, 61, 63, 64, 65, 68, 69, 73, 74, 113, 146, 162, 168, 173, 176, 182, 187, 189, 190, 191, 194, 195, 197, 198, 199, 201, 218, 220, 238, 250, 252, 258, 260], "strength": [2, 3, 53, 61, 162, 176, 187, 189, 190, 195, 197, 201, 208], "wandel": [2, 3, 45, 65, 76, 88, 90, 195, 198, 199], "plo": [2, 3, 33, 34, 36, 64, 65, 71, 72, 87, 88, 90, 190, 191, 194, 195, 198, 201, 210], "ONE": [2, 3, 33, 34, 36, 64, 65, 87, 88, 191, 194, 195, 201, 210], "e0123272": [2, 3, 65, 88, 195], "1371": [2, 3, 33, 34, 36, 48, 57, 64, 65, 71, 87, 88, 191, 194, 195, 201, 210, 240], "journal": [2, 3, 33, 34, 36, 57, 64, 65, 71, 72, 87, 88, 93, 138, 176, 183, 191, 194, 195, 197, 199, 201, 210, 219, 220], "pone": [2, 3, 33, 34, 36, 64, 65, 87, 88, 191, 194, 195, 201, 210], "0123272": [2, 3, 65, 88, 195], "grai": [2, 3, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 49, 54, 55, 57, 59, 60, 62, 81, 82, 83, 84, 87, 89, 98, 100, 110, 111, 112, 121, 178, 187, 195, 200], "region": [2, 3, 29, 43, 45, 47, 48, 49, 55, 57, 60, 64, 69, 71, 72, 76, 81, 82, 83, 84, 89, 95, 97, 98, 100, 113, 190, 191, 195, 199], "stanford_label": [2, 3, 29, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 140], "pve": [2, 3, 59, 84, 89, 121, 178, 196, 246], "partial": [2, 3, 22, 55, 64, 71, 84, 89, 103, 178, 193, 195, 201, 234], "effect": [2, 3, 9, 32, 33, 48, 55, 60, 61, 64, 69, 71, 84, 87, 89, 107, 108, 163, 172, 173, 178, 187, 189, 193, 194, 195, 196, 199, 200, 201, 219, 223, 258, 259, 262], "gm": [2, 3, 32, 59, 64, 121, 189, 195, 201], "wm": [2, 3, 32, 47, 48, 59, 121, 178, 195, 201, 237, 254], "cerebrospin": [2, 3, 59, 64, 178, 201, 234], "fluid": [2, 3, 55, 57, 59, 64, 84, 89, 121, 178, 189, 195, 201, 234], "csf": [2, 3, 40, 55, 57, 58, 59, 64, 121, 195, 201, 240], "fetch_stanford_pve_map": [2, 3, 202], "stanford_t1": [2, 3, 35, 72, 76, 87, 88, 95, 98], "syn": [2, 3, 107, 108, 109, 121, 177, 187, 236, 238, 253], "syn_data": [2, 3, 108, 109], "taiwan": [2, 3, 190], "ntu": [2, 3, 190], "dsi": [2, 3, 44, 50, 56, 68, 70, 122, 126, 146, 162, 182, 184, 190, 202, 236, 238, 243, 244, 245, 256], "308": [2, 3, 54, 57, 58, 245], "615": [2, 3, 236], "923": [2, 3, 54, 241], "1231": [2, 3, 48, 54, 238], "1538": [2, 3, 48, 54, 241], "1846": [2, 3, 48, 57, 247], "2462": [2, 3], "2769": [2, 3, 57], "3077": [2, 3, 48, 54, 59], "3385": [2, 3, 57, 168], "3692": [2, 3, 89], "4000": [2, 3, 57], "203": [2, 3, 50, 51, 54, 56, 57, 58, 68, 190, 244], "trio": [2, 3, 40, 190, 258, 259], "taiwan_ntu_dsi": [2, 3, 50, 51, 56, 68], "nation": [2, 3, 24, 165], "univers": [2, 3, 24, 29, 60, 81, 82, 83, 165, 167, 178, 190, 195, 197, 201, 233], "hospit": [2, 3, 24], "advanc": [2, 3, 16, 32, 34, 36, 48, 60, 99, 100, 107, 108, 109, 136, 137, 142, 145, 146, 165, 167, 177, 187, 191, 193, 195, 201, 213, 222, 239], "biomed": [2, 3, 48, 165, 195], "tissue_data": [2, 3, 32, 121, 173], "list": [2, 8, 18, 21, 22, 23, 61, 87, 88, 93, 97, 99, 101, 107, 114, 116, 117, 118, 139, 140, 142, 145, 166, 171, 176, 179, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 218, 219, 220, 221, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "retriev": [2, 32, 97, 142, 195, 196], "fetchflow": [2, 182, 202, 247, 248], "available_data": [2, 201], "get_fetcher_datanam": [2, 201, 202], "kei": [2, 5, 11, 113, 135, 138, 170, 187, 189, 190, 193, 195, 198, 199, 201, 233, 234, 241, 242, 243, 245, 253], "fetch_flow": 2, "temporarydirectori": [2, 254], "out_dir": [2, 142, 145, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 190, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "download": [2, 13, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 162, 167, 168, 169, 170, 174, 182, 183, 189, 190, 201, 215, 238, 240, 241, 244, 245, 246, 253, 254], "particular": [2, 8, 36, 45, 48, 53, 61, 65, 135, 181, 187, 189, 193, 195, 196, 199, 201], "do": [2, 5, 6, 7, 10, 11, 12, 15, 17, 18, 20, 21, 29, 33, 36, 39, 40, 43, 44, 46, 47, 50, 58, 59, 60, 61, 66, 69, 76, 81, 82, 83, 85, 93, 95, 98, 99, 101, 108, 109, 114, 116, 117, 118, 135, 139, 146, 147, 150, 162, 163, 164, 166, 167, 168, 172, 177, 180, 183, 187, 189, 190, 194, 195, 196, 199, 201, 223, 238, 240, 241, 245, 247, 259], "fetch_bundle_fa_hcp": [2, 90, 202], "folder": [2, 5, 22, 27, 90, 99, 100, 167, 168, 169, 171, 181, 190, 201, 205, 207, 215, 237, 242, 247], "dataset": [3, 4, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 68, 69, 71, 72, 76, 81, 82, 83, 93, 97, 99, 100, 103, 107, 109, 110, 111, 112, 119, 121, 127, 131, 135, 138, 139, 140, 141, 146, 162, 165, 166, 167, 170, 172, 173, 174, 175, 176, 178, 179, 182, 185, 187, 190, 191, 193, 194, 195, 196, 199, 201, 215, 229, 240, 241, 243, 244, 245, 247, 248, 249, 250, 253, 254, 256], "few": [4, 8, 69, 85, 130, 138, 166, 167, 199, 237, 238, 242, 243, 244, 245, 246, 256], "languag": [4, 5, 162, 240, 245, 248], "numpi": [4, 5, 21, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 64, 66, 68, 69, 71, 72, 76, 78, 84, 87, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 135, 138, 139, 162, 166, 182, 187, 189, 190, 193, 194, 195, 196, 197, 199, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 252, 253, 254, 255], "numer": [4, 53, 58, 162, 182, 187, 189, 195, 197, 250, 252, 258], "specif": [4, 5, 11, 27, 37, 50, 54, 56, 58, 59, 60, 61, 64, 97, 101, 116, 127, 128, 138, 142, 145, 162, 166, 167, 171, 172, 174, 189, 190, 193, 194, 195, 196, 199, 200, 239, 241, 242, 243, 253, 256], "mathemat": [4, 53, 63, 102, 187, 195, 199, 241, 261, 262], "cython": [4, 20, 162, 166, 182, 189, 195, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255], "extra": [4, 49, 55, 60, 100, 127, 142, 145, 163, 187, 189, 193, 195, 196, 200], "speed": [4, 61, 63, 88, 116, 162, 166, 182, 187, 195, 196, 199, 201, 227, 245, 246, 248], "higher": [4, 36, 47, 48, 52, 55, 58, 59, 65, 92, 103, 123, 124, 125, 141, 162, 170, 187, 189, 195, 196, 201, 227], "h5py": [4, 5, 162, 166, 182, 193, 239, 241], "larg": [4, 6, 31, 48, 76, 98, 99, 114, 162, 165, 166, 168, 182, 187, 193, 195, 199, 201, 228, 240, 244, 256], "visualis": [4, 78, 135, 192, 195, 238, 241, 262], "matplotlib": [4, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 45, 49, 50, 51, 54, 55, 57, 59, 60, 61, 62, 64, 68, 69, 76, 81, 82, 83, 87, 89, 90, 93, 95, 97, 98, 100, 105, 110, 111, 112, 121, 127, 128, 162, 166, 200, 238, 241, 243, 245], "scientif": [4, 5, 48, 49, 54, 57, 59, 60, 138, 166, 167, 190, 195], "plot": [4, 31, 32, 33, 34, 35, 45, 48, 49, 55, 57, 58, 60, 61, 63, 65, 90, 97, 103, 108, 109, 121, 127, 128, 168, 187, 195, 201, 202, 238, 240, 243, 245, 247], "ipython": [4, 8, 76, 162, 166, 238, 247, 255, 256], "interact": [4, 8, 29, 37, 46, 47, 52, 53, 58, 59, 64, 65, 66, 67, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 97, 98, 101, 103, 113, 114, 116, 117, 118, 119, 123, 124, 125, 128, 136, 137, 140, 141, 146, 168, 182, 187, 189, 195, 196, 197, 199, 200, 201, 208, 223, 241, 256], "cvxpy": [4, 48, 58, 59, 63, 182, 189, 195, 239, 240, 241, 242, 249, 250], "principl": [5, 41, 195, 197], "behind": [5, 15, 34, 166, 172, 263], "develop": [5, 10, 15, 16, 17, 21, 22, 25, 33, 48, 60, 72, 127, 166, 167, 176, 181, 182, 183, 187, 189, 193, 194, 195, 196, 197, 236, 238, 239, 240, 241, 245], "piec": [5, 187], "must": [5, 29, 40, 47, 51, 58, 59, 68, 81, 82, 83, 85, 87, 99, 107, 116, 117, 135, 139, 168, 178, 187, 189, 190, 191, 193, 194, 195, 196, 198, 201, 204, 221], "verifi": [5, 27, 36, 47, 48, 108, 109, 135, 189, 193, 236, 245], "systemat": [5, 189], "henc": [5, 43, 57, 166, 177, 195, 196, 199, 259], "stabil": [5, 195], "ensur": [5, 8, 48, 58, 71, 72, 98, 187, 189, 193, 195, 201, 249], "redund": [5, 23, 33, 34, 76, 172], "readabl": [5, 8], "written": [5, 8, 63, 65, 135, 180, 189, 195, 196, 197, 200, 247], "read": [5, 8, 15, 17, 18, 19, 27, 30, 46, 50, 51, 53, 54, 56, 58, 61, 62, 63, 67, 68, 71, 72, 76, 88, 90, 91, 107, 110, 111, 112, 113, 114, 116, 128, 130, 131, 133, 134, 141, 146, 162, 165, 166, 167, 179, 182, 187, 189, 190, 193, 194, 195, 196, 201, 202, 236, 240, 245, 246, 249, 250, 253, 256], "frequent": [5, 25, 135, 179], "consist": [5, 24, 40, 61, 64, 135, 182, 187, 190, 191, 193, 194, 195, 238, 241, 243, 247, 253], "eas": [5, 61], "prone": [5, 69], "essenti": [5, 39, 58, 100, 259], "adopt": [5, 43], "toolkit": 5, "choic": [5, 7, 58, 64, 72, 79, 99, 100, 108, 172, 196, 236, 259, 262], "commun": [5, 15, 61, 182, 195, 246, 252, 257], "help": [5, 6, 8, 11, 13, 15, 21, 24, 61, 100, 113, 142, 145, 175, 179, 187, 189, 195, 196, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 241, 245, 256, 257, 260], "clarifi": [5, 61, 182, 244, 245, 247, 250, 253], "certain": [5, 36, 43, 48, 69, 195], "avoid": [5, 8, 32, 36, 48, 53, 55, 60, 71, 85, 99, 117, 187, 189, 194, 195, 199, 201, 238, 240, 242, 243, 245, 247, 248, 253, 254], "obscur": 5, "place": [5, 22, 69, 76, 100, 169, 183, 187, 189, 199, 200, 201, 210, 211, 236, 247, 249], "allow": [5, 11, 22, 58, 59, 61, 71, 89, 97, 98, 130, 131, 138, 141, 142, 162, 173, 176, 177, 182, 187, 189, 193, 195, 196, 197, 199, 200, 201, 228, 237, 238, 241, 243, 245, 248, 250, 251, 252, 253, 254], "member": [5, 254], "decod": [5, 190], "effort": 5, "english": 5, "spell": [5, 249], "abid": 5, "pep8": [5, 6, 21, 236, 237, 238, 239, 246, 250], "across": [5, 22, 34, 36, 40, 53, 57, 60, 64, 91, 92, 113, 163, 174, 176, 189, 194, 195, 196, 198, 201, 241, 257, 258, 259], "conform": [5, 6, 195, 250], "syntax": [5, 23, 195, 242, 250], "automat": [5, 17, 30, 34, 65, 69, 110, 111, 112, 115, 119, 120, 131, 146, 166, 172, 182, 187, 191, 194, 195, 196, 201, 210, 217, 236, 238, 239, 240, 241, 242, 247, 248, 249, 251, 252, 253, 254, 255], "request": [5, 7, 8, 17, 99, 165, 182, 187, 190, 200, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259], "push": [5, 8, 15, 18, 19, 22], "There": [5, 8, 13, 14, 15, 22, 23, 47, 59, 64, 113, 118, 162, 168, 178, 187, 189, 190, 193, 194, 195, 196, 197, 258, 263], "system": [5, 36, 37, 64, 93, 95, 97, 98, 130, 131, 138, 165, 167, 182, 187, 189, 190, 191, 192, 193, 195, 199, 200, 201, 213, 244, 249, 263], "complianc": 5, "most": [5, 8, 13, 30, 40, 41, 43, 46, 61, 64, 72, 76, 80, 99, 100, 102, 103, 108, 109, 110, 111, 112, 121, 130, 166, 178, 190, 193, 195, 196, 199, 256], "text": [5, 7, 8, 17, 22, 27, 57, 61, 76, 102, 138, 141, 142, 145, 162, 165, 177, 181, 200, 201, 204, 205, 236, 241], "editor": [5, 8, 162], "configur": [5, 8, 12, 16, 99, 105, 108, 166, 182, 194, 195, 248, 252], "beyond": [5, 58, 61], "aspect": [5, 195], "includ": [5, 8, 17, 45, 48, 58, 61, 64, 69, 71, 72, 76, 89, 90, 98, 107, 118, 162, 165, 166, 177, 182, 183, 187, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 203, 236, 238, 245, 249, 255, 262], "comment": [5, 145, 236, 240, 243, 247, 249], "abov": [5, 7, 8, 17, 22, 23, 29, 31, 32, 34, 36, 37, 47, 48, 53, 55, 56, 57, 59, 60, 63, 81, 82, 83, 89, 97, 98, 100, 121, 127, 130, 131, 141, 163, 166, 168, 182, 187, 189, 190, 193, 194, 195, 196, 197, 201, 258, 262], "shorthand": [5, 242], "increas": [5, 53, 57, 58, 61, 113, 182, 187, 194, 195, 199, 241, 245, 247, 250], "npt": [5, 250], "sp": [5, 199, 249], "alia": [5, 7, 8, 189, 195, 197, 253], "write": [5, 7, 8, 11, 17, 18, 19, 27, 46, 50, 51, 56, 58, 67, 68, 133, 134, 138, 145, 146, 166, 172, 173, 175, 187, 193, 195, 200, 201, 245, 249], "rule": [5, 15, 113, 182, 187, 194, 236], "cimport": 5, "add": [5, 7, 8, 15, 17, 18, 19, 22, 29, 37, 46, 47, 52, 53, 54, 58, 59, 64, 65, 66, 67, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 102, 107, 113, 114, 116, 117, 118, 119, 123, 124, 125, 127, 128, 138, 139, 140, 141, 145, 166, 182, 189, 193, 195, 196, 197, 199, 200, 201, 202, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], "prefix": [5, 6, 201], "usual": [5, 8, 27, 37, 41, 100, 141, 142, 145, 166, 195, 196, 199], "cnp": [5, 252], "symbol": [5, 195], "being": [5, 43, 61, 64, 162, 166, 168, 178, 187, 189, 193, 195, 196, 198, 199, 200, 201, 205, 238, 239, 242, 247, 252, 256, 262], "compar": [5, 17, 31, 34, 45, 48, 51, 57, 58, 63, 64, 69, 76, 92, 93, 127, 131, 162, 168, 187, 193, 195, 196, 200, 237, 253], "separ": [5, 8, 36, 47, 57, 59, 61, 87, 121, 145, 166, 176, 187, 189, 190, 193, 194, 195, 196, 197, 200, 201, 220, 231, 243, 253], "cdef": 5, "cpdef": 5, "ctypedef": 5, "statement": [5, 23, 25, 238, 245, 248, 249, 253], "type": [5, 8, 18, 27, 32, 36, 50, 59, 60, 79, 98, 118, 121, 163, 166, 167, 173, 177, 178, 187, 189, 190, 193, 195, 196, 197, 199, 200, 201, 205, 215, 221, 223, 224, 228, 236, 237, 240, 242, 243, 245, 253, 254], "turn": [5, 8, 51, 87, 162, 163, 172, 193, 195, 199], "per": [5, 29, 54, 59, 66, 81, 82, 83, 88, 98, 101, 102, 103, 113, 139, 168, 169, 170, 178, 187, 190, 191, 194, 195, 196, 198, 199, 200, 201, 204, 213, 219, 233, 234, 241, 244, 245, 258, 260], "long": [5, 56, 135, 167, 187, 194, 197, 199, 201, 238, 248], "simpl": [5, 18, 21, 29, 40, 47, 49, 50, 53, 55, 57, 64, 67, 81, 82, 83, 97, 101, 102, 116, 117, 118, 136, 137, 140, 146, 166, 178, 182, 189, 194, 195, 196, 200, 201, 245, 250, 256], "assign": [5, 76, 94, 96, 146, 187, 189, 195, 196, 197, 198, 202, 236, 245], "group": [5, 22, 40, 55, 69, 76, 98, 101, 102, 174, 182, 187, 196, 198, 201, 230, 249, 251, 253], "For": [5, 7, 8, 14, 17, 22, 23, 27, 29, 30, 31, 32, 34, 36, 37, 39, 40, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 81, 82, 83, 87, 88, 90, 93, 95, 98, 99, 100, 102, 107, 108, 110, 111, 112, 116, 117, 118, 119, 123, 124, 125, 127, 128, 131, 140, 145, 162, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 182, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 210, 211, 223, 227, 230, 233, 234, 256, 258, 259, 262, 263], "good": [5, 7, 8, 13, 15, 17, 22, 23, 29, 43, 45, 47, 58, 59, 65, 69, 72, 81, 82, 83, 97, 99, 108, 121, 172, 180, 187, 189, 195, 196, 199, 201, 238, 245, 248, 252, 263], "int": [5, 66, 138, 167, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 227, 228, 229, 230, 232, 233, 234, 238, 252, 254, 258, 260], "char": 5, "doubl": [5, 47, 162, 191, 196, 197, 236, 242, 250], "xf": 5, "clustermapcentroid": [5, 202], "p": [5, 8, 17, 33, 34, 35, 36, 51, 52, 64, 68, 71, 72, 87, 121, 123, 124, 125, 162, 165, 168, 172, 187, 189, 191, 193, 194, 195, 196, 197, 199, 201, 210, 219, 260, 262, 263], "pyarray_data": [5, 252], "seed": [5, 29, 45, 71, 72, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 140, 146, 167, 178, 182, 189, 190, 195, 199, 201, 233, 234, 236, 237, 238, 241, 244, 245, 247, 248, 249, 252], "npy_intp": [5, 238, 252], "pstr": 5, "qa": [5, 195, 198], "stride": [5, 189, 194, 195, 197], "cnt": [5, 141], "tmp": [5, 8, 22, 200, 201, 244, 245], "ftmp": [5, 245], "get_direction_c": 5, "self": [5, 38, 40, 42, 62, 63, 114, 118, 135, 142, 145, 146, 182, 187, 189, 191, 193, 195, 196, 199, 201, 213, 219, 241, 247, 251], "bad": [5, 162, 238, 240, 241, 244, 248], "u": [5, 8, 15, 17, 18, 21, 24, 27, 29, 31, 35, 46, 54, 57, 71, 76, 81, 82, 83, 92, 103, 107, 162, 164, 180, 181, 183, 187, 189, 191, 195, 241, 257, 263], "x": [5, 13, 22, 43, 57, 62, 63, 65, 67, 71, 72, 76, 87, 98, 102, 107, 118, 127, 138, 141, 162, 163, 164, 166, 177, 182, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 212, 236, 239, 243, 247, 249, 252, 256, 258, 263], "42": [5, 8, 32, 37, 47, 48, 54, 55, 57, 58, 59, 61, 71, 72, 77, 79, 84, 89, 139, 176, 195, 197, 201, 220, 245], "z": [5, 43, 46, 57, 62, 63, 67, 71, 72, 76, 87, 98, 107, 127, 138, 141, 162, 163, 164, 177, 187, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 205, 258, 263], "top": [5, 8, 17, 23, 49, 71, 76, 95, 99, 108, 109, 140, 163, 166, 189, 200, 237, 243, 247], "bodi": [5, 36, 177, 181, 201, 203], "void": 5, "estimate_kernel_s": 5, "verbos": [5, 48, 59, 63, 64, 101, 113, 187, 191, 193, 194, 195, 196, 201, 213, 237, 245], "true": [5, 7, 27, 29, 30, 31, 33, 34, 35, 36, 40, 41, 43, 46, 47, 48, 50, 53, 56, 57, 58, 59, 61, 63, 64, 66, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 107, 110, 111, 112, 113, 118, 119, 130, 131, 135, 138, 140, 162, 177, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 208, 211, 212, 216, 217, 221, 223, 227, 233, 234, 240, 249], "kernelmax": 5, "k2": 5, "defin": [5, 32, 34, 43, 48, 49, 53, 55, 57, 60, 61, 62, 63, 67, 69, 72, 80, 84, 88, 89, 93, 100, 101, 102, 105, 108, 109, 116, 117, 118, 121, 127, 164, 187, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 223, 227, 229, 238, 240, 246, 249, 253, 255, 262], "both": [5, 23, 30, 31, 32, 33, 34, 37, 40, 47, 48, 55, 57, 58, 59, 60, 61, 63, 64, 65, 84, 90, 97, 100, 101, 102, 103, 107, 110, 111, 112, 114, 116, 138, 140, 183, 187, 189, 190, 194, 195, 199, 200, 201, 221, 223, 245, 247, 262], "come": [5, 8, 15, 18, 22, 30, 40, 64, 110, 111, 112, 183, 194, 195, 201, 243], "libc": 5, "stdlib": 5, "calloc": 5, "realloc": 5, "except": [5, 7, 20, 100, 168, 187, 189, 190, 194, 195, 196, 201, 240, 244, 246], "side": [5, 187, 195, 201, 236], "definit": [5, 53, 57, 63, 65, 100, 164, 176, 182, 189, 195, 238, 241, 243, 245, 250, 253, 262], "between": [5, 23, 25, 32, 33, 34, 35, 38, 42, 47, 48, 49, 51, 53, 55, 57, 58, 59, 61, 63, 64, 65, 71, 76, 90, 92, 98, 100, 101, 102, 103, 107, 108, 109, 114, 117, 118, 121, 135, 140, 146, 162, 166, 168, 170, 174, 177, 181, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 205, 208, 210, 223, 233, 234, 241, 245, 250, 254, 256, 258, 259, 262, 263], "colon": [5, 8], "unless": [5, 43, 116, 187, 189, 195, 197, 199, 254], "bar": [5, 139, 182, 194, 195, 200, 238, 241, 250, 253], "c_extract": 5, "data2d": 5, "datum": [5, 118], "out": [5, 18, 22, 36, 43, 45, 57, 66, 76, 90, 98, 107, 113, 131, 141, 166, 172, 176, 181, 187, 189, 191, 194, 195, 196, 199, 201, 210, 238, 241, 243, 244, 245, 247, 249, 256, 258, 259], "nogil": [5, 195], "hat": [5, 65, 164, 202], "zero": [5, 34, 48, 49, 55, 59, 60, 61, 62, 64, 71, 72, 76, 95, 97, 100, 105, 114, 127, 135, 140, 187, 189, 191, 192, 193, 194, 195, 197, 199, 238, 239, 240, 241, 247, 253, 255, 258, 259], "awai": [5, 23, 163, 240], "put": [5, 23, 65, 142, 145, 187, 195, 201, 245], "ani": [5, 7, 8, 10, 17, 18, 22, 23, 36, 39, 41, 43, 53, 57, 61, 64, 66, 68, 71, 85, 98, 100, 101, 102, 118, 135, 141, 142, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 175, 176, 178, 187, 189, 190, 192, 193, 194, 195, 196, 197, 199, 201, 215, 223, 224, 229, 232, 238, 240, 245, 254, 256, 262], "whitespac": [5, 6, 241], "open": [5, 8, 22, 23, 43, 54, 61, 69, 72, 95, 98, 121, 138, 145, 166, 179, 189, 190, 193, 195, 248, 249, 251, 252, 253, 262], "close": [5, 6, 8, 17, 22, 43, 50, 57, 59, 69, 72, 92, 98, 99, 103, 139, 165, 170, 172, 178, 182, 187, 189, 190, 192, 193, 199, 201, 202, 208, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "float": [5, 30, 51, 89, 105, 110, 111, 112, 114, 162, 167, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 208, 209, 210, 212, 213, 216, 217, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 234, 239, 245, 249, 252, 254], "rang": [5, 20, 31, 32, 46, 48, 49, 53, 57, 58, 60, 62, 63, 72, 91, 107, 113, 114, 130, 131, 146, 147, 168, 182, 184, 189, 193, 194, 195, 196, 199, 200, 201, 233, 234, 241, 249, 258], "nrow": [5, 60, 61, 200], "construct": [5, 64, 88, 99, 187, 189, 190, 195, 197, 199, 247], "sphinx": [5, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 165, 166, 241, 242, 249, 250, 255], "contribut": [5, 21, 24, 49, 55, 57, 60, 61, 72, 76, 90, 100, 127, 128, 187, 194, 195, 197, 199, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260], "suggest": [5, 11, 48, 58, 63, 166, 191, 194, 243, 245, 257], "chang": [5, 6, 7, 10, 12, 18, 19, 25, 36, 47, 51, 55, 57, 58, 59, 66, 69, 71, 92, 97, 101, 113, 138, 141, 162, 166, 170, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 210, 218, 219, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 262], "properli": [5, 51, 58, 66, 135, 138, 142, 145, 193, 195, 201, 240, 243, 245, 249, 254], "html": [5, 22, 23, 63, 162, 166, 189, 193, 238, 240, 250], "websit": [5, 22, 169, 170, 190, 236, 237, 240, 241, 242, 243, 245, 246, 248, 251, 257], "extens": [5, 31, 61, 71, 79, 80, 84, 85, 87, 89, 164, 193, 195, 197, 201, 224, 238, 240, 244, 245, 248], "These": [5, 10, 14, 22, 32, 33, 43, 45, 48, 49, 53, 55, 57, 58, 61, 64, 72, 87, 89, 90, 93, 98, 99, 121, 127, 135, 176, 187, 189, 190, 195, 197, 236, 238, 239, 240, 241, 242, 247, 248, 249, 251, 252, 253, 254, 255, 258, 259, 260, 262, 263], "store": [5, 22, 50, 60, 61, 65, 76, 101, 139, 140, 162, 164, 187, 189, 193, 195, 197, 199, 200, 240, 243], "contain": [5, 7, 23, 30, 34, 36, 45, 46, 47, 48, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 99, 102, 110, 111, 112, 117, 119, 135, 138, 141, 142, 145, 165, 166, 167, 173, 175, 176, 177, 182, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 227, 229, 231, 233, 234, 236, 238, 239, 240, 241, 242, 247, 248, 249, 251, 252, 253, 254, 255, 263], "execut": [5, 28, 39, 42, 70, 74, 77, 79, 88, 95, 96, 106, 108, 109, 120, 126, 130, 131, 132, 134, 137, 142, 144, 145, 162, 166, 172, 173, 175, 176, 187, 189, 191, 194, 195, 196, 201, 245], "interleav": 5, "explan": [5, 8, 9, 43, 195, 241], "block": [5, 22, 181, 182, 191, 195, 201, 202, 210, 211, 212, 239, 242], "demonstr": [5, 30, 36, 40, 45, 53, 60, 66, 69, 76, 79, 87, 88, 93, 95, 98, 100, 105, 107, 110, 111, 112, 176, 178], "how": [5, 15, 17, 18, 21, 22, 27, 29, 30, 32, 33, 34, 36, 37, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 79, 81, 82, 83, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 131, 135, 138, 139, 142, 163, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 187, 189, 190, 193, 194, 195, 196, 197, 199, 201, 241, 245, 246, 247, 248, 249, 250, 252, 253, 254, 258], "etc": [5, 6, 36, 69, 138, 162, 172, 185, 187, 189, 194, 195, 197, 201, 229, 243, 246], "intermix": 5, "former": [5, 166], "rational": 5, "aim": [5, 71, 177, 180, 195], "extend": [5, 15, 59, 84, 138, 142, 145, 167, 178, 189, 195, 196, 200, 201, 239, 245, 247, 253], "relev": [5, 22, 48, 49, 55, 57, 60, 63, 72, 127, 166, 167, 168, 169, 170, 181, 182, 194, 195, 198, 199, 201], "paper": [5, 34, 40, 43, 48, 49, 59, 60, 61, 69, 167, 168, 169, 170, 182, 183, 191, 195, 201, 208, 240, 245, 247, 249], "exist": [5, 21, 22, 58, 116, 117, 118, 127, 190, 193, 194, 195, 196, 200, 201, 225, 236, 237, 240, 241, 245, 246, 250], "edit": [5, 7, 12, 15, 18, 22, 166, 181], "otherwis": [5, 59, 76, 107, 116, 141, 166, 167, 187, 189, 190, 191, 195, 196, 199, 200, 201, 212, 213, 230, 238], "directori": [5, 7, 8, 10, 19, 22, 27, 142, 145, 166, 168, 171, 172, 173, 175, 176, 177, 178, 190, 192, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 241, 243, 244, 251], "valid_exampl": 5, "txt": [5, 98, 145, 177, 193, 201, 203, 205, 237, 245, 249], "control": [5, 8, 54, 65, 69, 103, 162, 168, 170, 178, 189, 190, 194, 195, 196, 198, 199, 201, 247], "addition": [5, 34, 53, 89, 165], "reli": [5, 36, 84, 101, 178, 195, 199, 238, 245], "restructuredtext": [5, 240, 250], "rst": [5, 238, 239, 240, 241, 244, 245, 249], "theoret": [5, 25, 48, 63, 67, 102, 195], "background": [5, 30, 32, 40, 43, 46, 48, 49, 53, 55, 60, 61, 62, 89, 95, 98, 110, 111, 112, 141, 191, 195, 200, 201, 223], "instruct": [5, 8, 10, 11, 13, 17, 19, 22, 23, 63, 108, 109, 166, 236, 239, 241, 242, 245, 247, 250], "descript": [5, 8, 22, 93, 95, 116, 117, 140, 190, 193, 195, 201, 247], "again": [5, 7, 8, 22, 29, 61, 64, 81, 82, 83, 99, 163, 189, 195, 196, 238, 240, 243, 245, 263], "markup": [5, 240], "pars": [5, 201, 252], "produc": [5, 46, 48, 55, 58, 59, 60, 61, 63, 76, 99, 127, 162, 187, 189, 190, 195], "content": [5, 7, 12, 16, 20, 22, 25, 238, 239, 243, 248, 261], "later": [5, 48, 49, 57, 61, 64, 72, 90, 107, 189, 195, 244], "compil": [5, 22, 166, 194, 195, 202, 236, 237, 240, 245, 246, 254], "so": [5, 6, 8, 17, 18, 19, 22, 23, 29, 36, 37, 45, 48, 50, 53, 57, 58, 59, 61, 64, 66, 69, 81, 82, 83, 85, 87, 88, 90, 93, 97, 98, 99, 102, 103, 107, 108, 109, 113, 116, 117, 118, 119, 128, 135, 138, 139, 141, 163, 166, 167, 173, 176, 177, 182, 187, 189, 190, 193, 194, 195, 196, 199, 200, 201, 216, 237, 243, 244, 245, 258, 263], "displai": [5, 29, 46, 52, 54, 58, 67, 71, 72, 76, 81, 82, 83, 87, 88, 98, 107, 114, 123, 124, 125, 138, 139, 140, 141, 190, 200, 201, 223, 238, 242, 248], "web": [5, 22, 190, 243, 245, 249], "enrich": 5, "particularli": [5, 34, 55, 60, 69, 88], "mind": [5, 50, 97, 119, 195], "encourag": [5, 24, 172], "observ": [5, 31, 32, 40, 52, 55, 60, 63, 64, 71, 85, 103, 121, 123, 124, 125, 163, 178, 189, 195], "acronym": 5, "referenc": [5, 187, 190, 195, 196, 245], "invert": [5, 43, 76, 108, 109, 195, 200, 201, 223, 243], "comma": [5, 201, 231, 253], "call": [5, 7, 8, 22, 23, 27, 29, 34, 35, 37, 40, 47, 48, 49, 50, 52, 53, 55, 57, 59, 60, 61, 63, 66, 69, 81, 82, 83, 90, 98, 99, 102, 103, 108, 121, 123, 124, 125, 128, 131, 135, 139, 142, 145, 164, 166, 167, 176, 177, 178, 187, 189, 190, 194, 195, 197, 199, 201, 202, 238, 241, 242, 243, 253, 263], "gradientt": [5, 27, 37, 46, 48, 50, 51, 53, 56, 57, 58, 60, 67, 68, 127, 128, 187, 190, 194, 195, 197, 199, 202, 237, 238, 243, 245, 249, 252], "hold": [5, 27, 36, 76, 85, 102, 138, 141, 187, 189, 193, 195], "vector": [5, 27, 37, 39, 48, 53, 57, 62, 63, 71, 102, 103, 117, 118, 127, 128, 139, 162, 164, 165, 167, 172, 175, 176, 185, 187, 189, 190, 193, 195, 197, 199, 200, 201, 204, 209, 210, 217, 219, 224, 236, 238, 241, 245, 258, 259, 262], "cite": [5, 25, 32, 55, 167, 168, 169, 170, 190, 191], "nameyear": 5, "convent": [5, 60, 135, 163, 164, 182, 187, 189, 190, 193, 195, 199, 261], "cross": [5, 44, 48, 50, 53, 57, 58, 60, 61, 64, 69, 70, 72, 73, 74, 76, 107, 108, 109, 127, 146, 176, 177, 182, 187, 189, 195, 199, 201, 204, 236, 238, 241, 245, 247, 248, 253], "them": [5, 8, 18, 22, 27, 36, 37, 50, 51, 54, 57, 63, 68, 69, 76, 91, 93, 95, 97, 98, 99, 101, 107, 108, 109, 113, 114, 118, 135, 138, 140, 162, 173, 187, 189, 195, 196, 197, 200, 244], "garyfallidis2014": 5, "under": [5, 58, 59, 102, 108, 109, 187, 189, 190, 195, 200, 201, 204, 247, 248, 252, 256], "section": [5, 7, 8, 17, 22, 48, 57, 118, 142, 168, 182, 189, 190, 195, 197, 242, 244, 246, 249, 250], "relat": [5, 6, 8, 17, 48, 58, 61, 135, 162, 189, 193, 195, 197, 199, 236, 238, 241, 242, 243, 253, 262, 263], "_specific_filenam": 5, "thu": [5, 22, 40, 43, 48, 49, 55, 57, 59, 72, 107, 117, 172, 189, 194, 195], "abl": [5, 7, 17, 55, 58, 138, 141, 142, 145, 166, 176, 195, 238, 243], "ref": [5, 8, 76, 114, 187, 196, 240], "specific_filenam": 5, "cap": 5, "capit": 5, "first": [5, 8, 17, 19, 22, 23, 27, 29, 30, 31, 32, 33, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 78, 81, 82, 83, 88, 91, 92, 93, 95, 97, 98, 99, 100, 102, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 127, 128, 130, 135, 138, 139, 140, 141, 142, 145, 166, 167, 168, 169, 170, 171, 176, 177, 178, 187, 189, 191, 194, 195, 196, 197, 199, 200, 201, 239, 257], "letter": [5, 108, 199], "constrain": [5, 44, 45, 54, 55, 58, 59, 63, 65, 70, 71, 72, 80, 84, 85, 89, 146, 174, 182, 189, 190, 192, 194, 195, 201, 217, 221, 244, 245, 246, 249, 262], "deconvolut": [5, 34, 44, 45, 54, 59, 65, 70, 71, 72, 75, 77, 80, 84, 85, 89, 122, 126, 146, 174, 182, 183, 192, 194, 195, 201, 217, 243, 244, 247, 249, 262], "csd": [5, 44, 45, 47, 54, 64, 70, 71, 72, 80, 84, 85, 86, 89, 129, 132, 146, 147, 168, 174, 182, 184, 194, 195, 201, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 254, 256], "those": [5, 8, 15, 17, 27, 29, 43, 46, 53, 59, 61, 72, 76, 80, 81, 82, 83, 89, 98, 107, 117, 141, 166, 178, 189, 191, 195, 196, 201], "case": [5, 8, 17, 22, 31, 36, 43, 48, 54, 58, 59, 69, 71, 76, 85, 88, 95, 99, 100, 113, 116, 139, 142, 145, 162, 163, 166, 169, 170, 172, 173, 175, 176, 177, 178, 187, 189, 191, 193, 195, 196, 199, 200, 201, 204, 205, 236, 241, 244, 258, 259, 262], "where": [5, 8, 15, 18, 22, 23, 27, 29, 33, 46, 47, 48, 53, 55, 57, 59, 60, 62, 63, 64, 65, 67, 69, 71, 72, 76, 81, 82, 83, 84, 89, 90, 92, 93, 97, 98, 100, 102, 103, 107, 108, 118, 130, 131, 139, 142, 145, 162, 163, 164, 166, 168, 170, 172, 176, 178, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 218, 219, 225, 228, 231, 233, 234, 248, 258, 259, 262], "common": [5, 7, 15, 39, 41, 46, 48, 58, 60, 64, 69, 87, 101, 107, 113, 135, 142, 145, 168, 175, 189, 190, 193, 195, 198, 201, 243], "lowercas": [5, 248, 249], "superior": [5, 43, 76, 98, 107, 189, 193], "longitudin": [5, 43, 195], "fasciculu": [5, 43, 103, 113, 114, 138, 168, 169, 170, 190], "slf": [5, 43], "customari": 5, "word": [5, 7, 8, 47, 61, 80, 116, 178, 187, 195, 198, 200, 236, 242], "underscor": 5, "filenam": [5, 27, 48, 50, 51, 56, 57, 58, 68, 135, 167, 190, 193, 200, 201, 208, 223, 230, 241], "figur": [5, 27, 29, 30, 31, 32, 34, 36, 43, 49, 51, 54, 55, 57, 59, 60, 61, 62, 68, 69, 72, 76, 81, 82, 83, 87, 89, 95, 97, 98, 99, 100, 107, 108, 109, 110, 111, 112, 121, 127, 131, 182, 189, 200, 201, 223, 236, 238, 239, 240, 247], "font": [5, 250], "caption": 5, "bold": [5, 7, 138, 200], "face": [5, 189, 190, 195, 197, 202, 243, 245], "part": [5, 27, 29, 36, 45, 47, 53, 54, 58, 60, 63, 64, 65, 71, 72, 81, 82, 83, 99, 118, 142, 162, 164, 166, 168, 181, 183, 187, 189, 191, 193, 194, 195, 196, 197, 199, 201, 218, 219, 238, 245, 257, 262], "rel": [5, 7, 8, 45, 53, 69, 72, 76, 88, 90, 93, 170, 189, 192, 195, 198, 201, 236, 238, 241, 242, 243], "path": [5, 27, 39, 41, 48, 54, 55, 76, 85, 90, 94, 96, 99, 100, 103, 107, 135, 141, 142, 145, 146, 166, 172, 173, 175, 176, 177, 178, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 231, 233, 234, 236, 237, 238, 241, 245, 248, 249], "backquot": 5, "inlin": [5, 236, 240], "devel": [5, 48, 49, 50, 57, 59, 64, 69, 103, 166, 248], "greater": [5, 36, 57, 113, 162, 176, 187, 189, 192, 196, 200, 201, 223, 228, 230], "sign": [5, 48, 107, 187, 189, 199, 245, 249, 259, 262], "enclos": 5, "summari": [6, 7, 12, 16, 21, 22, 139, 182, 193, 194, 202, 247], "easili": [6, 27, 43, 53, 118, 135, 142, 145, 189, 195, 196], "classifi": [6, 34, 59, 84, 89, 121, 182, 196, 202, 237, 238, 246, 247, 250], "meaning": [6, 49, 58, 195], "categori": [6, 195], "bf": [6, 18, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255], "rf": [6, 162, 195, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 260], "refactor": [6, 8, 182, 236, 237, 240, 241, 243, 244, 245, 246, 247, 249, 250], "nf": [6, 7, 8, 165, 182, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "bw": [6, 238], "address": [6, 7, 239, 242], "opt": [6, 48, 55, 59, 62, 63, 76, 139, 201, 241, 244, 245, 248, 253], "bk": 6, "fail": [6, 22, 48, 66, 100, 180, 187, 193, 195, 236, 237, 238, 240, 241, 245, 246, 247, 249, 250, 253, 254], "pl": [6, 24], "pylint": 6, "happier": 6, "kind": [6, 36, 45, 61, 69, 98, 187, 195, 199, 245], "document": [6, 20, 21, 22, 142, 145, 165, 179, 181, 182, 187, 189, 190, 193, 196, 199, 201, 236, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "style": [6, 20, 21, 25, 189, 195, 197, 237, 238, 239, 240, 241, 242, 243, 247, 248, 250, 251, 253, 254], "affect": [6, 8, 32, 34, 59, 61, 173, 194], "might": [6, 7, 12, 22, 23, 48, 58, 59, 69, 98, 114, 166, 168, 187, 189, 191, 193, 194, 195, 196, 201, 210, 211, 241, 249], "look": [6, 8, 9, 13, 17, 21, 22, 27, 37, 45, 47, 63, 64, 65, 69, 97, 99, 103, 105, 113, 121, 135, 162, 163, 165, 166, 167, 168, 179, 195, 199, 237, 238, 240, 243, 245, 256], "relax": [6, 237, 245], "slightli": [6, 61, 100, 187, 195, 262], "attempt": [6, 100, 195, 248], "failur": [6, 85, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 253], "fact": [6, 36, 164, 176], "veri": [6, 7, 11, 23, 27, 30, 36, 40, 41, 43, 48, 53, 57, 58, 65, 69, 99, 102, 103, 110, 111, 112, 128, 139, 142, 145, 162, 170, 176, 187, 189, 193, 195, 199, 201, 208, 262], "within": [6, 36, 46, 47, 53, 59, 80, 85, 90, 93, 114, 118, 167, 176, 178, 187, 189, 190, 191, 193, 195, 196, 197, 199], "dp": [6, 59, 199, 253], "keep": [6, 8, 18, 20, 25, 29, 56, 59, 64, 79, 81, 82, 83, 89, 98, 119, 135, 187, 195, 196, 201, 228, 230, 236, 241, 253], "up": [6, 7, 12, 15, 16, 18, 22, 40, 48, 61, 63, 64, 66, 79, 85, 88, 93, 95, 97, 101, 107, 113, 139, 140, 141, 162, 163, 166, 180, 182, 187, 189, 193, 194, 195, 196, 199, 201, 202, 227, 236, 237, 238, 241, 243, 245, 246, 247, 248, 249, 253, 258, 259], "habit": [6, 21], "becaus": [6, 8, 17, 22, 23, 29, 33, 40, 48, 52, 60, 76, 81, 82, 83, 85, 89, 92, 95, 98, 100, 117, 123, 124, 125, 128, 138, 141, 162, 172, 176, 178, 187, 189, 195, 196, 197, 240, 258], "glanc": 6, "sourc": [6, 20, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 162, 181, 187, 189, 196, 199, 201, 243], "person": 7, "gitconfig": 7, "home": [7, 11, 27, 166, 180, 190], "yourdomain": [7, 18], "ci": [7, 22, 182, 237, 238, 241, 247, 248, 249, 250, 255], "commit": [7, 9, 15, 18, 20, 21, 22, 25, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "co": [7, 22, 97, 100, 163, 187, 189, 197, 199, 262, 263], "checkout": [7, 8, 15, 17, 18, 22], "statu": [7, 8, 15, 18, 108, 187, 236, 248, 253], "br": 7, "branch": [7, 9, 12, 15, 17, 18, 19, 22, 196, 237, 238, 248], "wdiff": 7, "diff": [7, 8, 9, 15, 17, 43, 187], "color": [7, 29, 32, 37, 43, 45, 53, 57, 61, 69, 72, 76, 78, 81, 82, 83, 87, 88, 91, 92, 93, 97, 98, 101, 102, 103, 105, 107, 108, 109, 113, 114, 116, 117, 118, 119, 121, 138, 140, 141, 165, 168, 169, 182, 187, 193, 195, 196, 200, 201, 218, 219, 223, 236, 238, 240, 241, 245, 253], "vim": [7, 22, 162], "config": [7, 15, 18, 201, 236, 241, 245, 246, 255], "copi": [7, 8, 12, 16, 18, 19, 49, 69, 76, 87, 88, 89, 98, 100, 107, 138, 141, 145, 181, 187, 190, 193, 195, 196, 199, 201, 240, 245, 248], "practic": [7, 25, 32, 43, 47, 55, 58, 65, 67, 71, 95, 173, 189, 195, 240, 250, 262], "tell": [7, 18, 19, 27, 116, 118, 196, 198, 201], "who": [7, 17, 18, 21, 22, 27, 37, 187, 189, 195], "simplest": [7, 18], "Of": [7, 48], "cours": [7, 15, 21, 48, 56, 61, 183, 258], "ll": [7, 8, 17, 19, 21, 22, 29, 64, 65, 76, 81, 82, 83, 85, 90, 98, 107, 138, 141, 166, 195], "actual": [7, 8, 69, 97, 145, 181, 187, 189, 195, 196, 197, 237, 238, 258, 259], "benefit": [7, 23, 32, 64], "shorten": [7, 47, 64], "Or": [7, 8, 23, 27, 29, 41, 47, 81, 82, 83, 162, 195], "give": [7, 8, 11, 15, 19, 21, 22, 29, 31, 36, 40, 43, 46, 47, 57, 63, 81, 82, 83, 92, 118, 135, 162, 172, 189, 191, 195, 199, 201, 213, 237, 238, 239, 247, 253], "nice": [7, 15, 18, 37, 66, 197, 201], "get": [7, 8, 13, 14, 15, 16, 18, 19, 21, 22, 23, 26, 28, 29, 34, 36, 50, 51, 56, 57, 58, 59, 64, 68, 72, 78, 79, 81, 82, 83, 89, 90, 93, 95, 98, 99, 100, 101, 103, 107, 108, 109, 113, 116, 117, 130, 131, 138, 141, 142, 145, 146, 168, 169, 172, 176, 178, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 237, 240, 241, 243, 247, 249, 252, 253, 258, 259], "lg": [7, 8], "graph": [7, 8, 9, 17, 202, 247], "pretti": [7, 45], "cred": 7, "h": [7, 48, 49, 60, 64, 65, 99, 100, 142, 145, 167, 175, 176, 187, 189, 191, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 245], "creset": 7, "yellow": [7, 98, 121, 168], "cgreen": 7, "cr": [7, 190], "blue": [7, 37, 43, 45, 49, 78, 95, 103, 121, 139, 140, 195], "abbrev": 7, "date": [7, 193, 237, 238], "6d8e1e": 7, "head": [7, 8, 17, 31, 35, 40, 69, 76, 245], "origin": [7, 8, 18, 19, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 49, 51, 54, 55, 57, 58, 60, 61, 63, 64, 66, 68, 69, 71, 72, 81, 82, 83, 87, 89, 99, 100, 107, 110, 111, 112, 113, 116, 135, 138, 169, 170, 172, 187, 189, 191, 194, 195, 196, 197, 199, 201, 202, 208, 228, 236, 245, 247, 248, 249, 262, 263], "my": [7, 8, 17, 162, 237, 238, 243, 249, 253], "45": [7, 29, 32, 48, 54, 57, 58, 59, 61, 72, 79, 81, 82, 83, 84, 85, 89, 93, 95, 98, 105, 121, 140, 141, 166, 187, 190, 195, 243, 246], "minut": [7, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 166], "ago": 7, "matthew": [7, 21, 22, 24, 236, 237, 238, 240, 241, 243, 244, 245, 246], "d304a73": 7, "placehold": [7, 187], "pull": [7, 8, 10, 15, 17, 18, 90, 165, 182, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "48": [7, 48, 54, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 190, 238, 243], "hhuuggoo": 7, "master": [7, 9, 12, 17, 18, 19, 22, 48, 168, 236, 238, 241, 243, 245, 248], "week": 7, "jonathan": 7, "terhorst": 7, "4aff2a8": 7, "35": [7, 22, 47, 48, 49, 51, 54, 57, 58, 59, 61, 71, 72, 76, 79, 80, 84, 85, 86, 87, 88, 89, 95, 98, 99, 100, 101, 107, 108, 109, 119, 138, 177, 190, 192, 195, 197, 243, 246, 262], "test_bugfix": 7, "hugo": 7, "a7ff2e5": 7, "discuss": [7, 37, 107, 128, 189, 195, 263], "propos": [7, 31, 33, 52, 53, 55, 57, 61, 63, 69, 76, 89, 107, 108, 109, 121, 123, 124, 125, 167, 176, 177, 187, 194, 195, 262], "made": [7, 8, 17, 18, 21, 47, 58, 116, 117, 135, 142, 145, 195, 199, 246, 258, 259, 263], "summit": 7, "corran": 7, "webster": 7, "68f6752": 7, "implement": [7, 8, 32, 37, 45, 54, 55, 58, 59, 64, 66, 69, 71, 72, 76, 89, 99, 100, 107, 108, 109, 118, 142, 164, 177, 182, 187, 189, 191, 193, 195, 199, 201, 238, 241, 242, 243, 245, 246, 247, 248, 253, 255, 256, 262], "axisindex": 7, "index_bi": 7, "ax": [7, 31, 32, 33, 34, 35, 36, 40, 43, 45, 49, 50, 55, 57, 60, 61, 62, 63, 64, 69, 76, 93, 95, 97, 99, 100, 107, 108, 109, 128, 163, 187, 189, 200], "sketchi": 7, "right": [7, 8, 17, 22, 27, 32, 33, 34, 35, 40, 43, 49, 52, 57, 58, 60, 69, 71, 72, 76, 89, 90, 95, 98, 99, 102, 107, 123, 124, 125, 138, 139, 141, 162, 163, 168, 187, 189, 190, 193, 195, 196, 200], "corr": 7, "376adbd": 7, "46": [7, 46, 48, 54, 55, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 91, 113, 114, 195, 243], "b605216": 7, "joshu": 7, "api": [7, 25, 90, 135, 166, 182, 187, 193, 195, 198, 236, 239, 240, 241, 243, 245, 250], "2e991e8": 7, "outer": [7, 62, 63, 195], "ufunc": [7, 236, 253], "7beda5a": 7, "prevent": [7, 48, 135, 187, 195, 196, 199, 201, 205], "axi": [7, 32, 34, 36, 37, 43, 50, 51, 55, 56, 58, 61, 67, 68, 100, 105, 107, 121, 127, 128, 163, 164, 176, 187, 189, 191, 193, 195, 196, 197, 199, 200, 201, 222, 227, 241, 243, 247, 250, 258, 263], "throw": [7, 240, 247], "equal": [7, 47, 51, 53, 58, 61, 68, 71, 72, 76, 85, 97, 102, 105, 176, 187, 189, 192, 195, 197, 199, 200, 201, 234, 240, 243, 245, 249, 258, 259], "65af65": 7, "convert": [7, 22, 48, 60, 66, 71, 127, 189, 192, 193, 194, 195, 201, 217, 237, 241, 247, 249, 255], "unit": [7, 24, 53, 57, 61, 97, 164, 176, 189, 190, 195, 197, 199, 200, 201, 209, 210, 217, 219, 224, 258, 259, 260, 262], "assert": [7, 98, 240, 245, 250], "956fbab": 7, "remot": [7, 8, 15, 17, 18, 19, 190], "upstream": [7, 8, 15, 17, 18, 22], "thank": [7, 9, 18, 22, 181, 195], "yuri": 7, "zaytsev": 7, "post": [7, 15, 187, 189, 257], "alreadi": [8, 17, 18, 22, 29, 41, 57, 58, 76, 81, 82, 83, 87, 91, 105, 109, 113, 114, 117, 166, 168, 187, 189, 190, 193, 194, 196, 198], "own": [8, 12, 14, 15, 16, 17, 18, 19, 27, 37, 116, 135, 162, 169, 172, 173, 175, 176, 177, 178, 182, 194, 195, 201, 245, 250, 252, 253], "fork": [8, 12, 16, 18, 243], "git": [8, 9, 10, 14, 16, 17, 18, 19, 20, 22, 166, 240], "readi": [8, 15, 22, 47, 54, 108, 118, 131, 142, 145, 166, 190, 237], "real": [8, 60, 90, 97, 142, 145, 162, 164, 182, 187, 189, 195, 197, 199, 262], "what": [8, 19, 22, 25, 27, 29, 40, 43, 58, 61, 64, 69, 81, 82, 83, 97, 99, 103, 105, 108, 113, 116, 117, 138, 141, 162, 165, 167, 168, 180, 187, 193, 195, 196, 197, 201], "don": [8, 10, 11, 18, 24, 43, 59, 61, 98, 99, 118, 130, 138, 141, 166, 168, 187, 189, 196, 199, 201, 228, 229, 238, 240, 243, 245, 246, 247, 254], "anyth": [8, 18, 145, 187, 189, 245, 252], "fetch": [8, 17, 19, 32, 34, 40, 45, 48, 53, 58, 59, 60, 69, 76, 78, 91, 92, 99, 100, 107, 109, 113, 114, 121, 130, 131, 135, 138, 171, 172, 173, 175, 176, 177, 178, 190, 236, 238, 243, 246, 247, 248, 250], "each": [8, 21, 22, 27, 29, 33, 36, 39, 40, 43, 45, 50, 53, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 76, 78, 80, 81, 82, 83, 85, 88, 89, 90, 93, 95, 97, 98, 99, 101, 102, 107, 108, 109, 114, 116, 117, 118, 121, 127, 128, 138, 142, 145, 162, 167, 168, 169, 170, 172, 173, 175, 177, 178, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 210, 211, 212, 213, 223, 227, 230, 238, 244, 247, 253, 262], "task": [8, 121, 199], "purpos": [8, 27, 32, 37, 39, 47, 48, 55, 58, 59, 65, 69, 88, 90, 100, 102, 118, 119, 127, 172, 176, 178, 180, 181, 189, 190, 195, 196, 200, 201, 238, 259], "bugfix": [8, 236], "databas": 8, "possibli": [8, 53, 187, 198, 236], "while": [8, 9, 23, 31, 32, 34, 45, 53, 55, 57, 60, 63, 64, 66, 71, 127, 135, 170, 176, 187, 189, 194, 195, 196, 198, 199, 201, 237, 238, 240, 252, 262], "find": [8, 11, 14, 18, 22, 40, 47, 53, 56, 58, 65, 72, 76, 84, 90, 97, 98, 102, 107, 108, 109, 113, 114, 121, 130, 138, 162, 166, 171, 176, 178, 179, 187, 189, 195, 196, 198, 199, 201, 209, 210, 216, 217, 218, 219, 221, 224, 238, 243, 245], "yourself": [8, 11, 19], "mail": [8, 18, 22, 24, 166, 179, 189, 236, 257], "stuck": [8, 99], "maintain": [8, 12, 16, 23, 47, 71, 135, 167], "ve": [8, 17, 18, 19, 23, 29, 81, 82, 83, 90, 98, 166, 189, 199, 259], "done": [8, 14, 18, 22, 29, 32, 36, 40, 41, 45, 49, 53, 58, 59, 60, 61, 64, 72, 76, 81, 82, 83, 90, 98, 100, 102, 103, 109, 116, 118, 166, 187, 189, 191, 195, 196, 199, 201, 210], "why": [8, 18, 22, 53, 63, 99, 135, 162, 176, 253], "did": [8, 53, 69, 109, 177, 182, 189, 194, 252], "linux": [8, 15, 22, 167, 241, 246, 250, 251, 256], "sound": [8, 63, 102], "strang": [8, 241, 250], "confus": [8, 195, 245, 253], "link": [8, 15, 17, 22, 168, 189, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 254], "repo": [8, 17, 18, 22, 245, 249, 252], "down": [8, 10, 60, 97, 116, 141, 163, 189, 194, 195, 202, 245, 251, 258, 259], "branchnam": 8, "last": [8, 22, 27, 53, 57, 61, 69, 98, 116, 119, 141, 142, 162, 166, 168, 176, 182, 187, 189, 190, 191, 193, 194, 195, 196, 199, 201, 219, 239, 242, 254], "often": [8, 22, 23, 40, 41, 53, 64, 69, 95, 97, 98, 164, 189, 195], "someon": [8, 17, 128], "choos": [8, 30, 31, 39, 53, 58, 78, 110, 111, 112, 139, 172, 177, 183, 195, 199, 253], "remind": [8, 17, 163, 241], "rest": [8, 17, 24, 36, 58, 59, 187], "abil": [8, 64, 103, 141, 173, 182, 248], "fly": [8, 116, 117, 163], "public": [8, 21, 22, 25, 121, 163, 182, 190, 195, 238], "correctli": [8, 22, 84, 236, 240, 241, 245, 252], "hack": [8, 18], "my_new_fil": 8, "am": [8, 18, 22, 49], "messag": [8, 18, 20, 21, 25, 138, 141, 187, 189, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 241, 247, 248, 250, 253, 254], "ny": [8, 24, 99, 189], "discard": [8, 22, 72, 98, 189, 190, 195, 237, 253], "readm": [8, 22, 236, 237, 238, 239, 240, 241, 245, 247, 248, 249, 253], "untrack": 8, "new_file_nam": 8, "flag": [8, 18, 57, 98, 113, 167, 182, 187, 189, 195, 197, 201, 205, 239, 240, 245, 253], "just": [8, 9, 10, 11, 14, 17, 18, 19, 21, 22, 27, 43, 50, 51, 53, 56, 57, 58, 65, 68, 99, 103, 105, 107, 139, 142, 145, 162, 166, 175, 187, 193, 194, 195, 199, 200, 201, 223, 236, 246, 247, 256], "signal": [8, 18, 32, 33, 36, 40, 43, 44, 45, 47, 51, 52, 55, 57, 59, 61, 62, 63, 64, 65, 68, 69, 70, 76, 88, 123, 124, 125, 127, 128, 131, 146, 162, 165, 172, 176, 182, 184, 185, 191, 194, 195, 197, 199, 200, 201, 218, 219, 220, 221, 231, 241, 243, 247, 249, 250, 252, 258, 260, 262], "faith": [8, 18], "tangl": 8, "problem": [8, 22, 41, 48, 57, 58, 59, 63, 69, 97, 99, 102, 108, 162, 177, 182, 187, 189, 195, 199, 237, 238, 240, 241, 245, 250, 253, 254], "manual": [8, 16, 17, 22, 43, 117, 119, 131, 135, 187, 190, 191, 194, 249], "url": [8, 19, 190, 238, 245, 249], "sai": [8, 17, 22, 37, 43, 61, 102, 166, 169, 170, 189, 194, 195, 244, 258, 259], "dropdown": 8, "menu": [8, 241], "left": [8, 27, 31, 32, 33, 34, 35, 36, 40, 43, 45, 49, 52, 58, 60, 61, 62, 63, 65, 71, 72, 76, 89, 90, 91, 95, 98, 99, 100, 101, 102, 103, 107, 113, 114, 123, 124, 125, 138, 139, 141, 162, 163, 168, 169, 170, 187, 189, 190, 193, 195, 196, 200], "click": [8, 11, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 172, 173, 240], "button": [8, 11, 138, 141, 238, 247], "enter": [8, 22, 72, 76, 187, 191, 192, 195, 196, 201, 216, 217, 222, 229, 230, 240], "titl": [8, 43, 51, 54, 61, 68, 114, 200, 201, 202, 236, 249], "attent": 8, "complic": 8, "happi": [8, 21, 24, 236, 245, 257], "think": [8, 18, 56, 93, 162, 195, 197, 258], "preliminari": [8, 195], "unwant": 8, "stuff": [8, 14, 17, 20, 243, 245, 247, 252], "even": [8, 18, 40, 50, 60, 63, 99, 105, 116, 118, 166, 172, 187, 189, 195, 196, 199, 201, 221, 262], "account": [8, 12, 22, 33, 55, 63, 64, 69, 71, 107, 127, 187, 189, 190, 195, 237, 250, 251, 262], "Then": [8, 9, 18, 19, 22, 33, 41, 43, 57, 59, 71, 72, 101, 121, 138, 166, 176, 177, 178, 179, 187, 189, 195, 199, 201, 258, 259], "collabor": [8, 24, 72, 179, 180, 257], "anyon": [8, 98], "els": [8, 18, 43, 114, 138, 162, 187, 189, 193, 195, 197, 199, 200], "clone": [8, 10, 15, 18, 22, 166], "githhub": 8, "rememb": [8, 17, 22, 23], "ssh": [8, 11, 22], "protocol": [8, 58], "enh": [8, 236, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 252, 253, 254, 255], "better": [8, 14, 18, 31, 32, 45, 48, 49, 55, 61, 99, 180, 182, 195, 238, 240, 246, 248, 249, 250, 253], "graphic": 8, "gitk": 8, "log": [8, 11, 15, 17, 22, 45, 48, 49, 64, 98, 101, 142, 145, 187, 189, 190, 193, 194, 195, 196, 201, 238, 248, 258, 259], "final": [8, 18, 22, 27, 29, 33, 47, 48, 52, 53, 57, 58, 60, 61, 62, 64, 65, 81, 82, 83, 88, 97, 98, 99, 100, 101, 107, 108, 119, 123, 124, 125, 127, 138, 165, 166, 187, 189, 195, 196, 201], "fanci": 8, "reason": [8, 50, 55, 58, 69, 98, 99, 105, 108, 117, 135, 166, 190, 194, 195, 201, 221, 243, 262], "let": [8, 17, 21, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 66, 68, 69, 71, 76, 79, 81, 82, 83, 91, 92, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 113, 114, 118, 119, 123, 124, 125, 128, 135, 138, 139, 141, 145, 163, 166, 167, 168, 169, 170, 171, 180, 199, 239], "thought": [8, 97, 164], "cool": [8, 17, 95], "At": [8, 22, 45, 59, 107, 187, 189], "stage": [8, 57, 99, 108, 176, 189, 195, 201, 220], "mayb": [8, 22, 248], "back": [8, 18, 22, 76, 95, 108, 109, 138, 163, 194, 195, 199, 201, 234, 236, 243, 245, 249, 252], "meantim": 8, "progress": [8, 18, 49, 61, 64, 113, 168, 177, 182, 187, 191, 194, 201, 203, 213, 230, 238, 250, 253], "sternli": 8, "advis": [8, 59, 189, 195, 196, 201], "messi": 8, "worri": [8, 85, 168], "got": [8, 17, 36], "littl": [8, 15, 36, 250], "ahead": [8, 99, 138, 239], "But": [8, 21, 36, 37, 69, 76, 107, 163, 189], "sometim": [8, 36, 85, 97, 98, 130, 162, 166, 247], "situat": [8, 163], "replai": [8, 200], "had": [8, 27, 40], "state": [8, 22, 58, 60, 63, 69, 89, 116, 135, 182, 189, 193, 194, 245, 247, 248, 250, 253, 256], "repres": [8, 32, 46, 53, 55, 60, 61, 62, 63, 65, 66, 71, 72, 85, 93, 97, 98, 116, 118, 119, 127, 130, 162, 164, 168, 170, 176, 178, 187, 189, 190, 193, 194, 195, 196, 197, 199, 201, 208, 221, 227, 241, 262, 263], "without": [8, 22, 27, 31, 32, 33, 36, 51, 55, 61, 62, 63, 64, 69, 76, 85, 97, 100, 131, 166, 189, 190, 194, 195, 196, 199, 201, 241, 243, 247, 248, 256], "tear": 8, "backup": 8, "onto": [8, 71, 163, 189, 195, 200, 263], "succinctli": 8, "doesn": [8, 22, 64, 179, 189, 236, 237, 238, 240, 245, 254], "conflict": [8, 22, 166, 201, 240], "resolv": [8, 47, 48, 52, 59, 123, 124, 125, 176, 192, 195, 201, 217, 241, 242, 255, 262], "man": 8, "end": [8, 17, 22, 37, 45, 48, 53, 62, 63, 71, 89, 90, 97, 98, 101, 102, 103, 108, 116, 118, 128, 142, 145, 163, 166, 168, 176, 189, 194, 195, 199, 249, 258, 259, 262], "luckili": 8, "straightforward": [8, 194], "mistak": [8, 162, 193, 247, 249], "abort": [8, 241], "notic": [8, 61, 98, 102, 163, 172, 189, 190, 196, 201], "reset": [8, 189, 201, 202], "hard": [8, 32, 48, 195, 250], "forgot": 8, "reflog": 8, "show": [8, 17, 19, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 102, 103, 105, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 138, 140, 141, 163, 165, 167, 191, 194, 195, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 241, 243, 247, 248, 253, 258], "8630830": 8, "immedi": [8, 163, 166], "278dd2a": 8, "finish": [8, 18, 102, 108, 166, 194, 245], "11ee694744f2552d": 8, "26aa21a": 8, "lib": [8, 27, 32, 48, 55, 59, 62, 63, 72, 138, 139, 190], "seek_gzip_factori": 8, "leak": [8, 236, 245], "gzip": 8, "obj": [8, 23, 138, 141, 187, 190, 193, 196, 201, 249], "botch": 8, "embarrass": 8, "typo": [8, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255], "perhap": [8, 250], "fals": [8, 29, 32, 34, 36, 37, 46, 47, 48, 49, 51, 52, 53, 56, 58, 59, 60, 64, 65, 66, 67, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 101, 102, 103, 107, 113, 114, 116, 117, 118, 119, 123, 124, 125, 128, 130, 131, 135, 138, 139, 140, 141, 177, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 208, 213, 219, 236, 253, 255], "would": [8, 9, 22, 40, 47, 58, 65, 69, 76, 90, 100, 102, 103, 109, 138, 141, 162, 170, 171, 177, 189, 195, 199, 201, 222, 223], "poster": 8, "suppos": [8, 109, 245], "onelin": [8, 17], "eadc391": 8, "remain": [8, 98, 187, 189, 190, 195, 258], "a815645": 8, "2dec1ac": 8, "disabl": [8, 29, 37, 46, 47, 52, 53, 58, 64, 65, 66, 67, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 116, 117, 118, 119, 123, 124, 125, 128, 141, 191, 201, 203, 243], "13d7934": 8, "6ad92e5": 8, "instanc": [8, 36, 48, 49, 53, 60, 62, 69, 76, 108, 109, 116, 117, 121, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200], "maskedconst": 8, "29001ed": 8, "pre": [8, 22, 31, 36, 48, 49, 55, 60, 92, 102, 103, 109, 187, 194, 195, 201, 204, 238, 240, 241, 242, 249, 250], "nep": [8, 250], "copul": 8, "structured_array_extens": 8, "sensibl": [8, 17], "combin": [8, 29, 31, 40, 58, 59, 61, 62, 64, 65, 67, 71, 72, 81, 82, 83, 88, 98, 105, 143, 144, 146, 187, 189, 191, 195, 199, 201, 238], "pick": [8, 22, 36, 141, 166, 239], "reword": [8, 244], "amend": 8, "squash": [8, 195, 243], "meld": 8, "fixup": [8, 243], "THAT": 8, "WILL": 8, "BE": [8, 24, 189, 196, 201], "lost": [8, 23, 135], "howev": [8, 34, 39, 48, 51, 55, 58, 59, 60, 61, 63, 64, 85, 87, 97, 98, 116, 130, 135, 138, 141, 162, 166, 178, 189, 191, 194, 195, 196, 201, 210, 211, 262], "everyth": [8, 21, 22, 135, 138, 142, 145, 243], "achiev": [8, 31, 59, 62, 71, 100, 102, 116, 121, 177], "mean": [8, 19, 31, 32, 34, 36, 38, 42, 43, 44, 45, 49, 51, 53, 54, 55, 58, 61, 64, 68, 70, 71, 76, 90, 92, 99, 101, 102, 107, 113, 116, 118, 141, 146, 163, 164, 172, 174, 182, 184, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 208, 210, 212, 218, 219, 221, 222, 223, 233, 234, 245, 246, 247, 250, 263], "ii": [8, 189], "collaps": [8, 163], "three": [8, 27, 29, 53, 57, 58, 59, 60, 61, 64, 67, 81, 82, 83, 98, 99, 100, 105, 108, 118, 121, 162, 163, 164, 176, 178, 187, 189, 190, 193, 195, 197, 199, 200], "quit": [8, 40, 58, 97, 195], "bring": [8, 29, 81, 82, 83, 107, 109, 138, 177, 187, 250], "revis": [8, 22], "detach": 8, "721fc64": 8, "foo": 8, "199": [8, 40, 48, 54, 57, 58, 191, 244], "insert": [8, 37, 128, 139], "66": [8, 46, 48, 54, 57, 58, 59, 61, 67, 72, 79, 84, 85, 89, 119, 121, 167, 195, 243], "0f22701": 8, "79": [8, 48, 54, 55, 57, 58, 59, 61, 71, 72, 79, 84, 85, 89, 243], "61": [8, 48, 54, 57, 58, 59, 62, 72, 84, 85, 89, 116, 182, 189, 195, 196, 243, 252], "successfulli": [8, 262], "sophist": 8, "went": 8, "wrong": [8, 69, 189, 195, 237, 238, 239, 241, 243, 245, 246, 253], "possibl": [8, 15, 22, 30, 37, 46, 47, 48, 50, 51, 56, 58, 59, 67, 68, 85, 99, 110, 111, 112, 119, 135, 141, 162, 163, 178, 187, 189, 190, 191, 192, 195, 196, 199, 201, 204, 216, 217, 218, 219, 220, 221, 222, 229, 230, 236, 240, 247, 250, 252, 253, 259], "explain": [8, 15, 18, 57, 58, 76, 91, 92, 99, 100, 101, 102, 103, 108, 109, 113, 114, 116, 117, 119, 121, 169, 170, 180, 191, 246, 258, 259], "yarik": 9, "imagin": [9, 163, 167, 189, 195], "seri": [9, 15, 22, 66, 100, 142, 145, 187, 197, 241, 245, 248, 249, 262], "topic": [9, 61], "off": [9, 17, 34, 43, 55, 61, 87, 103, 105, 107, 121, 170, 187, 201, 208, 238], "step": [10, 22, 27, 29, 31, 32, 33, 36, 39, 40, 49, 55, 57, 59, 65, 69, 71, 76, 81, 82, 83, 85, 88, 90, 93, 95, 97, 102, 105, 113, 131, 140, 167, 168, 172, 173, 175, 176, 177, 178, 187, 189, 194, 195, 197, 199, 201, 204, 233, 234, 237, 238, 247, 253, 255], "github": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 63, 76, 166, 168, 182, 187, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "repositori": [10, 17, 18, 21, 22, 166], "tree": [10, 114, 166, 196, 201], "cd": [10, 18, 19, 22, 166, 167], "onc": [11, 22, 34, 48, 53, 56, 58, 59, 60, 61, 64, 69, 98, 135, 139, 142, 145, 162, 173, 175, 187, 189, 195, 196, 201, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 227, 229, 231, 233, 234, 247, 258, 259, 262], "short": [11, 60, 93, 100, 135, 187, 197, 199, 201, 245, 258, 259], "paus": 11, "hardcor": 11, "action": [11, 135, 182, 201, 253, 254], "overview": [12, 16, 44, 146, 147, 150, 174, 250], "consid": [12, 17, 18, 36, 47, 54, 57, 65, 69, 76, 98, 135, 177, 187, 189, 191, 192, 193, 194, 195, 196, 199, 200, 201, 204, 213, 263], "mirror": [12, 107, 164, 189, 202], "trunk": [12, 19, 22], "ask": [12, 22, 25, 135, 179], "review": [12, 22, 253], "merg": [12, 15, 17, 19, 22, 36, 165, 182, 196, 201, 238, 240, 241, 244, 245, 247, 255], "thing": [12, 15, 18, 22, 23, 29, 61, 69, 81, 82, 83, 98, 99, 100, 142, 145, 166, 178, 189, 191, 195, 199, 236, 245, 246], "debian": [13, 245], "ubuntu": [13, 238, 241, 249, 253], "sudo": [13, 22, 166], "apt": [13, 166], "fedora": 13, "yum": [13, 166], "msysgit": 13, "osx": [13, 22, 182, 236, 238, 241, 248, 250], "recent": [13, 22, 43, 61, 166, 190, 199, 238, 244, 254, 256], "sever": [14, 18, 22, 43, 55, 58, 62, 63, 98, 178, 187, 199, 262], "comprehens": 14, "our": [14, 17, 19, 21, 22, 25, 34, 39, 43, 46, 47, 49, 53, 54, 57, 59, 61, 64, 66, 69, 79, 93, 95, 98, 99, 101, 102, 108, 116, 117, 118, 130, 138, 142, 145, 162, 165, 166, 169, 170, 179, 182, 187, 189, 190, 195, 239, 241, 250, 252], "tailor": [14, 138], "host": 14, "servic": [14, 22, 189, 196, 201], "quicker": 14, "resourc": [14, 16, 20, 22, 54, 130, 187, 190, 194, 240], "excel": [15, 18, 189], "guid": [15, 20, 25, 65, 118, 189, 194, 240, 247, 250], "pro": [15, 237], "book": [15, 240], "depth": [15, 187, 189, 193, 194, 195, 196, 200, 201, 223], "cheat": 15, "sheet": 15, "cast": [15, 193, 194, 201, 236, 238], "video": [15, 21, 119, 182], "snippet": [15, 165, 242], "tos": 15, "magic": 15, "introduct": [15, 16, 20, 25, 26, 28, 75, 77, 98, 135, 146, 166, 174, 249, 258], "intermedi": [15, 53, 195, 199], "parabl": 15, "easi": [15, 30, 53, 98, 110, 111, 112, 138, 139, 141, 162, 163, 166, 253, 263], "concept": [15, 25, 92, 102, 103, 259], "foundat": [15, 165], "expand": [15, 55, 64, 187, 238, 252], "fernando": 15, "perez": 15, "mani": [15, 37, 45, 47, 48, 58, 63, 76, 80, 88, 93, 99, 102, 135, 138, 139, 162, 166, 182, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 216, 217, 222, 229, 230, 247, 253, 256], "tip": [15, 163, 250], "technic": [15, 135], "svn": 15, "crash": [15, 238, 240, 241, 247], "subvers": 15, "thumb": [15, 113], "linu": 15, "torvald": 15, "tool": [15, 20, 27, 47, 95, 98, 99, 100, 107, 108, 109, 135, 166, 167, 177, 182, 195, 196, 199, 200, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "histori": [15, 189, 194, 245], "clean": [15, 22, 72, 165, 166, 182, 196, 238, 240, 241, 242, 243, 244, 246, 247, 253], "activ": [15, 30, 110, 111, 112, 139, 166, 194, 200, 201, 223], "machin": [15, 22, 57, 165, 195, 236], "conveni": [15, 100, 142, 145, 201], "latest": [16, 20, 63, 166, 182, 237, 253, 262], "onlin": [16, 237, 244, 256], "peopl": [17, 259], "Being": 17, "basic": [17, 26, 28, 31, 34, 41, 47, 55, 75, 77, 118, 146, 167, 172, 176, 189, 193, 196, 197, 201, 241, 247, 249], "scari": 17, "rw": [17, 22], "incorpor": [17, 187], "assum": [17, 36, 37, 40, 53, 57, 59, 64, 69, 76, 87, 102, 105, 107, 116, 117, 118, 127, 176, 187, 189, 191, 195, 196, 197, 200, 201, 210, 211, 212, 217, 237, 238], "rebas": [17, 22, 238, 239, 240, 241, 242, 244], "detect": [17, 40, 64, 69, 166, 187, 189, 195, 199], "ff": [17, 196], "forc": [17, 22, 142, 145, 167, 169, 170, 189, 201, 253], "forward": [17, 48, 53, 57, 60, 71, 76, 107, 187, 195, 244], "rejoin": 17, "appear": [17, 22, 58, 138, 181, 190], "compact": [17, 164], "second": [17, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 166, 176, 187, 189, 194, 195, 196, 197, 199, 200, 201, 243, 248, 258], "reach": [17, 47, 55, 64, 84, 89, 98, 101, 114, 121, 163, 178, 191, 195, 199, 201], "uniqu": [17, 59, 62, 63, 85, 103, 114, 187, 189, 193, 194, 195, 196, 199, 250, 253], "form": [17, 22, 23, 53, 54, 71, 99, 100, 166, 176, 187, 189, 190, 195, 196, 197, 201, 258, 259], "discov": 18, "best": [18, 43, 47, 58, 162, 177, 187, 189, 195, 199, 250], "easiest": [18, 22, 31, 166], "quickest": 18, "quick": [18, 25, 30, 53, 57, 110, 111, 112, 165, 195], "email": [18, 236], "im": [18, 55, 57, 63, 71, 76, 95, 97, 105, 118, 262], "somewher": 18, "test_my_bug": 18, "funni": 18, "send": [18, 21, 24, 166, 179], "warmli": 18, "safe": [18, 135, 182, 187, 193, 249], "leav": [18, 22, 51, 189, 191, 195, 197], "unmodifi": 18, "0001": [18, 195], "0002": [18, 64, 195], "switch": [18, 36, 108, 187, 195, 238, 241, 242, 245, 254], "mode": [18, 100, 121, 166, 167, 176, 187, 189, 193, 194, 196, 197, 199, 200, 201, 202, 218, 219, 223, 229, 236, 239, 244, 245], "refresh": 18, "pointer": 18, "investig": [19, 91, 92, 113, 168, 170, 195, 196, 198, 201], "accident": [19, 237], "deliber": [19, 189], "satisfact": 19, "checklist": 20, "upload": [20, 238, 240, 255], "binari": [20, 30, 61, 98, 104, 106, 108, 110, 111, 112, 146, 166, 178, 189, 193, 194, 195, 196, 199, 200, 201, 223, 226, 227, 233, 234, 238, 241, 247, 253], "build": [20, 29, 36, 59, 81, 82, 83, 85, 86, 99, 108, 109, 142, 145, 167, 178, 180, 187, 194, 195, 200, 201, 202, 203, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251], "guidelin": [20, 21, 25, 179, 182, 239, 240, 242, 253], "futur": [20, 22, 193, 247, 249], "print": [20, 27, 31, 33, 34, 35, 36, 37, 40, 41, 43, 45, 46, 47, 50, 51, 53, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 92, 97, 103, 116, 117, 119, 121, 128, 130, 131, 135, 138, 139, 166, 187, 189, 193, 199, 201, 239, 240, 241, 248, 252, 254], "divis": [20, 195, 238, 241, 245], "xrang": 20, "string": [20, 99, 142, 145, 167, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 241, 242, 249, 250], "next": [20, 21, 22, 27, 29, 37, 43, 45, 48, 53, 57, 59, 61, 63, 66, 69, 76, 79, 81, 82, 83, 88, 90, 97, 98, 99, 128, 140, 142, 166, 189, 194, 195, 197, 241], "dictionari": [20, 99, 138, 187, 189, 190, 193, 194, 195, 197, 201, 233, 234, 241], "alwai": [21, 23, 40, 43, 47, 48, 53, 58, 60, 61, 65, 80, 135, 162, 178, 191, 195, 197, 199, 243, 249, 258], "seek": 21, "courag": 21, "scientist": [21, 37, 183], "level": [21, 34, 39, 57, 61, 62, 63, 99, 100, 101, 105, 107, 108, 109, 162, 168, 170, 176, 187, 189, 191, 193, 194, 195, 196, 197, 200, 201, 204, 237, 243, 247, 248], "share": [21, 24, 135, 179, 187, 200, 245, 257], "vision": [21, 71, 72, 187, 195], "willing": 21, "lead": [21, 53, 69, 107, 163, 189, 195, 258], "ian": [21, 24, 243], "bago": [21, 24, 236, 237, 238, 240, 243, 244, 245, 246], "stefan": [21, 24, 65, 88, 195, 201, 236, 243, 244, 245, 246, 247], "primari": [21, 195], "idea": [21, 29, 34, 36, 47, 57, 81, 82, 83, 100, 108, 162, 172, 176, 178, 180, 195, 245, 252, 257], "nipi": [21, 22, 166, 180, 189, 238, 243, 244, 249, 252, 257], "pitch": [21, 163, 189], "feedback": 21, "And": [21, 24, 69, 90, 99, 100, 107, 108, 109, 121, 135, 166, 168, 199, 201, 233, 234], "hope": [21, 166, 180], "enjoi": 21, "apologi": 21, "low": [21, 31, 48, 57, 58, 59, 60, 65, 69, 72, 89, 93, 116, 162, 172, 176, 187, 189, 191, 194, 195, 196, 197, 199], "nisext": 22, "understand": [22, 195, 260], "tester": 22, "makefil": [22, 236], "info": [22, 27, 55, 101, 167, 189, 193, 194, 201, 202, 236, 241, 242, 245, 250, 252], "sdist": [22, 254], "archiv": [22, 244], "get_info": [22, 202, 236, 237], "confirm": [22, 60, 62, 101], "temporari": [22, 166, 187, 192, 193, 195, 254], "past": [22, 165], "februari": [22, 183], "11th": 22, "bdist": 22, "egg": 22, "zip": [22, 61, 116, 117, 118, 119, 146], "hatch": 22, "unzip": 22, "whether": [22, 23, 53, 118, 166, 176, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 217, 219], "outstand": 22, "delai": [22, 193], "travi": [22, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250], "inde": 22, "doe": [22, 36, 48, 57, 58, 60, 61, 76, 80, 95, 97, 107, 116, 117, 162, 178, 187, 190, 191, 193, 194, 195, 196, 199, 201, 236, 237, 238, 240, 241, 244, 245, 247, 250, 252, 253, 254], "pr": [22, 50, 195, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "changelog": [22, 236, 245, 246, 249], "shortlog": 22, "tag": [22, 195, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "recogn": [22, 113, 114, 196, 201, 202, 225, 228], "opportun": [22, 162], "mailmap": 22, "duplic": [22, 189, 190, 195, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 251, 252, 253, 254, 255], "author": [22, 190, 196, 201, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "entri": [22, 65, 189, 195, 199, 236, 258], "copyright": [22, 187, 189, 190, 196, 201, 237, 238, 241, 245], "conf": [22, 189, 238], "licens": [22, 187, 190, 245], "realli": [22, 31, 50, 251], "autom": [22, 65, 90, 107, 108, 109, 177, 198, 238], "pyx": [22, 189, 238, 239, 244, 245, 252], "doctest": [22, 189, 237, 239, 243, 244], "doctest_extmod": 22, "buildbot": [22, 236, 238, 244, 245, 246, 250, 256], "haven": [22, 27, 97, 166], "yet": [22, 27, 44, 65, 146, 147, 150, 187], "long_descript": 22, "root": [22, 61, 76, 166, 195, 196, 259], "diffthi": 22, "valid": [22, 44, 47, 58, 61, 65, 70, 76, 84, 89, 92, 135, 146, 182, 187, 190, 193, 194, 195, 199, 236, 237, 245, 248, 249, 253], "green": [22, 32, 37, 43, 57, 61, 78, 103, 107, 108, 109, 114, 140, 169, 170, 195, 200, 247], "builder": 22, "bic": 22, "berkelei": [22, 24, 183], "edu": [22, 27, 32, 138, 189, 190, 199], "stdio": 22, "interfac": [22, 25, 69, 99, 138, 145, 176, 178, 182, 187, 189, 191, 195, 197, 201, 213, 238, 244, 248, 252, 253], "distclean": 22, "compileal": 22, "script": [22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 166, 167, 181, 201, 217, 227, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 263], "march": [22, 165, 183], "31": [22, 48, 54, 55, 57, 58, 59, 61, 71, 72, 79, 80, 84, 85, 86, 89, 105, 131, 132, 139, 167, 189, 195, 245], "could": [22, 43, 47, 48, 60, 61, 63, 95, 97, 105, 116, 118, 121, 187, 189, 195, 197, 201, 208, 222, 227, 237, 247, 249], "bdist_egg_test": 22, "slow": [22, 33, 57, 116, 162, 176, 241], "script_test": 22, "eventu": [22, 107], "hash": [22, 237, 241], "sys_vers": 22, "r266": 22, "84374": 22, "aug": [22, 46, 167], "00": [22, 28, 42, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 61, 67, 68, 70, 71, 72, 74, 77, 79, 80, 84, 85, 86, 89, 96, 106, 109, 120, 126, 132, 134, 135, 137, 139, 144], "51": [22, 48, 54, 55, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 101, 189, 243], "gcc": [22, 166], "appl": [22, 166, 189], "inc": 22, "5493": 22, "commit_sourc": 22, "substitut": [22, 189, 195, 196, 201], "np_version": 22, "commit_hash": 22, "25b4125": 22, "pkg_path": 22, "var": [22, 245, 249, 254], "jg": 22, "jgfz12zxhwgsfkd85xlplk": 22, "ti": 22, "tmpgpid3": 22, "pylib": 22, "sys_execut": 22, "framework": [22, 25, 36, 40, 54, 57, 58, 61, 62, 63, 67, 71, 91, 92, 101, 113, 116, 117, 121, 174, 182, 191, 195, 196, 197, 198, 200, 201, 207, 223, 228, 239, 240, 241, 242, 245, 247, 249, 262], "app": [22, 202], "maco": [22, 249], "sys_platform": 22, "darwin": 22, "__init__": [22, 118, 187, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 238], "pyc": [22, 244], "mb312": 22, "dev_tre": 22, "miss": [22, 236, 238, 239, 240, 241, 243, 245, 247, 248, 250, 252, 254], "bin": [22, 76, 93, 99, 142, 145, 166, 187, 189, 196, 201, 203], "dicomf": 22, "nifti1_diagnos": 22, "carri": [22, 71], "fxd": [22, 166], "build_ext": [22, 166], "inplac": [22, 32, 166, 191, 250, 255], "pass": [22, 57, 98, 99, 142, 187, 189, 193, 194, 195, 196, 198, 199, 200, 201, 212, 227, 242], "sv": [22, 189, 190], "moment": [22, 195], "lot": [22, 40, 58, 85, 98, 162, 166, 194, 195], "autodoc": 22, "trigger": [22, 189, 243], "permiss": [22, 189, 190, 196], "contact": 22, "bdist32": 22, "bdist64": 22, "mpkg": [22, 244], "wheel": [22, 141, 240, 241, 250, 252, 253, 254], "yml": [22, 238], "appveyor": [22, 182, 241, 248, 249], "present": [22, 47, 48, 53, 60, 71, 72, 135, 141, 166, 181, 194, 195, 248, 253], "macpython": 22, "privileg": 22, "trick": [22, 195, 201], "pypi": 22, "until": [22, 47, 64, 69, 84, 178, 187, 195, 196], "_version_extra": 22, "built": [22, 36, 64, 99, 187, 193, 194], "setuptool": [22, 166, 255], "intro": [22, 193, 241], "regist": [22, 57, 99, 100, 101, 102, 103, 107, 108, 109, 113, 138, 169, 170, 177, 187, 193, 201, 202, 208, 241, 242, 249], "gztar": 22, "pypirc": 22, "index": [22, 50, 58, 61, 69, 94, 96, 146, 187, 189, 195, 196, 197, 199, 200, 238, 243, 244, 247, 253, 254], "server": 22, "usernam": [22, 27], "password": 22, "login": 22, "necessari": [22, 30, 31, 33, 34, 36, 40, 46, 48, 50, 51, 53, 54, 56, 58, 61, 63, 67, 68, 79, 87, 88, 91, 92, 97, 101, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 135, 166, 187, 189, 190, 195, 199, 201, 250], "annot": [22, 32], "mainten": [22, 237, 250], "further": [22, 29, 43, 57, 58, 69, 81, 82, 83, 87, 88, 113, 187, 195, 196], "substanti": [22, 34, 45, 69, 76], "maint": [22, 236, 238, 244, 245, 247, 248, 249, 251, 253, 254], "dev": [22, 166, 187, 201, 204, 237, 238, 239, 241, 245, 246], "bump": [22, 107, 253], "_version_micro": 22, "restor": [22, 44, 64, 70, 146, 172, 182, 195, 201, 218, 219, 236, 238, 244, 245, 253], "_version_minor": 22, "seen": [22, 58, 61, 71, 105, 189, 195, 262], "spuriou": [22, 58, 69, 72, 102, 195], "By": [22, 27, 36, 51, 53, 59, 64, 69, 71, 72, 85, 101, 116, 117, 121, 135, 141, 145, 163, 170, 187, 189, 194, 195, 196, 197, 199, 200, 258, 262], "field": [22, 29, 57, 59, 69, 71, 81, 82, 83, 103, 107, 121, 135, 162, 176, 177, 178, 187, 189, 190, 194, 196, 197, 199, 200, 201, 204, 205, 220, 237, 238, 243, 258, 259], "exact": [22, 33, 65, 71, 107, 114, 166, 187, 189, 191, 195, 196, 197, 199, 252], "26": [22, 40, 43, 48, 54, 55, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 90, 96, 101, 107, 108, 109, 119, 177, 183, 195, 238, 243, 245], "ex": [22, 195, 199, 201, 231], "dist": [22, 103, 118, 187, 189, 196, 199, 201, 202, 208], "win32": [22, 245], "obvious": [22, 53], "admin": 22, "hand": [22, 45, 48, 183, 187], "python26": 22, "bdist_egg": 22, "bdist_wininst": 22, "dmg": [22, 244], "disk": [22, 27, 37, 138, 162, 189, 190, 193, 198, 200, 201, 206, 207, 253], "build_dmg": 22, "box": [22, 193, 196, 201, 227, 231, 240], "bdist_mpkg": 22, "reown_mpkg": 22, "announc": [22, 241], "With": [22, 27, 56, 58, 64, 101, 138, 187, 195, 196, 199, 241, 256], "fear": 22, "trembl": 22, "16": [23, 25, 48, 54, 55, 57, 58, 59, 61, 64, 67, 72, 79, 84, 85, 89, 121, 165, 182, 183, 194, 195, 199, 200, 236, 237, 238, 244, 245, 247, 255, 256], "advic": [23, 189, 241], "howto": 23, "pyport": 23, "python3port": 23, "ptgmedia": 23, "pearsoncmg": 23, "imprint_download": 23, "informit": 23, "promot": [23, 64, 189, 195, 196, 240, 245], "python2python3": 23, "pdf": [23, 48, 50, 51, 99, 163, 187, 195, 197, 201, 202, 203, 245, 254], "__future__": [23, 249], "print_funct": 23, "absolute_import": 23, "whenev": [23, 84, 89, 195], "integ": [23, 98, 99, 162, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 236, 238, 245, 249, 252], "everywher": [23, 58, 182, 195], "routin": [23, 63, 195, 199, 200, 254], "six": [23, 53, 67, 176, 187, 195, 244, 247], "configpars": 23, "python3": [23, 48, 55, 59, 62, 63, 139, 238, 239, 248], "therefor": [23, 32, 36, 40, 48, 50, 51, 53, 55, 56, 58, 80, 101, 102, 138, 139, 141, 162, 164, 178, 187, 189, 195, 262], "stick": [23, 60, 128, 146, 147, 184, 195, 197], "especi": [23, 41, 199], "small": [23, 31, 41, 46, 47, 53, 54, 57, 61, 63, 64, 65, 69, 71, 72, 76, 80, 85, 98, 100, 102, 105, 116, 117, 118, 119, 176, 185, 187, 189, 190, 191, 195, 196, 199, 200, 201, 221, 223, 228, 230, 236, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254], "wrap": [23, 53, 142, 145, 187, 194, 195, 199, 201, 210, 211, 212, 227, 229, 236, 246], "builtin": 23, "namespac": [23, 187, 189, 193, 194, 195, 196, 201, 249], "functool": 23, "str": [23, 121, 130, 131, 141, 167, 187, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "unicod": 23, "my_str": 23, "explicit": [23, 36, 243], "byte": [23, 189, 195, 197, 202, 243, 247], "fname": [23, 30, 92, 102, 103, 107, 110, 111, 112, 116, 117, 118, 119, 187, 189, 190, 193, 196, 200, 201], "rb": [23, 113, 196, 251], "rt": [23, 195, 201, 219], "stringio": 23, "bytesio": 23, "basestr": 23, "string_typ": 23, "isinst": 23, "a_vari": 23, "meanwhil": [23, 177], "gone": 23, "__next__": 23, "valueerror": [23, 189, 199, 236, 245, 247, 255], "err": 23, "has_kei": 23, "hello": 23, "item": [23, 189, 190, 193, 195, 197, 199, 253], "iteritem": 23, "team": [24, 183, 196], "individu": [24, 60, 90, 92, 101, 102, 189, 194, 195, 197, 199, 238, 254], "indiana": [24, 165], "IN": [24, 189, 195, 196, 201], "usa": 24, "washington": [24, 27, 32, 138, 165, 190], "birmingham": 24, "uk": [24, 189], "databrick": 24, "san": [24, 189, 201, 233], "francisco": [24, 201, 233], "ca": [24, 183, 195], "omar": [24, 236, 237, 238, 245, 246, 254], "googl": [24, 162, 165, 166, 182, 248], "marc": [24, 138, 236, 237, 238, 239, 240, 241, 245, 246, 247], "alexandr": [24, 138, 236, 237, 238, 239, 240, 241, 245, 246, 247], "c\u00f4t\u00e9": [24, 138, 195, 236, 237, 238, 239, 240, 241, 246, 247], "microsoft": 24, "research": [24, 54, 162, 180, 190, 249], "montreal": [24, 57, 183, 190, 195, 200, 201, 223], "qc": 24, "serg": [24, 138, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255], "koudoro": [24, 91, 92, 113, 138, 168, 196, 198, 200, 201, 207, 223, 228, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255], "gabriel": [24, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 249, 252, 253, 255], "girard": [24, 71, 72, 78, 84, 89, 178, 199, 201, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 249, 252, 253, 255], "swiss": 24, "feder": 24, "institut": [24, 31, 35, 165, 172, 190, 191, 241], "technologi": [24, 31, 35, 172, 191, 195, 256], "epfl": 24, "lausann": 24, "ch": 24, "cambridg": [24, 29, 60, 81, 82, 83, 167, 178, 189, 195, 201, 233], "matthieu": [24, 237, 238, 239, 244, 245], "dumont": [24, 237, 238, 239, 244, 245], "imeka": 24, "ranveer": [24, 238, 239], "aggarw": [24, 200, 201, 223, 238, 239], "hyderabad": 24, "telangana": 24, "india": 24, "wonder": [24, 139], "retir": [24, 236, 241], "formerli": 24, "mrc": 24, "cognit": 24, "scienc": [24, 48, 165, 189], "maxim": [24, 99, 100, 102, 105, 107, 121, 177, 187, 189, 191, 192, 195, 196, 201, 202, 204, 212, 216, 217, 222, 229, 230, 236, 243, 244, 245, 246], "california": [24, 201, 233], "christoph": [24, 189, 236, 237, 238, 240, 241, 242, 244, 245, 247, 249], "houd": [24, 199, 236, 237, 238, 240, 241, 242, 244, 245, 247, 249], "francoi": [24, 241, 242, 247, 248, 249, 253, 254, 255], "rh\u00e9ault": 24, "center": [24, 36, 47, 57, 60, 64, 72, 76, 95, 98, 99, 105, 107, 138, 140, 162, 172, 177, 178, 187, 189, 193, 195, 197, 199, 201, 203, 217, 233, 234, 236, 248], "umc": [24, 72], "utrecht": 24, "nl": [24, 195], "michael": [24, 236, 243, 245], "paquett": [24, 236, 243, 245], "max": [24, 27, 39, 43, 46, 53, 61, 80, 93, 99, 100, 107, 114, 139, 141, 167, 178, 189, 192, 194, 195, 196, 202, 243, 245, 258], "planck": 24, "leipzig": 24, "de": 24, "massachusett": 24, "ma": [24, 48, 95], "emanuel": [24, 243], "laboratori": 24, "nilab": 24, "trento": 24, "IT": 24, "yaroslav": [24, 238, 243, 255], "halchenco": 24, "pb": 24, "depart": [24, 165], "dartmouth": 24, "nh": 24, "emmanuel": [24, 244, 254], "caruy": [24, 64, 87, 195, 201, 244], "recherch": 24, "en": [24, 118, 163, 189, 195, 201, 241], "informatiqu": 24, "syst\u00e8m": 24, "al\u00e9atoir": 24, "irisa": 24, "renn": 24, "fr": [24, 195], "sylvain": [24, 191, 201, 212, 244], "merlet": [24, 67, 146, 147, 184, 195, 244], "inria": [24, 195], "sophia": [24, 195, 197], "antipoli": [24, 195, 197], "erick": 24, "ziegler": [24, 244], "universit\u00e9": 24, "li\u00e8g": 24, "kimberli": [24, 195, 244], "chan": [24, 45, 195, 244], "chantal": [24, 246], "tax": [24, 47, 48, 64, 195, 246], "cardiff": 24, "demian": [24, 190, 241, 245], "mauro": [24, 236, 240, 244, 245], "zucchelli": [24, 54, 195, 236, 240, 244, 245], "franc": 24, "rutger": [24, 58, 190, 195, 238, 239, 241], "gregori": [24, 237, 238, 245, 249, 250], "lee": [24, 195, 237, 238, 245, 249, 250], "cincinnati": 24, "children": [24, 69, 187, 189, 191, 195, 201, 202, 222, 229], "oh": 24, "endolith": [24, 243], "york": 24, "matthia": [24, 244, 245], "ekman": [24, 244, 245], "donder": 24, "behaviour": [24, 48, 116, 195, 199, 243], "nijmegen": 24, "andrew": [24, 168, 245], "lawrenc": [24, 245, 248], "kesshi": [24, 238, 240, 241, 242, 245], "jordan": [24, 93, 95, 199, 238, 240, 241, 242, 245], "maria": [24, 243], "luisa": [24, 243], "mandelli": [24, 243], "adam": [24, 194, 247], "rybinski": 24, "jagiellonian": 24, "krakow": 24, "qiyuan": [24, 246], "tian": [24, 246], "jon": [24, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 253, 254], "haitz": [24, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 253, 254], "legarreta": [24, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 253, 254], "gorro\u00f1o": [24, 239, 240, 241, 242, 247, 248, 249, 250, 251, 253, 254], "champalimaud": 24, "programm": 24, "centr": [24, 100, 162, 189, 190], "unknown": [24, 71, 195], "lisbon": 24, "pt": [24, 48, 97, 199, 247], "stephan": [24, 237, 238], "meester": [24, 71, 72, 237, 238], "eindhoven": 24, "himanshu": [24, 237], "mishra": [24, 237], "indian": 24, "karaghpur": 24, "alexand": [24, 54, 55, 60, 190, 195], "gauvin": [24, 236, 238], "oscar": [24, 236], "esteban": [24, 236], "bishakh": [24, 237, 238], "ghosh": [24, 237, 238], "durgapur": 24, "dimitri": [24, 236], "rozaki": [24, 236], "tomotech": 24, "athen": 24, "gr": [24, 48], "rohan": [24, 236], "prinja": [24, 236], "bombai": 24, "sagun": [24, 237], "pai": [24, 237], "vatsala": [24, 237], "swaroop": [24, 237], "mombai": 24, "shahnawaz": [24, 238], "ahm": [24, 238], "birla": 24, "pilani": 24, "goa": 24, "nil": [24, 238, 240], "goyett": [24, 238, 240], "scott": [24, 247], "trinkl": [24, 247], "chicago": 24, "il": 24, "kevin": [24, 247], "sitek": [24, 247], "mit": [24, 187], "mcgovern": 24, "derek": [24, 248, 249, 253], "pisner": [24, 248, 249, 253], "texa": 24, "austin": 24, "ross": [24, 248], "john": [24, 252], "hopkin": 24, "larson": [24, 248, 250, 253, 254], "jakob": [24, 241], "wasserth": [24, 241], "german": 24, "cancer": 24, "bramsh": [24, 241, 242, 249, 250, 251, 252, 255], "qamar": [24, 241, 242, 249, 250, 251, 252, 255], "chandio": [24, 91, 92, 103, 113, 168, 170, 187, 196, 198, 200, 201, 207, 208, 223, 228, 252], "javier": [24, 138, 241, 253, 255], "guaj": [24, 138, 200, 201, 223, 241, 253, 255], "shreya": [24, 57, 195, 240, 241, 242, 247, 248, 251, 252, 253, 254], "fadnavi": [24, 36, 57, 146, 147, 184, 191, 194, 195, 200, 201, 213, 214, 223, 240, 241, 242, 247, 248, 251, 252, 253, 254], "matt": [24, 99, 100, 187, 239, 241, 247], "cieslak": [24, 54, 107, 190, 241, 247], "pennsylvania": 24, "sven": [24, 238], "dorkenwald": [24, 238], "princeton": 24, "boundless": 24, "heart": [24, 100], "everyon": 24, "anywher": [24, 145, 195], "world": [24, 30, 39, 41, 53, 76, 97, 110, 111, 112, 138, 139, 162, 187, 193, 196, 199, 200], "join": [24, 27, 54, 55, 76, 90, 99, 100, 103, 107, 141, 244], "area": [24, 29, 46, 53, 57, 72, 81, 82, 83, 88, 89, 103, 113, 138, 141, 168, 187, 189, 193, 194, 195, 196, 199, 201, 223], "focu": [24, 57, 69, 76], "mission": 25, "preprocess": [25, 39, 54, 118, 175, 190], "contextu": [25, 72, 74, 182, 201, 237, 238], "enhanc": [25, 72, 74, 78, 115, 120, 172, 182, 237, 238, 245, 248], "motion": [25, 38, 42, 44, 69, 70, 71, 146, 174, 182, 187, 189, 190, 195, 201, 220, 253], "gibb": [25, 38, 42, 48, 146, 174, 182, 201, 202, 222, 247, 248, 249, 250, 252, 255], "unring": [25, 48, 174, 182], "analyt": [25, 33, 44, 56, 68, 70, 71, 91, 92, 113, 146, 174, 176, 191, 192, 195, 196, 198, 201, 207, 228, 249, 262], "buan": [25, 94, 96, 103, 146, 174, 182, 187, 200, 201, 223, 249, 250, 251], "question": [25, 43, 90, 98, 135, 179, 199, 240, 249, 255, 257], "theori": [25, 34, 36, 51, 68, 189, 191, 195, 196, 201, 210, 211, 254], "coordin": [25, 27, 30, 37, 39, 41, 53, 57, 60, 64, 66, 72, 76, 78, 90, 97, 98, 110, 111, 112, 116, 127, 128, 138, 139, 162, 164, 165, 167, 176, 182, 185, 187, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 223, 236, 237, 247, 252, 254, 261, 262], "__config__": [25, 202], "boot": [25, 185, 202, 238], "nn": [25, 182, 195, 202, 253], "dipy_align_affin": [25, 177, 235], "dipy_align_syn": [25, 177, 235, 250], "dipy_apply_transform": [25, 177, 235], "dipy_buan_lmm": [25, 168, 235], "dipy_buan_profil": [25, 168, 235], "dipy_bundlewarp": [25, 170, 235], "dipy_correct_mot": [25, 175, 235], "dipy_denoise_lpca": [25, 172, 235], "dipy_denoise_mppca": [25, 172, 235], "dipy_denoise_patch2self": [25, 235], "dipy_evac_plu": [25, 235], "dipy_fetch": [25, 167, 171, 235, 248], "dipy_fit_csa": [25, 167, 176, 235, 247], "dipy_fit_csd": [25, 176, 235, 247], "dipy_fit_dki": [25, 176, 235], "dipy_fit_dti": [25, 167, 176, 235, 247, 254], "dipy_fit_ivim": [25, 176, 235], "dipy_fit_mapmri": [25, 176, 235], "dipy_gibbs_ring": [25, 173, 235], "dipy_horizon": [25, 167, 168, 169, 170, 235, 247, 250, 253], "dipy_info": [25, 167, 235], "dipy_labelsbundl": [25, 169, 235], "dipy_mask": [25, 167, 178, 235], "dipy_median_otsu": [25, 167, 176, 235], "dipy_recobundl": [25, 169, 235], "dipy_reslic": [25, 235], "dipy_slr": [25, 169, 177, 182, 235], "dipy_snr_in_cc": [25, 235], "dipy_split": [25, 235], "dipy_track_pft": [25, 178, 235], "dipy_": [27, 30, 31, 37, 39, 45, 48, 53, 57, 60, 66, 72, 97, 98, 110, 111, 112, 118, 127, 128, 135, 138, 142, 145], "publicli": [27, 190, 243], "acquir": [27, 31, 32, 33, 35, 36, 39, 40, 47, 48, 49, 54, 55, 57, 60, 62, 63, 67, 127, 162, 173, 175, 176, 189, 190, 191, 195, 199, 201, 222], "fetch_sherbrooke_3shel": [27, 202], "hardi193": [27, 172, 175], "nii": [27, 30, 31, 33, 34, 35, 36, 39, 40, 41, 43, 53, 54, 55, 90, 95, 98, 99, 100, 110, 111, 112, 135, 141, 142, 145, 162, 165, 167, 168, 172, 173, 175, 176, 177, 178, 201, 213, 223, 231, 236, 240, 249, 254], "gz": [27, 30, 31, 33, 34, 35, 36, 39, 40, 41, 43, 53, 54, 55, 90, 95, 98, 99, 100, 110, 111, 112, 135, 138, 141, 142, 145, 165, 167, 168, 172, 173, 175, 176, 177, 178, 201, 213, 223, 231, 249, 254], "digit": [27, 32, 138, 190, 199], "researchwork": [27, 32, 138, 190], "bitstream": [27, 48, 138], "1773": [27, 32, 48, 54, 138, 190], "38475": 27, "0b735e8f16695a37bfbd66aab136eb66": 27, "bval": [27, 29, 31, 32, 33, 34, 36, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 99, 107, 127, 128, 130, 131, 140, 165, 167, 172, 175, 176, 187, 189, 190, 191, 193, 195, 197, 201, 202, 213, 215, 220, 221, 224, 231, 236, 243, 250, 255, 258], "e9b9bb56252503ea49d31fb30a0ac637": 27, "bvec": [27, 29, 31, 33, 34, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 99, 107, 127, 128, 130, 131, 140, 165, 167, 172, 175, 176, 187, 189, 190, 191, 193, 195, 197, 199, 201, 202, 209, 210, 215, 216, 217, 219, 221, 224, 231, 240, 245, 247, 249, 258], "0c83f7e8b917cd677ad58a078658ebb7": 27, "skoudoro": [27, 48, 49, 50, 57, 59, 64, 69, 103, 138], "expandus": [27, 141], "dname": 27, "fdwi": [27, 165], "fbval": [27, 48, 49, 50, 51, 56, 57, 58, 59, 60, 62, 67, 68, 127, 165, 187, 190, 193, 197], "fbvec": [27, 48, 49, 50, 51, 56, 57, 58, 59, 60, 62, 67, 68, 127, 165, 187, 190, 193, 197], "nibabel_": [27, 53], "enabl": [27, 29, 37, 46, 47, 52, 53, 58, 62, 63, 64, 65, 66, 67, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 116, 117, 118, 119, 123, 124, 125, 128, 166, 181, 187, 195, 200, 201, 203, 223, 228, 239, 248], "load_nifti": [27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 56, 58, 59, 60, 62, 64, 65, 67, 68, 69, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 98, 99, 100, 107, 109, 110, 111, 112, 130, 131, 140, 141, 165, 187, 190, 202], "return_img": [27, 29, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 98, 99, 100, 107, 140, 193], "s0": [27, 45, 47, 52, 57, 60, 64, 65, 76, 123, 124, 125, 127, 128, 195, 197, 199, 201, 220, 238, 244], "shape": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 64, 66, 67, 68, 71, 72, 76, 81, 82, 83, 84, 87, 89, 91, 94, 96, 97, 98, 99, 100, 102, 103, 105, 107, 109, 110, 111, 112, 113, 116, 118, 121, 128, 138, 139, 141, 146, 164, 170, 174, 177, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 217, 219, 228, 236, 237, 238, 243, 245, 247, 249, 250, 253, 254], "128": [27, 31, 57, 58, 59, 119, 121, 139, 194, 243, 253], "get_zoom": [27, 107], "quickli": [27, 195, 242], "matplotlib_": [27, 53], "middl": [27, 30, 31, 32, 33, 34, 36, 52, 61, 97, 99, 109, 110, 111, 112, 116, 123, 124, 125, 141, 190, 199, 200], "axial": [27, 31, 34, 35, 40, 46, 47, 48, 53, 54, 59, 60, 64, 65, 72, 98, 121, 141, 182, 195, 199, 200, 201, 218, 219], "slice": [27, 29, 30, 31, 32, 34, 35, 36, 40, 43, 46, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 68, 69, 72, 81, 82, 83, 87, 93, 98, 100, 108, 109, 110, 111, 112, 121, 136, 137, 138, 146, 165, 167, 182, 187, 190, 191, 193, 195, 196, 201, 202, 222, 238, 240, 241, 247, 249, 253, 255], "pyplot": [27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 45, 49, 50, 51, 54, 55, 57, 59, 60, 61, 62, 64, 68, 69, 76, 81, 82, 83, 87, 89, 90, 93, 95, 97, 98, 100, 105, 110, 111, 112, 121, 127, 128, 190], "plt": [27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 45, 49, 50, 51, 54, 55, 57, 59, 60, 61, 62, 64, 68, 69, 76, 81, 82, 83, 87, 89, 90, 93, 97, 98, 100, 105, 110, 111, 112, 121, 127, 128], "axial_middl": [27, 31, 35], "subplot": [27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 45, 49, 50, 55, 57, 60, 61, 62, 64, 69, 76, 81, 82, 83, 87, 89, 90, 93, 97, 100, 105, 110, 111, 112], "set_axis_off": [27, 29, 30, 31, 33, 40, 50, 51, 54, 68, 81, 82, 83, 87, 110, 111, 112], "imshow": [27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 49, 50, 51, 53, 54, 55, 57, 60, 61, 62, 64, 68, 81, 82, 83, 87, 89, 98, 100, 105, 110, 111, 112, 121, 200], "cmap": [27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 49, 54, 55, 57, 58, 59, 60, 61, 62, 76, 81, 82, 83, 87, 89, 95, 98, 100, 110, 111, 112, 114, 118, 121, 140, 200], "savefig": [27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 45, 49, 50, 51, 54, 55, 57, 59, 60, 61, 64, 68, 69, 76, 81, 82, 83, 87, 89, 90, 93, 95, 97, 98, 100, 105, 110, 111, 112, 121, 127, 128], "png": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 138, 139, 140, 141, 200, 201, 242, 249], "bbox_inch": [27, 31, 33, 35, 40, 43, 50, 54, 100, 121], "tight": [27, 31, 33, 35, 40, 43, 50, 54, 100, 121], "read_bvals_bvec": [27, 29, 31, 33, 34, 39, 43, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 107, 127, 130, 131, 140, 165, 197, 202, 236, 240, 244, 250], "gradient_t": [27, 29, 31, 33, 34, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 107, 123, 124, 125, 127, 128, 130, 131, 140, 165, 195, 197, 202, 240], "gtab": [27, 29, 31, 32, 33, 34, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 99, 107, 123, 124, 125, 127, 128, 130, 131, 140, 165, 187, 189, 190, 191, 194, 195, 197, 199, 241, 250, 252, 255], "min": [27, 43, 61, 64, 79, 85, 86, 93, 102, 114, 139, 141, 167, 187, 189, 192, 194, 195, 196, 202, 253], "000000": [27, 51, 68, 135], "964050": 27, "999992": 27, "999979": 27, "00504001": 27, "00402795": 27, "00398794": 27, "0257055": 27, "653861": 27, "756178": 27, "589518": 27, "769236": 27, "246462": 27, "235785": 27, "529095": 27, "815147": 27, "893578": 27, "263559": 27, "363394": 27, "79784": 27, "133726": 27, "587851": 27, "232937": 27, "931884": 27, "278087": 27, "93672": 27, "144139": 27, "31903": 27, "b0s_mask": [27, 45, 76, 107, 189, 195, 202], "fun": [27, 189], "save_nifti": [27, 30, 31, 35, 36, 39, 40, 41, 43, 53, 95, 98, 107, 110, 111, 112, 165, 202], "hardi193_s0": 27, "example_reconst_dti": [27, 48, 55, 147], "total": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 167, 189, 194, 195, 197, 199, 201, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "513": [27, 28, 48, 54, 59, 245], "quick_start": [27, 28, 241], "jupyt": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 255], "notebook": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 238, 240, 247, 249, 255], "ipynb": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145], "galleri": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 135, 138, 139, 140, 141, 142, 145, 146, 165, 182, 183, 238, 244, 247, 255, 256], "22": [28, 32, 48, 54, 57, 58, 59, 61, 67, 72, 80, 84, 86, 89, 99, 100, 183, 187, 191, 195, 243, 246, 248, 253], "458": [28, 48, 54, 57, 58, 59, 245], "examples_built_01_quick_start": 28, "tracking_introduction_eudx": [28, 29, 81], "945": [28, 29, 59, 238], "mb": [28, 42, 70, 74, 77, 96, 106, 120, 126, 132, 134, 137, 144, 190], "02": [28, 48, 54, 55, 57, 58, 59, 61, 62, 63, 70, 71, 72, 79, 80, 84, 85, 86, 89, 109, 120, 126, 135, 195, 237, 238, 243, 250], "approach": [29, 36, 40, 49, 57, 58, 61, 64, 69, 81, 82, 83, 85, 105, 107, 108, 109, 178, 191, 195, 196, 198, 201, 219], "direction": [29, 61, 81, 82, 83, 178], "tract": [29, 43, 49, 53, 81, 82, 83, 94, 96, 103, 113, 114, 146, 168, 170, 178, 187, 195, 196, 198, 200, 201, 208, 223, 247, 249, 255], "pathwai": [29, 80, 81, 82, 83, 85, 91, 92, 93, 113, 168, 178, 196, 198, 199, 201, 207, 228], "known": [29, 45, 47, 55, 60, 65, 72, 81, 82, 83, 116, 118, 119, 165, 178, 190, 195, 201, 218, 219], "along": [29, 48, 53, 58, 71, 72, 78, 81, 82, 83, 85, 90, 95, 98, 103, 142, 145, 162, 165, 169, 176, 178, 187, 189, 191, 193, 195, 198, 199, 200, 201, 250], "wide": [29, 81, 82, 83, 118, 178, 258], "identifi": [29, 43, 69, 72, 81, 82, 83, 84, 87, 98, 138, 178, 187, 189, 190, 191, 193, 194, 195, 196, 199, 201, 224, 233, 258], "begin": [29, 37, 64, 80, 81, 82, 83, 84, 85, 88, 89, 98, 116, 118, 128, 163, 176, 178, 195, 201, 249, 257, 258, 259, 262], "internet": [29, 65, 81, 82, 83], "get_fnam": [29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 121, 123, 124, 125, 127, 130, 131, 140, 187, 194, 196, 197, 202, 248], "load_nifti_data": [29, 32, 57, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 107, 108, 121, 140, 141, 202, 248], "hardi_fnam": [29, 36, 43, 45, 46, 47, 53, 64, 65, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 107, 109, 130, 131, 140], "hardi_bval_fnam": [29, 36, 43, 45, 46, 47, 53, 64, 65, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 107, 109, 130, 131, 140], "hardi_bvec_fnam": [29, 36, 43, 45, 46, 47, 53, 64, 65, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 107, 109, 130, 131, 140], "label_fnam": [29, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 140], "hardi_img": [29, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 98, 107, 140], "restrict": [29, 48, 49, 58, 61, 63, 72, 81, 82, 83, 85, 95, 135, 178, 193, 195, 197, 256], "white_matt": [29, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 93, 95, 98, 140], "constant": [29, 44, 57, 67, 70, 72, 80, 81, 82, 83, 100, 130, 146, 162, 167, 174, 187, 195, 197, 201, 216, 229, 244, 258], "solid": [29, 44, 70, 72, 80, 81, 82, 83, 130, 146, 167, 174, 189, 195, 197, 201, 216], "shm": [29, 46, 59, 66, 71, 72, 79, 80, 81, 82, 83, 85, 86, 93, 95, 98, 130, 140, 201, 202, 236, 241, 243, 244, 245, 249, 262], "csaodfmodel": [29, 46, 72, 79, 80, 81, 82, 83, 85, 86, 93, 95, 98, 130, 140, 202], "respons": [29, 44, 45, 59, 65, 70, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 127, 131, 146, 176, 182, 190, 195, 199, 201, 217, 236, 244, 245, 246, 247, 249, 250, 254], "ratio": [29, 43, 45, 47, 58, 64, 65, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 131, 162, 187, 194, 195, 196, 197, 201, 231], "roi_radii": [29, 45, 47, 59, 64, 65, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 131, 195, 201, 217], "fa_thr": [29, 45, 47, 64, 65, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 131, 176, 195, 201, 217], "csa_model": [29, 72, 79, 80, 81, 82, 83, 85, 86, 93, 95, 140], "sh_order": [29, 47, 54, 59, 64, 66, 71, 72, 79, 80, 81, 82, 83, 85, 86, 93, 95, 140, 176, 192, 194, 195, 201, 216, 217], "csa_peak": [29, 72, 81, 82, 83, 93, 95, 140, 168], "relative_peak_threshold": [29, 46, 47, 56, 59, 64, 65, 72, 81, 82, 83, 88, 93, 95, 98, 130, 131, 140, 192, 201, 244], "min_separation_angl": [29, 46, 47, 56, 59, 64, 65, 72, 81, 82, 83, 88, 93, 95, 98, 130, 131, 140, 192, 201], "qualiti": [29, 31, 32, 43, 54, 81, 82, 83, 92, 116, 177, 187, 190, 193, 195, 196, 200, 201, 203, 241, 242, 247], "basi": [29, 54, 58, 61, 66, 67, 81, 82, 83, 85, 176, 178, 182, 189, 190, 192, 194, 195, 201, 202, 221, 241, 243, 244, 247, 249, 250, 252, 262], "has_furi": [29, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 107], "peak_slic": [29, 47, 64, 65, 81, 82, 83, 241], "peak_dir": [29, 47, 64, 65, 81, 82, 83, 193], "peak_valu": [29, 46, 47, 56, 64, 65, 81, 82, 83, 192, 202, 245], "record": [29, 37, 45, 46, 47, 52, 53, 54, 58, 59, 64, 65, 66, 67, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 102, 107, 113, 114, 116, 117, 118, 119, 123, 124, 125, 128, 138, 139, 140, 141, 194, 196, 200, 240, 241, 242, 245, 247, 249, 255], "out_path": [29, 37, 46, 47, 52, 53, 54, 58, 59, 64, 65, 66, 67, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 102, 107, 113, 114, 116, 117, 118, 119, 123, 124, 125, 128, 138, 139, 140, 141], "csa_direction_field": [29, 81, 82, 83], "signific": [29, 58, 72, 81, 82, 83, 168, 195, 199], "gfa": [29, 46, 50, 56, 72, 79, 80, 81, 82, 83, 85, 86, 87, 88, 93, 95, 130, 140, 178, 192, 198, 201, 202, 243, 244, 245, 249], "25": [29, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 97, 105, 108, 113, 130, 131, 140, 141, 177, 178, 187, 190, 192, 194, 195, 197, 199, 201, 243], "sli": [29, 30, 33, 34, 36, 81, 82, 83, 87, 110, 111, 112], "gfa_tracking_mask": [29, 81, 82, 83], "deriv": [29, 32, 48, 49, 54, 55, 63, 69, 81, 82, 83, 84, 162, 168, 173, 176, 187, 189, 190, 195, 196, 197, 199, 200, 201, 204, 218, 263], "specifi": [29, 32, 57, 59, 63, 64, 81, 82, 83, 98, 99, 100, 107, 135, 139, 142, 162, 166, 168, 171, 172, 173, 175, 176, 177, 178, 187, 189, 190, 194, 195, 196, 197, 199, 200, 201, 206, 207, 212, 213, 218, 219, 220, 221, 227, 238, 247, 258, 263], "chosen": [29, 61, 66, 72, 81, 82, 83, 85, 178, 195, 199, 259], "interest": [29, 37, 40, 43, 48, 49, 69, 72, 81, 82, 83, 95, 98, 100, 107, 128, 172, 176, 190, 195, 199, 250], "grid": [29, 46, 47, 58, 81, 82, 83, 99, 107, 109, 130, 135, 139, 141, 187, 195, 197, 199, 200, 238, 245, 253], "sagitt": [29, 43, 72, 81, 82, 83, 98, 141, 200], "seed_mask": [29, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 93, 95, 140, 167], "densiti": [29, 48, 53, 64, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 107, 135, 140, 146, 176, 187, 195, 197, 199, 201, 233, 234, 245, 260], "togeth": [29, 33, 52, 58, 59, 61, 81, 82, 83, 98, 100, 102, 123, 124, 125, 138, 142, 163, 187, 189, 193, 195, 196, 199, 201, 247, 250], "garyfallidis12": [29, 81, 82, 83, 90, 101, 116, 117, 118, 119, 167, 178, 196, 199], "happen": [29, 58, 81, 82, 83, 105, 139, 140, 166, 189, 201, 247], "streamlines_gener": [29, 72, 81, 82, 83], "step_siz": [29, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 98, 140, 189, 199, 201, 233, 234], "colormap": [29, 46, 47, 52, 53, 54, 57, 58, 59, 64, 65, 67, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 98, 116, 117, 118, 119, 123, 124, 125, 128, 140, 195, 200, 201, 223, 238, 240, 241, 245, 247], "prepar": [29, 53, 57, 81, 82, 83, 86, 99, 187, 189, 194, 195], "line_color": [29, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 98, 140], "streamlines_actor": [29, 81, 82, 83, 87, 88, 95, 140], "3d": [29, 31, 33, 34, 35, 36, 44, 45, 48, 59, 60, 69, 70, 71, 76, 78, 81, 82, 83, 97, 100, 102, 104, 106, 127, 138, 140, 141, 146, 162, 165, 172, 176, 187, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 222, 232, 236, 237, 241, 249, 253, 254], "static": [29, 81, 82, 83, 99, 100, 102, 103, 107, 108, 109, 169, 170, 177, 187, 189, 193, 195, 200, 201, 203, 204, 205, 208, 230], "tractogram_eudx": [29, 81, 82, 83], "determinist": [29, 75, 77, 79, 81, 82, 83, 85, 89, 146, 174, 182, 195, 201, 233, 241, 245, 253, 256], "stateful_tractogram": [29, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 103, 107, 113, 135, 202], "sft": [29, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 107, 193, 248, 249, 254, 255], "rasmm": [29, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 103, 107, 113, 135, 193, 196, 202], "toward": [29, 58, 81, 82, 83, 84, 89, 99, 109, 163, 167, 178, 187, 189, 195, 199, 200, 201, 263], "accur": [29, 48, 53, 64, 81, 82, 83, 87, 99, 167, 176, 178, 189, 191, 194, 195, 199, 201, 210, 211, 254], "phd": [29, 56, 79, 81, 82, 83, 167, 178, 195, 197, 201, 233], "thesi": [29, 32, 34, 48, 56, 60, 79, 81, 82, 83, 167, 178, 191, 195, 197, 201, 222, 233], "extract": [30, 33, 36, 48, 49, 55, 60, 64, 65, 78, 88, 92, 94, 96, 110, 111, 112, 114, 115, 116, 118, 120, 146, 168, 169, 187, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 214, 225, 232, 237, 238, 241, 243, 244, 245, 247, 250], "compani": [30, 110, 111, 112], "tesla": [30, 110, 111, 112, 190], "data_fnam": [30, 110, 111, 112], "squeez": [30, 99, 100, 109, 110, 111, 112, 195, 246], "fine": [30, 100, 105, 110, 111, 112], "tune": [30, 110, 111, 112], "num_pass": [30, 110, 111, 112], "yield": [30, 40, 110, 111, 112], "incorrect": [30, 110, 111, 112, 238, 251], "b0_mask": [30, 43, 59, 64, 71, 108, 110, 111, 112], "numpass": [30, 32, 34, 46, 48, 49, 53, 59, 60, 64, 107, 108, 109, 110, 111, 112, 130, 131, 167, 196, 201, 227], "matrix": [30, 32, 34, 36, 39, 41, 48, 53, 60, 64, 65, 76, 98, 102, 109, 110, 111, 112, 114, 135, 139, 141, 163, 164, 167, 172, 176, 177, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 211, 236, 237, 238, 241, 242, 245, 247, 248, 249, 250, 251, 253], "float32": [30, 53, 95, 105, 108, 110, 111, 112, 119, 192, 193, 252], "se_1": [30, 110, 111, 112], "5t": [30, 31, 110, 111, 112, 190, 196], "_binary_mask": [30, 110, 111, 112], "astyp": [30, 31, 35, 40, 43, 51, 53, 95, 98, 100, 105, 110, 111, 112, 195], "_mask": [30, 110, 111, 112], "view": [30, 95, 110, 111, 112, 139, 140, 189, 195, 197, 200, 236, 237, 247], "histeq": [30, 110, 111, 112, 202], "applic": [30, 32, 34, 40, 48, 53, 58, 60, 64, 71, 72, 97, 110, 111, 112, 130, 166, 187, 189, 191, 193, 194, 195, 196, 201, 222], "crop": [30, 53, 110, 111, 112, 201, 202, 227], "largest": [30, 110, 111, 112, 187, 192, 195, 201], "significantli": [30, 90, 110, 111, 112], "smaller": [30, 31, 47, 57, 58, 61, 63, 91, 110, 111, 112, 113, 127, 162, 187, 189, 191, 195, 196, 199, 200, 201, 210, 223], "auto": [30, 59, 110, 111, 112, 113, 189, 194, 201, 227, 238, 245, 247, 249, 255], "autocrop": [30, 32, 34, 46, 48, 49, 53, 60, 110, 111, 112, 130, 131, 196, 201, 227], "b0_mask_crop": [30, 110, 111, 112], "mask_crop": [30, 110, 111, 112], "_binary_mask_crop": [30, 110, 111, 112], "_mask_crop": [30, 110, 111, 112], "487": [30, 245], "brain_extraction_dwi": [30, 42, 110], "coupe11": [31, 35, 172, 191], "improv": [31, 34, 35, 59, 63, 64, 71, 72, 76, 84, 89, 103, 107, 170, 177, 182, 187, 189, 195, 196, 201, 236, 238, 239, 240, 243, 245, 247, 248, 249, 250, 251, 253, 254], "nlmean": [31, 38, 42, 60, 142, 146, 174, 201, 202, 212, 236, 237, 238, 245, 252], "degre": [31, 48, 52, 53, 60, 99, 123, 124, 125, 163, 176, 187, 189, 190, 195, 196, 197, 199, 262], "sharp": [31, 195], "non_local_mean": [31, 35, 202, 247], "radii": [31, 47, 189, 195, 197, 201, 217, 241, 249], "involv": [31, 33, 47, 48, 59, 172, 176, 177, 187, 201, 258], "wavelet": [31, 202], "decomposit": [31, 191, 195, 201, 210, 211, 253, 258, 259], "noisi": [31, 33, 43, 58, 69, 71, 172, 176, 191, 194, 195, 196, 197], "frequenc": [31, 32, 48], "compon": [31, 33, 34, 48, 55, 57, 58, 64, 88, 127, 163, 172, 187, 191, 193, 195, 197, 199, 201, 210, 211, 238, 240, 241, 247], "larger": [31, 34, 47, 49, 64, 71, 85, 102, 105, 113, 119, 127, 166, 174, 187, 189, 192, 194, 195, 197, 199, 201, 204, 236, 240], "preserv": [31, 34, 36, 72, 73, 74, 146, 164, 170, 189, 199], "noise_estim": [31, 35, 40, 69, 202], "estimate_sigma": [31, 35, 69, 202, 236, 245], "adaptive_soft_match": [31, 202, 255], "dwi_fnam": [31, 33, 34, 39, 40], "dwi_bval_fnam": [31, 33, 34, 39, 40], "dwi_bvec_fnam": [31, 33, 34, 39, 40], "deviat": [31, 35, 40, 43, 61, 69, 72, 108, 127, 172, 187, 191, 195, 197, 199, 200, 201, 204, 210, 211, 245, 253], "nois": [31, 35, 36, 38, 42, 43, 48, 60, 63, 64, 69, 71, 85, 87, 127, 128, 146, 172, 182, 190, 191, 194, 195, 197, 199, 201, 210, 211, 212, 218, 219, 231, 236, 239, 243, 245, 247, 252], "coil": [31, 35, 40, 64, 191, 195, 201], "sigma": [31, 33, 34, 35, 40, 43, 48, 49, 69, 99, 100, 105, 107, 172, 187, 191, 195, 197, 201, 203, 210, 211, 212, 218, 219, 238, 253], "sharper": [31, 52, 123, 124, 125, 195], "den_smal": 31, "patch_radiu": [31, 33, 34, 35, 59, 172, 191, 201, 210, 211, 212, 249], "block_radiu": [31, 35, 191, 201, 212], "rician": [31, 33, 35, 40, 64, 71, 87, 127, 128, 190, 191, 195, 197, 201, 212], "den_larg": 31, "empir": [31, 38, 42, 146, 199], "varianc": [31, 33, 34, 53, 58, 61, 172, 176, 187, 195, 201, 218, 219, 245, 247, 252], "itself": [31, 61, 63, 118, 166, 168, 190, 194, 195], "den_fin": 31, "5976557731628418": 31, "procedur": [31, 32, 48, 55, 60, 61, 72, 76, 127, 173, 175, 176, 187, 189, 195, 197, 201, 216, 217, 238, 240], "residu": [31, 32, 33, 34, 36, 79, 182, 187, 195, 253], "final_output": 31, "ab": [31, 32, 35, 55, 100, 189, 195, 243], "fig": [31, 32, 33, 35, 40, 43, 45, 51, 54, 57, 61, 62, 64, 68, 76, 89, 90, 93, 95, 97, 100, 105, 121, 195], "set_titl": [31, 32, 33, 34, 35, 36, 40, 55, 57, 60, 61, 62, 64, 100, 105, 121], "denoised_ascm": 31, "natur": [31, 40, 48, 76, 178, 180, 187, 189, 193, 194, 195, 196, 199, 258, 259], "dictat": [31, 63], "entir": [31, 33, 34, 36, 57, 58, 61, 80, 88, 113, 139, 166, 178, 187, 193, 195, 196, 199, 201, 248], "radiu": [31, 33, 108, 114, 172, 187, 189, 191, 195, 196, 197, 199, 201, 204, 210, 211, 227, 252, 253, 258, 263], "ascm_comparison": 31, "raw": [31, 46, 50, 51, 53, 56, 68, 69, 71, 162, 190, 194, 245], "outperform": 31, "suppress": [31, 34, 38, 42, 48, 55, 58, 146, 172, 174, 191, 238, 239, 240, 241], "pierrick": [31, 35, 172, 191], "coup": [31, 33, 34, 35, 36, 172, 191, 196, 201, 210], "jose": [31, 35, 172, 189, 191], "manjon": [31, 33, 34, 35, 36, 172, 191, 201, 210], "montserrat": [31, 35, 172, 191], "robl": [31, 35, 172, 191], "loui": [31, 35, 172, 190, 191], "multiresolut": [31, 35, 172, 191], "filter": [31, 33, 35, 36, 60, 64, 75, 76, 77, 98, 105, 107, 113, 146, 172, 174, 182, 187, 189, 191, 192, 194, 195, 196, 199, 201, 212, 227, 234, 238, 240, 253], "iet": [31, 35, 172, 191], "engin": [31, 35, 48, 64, 165, 172, 191, 195], "00645538": 31, "101": [31, 48, 54, 57, 58, 119, 190, 243], "denoise_ascm": [31, 42], "magnet": [32, 34, 35, 36, 37, 46, 48, 49, 50, 51, 54, 57, 59, 60, 64, 68, 162, 167, 172, 173, 176, 190, 191, 194, 195, 196, 197, 200, 201, 210, 211, 218, 219, 223, 260], "fourier": [32, 58, 173, 195, 258], "coeffici": [32, 35, 38, 42, 49, 54, 57, 59, 61, 66, 68, 71, 146, 173, 176, 182, 187, 189, 190, 191, 192, 194, 195, 197, 200, 201, 216, 217, 244, 262], "finit": [32, 61, 173, 189], "corrupt": [32, 48, 55, 58, 60, 69, 173, 195], "artefact": [32, 36, 48, 55, 60, 173, 175, 191, 195, 248], "manifest": [32, 173, 245], "intens": [32, 40, 127, 173, 187, 191, 194, 195, 196, 199, 200, 201, 213, 238], "adjac": [32, 64, 118, 173, 195, 196], "edg": [32, 48, 166, 173, 189, 190, 195, 199, 202, 243, 245], "although": [32, 48, 58, 60, 61, 87, 102, 173, 194, 195, 199], "context": [32, 95, 118, 121, 173, 194], "magnifi": [32, 173], "adapt": [32, 35, 38, 42, 55, 57, 64, 71, 72, 87, 107, 146, 167, 172, 176, 191, 195, 200, 201, 212, 223, 238, 240, 249], "sub": [32, 45, 54, 55, 88, 99, 142, 187, 189, 193, 194, 195, 196, 201, 241], "found": [32, 58, 61, 63, 72, 84, 93, 95, 99, 142, 145, 178, 182, 189, 191, 192, 195, 199, 201, 212, 213, 227, 236, 238, 255, 257, 258, 259], "chapter": 32, "gibbs_remov": [32, 202, 250, 255], "t1_fname": [32, 35, 48, 49, 58, 59, 60, 72, 76, 87, 88, 95, 98, 109, 121], "t1_denoised_fnam": 32, "ap_fnam": 32, "axial_slic": [32, 49, 60], "88": [32, 46, 48, 53, 54, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 98, 101, 119, 195, 243], "t1_slice": 32, "figsiz": [32, 34, 36, 49, 51, 54, 55, 60, 61, 62, 64, 68, 105], "subplots_adjust": [32, 34, 36, 55, 60, 76, 95], "wspace": [32, 34, 36, 55, 60], "rot90": [32, 43, 59, 62, 76, 95, 121], "vmin": [32, 34, 48, 49, 55, 58, 60, 62, 68, 95, 200], "vmax": [32, 34, 48, 49, 55, 58, 60, 62, 95, 200], "colorbar": [32, 49, 51, 54, 57, 60, 61, 64, 68, 76, 95, 105, 241], "due": [32, 33, 48, 55, 57, 60, 64, 69, 166, 191, 244, 249, 250, 262], "evid": [32, 247], "artifici": [32, 69, 127], "fft": [32, 195, 250], "fft2": 32, "fftshift": 32, "c_crop": 32, "192": [32, 34, 48, 54, 57, 58, 59, 60, 190, 247], "t1_gibb": 32, "ifft2": 32, "singl": [32, 46, 47, 48, 50, 53, 54, 60, 63, 64, 65, 69, 90, 95, 100, 102, 103, 105, 127, 128, 146, 147, 162, 164, 167, 169, 170, 176, 182, 184, 187, 189, 193, 194, 195, 196, 197, 199, 201, 205, 216, 217, 236, 241, 247, 250, 254, 256], "t1_unr": 32, "fig1": [32, 34, 36, 49, 55, 60], "subplot_kw": [32, 34, 36, 49, 55, 60], "xtick": [32, 34, 36, 49, 55, 60, 89], "ytick": [32, 34, 36, 49, 55, 60, 89], "flat": [32, 34, 36, 49, 55, 60, 71, 72, 189, 195, 197], "ring": [32, 48, 173, 182, 191, 201, 222, 248, 252], "fontsiz": [32, 61], "xy": [32, 53, 176, 189, 247, 258, 259], "81": [32, 35, 46, 48, 53, 54, 57, 58, 59, 72, 80, 84, 85, 86, 89, 105, 119, 139, 190, 195, 243, 248], "70": [32, 45, 48, 51, 54, 55, 57, 58, 59, 61, 63, 68, 72, 80, 84, 86, 89, 105, 119, 127, 176, 190, 194, 240, 243], "red": [32, 37, 43, 45, 49, 78, 97, 102, 103, 108, 109, 114, 121, 139, 168, 195, 200, 201, 223], "xycoord": 32, "xytext": 32, "textcoord": 32, "offset": [32, 103, 107, 187, 189, 195, 197, 199, 200], "arrowprop": 32, "dict": [32, 135, 187, 189, 190, 193, 194, 195, 197, 199, 200, 201], "arrowstyl": 32, "75": [32, 48, 54, 55, 57, 58, 59, 61, 71, 72, 80, 84, 86, 89, 119, 138, 141, 182, 189, 199, 243, 254], "gibbs_suppression_structur": 32, "uncorrect": 32, "shown": [32, 34, 47, 55, 58, 60, 63, 69, 71, 72, 127, 167, 168, 187, 195, 200, 201, 223], "panel": [32, 33, 34, 48, 49, 55, 60, 138, 141, 202], "characterist": [32, 43, 170, 189], "profil": [32, 40, 76, 91, 92, 94, 96, 103, 113, 146, 174, 182, 187, 190, 191, 195, 196, 198, 200, 201, 202, 204, 207, 228, 236, 239, 259], "appreci": [32, 34], "arrow": 32, "One": [32, 36, 40, 43, 45, 47, 48, 53, 59, 64, 69, 71, 72, 76, 85, 87, 90, 139, 166, 167, 187, 189, 190, 194, 195, 198, 199, 237, 239, 241, 254, 259], "artefactu": [32, 48], "compromis": [32, 34], "grei": [32, 59, 61, 64, 98, 178, 195, 201, 234], "highlight": [32, 168, 201, 223, 241, 245, 250], "kindli": [32, 34, 48, 49, 59, 60, 167, 263], "suppli": [32, 190], "romain": 32, "valabr\u00e8gu": 32, "icm": [32, 121, 196], "pari": 32, "read_cenir_multib": [32, 202], "asarrai": [32, 54, 55, 107, 116, 139], "illustr": [32, 37, 46, 47, 48, 53, 55, 58, 59, 60, 61, 64, 65, 66, 69, 72, 128, 172, 189, 195, 197, 254, 263], "data_slic": [32, 57], "data_correct": [32, 39], "slice_axi": [32, 191, 201, 222], "fig2": [32, 34, 60], "10000": [32, 39, 57, 99, 100, 187, 195, 200, 201, 242, 247], "gibbs_suppression_b0": 32, "techniqu": [32, 34, 49, 59, 60, 64, 72, 87, 89, 114, 177, 194, 195, 196, 245], "example_reconst_msdki": [32, 147], "unnecessari": [32, 48, 55, 60, 189, 194, 238, 241, 253, 254], "maskdata": [32, 34, 46, 48, 49, 53, 60, 130, 131], "dilat": [32, 34, 46, 48, 49, 53, 60, 98, 130, 131, 196, 201, 227], "msdki": [32, 44, 48, 70, 146, 202], "dki_model": [32, 60], "meandiffusionkurtosismodel": [32, 60, 202], "dki_fit": [32, 60], "mskini": 32, "msk": [32, 60, 195, 202], "mskgib": 32, "fig3": [32, 34, 60], "59": [32, 48, 53, 54, 57, 58, 59, 61, 64, 72, 80, 83, 84, 86, 88, 89, 243], "63": [32, 33, 48, 54, 55, 57, 58, 59, 71, 72, 79, 80, 84, 85, 86, 89, 101, 243], "gibbs_suppression_msdki": 32, "neg": [32, 36, 46, 47, 48, 58, 59, 60, 85, 87, 95, 135, 187, 189, 190, 191, 192, 193, 195, 196, 201, 213, 217, 236, 238, 244, 249, 251, 262], "black": [32, 62, 139, 200, 245, 249], "ventricl": [32, 55, 100], "seem": [32, 60, 195, 239, 240, 243, 245], "veraart": [32, 34, 36, 48, 173, 191, 195, 201, 210, 211], "fiereman": [32, 34, 36, 48, 49, 146, 147, 173, 176, 184, 191, 195, 201, 210, 211], "jelescu": [32, 173], "knoll": [32, 36, 173], "novikov": [32, 34, 36, 49, 173, 191, 201, 210, 211], "magn": [32, 55, 173, 191, 192, 195, 201, 202, 218, 219, 222, 262], "76": [32, 35, 45, 46, 48, 53, 54, 55, 57, 58, 59, 61, 68, 72, 79, 84, 85, 89, 105, 139, 173, 239, 243], "301": [32, 54, 57, 58, 65, 173, 195, 245], "314": [32, 54, 57, 58, 173, 245], "1002": [32, 34, 36, 46, 48, 54, 55, 57, 60, 167, 173, 191, 195, 199, 201, 210, 211, 222, 238], "mrm": [32, 34, 36, 46, 48, 50, 55, 60, 69, 130, 167, 173, 189, 191, 195, 197, 201, 210, 211, 218, 219, 222], "25866": [32, 173], "perron": [32, 48, 173, 195], "aelterman": [32, 48, 173], "piz": [32, 48, 173], "urica": [32, 48, 173], "jeurissen": [32, 47, 48, 59, 64, 146, 147, 173, 184, 195], "w": [32, 47, 48, 54, 64, 65, 71, 99, 100, 164, 173, 187, 189, 193, 194, 195, 197, 198, 199, 201, 204, 240, 245], "leeman": [32, 47, 48, 64, 173, 189, 195], "artifact": [32, 48, 173, 187, 190, 191, 201], "441": [32, 35, 36, 48, 58, 98, 172, 173, 191, 195], "455": [32, 48, 58, 71, 173, 245], "06": [32, 48, 54, 55, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 120, 139, 173, 189, 195, 238, 239, 246, 248, 253], "068": [32, 48, 173], "kellner": [32, 191, 201, 222], "dhital": [32, 191, 201, 222], "kiselev": [32, 191, 201, 222], "reisert": [32, 191, 201, 222, 250], "subvoxel": [32, 191, 201, 222], "shift": [32, 71, 187, 189, 191, 193, 195, 201, 213, 222, 252], "1574": [32, 54, 57, 241], "1581": [32, 57, 241], "26054": [32, 191, 201, 222], "healthi": [32, 34, 48, 54, 60, 63, 121, 168, 182, 190, 191, 195, 201, 222], "doctor": [32, 34, 48, 60, 191, 195, 201, 222], "17863": [32, 34, 48, 60, 191, 195, 201, 222], "cam": [32, 34, 48, 60, 191, 195, 201, 222], "29356": [32, 34, 48, 60, 191, 195, 201, 222], "33311": [32, 190], "172": [32, 54, 58, 244], "denoise_gibb": [32, 42], "manjon2013": [33, 34, 36, 201, 210], "around": [33, 43, 47, 57, 163, 172, 189, 191, 195, 200, 201, 210, 211, 236, 245, 262], "eigenvalu": [33, 47, 53, 64, 65, 127, 128, 172, 187, 191, 195, 197, 199, 201, 210, 211, 218, 219, 241, 258], "denoise_mppca": [33, 34, 42], "gaussian": [33, 35, 40, 43, 45, 48, 58, 60, 64, 76, 87, 99, 105, 108, 109, 121, 127, 176, 187, 191, 195, 197, 201, 204, 208, 212, 218, 221, 236, 240, 245], "bia": [33, 58, 87, 121, 189, 191, 195, 236, 242, 247], "equat": [33, 48, 62, 71, 76, 162, 189, 191, 195, 197, 199, 201, 213, 238, 258, 259], "koai": [33, 40, 55, 191, 195], "basser": [33, 53, 146, 147, 176, 184, 191, 195, 201, 219, 258], "koay2006": 33, "correct_bia": [33, 191], "8083770275115967": 33, "lowest": [33, 43, 168, 195], "relationship": [33, 61, 98, 191, 195, 199, 201, 210, 258, 259], "tau_factor": [33, 191, 201, 210, 250], "accord": [33, 49, 57, 60, 116, 117, 118, 127, 176, 182, 187, 189, 190, 191, 195, 197, 198, 199, 201, 229, 236, 237, 249], "denoised_arr": [33, 34, 36, 59, 191], "taken": [33, 34, 103, 127, 187, 189, 190, 191, 195, 201, 210, 211, 213, 262], "516": [33, 57, 245], "5149068832397": 33, "gra": [33, 34, 36], "orig": [33, 34, 36], "den": [33, 34, 35, 36], "rms_diff": [33, 34, 36], "sqrt": [33, 34, 36, 48, 49, 50, 51, 53, 56, 61, 62, 63, 68, 76, 118, 164, 189, 191, 195, 197, 199, 262, 263], "denoised_localpca": 33, "nifti1imag": [33, 34, 46, 48, 50, 51, 56, 68, 107, 135, 187, 190, 193], "jv": [33, 34, 36, 191, 201, 210], "concha": [33, 34, 36, 191, 201, 210], "buad": [33, 34, 36, 191, 201, 210], "dl": [33, 34, 36, 190, 191, 201, 210], "overcomplet": [33, 34, 36, 174, 191, 201, 210], "e73021": [33, 34, 36, 191, 201, 210], "0073021": [33, 34, 36, 191, 201, 210], "cg": [33, 139, 187, 189, 191], "pj": [33, 53, 176, 191], "2006": [33, 54, 57, 59, 64, 69, 189, 191, 195, 201, 219, 248], "magnitud": [33, 64, 103, 187, 189, 191, 195, 199, 200], "jmr": [33, 40], "179": [33, 54, 57, 58, 191, 244], "317": [33, 57, 58, 139, 191, 245], "322": [33, 55, 57, 58, 239], "39": [33, 47, 48, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 69, 72, 79, 80, 84, 86, 89, 137, 139, 140, 189, 239, 243], "028": [33, 91, 113, 114], "denoise_localpca": [33, 34, 42], "exploit": [34, 173], "veraart2016a": 34, "loss": [34, 36, 49, 65, 116, 189, 190, 194, 196, 201], "anatom": [34, 36, 76, 84, 89, 93, 95, 98, 168, 170, 178, 182, 199, 201, 246, 256], "dti": [34, 43, 44, 45, 47, 48, 49, 53, 58, 59, 61, 62, 63, 69, 70, 89, 127, 146, 147, 162, 165, 167, 168, 174, 182, 184, 189, 190, 198, 201, 202, 219, 236, 237, 238, 239, 243, 244, 245, 247, 249, 250, 253, 254, 256], "henri2018": 34, "princip": [34, 53, 61, 127, 128, 172, 189, 191, 195, 197, 199, 201, 210, 211], "classif": [34, 59, 115, 120, 146, 172, 182, 190, 196, 238, 249], "veraa2016a": [34, 36], "veraa2016b": 34, "mppca": [34, 48, 59, 172, 182, 202, 248], "auxiliari": 34, "hansen2016": [34, 48, 49, 59, 60, 167], "mbyte": [34, 48, 50, 53, 58, 59, 60, 69], "_": [34, 52, 60, 62, 63, 64, 84, 89, 92, 100, 102, 103, 107, 121, 123, 124, 125, 189, 190, 191, 195, 197, 199, 201, 258, 259], "sake": [34, 59, 88], "simplic": [34, 59, 118], "sel_b": [34, 59], "logical_or": [34, 47, 59], "96": [34, 48, 50, 51, 54, 56, 57, 58, 59, 61, 68, 72, 79, 80, 84, 85, 86, 89, 167, 243], "mp": [34, 48, 59, 163, 182, 199, 252], "637": [34, 57, 59, 236], "1518270969391": 34, "intern": [34, 49, 57, 59, 71, 72, 85, 113, 117, 119, 135, 165, 187, 195, 196, 200, 201, 223, 243], "slide": 34, "compris": [34, 63, 199], "5x5x5": [34, 72, 191, 201, 210, 211], "125": [34, 54, 57, 58, 59, 72, 105, 119, 141, 243], "assess": [34, 48, 195, 200, 201, 203, 247], "hspace": [34, 36, 55, 60], "05": [34, 36, 37, 48, 54, 55, 57, 58, 59, 60, 61, 72, 76, 79, 80, 84, 85, 86, 89, 95, 116, 119, 120, 132, 168, 187, 189, 191, 195, 196, 201, 240, 241, 247, 251, 252, 253], "denoised_mppca": 34, "random": [34, 36, 37, 45, 59, 60, 66, 71, 72, 85, 88, 91, 92, 97, 113, 119, 121, 128, 139, 178, 182, 187, 189, 191, 194, 195, 196, 197, 199, 200, 201, 210, 211, 223, 236, 237, 238, 241, 242, 247, 248, 253], "indic": [34, 43, 44, 46, 48, 49, 53, 54, 58, 69, 70, 72, 78, 92, 95, 108, 114, 116, 117, 118, 119, 130, 146, 176, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 216, 217, 225, 227, 228, 244, 250, 252, 253], "dkimodel": [34, 48, 49], "diffusionkurtosismodel": [34, 48, 49, 60, 202], "dki_orig": 34, "dki_den": 34, "md": [34, 47, 48, 53, 54, 55, 59, 60, 62, 167, 168, 176, 189, 195, 197, 198, 201, 202, 218, 219, 237, 238, 240, 248, 249], "mk": [34, 48, 49, 60, 62, 195, 201, 202], "fa_orig": 34, "fa_den": 34, "md_orig": 34, "md_den": 34, "mk_orig": 34, "mk_den": 34, "03": [34, 48, 54, 55, 57, 58, 59, 72, 79, 80, 84, 85, 86, 89, 91, 109, 113, 114, 134, 137, 170, 189, 195, 236, 237, 242, 243, 244, 246, 247, 251, 252, 253, 254], "0e": [34, 64, 189, 195, 197], "denoised_dki": 34, "obtain": [34, 36, 40, 46, 47, 48, 51, 54, 55, 56, 57, 59, 60, 63, 71, 72, 86, 89, 99, 101, 107, 118, 127, 162, 175, 176, 187, 190, 194, 195, 196, 200, 258], "upper": [34, 45, 47, 48, 55, 57, 60, 105, 187, 189, 193, 194, 195, 196, 201, 226, 238], "mention": [34, 48, 57, 59, 135, 168, 238], "std": [34, 40, 43, 48, 61, 141, 187, 195, 200, 201, 204, 218, 219, 236, 245], "return_sigma": [34, 191, 201, 211], "pca_sigma": 34, "vari": [34, 40, 57, 61, 191, 195], "mean_sigma": 34, "6833844": 34, "nomin": [34, 189], "snr": [34, 35, 38, 42, 52, 60, 71, 123, 124, 125, 127, 128, 146, 172, 190, 195, 197, 238, 245, 249], "mean_sign": [34, 43, 76], "34": [34, 36, 48, 49, 54, 55, 57, 58, 59, 61, 72, 79, 84, 85, 89, 105, 165, 195, 197, 243, 250, 255], "56180377412377": 34, "medicin": [34, 36, 37, 46, 48, 49, 54, 57, 59, 60, 64, 71, 72, 167, 176, 191, 195, 196, 197, 200, 201, 211, 223], "26059": [34, 36, 86, 191, 201, 210, 211], "christiaen": [34, 191, 201, 210, 211], "aron": [34, 191, 201, 210, 211], "sijber": [34, 48, 191, 195, 201, 210, 211], "142": [34, 48, 54, 57, 58, 119, 167, 191, 196, 201, 210, 211, 243], "394": [34, 54, 57, 58, 191, 201, 210, 211, 238], "406": [34, 54, 57, 58, 191, 201, 210, 211, 245], "08": [34, 47, 48, 54, 57, 58, 59, 61, 64, 72, 79, 80, 84, 85, 89, 191, 195, 201, 210, 211, 247, 248, 249], "016": [34, 191, 201, 210, 211], "002": [34, 142, 144, 145, 195], "coupe08": [35, 36, 172, 191], "boost": [35, 257], "decid": [35, 39, 58, 113, 138, 196], "106": [35, 46, 53, 54, 57, 58, 85, 105, 243], "32": [35, 48, 54, 55, 57, 58, 59, 61, 68, 72, 79, 84, 85, 89, 99, 100, 107, 114, 120, 187, 189, 194, 195, 197, 201, 236, 240, 243, 245, 246], "3t": [35, 190, 195, 196], "6275289058685303": 35, "soft": [35, 38, 42, 146, 191], "example_denoise_ascm": 35, "yger": [35, 36, 172, 191], "prima": [35, 36, 172, 191, 201], "hellier": [35, 36, 172, 191], "kervrann": [35, 36, 172, 191], "barillot": [35, 36, 172, 191, 201, 212], "blockwis": [35, 36, 172, 191], "425": [35, 36, 57, 58, 172, 191, 245], "2008": [35, 36, 45, 50, 51, 54, 57, 67, 68, 79, 146, 147, 166, 172, 184, 191, 195, 197, 201, 212, 238, 241, 248], "898": [35, 237], "denoise_nlmean": [35, 42], "fadnavis20": [36, 191, 201, 213], "dwi": [36, 38, 40, 42, 43, 54, 55, 58, 60, 61, 99, 146, 162, 165, 167, 172, 176, 187, 190, 191, 193, 194, 195, 196, 199, 201, 231, 249, 250, 255], "rank": [36, 62, 172, 187, 195, 247, 258, 259], "advantag": [36, 45, 56, 60, 65, 87, 90, 102, 166, 187], "oversampl": [36, 172], "classic": [36, 43, 108, 162, 258, 259, 260], "pca": [36, 38, 42, 48, 59, 60, 146, 174, 182, 191, 199, 201, 210, 211, 238, 239, 241, 247, 250, 254, 255], "variat": [36, 64, 71, 76, 187, 195, 201], "knoll11": 36, "properti": [36, 46, 53, 56, 58, 60, 61, 69, 76, 90, 102, 118, 127, 130, 163, 176, 187, 189, 190, 193, 195, 196, 197, 198, 200, 201, 236, 262], "assumpt": [36, 40, 57, 58, 61, 102, 195, 250], "fluctuat": 36, "design": [36, 37, 61, 65, 76, 138, 162, 181, 187, 189, 191, 193, 194, 195, 199, 242, 248], "regressor": [36, 189], "phase": [36, 64, 191, 194, 195, 196], "train": [36, 194], "predict": [36, 45, 57, 59, 65, 76, 178, 187, 189, 194, 195, 199, 202, 236, 237, 238, 244, 245, 246, 249], "mathcal": [36, 195, 196], "phi_": [36, 195], "ight": [36, 62, 63, 195], "mathbb": [36, 62, 63, 71, 102, 189, 195], "y_": [36, 262], "fed": [36, 201], "phi": [36, 37, 60, 66, 127, 128, 187, 189, 190, 195, 202, 243, 262, 263], "held": [36, 45], "mere": [36, 167], "nor": [36, 189, 196], "loadtxt": [36, 52, 123, 124, 125, 190, 240], "shift_intens": [36, 191, 201, 213], "clip_negative_v": [36, 191, 201, 213], "ordinari": [36, 48, 195, 201, 218, 219], "least": [36, 48, 57, 59, 60, 63, 64, 69, 99, 108, 166, 187, 189, 192, 194, 195, 196, 199, 201, 218, 219, 249, 258, 259], "squar": [36, 45, 48, 51, 57, 58, 61, 63, 64, 65, 68, 69, 76, 100, 107, 108, 164, 177, 187, 189, 190, 195, 197, 199, 200, 201, 204, 218, 219, 249, 258, 259], "regress": [36, 191, 195, 201, 213, 237], "tend": [36, 58, 85], "slower": [36, 63, 177, 189, 201], "hamper": 36, "exhibit": [36, 43, 48], "attenu": [36, 43, 127, 195, 197, 241], "ideal": [36, 48, 85, 146, 147, 184, 195, 262], "skip": [36, 166, 187, 189, 190, 191, 192, 195, 197, 201, 213, 238, 243, 245, 247, 254], "b0_denois": [36, 191, 201, 213], "7t": 36, "associ": [36, 49, 55, 71, 72, 141, 187, 189, 190, 193, 195, 196, 197, 199, 201, 213, 233, 234, 243, 262], "accordingli": [36, 113, 167, 187], "denoised_patch2self": 36, "inspect": [36, 108, 142, 145, 201, 240], "underli": [36, 43, 47, 61, 93, 98, 176, 180, 191, 195, 201, 213, 245], "rid": 36, "stochast": [36, 71, 195], "lastli": [36, 142, 145], "batch": [36, 194], "split": [36, 176, 187, 191, 194, 195, 199, 201, 220, 222, 229, 232, 238, 247], "150": [36, 47, 54, 57, 58, 64, 65, 71, 72, 197], "simpli": [36, 53, 59, 61, 99, 116, 135, 181, 187, 199], "denoised_batch1": 36, "denoised_batch2": 36, "denoised_p2": 36, "concaten": [36, 52, 123, 124, 125, 127, 196, 197, 201], "batson": [36, 191, 201, 213], "neural": [36, 182, 191, 194, 195, 201, 213], "2020": [36, 48, 58, 59, 86, 91, 92, 103, 113, 168, 183, 189, 190, 191, 194, 195, 196, 198, 201, 207, 213, 228, 248, 249, 250, 251], "bredi": 36, "pock": 36, "stollberg": 36, "tgv": 36, "65": [36, 48, 54, 55, 57, 58, 59, 61, 68, 71, 72, 79, 80, 84, 85, 86, 89, 105, 119, 195, 197, 201, 218, 243], "480": [36, 54, 57, 245], "491": [36, 48, 57, 61, 91, 190, 245, 249], "58": [36, 41, 43, 48, 49, 54, 55, 57, 58, 59, 61, 65, 72, 79, 84, 85, 89, 106, 107, 167, 176, 187, 192, 195, 196, 197, 243, 262], "050": 36, "denoise_patch2self": [36, 42], "saw": 37, "example_quick_start": [37, 147], "physicist": 37, "disperse_charg": [37, 60, 66, 128, 202, 238, 244, 248], "electrostat": [37, 66, 72, 128, 189, 254], "repuls": [37, 72, 189, 238, 254], "jones1999": 37, "hemispher": [37, 60, 66, 72, 85, 103, 128, 170, 190, 192, 195, 202, 243], "polar": [37, 66, 127, 128, 189, 195, 197, 263], "n_pt": [37, 60, 66, 97, 128], "theta": [37, 59, 60, 66, 100, 127, 128, 164, 189, 190, 191, 195, 199, 243, 262, 263], "pi": [37, 60, 61, 66, 97, 118, 128, 162, 163, 189, 195, 197, 199, 258, 260, 262], "rand": [37, 60, 66, 91, 128, 139, 189, 200], "hsph_initi": [37, 60, 66, 128], "potenti": [37, 48, 60, 64, 66, 93, 128, 189, 195, 239, 241], "energi": [37, 57, 66, 128, 176, 187, 195, 201, 204], "minim": [37, 58, 66, 102, 105, 128, 187, 189, 194, 195, 241, 253], "hsph_updat": [37, 60, 66, 128], "5000": [37, 54, 57, 60, 66, 128, 189, 195], "setbackground": [37, 66, 91, 92, 97, 102, 113, 114, 116, 117, 118, 119], "point_radiu": [37, 116], "initial_vs_upd": 37, "becom": [37, 61, 97, 102, 141, 163, 189, 195], "sph": [37, 244, 249], "vstack": [37, 52, 60, 66, 72, 97, 123, 124, 125, 128, 199], "full_spher": 37, "fill": [37, 187, 189, 195, 197, 201, 229, 236, 258, 259], "ones": [37, 49, 60, 76, 89, 114, 116, 117, 118, 119, 128, 142, 145, 189, 193, 195], "stack": [37, 100, 128, 249], "hstack": [37, 60, 128], "48226551": 37, "8597359": 37, "16814924": 37, "77169039": 37, "49362836": 37, "4010299": 37, "91554673": 37, "21194055": 37, "34184117": 37, "7701603": 37, "09150318": 37, "63125295": 37, "84451987": 37, "50221104": 37, "18593078": 37, "4654141": 37, "57711311": 37, "67106644": 37, "07051484": 37, "19419914": 37, "97842442": 37, "73214378": 37, "24406014": 37, "63592463": 37, "34081309": 37, "62007051": 37, "70665338": 37, "22612641": 37, "05725387": 37, "97241392": 37, "18986916": 37, "95549755": 37, "22577452": 37, "92751189": 37, "36585046": 37, "07664942": 37, "5401859": 37, "41993756": 37, "72928159": 37, "58804797": 37, "4773355": 37, "65295513": 37, "19614519": 37, "38822601": 37, "90044857": 37, "62579607": 37, "04787021": 37, "77851636": 37, "92907407": 37, "25474532": 37, "26819061": 37, "6961131": 37, "55781155": 37, "45196552": 37, "0728861": 37, "76981131": 37, "63409634": 37, "97484953": 37, "14227137": 37, "17154371": 37, "03030616": 37, "99786452": 37, "05786142": 37, "42317947": 37, "88451485": 37, "1963482": 37, "03669779": 37, "21966671": 37, "97488451": 37, "10362895": 37, "49375687": 37, "86340326": 37, "8408654": 37, "5135838": 37, "17081292": 37, "81009123": 37, "37987022": 37, "44659917": 37, "69068581": 37, "19345683": 37, "69679808": 37, "31272303": 37, "34695196": 37, "88421075": 37, "35300635": 37, "66098507": 37, "66218219": 37, "99363148": 37, "00729362": 37, "11244239": 37, "52247988": 37, "72851389": 37, "44303756": 37, "85807031": 37, "02918715": 37, "5127021": 37, "10684707": 37, "95597749": 37, "27329605": 37, "08647343": 37, "54092124": 37, "83661613": 37, "5510663": 37, "50567611": 37, "66379033": 37, "21428202": 37, "83939382": 37, "49950099": 37, "21372546": 37, "46400794": 37, "8596616": 37, "84321252": 37, "52227536": 37, "12736205": 37, "85972589": 37, "29003618": 37, "42041694": 37, "50672214": 37, "01651831": 37, "86195117": 37, "38505783": 37, "29286812": 37, "87519068": 37, "63196618": 37, "76309358": 37, "13530312": 37, "5407156": 37, "82543672": 37, "16211372": 37, "26638849": 37, "9613867": 37, "06908539": 37, "59806911": 37, "6892814": 37, "40890647": 37, "96868622": 37, "22784374": 37, "09866226": 37, "33992264": 37, "93389323": 37, "11088749": 37, "76190618": 37, "30103266": 37, "57347913": 37, "67816543": 37, "73063746": 37, "07912372": 37, "50480845": 37, "7455739": 37, "43507239": 37, "46054055": 37, "79555927": 37, "39368497": 37, "12400492": 37, "92299719": 37, "36427868": 37, "22510718": 37, "06418008": 37, "97221791": 37, "20641097": 37, "90425752": 37, "37378182": 37, "60151254": 37, "31767314": 37, "73298461": 37, "02649738": 37, "74745553": 37, "66378318": 37, "74219636": 37, "65479978": 37, "14276492": 37, "28107091": 37, "82747339": 37, "48609354": 37, "38166642": 37, "18887159": 37, "90479736": 37, "27396087": 37, "62529452": 37, "73072034": 37, "72933698": 37, "55231693": 37, "4037494": 37, "91454636": 37, "08554178": 37, "39533221": 37, "2293508": 37, "74992219": 37, "6204957": 37, "4754902": 37, "23790446": 37, "84694187": 37, "80451777": 37, "16877559": 37, "56944355": 37, "32822557": 37, "94355999": 37, "04430036": 37, "23584135": 37, "96241331": 37, "13468285": 37, "39207424": 37, "73505312": 37, "55314981": 37, "32539386": 37, "16751384": 37, "93062235": 37, "82043195": 37, "39411534": 37, "41420347": 37, "65741493": 37, "74947875": 37, "07802061": 37, "88853765": 37, "45303621": 37, "07251925": 37, "39638642": 37, "15185138": 37, "90543855": 37, "10175269": 37, "08197111": 37, "99142681": 37, "50577702": 37, "37862345": 37, "77513476": 37, "42845026": 37, "40155296": 37, "80943535": 37, "26939707": 37, "81103868": 37, "51927014": 37, "48938584": 37, "43780086": 37, "75420946": 37, "cyan": 37, "colors_b1000": 37, "colors_b2500": 37, "ascontiguousarrai": [37, 97], "jone": [37, 43, 69, 189, 195, 201, 218, 219], "dk": [37, 69, 195, 201, 218, 219], "anisotrop": [37, 47, 50, 53, 56, 58, 59, 95, 162, 182, 187, 190, 195, 249, 256], "515": [37, 48, 54, 61, 190, 245], "525": [37, 57, 245], "1999": [37, 53, 57, 241, 248], "568": [37, 57, 246], "gradients_spher": [37, 42, 240], "piesno": [38, 42, 146, 182, 202, 236, 237, 238, 240, 245], "supervis": [38, 42, 146, 182, 191, 201, 213, 251], "statist": [38, 42, 45, 48, 53, 55, 69, 76, 90, 107, 146, 165, 182, 187, 189, 195, 198, 199, 201, 207, 236, 244, 252], "independ": [38, 42, 60, 116, 146, 191, 195, 201, 250], "ascm": [38, 42, 146], "marcenko": [38, 42, 48, 146, 174, 191, 201, 210, 211], "pastur": [38, 42, 48, 146, 174, 191, 201, 210, 211], "oscil": [38, 42, 48, 58, 67, 146, 174, 195], "inevit": [39, 175], "misalign": [39, 100, 175, 187], "solv": [39, 48, 55, 58, 59, 62, 63, 64, 71, 166, 175, 182, 187, 189, 191, 195, 199, 201, 202, 213, 238, 246], "jenkinsonsmith01": [39, 175], "motion_correct": [39, 42, 202], "demo": [39, 71, 72], "data_smal": [39, 46, 47, 54, 55, 58, 64, 65, 67, 71, 72], "bvals_smal": 39, "bvecs_smal": 39, "reg_afin": [], "jenkinson": [39, 175], "2001": [39, 48, 57, 113, 121, 175, 249], "optimis": [39, 175, 245], "anal": [39, 175], "143": [39, 54, 58, 119, 175, 195, 243], "56": [39, 48, 54, 57, 58, 59, 61, 63, 70, 72, 82, 84, 85, 89, 105, 121, 139, 175, 195, 197, 243], "910": [48, 57, 71, 197, 237], "probabilist": [40, 72, 75, 76, 77, 79, 80, 84, 87, 93, 140, 146, 174, 182, 191, 195, 197, 201, 233, 242, 244, 247, 256], "koay2009": 40, "channel": [40, 108, 109, 187, 189, 193, 194, 195, 196, 200, 257], "sens": [40, 58, 61, 64, 67, 95, 105, 130, 191, 195, 201, 257, 259], "grappa": [40, 191], "intuit": [40, 61, 93, 164, 201], "fourth": [40, 48, 57, 62, 63, 189, 195, 197], "central": [40, 51, 68, 187, 189, 198, 199], "chi": [40, 64, 87, 189, 195, 201], "tim": 40, "receiv": [40, 108, 187, 191, 195], "through": [40, 50, 57, 58, 59, 64, 65, 69, 72, 76, 84, 88, 89, 93, 98, 99, 107, 118, 121, 142, 145, 162, 165, 168, 172, 173, 175, 176, 177, 178, 187, 190, 195, 199, 238, 243, 245, 250, 263], "distinct": 40, "return_mask": [40, 191], "axial_piesno": 40, "mid": [40, 43, 76, 187], "mask_piesno": 40, "uint8": [40, 43, 53, 98, 193], "bool": [40, 49, 72, 119, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 252, 253], "263329": 40, "933178": 40, "5934806": 40, "708311737182022": 40, "example_snr_in_cc": [40, 147], "ozarslan": [40, 58, 63, 146, 147, 184, 191, 195], "pierpaoli": [40, 53, 69, 191, 195, 201, 218, 219], "94": [40, 48, 54, 55, 57, 58, 59, 61, 72, 84, 85, 86, 89, 105, 182, 191, 197, 236, 243, 249], "103": [40, 48, 54, 55, 57, 58, 59, 182, 191, 195, 201, 219, 242, 243], "736": [40, 84, 236], "isotrop": [41, 55, 58, 59, 64, 87, 97, 107, 162, 187, 192, 196, 197, 199, 201, 202, 203, 204, 249, 256], "facilit": [41, 193, 194], "fimg": [41, 127, 190, 197], "aniso_vox": [41, 187, 190], "return_voxs": [41, 50, 56, 84, 187, 193], "24": [41, 43, 48, 50, 54, 57, 58, 59, 61, 72, 79, 84, 85, 89, 116, 183, 187, 189, 195, 196, 239, 240, 241, 243, 245], "new_voxel_s": 41, "trilinear": [41, 78, 84, 89, 187, 201, 229], "data2": [41, 107, 187], "affine2": [41, 107, 187], "77": [41, 48, 54, 55, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 119, 187, 189, 194, 243], "iso_vox": 41, "analyz": [41, 50, 62, 179, 189, 195, 198, 199, 248], "img3": 41, "spm2analyzeimag": 41, "realiz": [41, 191], "065": [], "reslice_dataset": [41, 42], "01": [42, 47, 48, 54, 55, 57, 58, 59, 61, 64, 70, 72, 74, 77, 79, 80, 84, 85, 86, 89, 103, 106, 109, 113, 120, 135, 167, 170, 187, 189, 191, 195, 201, 208, 240, 241, 246, 248, 249, 254, 255], "examples_built_04_preprocess": 42, "000": [42, 70, 74, 77, 81, 96, 106, 110, 123, 126, 189, 195, 197], "snr_in_cc": [42, 43, 241, 247], "dw": [43, 71, 72, 95, 127, 195], "divid": [43, 45, 49, 50, 51, 59, 61, 64, 91, 102, 118, 187, 189, 195, 196, 198, 201, 206, 207, 239, 240, 247], "worst": 43, "corticospin": [43, 59, 84, 89, 113, 114, 121, 168, 178, 195], "cst": [43, 90, 91, 95, 138, 139, 190, 241, 252], "cfa": [43, 53, 196], "mainli": [43, 46, 47, 117, 130, 176, 189, 194], "closest": [43, 75, 77, 146, 174, 189, 195, 196, 245], "descoteaux2011": [43, 51, 68], "jones2013": 43, "tensormodel": [43, 45, 47, 48, 53, 55, 61, 69, 89, 165, 202, 238, 243, 254], "tenmodel": [43, 47, 48, 53, 165, 245], "tensorfit": [43, 53, 196, 202, 243], "respect": [43, 55, 58, 64, 67, 89, 98, 100, 102, 121, 162, 166, 182, 187, 189, 190, 193, 195, 199, 200, 201, 223, 249, 250], "isol": [43, 58, 64, 72, 187], "badli": [43, 72], "segment_from_cfa": [43, 202], "bounding_box": [43, 195, 202, 249], "cc_box": 43, "zeros_lik": [43, 100, 199], "bounds_min": 43, "bounds_max": 43, "mask_cc_part": 43, "return_cfa": [43, 196], "cfa_cc_part": 43, "255": [43, 48, 53, 54, 57, 58, 98, 141, 193, 244], "cc_segment": 43, "catch": [43, 236, 239], "outsid": [43, 63, 78, 89, 187, 191, 194, 199, 201, 229, 241, 242, 247, 253], "determin": [43, 47, 57, 58, 59, 84, 89, 98, 121, 164, 191, 192, 197, 199, 201, 202, 213, 217, 262], "roi": [43, 47, 54, 59, 64, 67, 69, 72, 76, 93, 94, 95, 96, 107, 135, 136, 137, 146, 182, 190, 195, 196, 199, 201, 202, 217, 223, 236, 241, 253], "warn": [43, 48, 55, 57, 58, 59, 63, 69, 103, 166, 191, 193, 194, 195, 236, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 252, 253, 254], "manufactur": 43, "care": [43, 50, 60, 64, 116, 135, 182, 193, 195, 199, 201], "ndimag": [43, 48, 49, 98, 253], "binary_dil": [43, 98], "mask_nois": [43, 201], "noise_std": 43, "17113266785504": 43, "li": [43, 45, 176, 187, 201], "null": [43, 189, 191, 201, 210, 253], "search": [43, 113, 115, 120, 146, 165, 166, 195, 196, 201, 228, 253, 254, 255], "idx": [43, 64, 189, 194], "sum": [43, 47, 48, 49, 50, 51, 56, 58, 59, 60, 62, 64, 65, 68, 72, 76, 105, 108, 116, 118, 163, 177, 187, 189, 190, 194, 195, 197, 198, 199, 201, 204], "inf": [43, 57, 90, 187, 194, 195, 201], "axis_x": 43, "argmin": [43, 63, 102, 199], "axis_i": 43, "axis_z": 43, "366354266706736": 43, "98875": 43, "1177": [43, 54, 238], "09229": 43, "918432129721111": 43, "72068171809924": 43, "126": [43, 48, 54, 57, 58, 59, 105, 108, 119, 135, 182, 243], "11825": 43, "039925": 43, "99218": 43, "592653853373644": 43, "46995373635": 43, "9965694823": 43, "perpendicular": [43, 54, 58, 61, 64, 176, 189, 195, 197, 201, 221, 236], "highest": [43, 80, 168, 178, 187, 189, 195, 196, 241], "approxim": [43, 45, 57, 58, 62, 63, 71, 172, 187, 189, 195, 197, 199, 259], "le": [43, 57, 176, 189, 195, 199, 201, 220], "bihan": [43, 57, 176, 195, 201, 220], "mangin": 43, "poupon": 43, "propag": [43, 51, 52, 58, 68, 72, 123, 124, 125, 174, 178, 182, 195, 197, 201, 221, 245, 258, 260], "603": [43, 51, 57, 68, 195, 246], "knosch": 43, "turner": 43, "count": [43, 69, 97, 98, 196, 199, 200, 244], "fallaci": 43, "73": [43, 48, 54, 55, 57, 58, 59, 61, 72, 79, 80, 84, 86, 89, 243], "239": [43, 54, 57, 58, 244], "38": [43, 45, 47, 48, 53, 54, 57, 58, 59, 61, 64, 65, 69, 72, 79, 80, 84, 85, 86, 89, 101, 105, 108, 138, 195, 243], "196": [43, 54, 58, 130, 244], "posit": [44, 46, 53, 58, 60, 61, 67, 70, 71, 72, 76, 84, 85, 89, 91, 97, 98, 113, 114, 116, 138, 139, 141, 146, 162, 169, 170, 176, 182, 187, 189, 194, 195, 197, 198, 199, 200, 201, 235, 240, 241, 245, 253, 254], "constraint": [44, 47, 48, 58, 59, 65, 70, 80, 87, 146, 165, 178, 182, 189, 190, 195, 245, 254, 255], "trajectori": [44, 70, 80, 84, 85, 90, 146, 178, 182, 190, 195, 253], "qti": [44, 70, 146, 147, 182, 184, 200, 202, 254], "continu": [44, 70, 84, 89, 146, 167, 178, 182, 195, 199, 238, 244], "shore": [44, 70, 146, 147, 184, 202, 241, 244, 245, 248, 253, 256], "spectrum": [44, 52, 70, 123, 124, 125, 146, 185, 195], "ball": [44, 50, 59, 70, 79, 129, 132, 146, 167, 184, 192, 195, 197, 201, 216, 262], "spars": [44, 58, 63, 70, 75, 76, 77, 100, 146, 182, 187, 189, 195, 196, 245], "fold": [44, 70, 146, 195], "invari": [44, 48, 58, 61, 70, 71, 72, 118, 146, 176, 189, 195, 199, 200, 238], "forecast": [44, 70, 146, 147, 182, 184, 202, 240, 241], "wmti": [44, 70, 146, 147, 184, 247], "contamin": [44, 70, 146, 195], "intravoxel": [44, 70, 146, 174, 195, 201, 220], "incoher": [44, 70, 71, 146, 174, 195, 201, 220], "pattern": [45, 121, 189], "nest": [45, 139, 141, 162, 187, 189, 193, 194, 195, 196, 199], "cannot": [45, 55, 60, 64, 85, 166, 189, 194, 199, 236, 242, 245, 247, 253, 254, 255], "likelihood": [45, 64, 121, 195], "hastie2008": 45, "rokem2014": [45, 65, 195], "imprevi": 45, "math": [45, 58, 60, 61, 62, 71, 127, 189, 190, 195, 210, 237, 238, 241, 242, 245, 253], "rac": [45, 48, 53, 62, 63, 71, 195], "th": [45, 76, 102, 108, 109, 187, 195, 199, 200, 262], "conduct": [45, 53, 176, 195, 242, 252], "cross_valid": [45, 202, 245], "dpd": [45, 65, 69, 90, 195], "xval": [45, 245], "coupl": [45, 71, 108, 201, 245, 249], "centrum": [45, 65], "semioval": [45, 65], "cso": 45, "cc_vox": 45, "cso_vox": 45, "dti_model": 45, "csd_model": [45, 47, 72, 79, 80, 84, 85, 86, 89, 131], "constrainedsphericaldeconvmodel": [45, 47, 71, 72, 79, 80, 84, 85, 86, 89, 131, 202], "half": [45, 62, 189, 195], "dti_cc": 45, "kfold_xval": [45, 70, 76, 202], "csd_cc": 45, "dti_cso": 45, "csd_cso": 45, "scatter": [45, 57], "focus": [45, 183], "set_size_inch": 45, "legend": [45, 57, 60, 61, 69, 97, 127, 128], "loc": [45, 57, 60], "this_ax": 45, "set_xlabel": [45, 57, 60, 61, 69, 76, 90, 93, 97], "set_ylabel": [45, 57, 60, 61, 69, 76, 90, 93, 97], "model_predict": [45, 76], "quantifi": [45, 48, 58, 76, 176, 195], "score": [45, 93, 94, 96, 146, 168, 196, 199, 241], "cc_dti_r2": 45, "pearsonr": 45, "cc_csd_r2": 45, "cso_dti_r2": 45, "cso_csd_r2": 45, "r2": [45, 195, 244], "7828795917128741": 45, "8051656184264852": 45, "43192536287529": 45, "6038698891074245": 45, "782881752597": 45, "805764364116": 45, "431921832012": 45, "604806420501": 45, "hasti": [45, 65, 195], "tibshirani": 45, "friedman": 45, "mine": 45, "infer": [45, 53, 76, 118, 176, 194, 199, 201, 253], "springer": [45, 195], "verlag": 45, "berlin": 45, "ismrm": [45, 57, 71, 101, 102, 183, 187, 195, 196, 199, 200, 201, 223, 230, 245, 249], "853": [45, 48, 54, 55, 57, 237], "aganj": [46, 130, 146, 147, 167, 184, 195, 197, 201, 216], "aganj2010": [46, 167], "instanti": [46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 67, 68, 99, 108, 130, 189, 195, 197, 201], "csa": [46, 72, 76, 79, 80, 85, 86, 93, 130, 140, 146, 147, 167, 168, 174, 178, 184, 195, 198, 201, 216, 217, 238, 258, 259], "csamodel": [46, 98, 130], "discret": [46, 58, 71, 72, 85, 87, 99, 130, 177, 178, 187, 189, 190, 192, 195, 196, 199, 201, 203, 230, 243], "csapeak": [46, 98, 130], "return_odf": [46, 56, 130, 131, 192], "normalize_peak": [46, 56, 64, 130, 131, 192, 195], "62": [46, 48, 53, 54, 55, 57, 58, 59, 61, 64, 72, 79, 80, 84, 86, 89, 167, 194, 195, 242, 243], "apart": [46, 189, 190, 258], "attribut": [46, 47, 48, 53, 57, 62, 85, 119, 135, 192, 193, 194, 200, 238, 240, 241, 248, 249, 251, 255], "peak_indic": [46, 56, 192], "maxima": [46, 47, 192, 195, 243], "enough": [46, 166, 189, 199], "rectangular": [46, 53, 102, 258, 259], "splenium": [46, 53], "43": [46, 48, 53, 54, 57, 58, 59, 61, 62, 68, 70, 72, 79, 80, 84, 85, 86, 89, 195, 245], "44": [46, 48, 53, 54, 55, 57, 58, 59, 61, 71, 72, 79, 80, 84, 86, 89, 91, 113, 114, 116, 117, 190, 195], "74": [46, 48, 53, 54, 57, 58, 59, 61, 72, 79, 84, 85, 89, 119, 243], "28": [46, 48, 53, 54, 55, 57, 58, 59, 61, 62, 72, 80, 84, 86, 89, 108, 120, 182, 194, 195, 196, 197, 199, 240, 243, 251, 252], "29": [46, 48, 53, 54, 55, 56, 57, 58, 59, 61, 71, 72, 79, 84, 85, 89, 243, 244, 254], "csaodf": 46, "clip": [46, 48, 53, 64, 79, 85, 86, 191, 192, 194, 195, 201, 213, 241, 242, 249], "csa_odfs_actor": 46, "odf_slic": [46, 47, 52, 53, 54, 58, 59, 64, 65, 66, 67, 71, 123, 124, 125, 128, 241], "plasma": [46, 47, 52, 54, 58, 59, 64, 65, 67, 123, 124, 125, 128], "scale": [46, 47, 52, 53, 54, 58, 59, 60, 64, 65, 67, 69, 71, 98, 99, 105, 107, 108, 123, 124, 125, 164, 177, 187, 189, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 214, 221, 228, 242, 250, 253, 258, 260], "csa_odf": 46, "n_frame": [46, 53, 72, 76, 92, 93, 95, 98, 102, 107, 116, 236], "lenglet": [46, 167, 195], "sapiro": [46, 167, 195], "yacoub": [46, 167, 195], "ugurbil": [46, 167, 195], "harel": [46, 167, 195], "554": [46, 57, 167, 195, 197, 246], "22365": [46, 167, 195], "424": [46, 58, 245], "reconst_csa": [46, 70, 240], "tournier": [47, 59, 84, 89, 146, 147, 184, 192, 194, 195, 201, 217, 241, 262], "tournier2007": [47, 59], "deconvolv": [47, 52, 88, 123, 124, 125, 176, 195], "proce": [47, 65, 195], "coher": [47, 61, 64, 73, 74, 87, 146, 182, 190, 193, 195, 238], "cuboid": [47, 59, 195, 201, 217], "mask_for_response_ssst": [47, 202], "kept": [47, 84, 93, 178, 187, 189, 192, 199], "ident": [47, 53, 56, 61, 99, 102, 163, 164, 187, 193, 195, 199, 200, 202, 236, 249, 253], "nvoxel": 47, "1254": [47, 54, 238], "tupl": [47, 91, 99, 139, 187, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 241, 244, 263], "00139919": [47, 64, 65], "0003007": [47, 64, 65], "416": [47, 54, 57, 58, 64, 65, 245], "7372408293461": [47, 64, 65], "0014": [47, 65], "00029": [47, 65], "prolat": [47, 65, 195, 197, 243], "radial": [47, 48, 58, 60, 65, 67, 182, 195, 199, 201, 218, 219, 243, 263], "21491283972219544": 47, "21197": 47, "single_tensor_odf": [47, 64, 202], "eval": [47, 49, 52, 53, 64, 69, 89, 123, 124, 125, 127, 167, 195, 197, 199, 201, 202, 218, 219], "evec": [47, 53, 64, 69, 127, 167, 195, 197, 201, 202, 218, 219], "response_odf": [47, 64], "1d": [47, 64, 117, 165, 187, 189, 191, 192, 194, 195, 196, 197, 198, 199, 201, 227, 255], "response_actor": [47, 64], "csd_respons": 47, "rm": [47, 48, 64, 72, 76], "driven": [47, 64, 195], "calibr": [47, 64, 113, 176, 182, 195, 201, 216, 217, 246], "eigenvector": [47, 58, 127, 187, 195, 197, 199, 201, 218, 219, 236, 241, 258], "altern": [47, 48, 52, 63, 76, 80, 84, 87, 97, 99, 105, 116, 123, 124, 125, 131, 177, 178, 187, 189, 195, 201, 219, 244, 262], "tax2014": [47, 64], "fat": [47, 64, 195], "limit": [47, 48, 57, 60, 71, 85, 176, 187, 189, 193, 194, 195, 196, 200, 201, 240, 241, 253], "converg": [47, 48, 57, 58, 64, 99, 121, 187, 189, 191, 195, 196], "recursive_respons": [47, 64, 202], "tenfit": [47, 48, 53, 61, 89, 165, 245], "fractional_anisotropi": [47, 53, 54, 89, 202], "mean_diffus": [47, 53, 54, 202, 238], "wm_mask": [47, 63], "logical_and": 47, "0011": 47, "peak_thr": [47, 64, 195], "init_fa": [47, 64, 195], "init_trac": [47, 64, 195], "0021": [47, 64, 195], "001": [47, 57, 59, 64, 65, 88, 103, 187, 189, 193, 195, 199, 201], "pancak": [47, 64], "response_sign": 47, "on_spher": [47, 64, 195, 202], "csd_recursive_respons": 47, "recurs": [47, 64, 182, 187, 189, 195], "portion": [47, 57, 64, 195], "55": [47, 48, 53, 54, 55, 57, 58, 59, 61, 64, 65, 68, 69, 72, 79, 80, 84, 85, 86, 89, 138, 139, 141, 195, 237, 243], "85": [47, 48, 53, 54, 55, 57, 58, 59, 60, 64, 65, 69, 72, 79, 80, 84, 85, 86, 89, 101, 119, 127, 176, 189, 195, 197, 243, 250], "csd_fit": [47, 72, 79, 80, 84, 85, 86, 89], "53": [47, 48, 54, 57, 58, 59, 60, 61, 69, 72, 84, 89, 99, 165, 176, 195, 201, 218, 219, 245, 255], "473": [47, 54, 57, 58, 131, 132, 245], "4727": [47, 57, 72, 89], "20it": [47, 48, 54, 57, 58, 59, 72, 79, 80, 84, 89], "4703": [47, 54, 57, 72, 84], "82it": [47, 48, 54, 55, 57, 58, 59, 72, 80, 84, 85, 86, 89], "csd_odf": 47, "30x30": 47, "fodf_spher": [47, 59, 64, 65, 71], "csd_peak": [47, 131], "fodf_peak": [47, 64, 65], "getproperti": [47, 65], "setopac": [47, 65], "csd_both": 47, "calamant": [47, 59, 84, 89, 192, 195, 262], "connelli": [47, 59, 84, 89, 192, 195, 262], "fibr": [47, 59, 190, 192, 195, 201, 217, 262], "super": [47, 59, 118, 182, 192, 195, 201, 217, 262], "1459": [47, 57, 59, 192, 195, 240, 262], "1472": [47, 54, 57, 59, 192, 195, 240, 262], "2007": [47, 48, 51, 57, 59, 64, 68, 146, 147, 184, 192, 195, 197, 201, 217, 249, 262], "vo": [47, 64], "viergev": [47, 48, 64], "86": [47, 48, 54, 57, 58, 59, 61, 64, 72, 80, 84, 86, 89, 105, 119, 243], "reconst_csd": [47, 70, 240], "expans": [48, 58, 62, 63, 176, 189, 195, 197], "dt": [48, 49, 90, 127, 176, 193, 195, 197, 198, 258], "biolog": [48, 57, 61, 176, 195], "kt": [48, 49, 127, 176, 195, 197, 202], "jensen2005": [48, 60, 176], "character": [48, 49, 53, 55, 60, 176, 195, 197], "microstructur": [48, 49, 54, 55, 57, 58, 60, 62, 63, 176, 182, 194, 195, 201, 219, 238], "heterogen": [48, 127, 176, 189], "jensen2010": [48, 176], "moreov": [48, 55, 60, 118, 176, 262], "concret": [48, 49, 176, 201], "biophys": [48, 49, 53, 60, 61, 176, 195, 199], "axon": [48, 49, 53, 54, 58, 60, 61, 127, 176, 195, 247], "tortuos": [48, 49, 176, 202, 238], "fierem2011": [48, 49, 176], "example_reconst_dki_micro": [48, 147], "rotat": [48, 61, 71, 72, 98, 99, 163, 164, 176, 177, 187, 189, 193, 195, 196, 197, 199, 201, 203, 240, 246, 247], "netohe2015": [48, 60, 176], "express": [48, 55, 57, 65, 66, 163, 164, 189, 190, 195, 196, 199, 201, 241, 262], "s_": [48, 57, 102, 195, 197], "bd": [48, 57, 195, 197], "mathbf": [48, 53, 55, 57, 62, 63, 102, 162, 164, 176, 195, 199, 258, 259, 260], "s_0": [48, 53, 55, 57, 62, 63, 176, 195, 197], "absenc": [48, 57], "sensit": [48, 49, 57, 58, 60, 69, 107, 162, 195, 245], "sum_": [48, 63, 65, 102, 189, 195, 262], "n_": [48, 76, 195], "d_": [48, 53, 55, 102, 176, 195, 258, 259], "ij": [48, 195, 258, 259], "w_": [48, 195], "ijkl": [48, 195], "antipod": [48, 53, 176, 189, 190, 195, 243], "symmetri": [48, 53, 176, 189, 190, 195, 262], "wijkl": [48, 197], "fulli": [48, 76, 103, 107, 181, 189, 195, 197], "egin": [48, 53, 62, 63, 71, 195], "xxxx": [48, 195], "yyyi": [48, 195], "zzzz": [48, 195], "xxxy": [48, 195], "xxxz": [48, 195], "xyyi": [48, 195], "yyyz": [48, 195], "xzzz": [48, 195], "yzzz": [48, 195], "xxyi": [48, 195], "xxzz": [48, 195], "yyzz": [48, 195], "xxyz": [48, 195], "xyyz": [48, 195], "xyzz": [48, 195], "compare_map": [48, 58, 202], "gaussian_filt": [48, 49], "fraw": [48, 49, 50, 51, 56, 57, 58, 59, 60, 67, 68], "taxcmw2015": 48, "netohe2012": 48, "favor": 48, "kernel": [48, 64, 65, 71, 72, 99, 108, 187, 194, 195, 201, 204, 208, 253], "fwhm": [48, 49], "pioneer": 48, "gauss_std": [48, 49], "data_smooth": [48, 49], "dkifit": [48, 49], "3121": [48, 54, 57], "338": [48, 54, 57, 58, 245], "80it": [48, 54, 57, 58, 59, 68, 80, 85, 89], "69": [48, 54, 57, 58, 59, 61, 72, 79, 84, 85, 89, 101, 105, 243], "337": [48, 54, 57, 58, 245], "16it": [48, 54, 55, 57, 58, 59, 72, 84, 86, 89], "109": [48, 54, 57, 58, 59, 135, 243], "365": [48, 58, 253], "11it": [48, 54, 57, 58, 59, 72, 80, 84, 85, 86, 89], "151": [48, 57, 58, 119], "386": [48, 54, 57, 58, 245], "19it": [48, 54, 57, 58, 59, 79, 80, 84, 85, 86, 89], "190": [48, 54, 57, 58, 244], "379": [48, 54, 58, 245], "52it": [48, 54, 55, 57, 58, 59, 79, 80, 84, 86, 89], "228": [48, 54, 57, 58, 245], "368": [48, 58, 245], "94it": [48, 51, 54, 55, 57, 58, 59, 72, 79, 86, 89], "265": [48, 57, 58, 59, 195, 244], "363": [48, 57, 58, 59, 245], "36it": [48, 54, 55, 57, 58, 59, 72, 79, 84, 85, 86, 89], "302": [48, 54, 57, 58, 245], "358": [48, 57, 58, 245], "74it": [48, 54, 57, 58, 59, 72, 79, 80, 84, 85, 86, 89], "340": [48, 57, 58, 245], "364": [48, 57, 58, 245], "56it": [48, 54, 55, 57, 58, 59, 68, 72, 79, 84, 86, 89], "377": [48, 57, 58, 59, 167, 195, 245], "350": [48, 54, 57, 58, 245], "38it": [48, 54, 57, 58, 59, 72, 79, 80, 85, 86, 89], "415": [48, 57, 58, 245], "87it": [48, 54, 55, 57, 58, 59, 71, 79, 84, 89], "452": [48, 54, 57, 58, 116, 120, 245], "361": [48, 54, 58, 242, 245], "69it": [48, 54, 55, 57, 58, 59, 71, 79, 80, 84, 85, 86], "489": [48, 57, 245], "362": [48, 54, 57, 58, 62, 63, 65, 85, 88, 190, 195, 245], "89it": [48, 54, 55, 57, 58, 59, 72, 80, 84, 85, 89], "17": [48, 50, 54, 57, 58, 59, 61, 67, 72, 80, 84, 86, 89, 121, 189, 194, 195, 243, 247], "526": [48, 54, 59, 245], "330": [48, 57, 58, 245], "84it": [48, 54, 57, 58, 59, 71, 79, 80, 84, 85, 86, 89], "560": [48, 246], "267": [48, 57, 58, 119, 244], "31it": [48, 54, 55, 57, 58, 59, 72, 79, 80, 84, 85, 86, 89], "601": [48, 50, 57, 246], "29it": [48, 54, 57, 58, 59, 72, 79, 84, 86], "636": [48, 54, 252], "309": [48, 57, 58, 245], "60it": [48, 54, 55, 57, 58, 59, 79, 84, 85, 89], "676": [48, 54, 57, 236, 241], "332": [48, 57, 58, 238], "99it": [48, 54, 55, 57, 58, 59, 72, 84, 86, 89], "23": [48, 54, 55, 56, 57, 58, 59, 61, 70, 72, 79, 80, 84, 85, 86, 89, 165, 176, 183, 187, 195, 243, 244, 255], "713": [48, 54, 57, 236], "341": [48, 58, 245], "749": [48, 57, 59, 189, 236], "343": [48, 57, 58, 245], "40it": [48, 54, 55, 57, 58, 59, 79, 84, 89], "785": [48, 54, 55, 57, 248], "336": [48, 54, 57, 58, 93, 245], "37it": [48, 54, 55, 57, 58, 59, 79, 80, 84, 89], "823": [48, 55, 57, 195, 201, 218], "348": [48, 54, 57, 58, 245], "14it": [48, 54, 55, 57, 58, 59, 80, 84, 86, 89], "859": [48, 54, 57, 120, 121, 238], "10it": [48, 54, 57, 58, 59, 72, 84, 89], "894": [48, 237], "18it": [48, 54, 57, 58, 59, 72, 79, 84, 86, 89], "935": [48, 57, 238], "357": [48, 54, 58, 112, 120, 245], "54it": [48, 54, 55, 57, 58, 59, 72, 80, 84, 89], "972": [48, 57, 238, 243], "355": [48, 54, 58, 245], "00it": [48, 54, 57, 58, 59, 79, 84, 85, 89], "1008": [48, 57, 238], "334": [48, 54, 57, 58, 245], "73it": [48, 54, 55, 57, 58, 59, 72, 84, 86, 89], "1042": [48, 54, 57, 239], "325": [48, 54, 57, 58, 89, 250], "1079": [48, 54, 238], "09it": [48, 54, 57, 58, 59, 72, 80, 84, 85, 89], "36": [48, 51, 54, 55, 57, 58, 59, 61, 62, 68, 72, 80, 84, 86, 89, 105, 189, 195, 243], "1120": [48, 57, 238], "353": [48, 54, 57, 58, 241], "37": [39, 42, 48, 54, 55, 57, 58, 59, 61, 72, 79, 84, 85, 89, 100, 131, 243], "1158": [48, 54, 57, 238], "360": [48, 54, 57, 58, 91, 113, 114, 245], "81it": [48, 54, 57, 58, 59, 72, 79, 84, 86, 89], "1195": [48, 57, 238], "344": [48, 54, 57, 58, 238], "88it": [48, 54, 57, 58, 59, 71, 84], "21it": [48, 54, 55, 57, 58, 59, 72, 79, 84, 89], "41": [48, 50, 54, 55, 57, 58, 59, 61, 65, 72, 80, 84, 85, 86, 89, 107, 108, 109, 119, 177, 182, 191, 242, 243, 254], "1267": [48, 50, 57, 238], "349": [48, 57, 58, 59, 245], "1303": [48, 54, 57, 239], "352": [48, 54, 58, 245], "1340": [48, 57, 240], "04": [48, 54, 55, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 120, 132, 195, 255], "1376": [48, 57, 240], "1420": [48, 57, 241], "370": [48, 58, 245], "1458": [48, 57, 240], "1495": [48, 57, 240], "86it": [48, 54, 55, 57, 58, 59, 72, 80, 84, 85, 86, 89], "49": [48, 54, 55, 57, 58, 59, 61, 72, 76, 79, 80, 84, 85, 86, 89, 127, 137, 182, 195, 243, 250], "1533": [48, 54, 57, 89, 241], "12it": [48, 54, 55, 57, 58, 59, 72, 80, 84, 85, 89], "1572": [48, 57, 241], "76it": [48, 54, 55, 57, 58, 59, 72, 79, 84, 89], "52": [48, 50, 54, 55, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 139, 197, 243, 248], "1610": [48, 54, 57, 241], "42it": [48, 54, 57, 58, 59, 72, 79, 80, 84, 86, 89], "1646": [48, 54, 57, 252], "1682": [48, 54, 57, 241], "354": [48, 54, 57, 58, 246], "1718": [48, 242, 247], "59it": [48, 54, 57, 58, 59, 72, 79, 84, 86, 89], "1754": [48, 57, 59, 195, 242], "71it": [48, 54, 57, 58, 59, 68, 72, 84, 86, 89], "1792": [48, 57, 247], "1835": [48, 54, 247], "375": [48, 57, 58, 239], "04it": [48, 51, 54, 57, 58, 59, 71, 84, 89], "1877": [48, 54, 247], "387": [48, 57, 58, 236, 241], "78it": [48, 54, 56, 57, 58, 59, 72, 79, 84, 89], "1929": [48, 57, 248], "426": [48, 58, 59, 67, 245], "1977": [48, 57, 248], "15it": [48, 54, 57, 58, 59, 72, 80, 84, 85, 89], "2022": [48, 54, 101, 114, 165, 190, 194, 196, 201, 214, 248, 253, 254], "412": [48, 54, 57, 58, 245], "2064": [48, 57], "402": [48, 54, 58, 245], "07it": [48, 54, 57, 58, 59, 72, 79, 80, 84, 85, 86, 89], "2105": [48, 49, 57, 249], "2146": [48, 59, 249], "397": [48, 54, 57, 58, 245], "2186": [48, 57], "391": [48, 57, 58, 59, 245], "2226": [48, 57, 250], "75it": [48, 54, 55, 57, 58, 59, 72, 80, 84, 86], "2266": [48, 57, 59, 250], "98it": [48, 54, 57, 58, 59, 72, 79, 80, 84, 85, 86, 89], "2305": [48, 253], "2349": [48, 54, 57, 252], "32it": [48, 54, 57, 58, 59, 72, 80, 84, 89], "2388": [48, 54], "380": [48, 57, 58, 245], "78": [48, 54, 57, 58, 59, 72, 80, 84, 86, 89, 119, 243], "2427": 48, "2464": [48, 253], "2501": [48, 57], "2536": [48, 54, 57, 253], "83": [48, 54, 57, 58, 59, 61, 72, 80, 84, 85, 86, 89, 243], "2579": [48, 254], "335": [48, 54, 57, 58, 59, 195, 245], "84": [48, 54, 55, 57, 58, 59, 61, 72, 79, 84, 89, 119, 243, 244], "2622": [48, 189, 254], "61it": [48, 54, 55, 57, 58, 59, 71, 72, 84, 85, 89], "2660": [48, 54], "87": [48, 53, 54, 55, 57, 58, 59, 61, 68, 69, 72, 79, 84, 85, 89, 105, 199, 243, 255], "2700": [48, 254], "44it": [48, 54, 55, 57, 58, 59, 68, 84, 85, 86, 89], "2738": 48, "93it": [48, 54, 55, 57, 58, 59, 84], "89": [48, 54, 55, 57, 58, 59, 61, 72, 84, 86, 89, 91, 105, 113, 114, 119, 121, 167, 195, 237, 243, 252], "2776": 48, "90": [48, 52, 54, 55, 57, 58, 59, 60, 64, 66, 67, 71, 72, 79, 80, 84, 85, 89, 92, 102, 123, 124, 125, 127, 128, 192, 195, 197, 201, 233, 234, 243], "2813": [48, 57], "49it": [48, 54, 57, 58, 59, 71, 72, 80, 86, 89], "91": [48, 54, 57, 58, 59, 60, 61, 72, 79, 80, 84, 85, 86, 89, 101, 190, 194, 243], "2851": [48, 54, 57], "93": [48, 54, 57, 58, 59, 61, 72, 79, 80, 84, 85, 86, 89, 119, 182, 237, 241], "2888": [48, 57], "2925": 48, "26it": [48, 54, 55, 57, 58, 59, 72, 80, 84, 89], "95": [48, 54, 55, 57, 58, 59, 69, 71, 72, 76, 79, 80, 84, 89, 95, 189, 195, 201, 218, 219, 243], "2962": [48, 57], "02it": [48, 54, 57, 58, 59, 72, 80, 84, 89], "95it": [48, 54, 57, 58, 59, 72, 84, 85, 89], "97": [48, 54, 55, 57, 58, 59, 61, 72, 84, 86, 89, 105, 119, 139, 195, 197, 243, 247, 255], "3038": [48, 57], "367": [48, 57, 58, 238, 245], "62it": [48, 54, 57, 58, 59, 72, 79, 84, 85, 89], "99": [48, 54, 55, 57, 58, 59, 60, 61, 72, 79, 80, 84, 85, 86, 89, 101, 105, 127, 176, 189, 195, 197, 243], "3086": [48, 57], "396": [48, 54, 57, 58, 245], "72it": [48, 51, 54, 55, 57, 58, 59, 72, 89], "359": [48, 54, 58, 60, 195, 245], "85it": [48, 54, 55, 57, 58, 59, 79, 84, 85, 89], "diffusionkurtosisfit": [48, 202], "rd": [48, 167, 168, 195, 201, 202, 218, 219], "diffusionkurtosisifit": 48, "analog": [48, 49, 187], "decoupl": [48, 60], "term": [48, 57, 58, 63, 64, 76, 116, 121, 162, 176, 187, 195, 244, 261], "veraar2011": 48, "fit_label": [48, 58, 200], "map_kwarg": [48, 58, 200], "2e": [48, 64, 195], "diffusion_tensor_measures_from_dti_and_dki": 48, "underestim": [48, 55], "ak": [48, 189, 195, 201, 202], "rk": [48, 195, 201, 202], "kurtosis_tensor_standard_measur": 48, "confin": [48, 189, 195], "compartment": [48, 55, 60, 127, 195], "myelin": [48, 49, 53], "sheath": 48, "pronounc": 48, "perpendicularli": 48, "amplitud": [48, 55, 162, 195, 258], "deep": [48, 165, 182, 194, 201, 214, 249, 253], "band": [48, 195], "dark": 48, "induc": [48, 72, 195], "captur": [48, 60, 107, 127, 162, 194], "decai": [48, 57, 195, 258], "consequ": [48, 57, 69, 127, 176], "tendenc": [48, 198], "inadequ": 48, "bias": [48, 84, 89, 101, 178, 189, 199, 201, 234], "perron2015": 48, "netohe2018": [48, 60], "overcom": [48, 59, 60, 90, 195], "powder": [48, 60], "physic": [48, 57, 58, 63, 69, 163, 176, 187, 189, 195, 197, 200, 201, 220, 261], "plausibl": [48, 89, 195], "delaha2020": 48, "though": [48, 105, 187, 195, 199, 258, 259], "fit_method": [48, 57, 63, 69, 195, 201, 218, 219, 253], "cl": [48, 49, 195], "cwl": [48, 195], "unconstrain": [48, 63, 189], "unplaus": 48, "mosek": [48, 58, 63], "solver": [48, 58, 59, 63, 187, 189, 195, 241], "cvxpy_solv": [48, 58, 63, 195], "greatli": [48, 58], "runtim": [48, 58, 130, 131, 236, 238, 245], "solut": [48, 50, 58, 59, 63, 99, 121, 138, 167, 182, 187, 189, 195, 199], "atyp": 48, "scenario": [48, 105], "counterpart": 48, "unexpect": [48, 55, 240], "qualit": [48, 247], "dkimodel_plu": 48, "dkifit_plu": 48, "43it": [48, 54, 55, 57, 58, 59, 67, 72, 80, 84, 89], "77it": [48, 54, 55, 57, 58, 59, 72, 84, 89], "50it": [48, 54, 55, 57, 58, 59, 72, 84, 85, 89], "46it": [48, 54, 55, 57, 58, 59, 72, 79, 80, 84, 89], "97it": [48, 54, 57, 58, 59, 72, 84, 89], "108": [48, 54, 57, 58, 59, 191, 243], "90it": [48, 51, 54, 55, 57, 58, 59, 68, 72, 80, 84, 85, 89], "114": [48, 54, 57, 58, 59, 130, 131, 243], "24it": [48, 54, 55, 57, 58, 59, 72, 79, 84, 86, 89], "127": [48, 54, 57, 58, 59, 105, 108, 139, 243], "134": [48, 54, 57, 58, 59, 182, 243, 250], "01it": [48, 54, 55, 57, 58, 59, 72, 84, 85, 86, 89], "147": [48, 57, 58], "153": [48, 54, 57, 58, 237, 252], "68it": [48, 54, 57, 58, 59, 72, 79, 80, 84, 85, 86], "167": [48, 54, 57, 58, 119, 244], "173": [48, 50, 57, 58, 244], "187": [48, 54, 57, 58], "194": [48, 54, 57, 58, 241], "201": [48, 57, 58, 77, 86, 244], "207": [48, 58, 244], "67it": [48, 54, 55, 57, 58, 59, 68, 72, 84, 85, 89], "213": [48, 54, 57, 58, 244], "220": [48, 54, 56, 57, 58, 70, 194, 245], "27it": [48, 54, 55, 57, 58, 59, 72, 84, 86, 89], "227": [48, 57, 58, 76, 77, 194, 244], "234": [48, 57, 58, 137, 141, 167, 244], "241": [48, 54, 57, 58, 245], "248": [48, 54, 57, 58, 245], "22it": [48, 54, 55, 57, 58, 59, 71, 72, 79, 84, 86, 89], "96it": [48, 54, 55, 57, 58, 59, 72, 84, 85, 89], "262": [48, 54, 57, 58, 195, 244], "83it": [48, 54, 55, 57, 58, 59, 68, 72, 79, 80, 84, 89], "268": [48, 54, 57, 58, 64, 118, 120, 195, 244], "66it": [48, 54, 57, 58, 59, 72, 79, 80, 84, 85, 86, 89], "275": [48, 54, 57, 58, 244], "70it": [48, 54, 57, 58, 59, 71, 72, 84, 85, 89], "282": [48, 54, 57, 58, 245], "288": [48, 57, 58, 176, 197, 201, 220, 244], "47it": [48, 54, 55, 57, 58, 59, 72, 84, 85, 86, 89], "294": [48, 54, 57, 58], "51it": [48, 54, 55, 57, 58, 59, 71, 84, 86], "306": [48, 57, 58, 245], "313": [48, 54, 57, 58, 249], "319": [48, 54, 57, 58, 245], "57it": [48, 54, 57, 58, 59, 72, 80, 84, 85, 89], "331": [48, 54, 57, 58, 245], "64it": [48, 54, 55, 57, 58, 59, 84, 85, 86, 89], "08it": [48, 54, 57, 58, 59, 72, 84, 85, 89], "345": [48, 50, 57, 58, 62, 63, 195, 245], "351": [48, 57, 58, 238], "45it": [48, 50, 54, 55, 57, 58, 59, 67, 72, 84, 86, 89], "372": [48, 54, 58, 245], "79it": [48, 54, 55, 57, 58, 59, 72, 80, 84, 86, 89], "17it": [48, 54, 57, 58, 59, 72, 79, 84, 86, 89], "393": [48, 58, 245], "28it": [48, 54, 57, 58, 59, 67, 71, 72, 79, 80, 86, 89], "13it": [48, 54, 57, 58, 59, 72, 79, 84, 89], "407": [48, 57, 58, 245], "06it": [48, 54, 57, 58, 59, 72, 79, 86, 89], "414": [48, 54, 57, 58, 246], "421": [48, 54, 57, 58, 195, 245], "427": [48, 57, 58, 245], "433": [48, 57, 58, 245], "439": [48, 58, 245], "445": [48, 58, 245], "451": [48, 58, 167, 245], "457": [48, 58], "463": [48, 58, 245], "469": [48, 54, 58, 245], "475": [48, 54, 58, 245], "25it": [48, 54, 57, 58, 59, 68, 72, 79, 80, 84, 85, 89], "482": [48, 54, 57, 245], "488": [48, 54, 57, 167, 245], "495": [48, 245], "501": [48, 54, 57, 245], "507": [48, 54, 57, 245], "514": [48, 52, 54, 57, 123, 124, 125, 245], "520": [48, 54, 57, 245], "30it": [48, 54, 55, 57, 58, 59, 71, 72, 80, 84], "533": [48, 49, 54, 57, 236], "540": [48, 54, 57, 245], "546": [48, 54, 57], "552": [48, 57, 246], "559": [48, 57, 246], "566": [48, 57, 195, 197, 246], "572": [48, 57, 236], "579": [48, 54, 55, 57, 246], "585": [48, 54, 57, 246], "591": [48, 54, 57, 137, 139, 238], "597": [48, 57, 64, 246], "604": [48, 49, 54, 57, 236], "611": [48, 54, 57, 236], "617": [48, 51, 54, 57, 68, 195, 236], "03it": [48, 54, 57, 58, 59, 72, 80, 84, 89], "623": [48, 57, 59, 236], "629": [48, 51, 57, 68, 195, 236], "642": [48, 54, 241], "649": [48, 54, 57, 85, 236], "655": [48, 54, 57, 236], "661": [48, 54, 236], "668": [48, 57, 247], "674": [48, 54, 57, 236], "681": [48, 54, 236], "687": [48, 54], "693": [48, 54, 59, 236], "05it": [48, 54, 55, 57, 58, 59, 71, 72, 84, 86, 89], "707": [48, 54, 59, 236, 247], "719": [48, 54, 57, 236], "91it": [48, 54, 55, 57, 58, 59, 72, 79, 80, 84, 85, 89], "726": [48, 54, 57, 89, 95, 236], "733": [48, 54, 55, 57, 236], "739": [48, 236], "23it": [48, 54, 55, 57, 58, 59, 68, 84, 89], "745": [48, 54, 57, 237], "752": [48, 54, 55, 57, 236], "759": [48, 55, 57, 241], "41it": [48, 54, 57, 58, 59, 72, 79, 86, 89], "766": [48, 54, 57, 68, 236], "772": [48, 54, 57, 236], "779": [48, 55], "791": [48, 54, 57, 59, 240], "797": [48, 57, 237], "803": [48, 57, 237], "809": [48, 237], "815": [48, 237], "821": [48, 55, 57, 237], "828": [48, 238], "834": [48, 54], "840": [48, 54, 237], "847": [48, 57, 59, 237], "34it": [48, 54, 57, 58, 59, 72, 84, 86, 89], "865": [48, 51, 57, 68, 195, 238], "871": [48, 57, 238], "878": [48, 54, 238], "884": [48, 54, 238], "53it": [48, 54, 55, 57, 58, 59, 72, 79, 84, 85, 89], "891": [48, 57, 237, 238], "897": [48, 54, 57, 238], "903": [48, 54, 57, 59], "909": [48, 54, 238], "916": [48, 54, 57, 237], "922": [48, 57, 237], "928": [48, 54, 57, 241], "934": [48, 238], "940": [48, 54, 238], "946": [48, 54, 57, 195, 238], "953": [48, 54, 57, 238], "960": [48, 57, 238], "966": [48, 57, 238], "978": [48, 57, 197, 238], "984": [48, 57, 238], "990": [48, 57, 238], "996": [48, 57, 238], "1014": [48, 54, 238], "1020": [48, 54, 238], "1026": [48, 54, 57], "1032": [48, 57, 238], "1039": [48, 54, 57, 238], "1045": [48, 238], "1052": [48, 238], "1058": [48, 54, 57, 76, 199, 238], "1065": [48, 187, 238], "1071": [48, 59, 238], "1078": [48, 57, 238], "1085": [48, 54, 59, 238], "1091": [48, 54, 57, 238], "1097": [48, 54, 55, 57, 238], "1103": [48, 54, 57, 195, 238], "1109": [48, 54, 57, 64, 86, 195, 238], "1116": [48, 54, 57, 238], "58it": [48, 51, 54, 57, 58, 59, 72, 84, 89], "1122": [48, 54, 195, 238], "1128": [48, 238], "1134": [48, 57, 238], "92it": [48, 54, 57, 58, 59, 72, 84, 89], "1141": [48, 54, 59, 238], "1147": [48, 54, 238], "1153": [48, 54, 57, 238], "1159": [48, 238], "1166": [48, 54, 57, 70, 238], "1173": [48, 54, 238], "1180": [48, 57, 239], "1186": [48, 54, 57, 238], "1193": [48, 57, 238], "1206": [48, 57, 238], "1213": [48, 54, 238], "1219": [48, 238], "1225": [48, 59, 238], "55it": [48, 54, 55, 57, 58, 59, 72, 80, 84, 86, 89], "1237": [48, 54, 247], "1243": [48, 54, 57, 238], "1250": [48, 54, 238], "1257": [48, 57, 167, 238], "1263": [48, 57, 238], "1269": [48, 54, 57, 238], "1276": [48, 54, 57], "35it": [48, 54, 57, 58, 59, 80, 84, 89], "1283": [48, 54, 57, 241], "1290": [48, 239], "1296": [48, 54, 241], "1302": [48, 252], "1308": [48, 54, 68, 239], "1314": [48, 57, 239], "1320": [48, 247], "1326": [48, 54, 240], "1333": [48, 54, 57, 239], "1339": [48, 57, 240], "1346": [48, 55, 57, 239], "1352": [48, 57, 239], "1358": [48, 50, 57, 240], "48it": [48, 54, 55, 57, 58, 59, 68, 72, 79, 84, 85, 89], "1365": [48, 57], "1378": [48, 57, 240], "1385": [48, 59, 63, 240], "1392": [48, 57, 240], "1399": [48, 54, 57, 240], "1405": [48, 54, 57, 59, 240], "1411": [48, 57, 240], "1418": [48, 57, 240, 254], "1424": [48, 57, 240], "1430": [48, 54, 240], "1437": [48, 57, 240], "1444": [48, 54, 57, 252], "1450": [48, 54, 57, 240], "1457": [48, 240], "1464": [48, 57, 240], "1471": [48, 240], "1478": [48, 57, 240], "1484": [48, 54, 57, 240], "1490": [48, 57, 240], "1497": [48, 57, 240], "1504": [48, 54, 240], "1511": [48, 57, 241], "1518": [48, 54, 241], "1525": [48, 57], "1532": [48, 241], "1539": [48, 57, 241], "1546": [48, 241], "1553": [48, 57], "1560": [48, 241], "1567": [48, 57, 68, 241], "1573": [48, 57, 59, 241], "1579": [48, 54, 241], "1586": [48, 57, 241], "1592": [48, 57, 241], "1599": [48, 57], "1605": [48, 54, 57, 242], "1611": [48, 241], "1618": [48, 57, 241], "1624": [48, 241], "1631": [48, 241], "1637": [48, 241], "33it": [48, 54, 57, 58, 59, 72, 79, 80, 85, 86, 89], "1644": [48, 57, 241], "1651": [48, 241], "1658": [48, 54, 57, 241], "1665": [48, 54, 57], "1672": [48, 54, 57, 252], "1679": [48, 57, 241], "1686": [48, 241], "1693": [48, 54, 57, 242], "1700": [48, 166, 242], "1706": [48, 54, 242], "1713": [48, 57, 59, 247], "1720": [48, 242], "1727": [48, 57, 59, 242], "1734": [48, 242], "1741": [48, 57, 242], "1747": [48, 57, 247], "1761": [48, 54, 247], "1767": [48, 54, 247], "1780": [48, 57, 247], "1786": [48, 57, 247], "1793": [48, 249], "1807": [48, 54, 247], "1813": [48, 247], "1820": [48, 54, 57], "1827": [48, 247], "1834": [48, 57, 247], "63it": [48, 54, 55, 57, 58, 59, 72, 80, 84, 85, 89], "1840": [48, 57, 248], "1847": [48, 54, 252], "1854": [48, 54, 57, 247], "1861": [48, 249], "1868": [48, 54, 57], "1875": [48, 247], "1882": [48, 57, 247], "1889": [48, 54, 247], "1895": [48, 252], "1901": [48, 57, 247], "1907": [48, 57, 247], "1914": [48, 247], "1921": [48, 57], "1928": [48, 54, 247], "1934": [48, 54, 253], "1940": [48, 54, 247], "1946": [48, 54, 247], "1953": [48, 57, 71, 89, 248], "1959": [48, 57, 248], "1965": [48, 57, 176, 197, 199, 201, 220, 248], "1972": [48, 57, 64, 248], "1979": [48, 57, 248], "1986": [48, 248], "1992": [48, 59, 64, 195, 248], "1998": [48, 57, 248], "2005": [48, 54, 57, 60, 65, 69, 146, 147, 176, 184, 187, 195, 201, 218, 219, 248], "2025": [48, 250], "2032": [48, 57], "2039": [48, 249], "2046": [48, 57, 250], "2053": [48, 54, 249], "2060": [48, 57, 249], "2067": [48, 249], "2074": [48, 57, 249], "2081": [48, 57, 249], "2087": [48, 57], "2094": [48, 57, 68, 249], "2101": [48, 57, 249], "2108": [48, 249], "2115": [48, 57, 250], "2122": [48, 54, 249], "2129": [48, 54, 57, 249], "2135": [48, 57, 249], "65it": [48, 54, 55, 57, 58, 59, 79, 84, 85, 86, 89], "2142": [48, 54, 57, 249], "2149": [48, 54, 57, 249], "2156": [48, 249], "2163": [48, 54, 57, 249], "2170": [48, 57, 249], "2177": [48, 57, 249], "2184": [48, 57], "2191": [48, 57, 249], "2198": [48, 250], "2205": [48, 54, 57, 249], "2212": [48, 249], "2219": [48, 57, 250], "2233": [48, 195, 250], "2240": [48, 54, 57, 250], "2247": [48, 250], "2254": [48, 54, 57, 250], "2260": [48, 57, 250], "2267": [48, 250], "2274": [48, 57, 252], "2281": [48, 54], "2288": 48, "2295": [48, 54, 57, 251], "2302": [48, 57], "2308": [48, 54, 57, 59], "2315": [48, 54, 251], "2322": [48, 54, 57, 59], "2329": 48, "2336": [48, 57], "2342": [48, 54, 57, 253], "2348": [48, 57, 59, 252], "2355": 48, "2362": [48, 57], "2369": [48, 57, 254], "2376": 48, "2383": [48, 57, 253], "2390": [48, 253], "2397": [48, 57], "2404": [48, 253], "2410": [48, 54, 253], "2417": [48, 253], "2424": [48, 57, 254], "2431": [48, 253], "2438": [48, 57, 253], "2445": [48, 57, 59], "2452": 48, "2459": [48, 54, 57], "2465": [48, 57], "39it": [48, 54, 55, 57, 58, 59, 72, 79, 84, 86, 89], "2472": [48, 253], "2478": [48, 54, 253], "2484": [48, 54, 253], "2491": [48, 57], "2498": 48, "2505": [48, 57], "2511": 48, "2518": [48, 57, 253], "2525": [48, 54, 253], "2531": [48, 254], "2538": [48, 57], "82": [48, 54, 55, 57, 58, 59, 61, 72, 79, 84, 85, 89, 119, 243], "2545": [48, 54, 253], "2552": [48, 57], "2559": [48, 57, 254], "2565": [48, 57, 254], "2571": [48, 57], "2577": [48, 54, 57, 59, 254], "2583": 48, "2589": [48, 68, 254], "2595": [48, 254], "2601": 48, "2607": [48, 54, 57], "2614": 48, "2620": 48, "2627": [48, 57, 254], "2633": [48, 57, 68], "2640": 48, "2646": [48, 59, 68], "2653": [48, 57], "2667": [48, 57, 59, 254], "2674": [48, 57, 254], "2680": [48, 57], "2686": 48, "2693": [48, 54, 57, 254], "2706": 48, "2712": 48, "2719": [48, 57, 59], "2726": [48, 255], "2732": 48, "2739": [48, 57, 255], "2746": [48, 57, 59], "2753": [48, 57, 255], "2760": [48, 54], "2767": [48, 54, 57, 255], "2774": 48, "2780": [48, 255], "2786": 48, "2792": 48, "2799": [48, 57, 59], "2805": [48, 57], "2811": [48, 57], "2817": [48, 57], "2824": 48, "2830": 48, "2837": [48, 54, 57], "2843": [48, 54, 57], "2850": 48, "92": [48, 54, 55, 57, 58, 59, 61, 64, 71, 72, 84, 89, 195, 197, 245], "2856": [48, 59], "2863": [48, 57], "2869": [48, 57, 59], "2876": [48, 57], "2882": [48, 57], "2889": [48, 54, 57], "2896": [48, 54, 57], "2903": [48, 54], "2909": 48, "2915": [48, 59], "2921": [48, 59], "2927": 48, "2934": [48, 57], "2940": [48, 57, 59], "2946": [48, 57], "2952": 48, "2959": [48, 57], "2965": [48, 57], "2971": 48, "2977": 48, "2983": [48, 54, 59], "2989": [48, 54, 57], "2996": [48, 57, 59], "3002": [48, 54], "3009": [48, 57], "3016": [48, 54, 57], "3023": [48, 54, 57], "3029": [48, 54, 57], "3036": [48, 57], "98": [48, 54, 57, 58, 59, 68, 72, 79, 80, 84, 85, 89, 139, 178, 182, 199, 200, 201, 234, 243], "3043": [48, 57], "3050": 48, "3057": [48, 57], "3064": [48, 59], "3071": [48, 54, 57], "3084": [48, 54, 55, 57], "3090": [48, 54, 57, 59], "3097": [48, 57], "3103": [48, 54, 57], "3110": 48, "3117": [48, 57], "outlier": [48, 69, 94, 96, 113, 146, 187, 195, 201, 218, 219, 241], "pure": [48, 164, 191], "kurtosis_tensor_standard_measures_plu": 48, "typic": [48, 63, 65, 98, 99, 172, 193, 195, 196, 197, 198, 199, 201, 258, 259], "obviat": 48, "dkifit_noisi": 48, "dkifit_noisy_plu": 48, "kurtosis_tensor_standard_measures_noisi": 48, "374": [48, 54, 58, 245], "117": [48, 54, 57, 58, 101, 102, 105, 119, 169, 177, 187, 190, 197, 201, 230, 243], "376": [48, 54, 58, 245], "155": [48, 57, 58, 72, 245], "373": [48, 57, 58, 245], "233": [48, 54, 57, 58, 236, 245], "381": [48, 58, 121, 245], "273": [48, 54, 57, 58, 244], "311": [48, 54, 57, 58, 245], "378": [48, 57, 58, 245], "389": [48, 57, 58, 247], "432": [48, 58, 245], "471": [48, 54, 57, 58, 245], "382": [48, 54, 57, 58, 245], "392": [48, 54, 57, 58, 248, 250], "556": [48, 246], "401": [48, 57, 58, 245], "643": [48, 54, 57, 86, 241], "404": [48, 54, 57, 58, 236, 246, 248], "684": [48, 54, 57, 236], "724": [48, 50, 54, 56, 57, 58, 59, 67, 199, 236, 241], "321": [48, 54, 58, 59, 238], "761": [48, 54, 57, 236], "333": [48, 54, 55, 57, 58, 245], "812": [48, 54, 57, 237], "852": [48, 55, 64, 195, 238, 241], "930": [48, 54, 57, 195, 238], "970": [48, 57, 238], "1010": [48, 57, 238], "385": [48, 58, 245], "1049": [48, 238], "1090": [48, 57, 195, 238], "1129": [48, 57, 238], "1168": [48, 54, 57, 247], "371": [48, 57, 58, 245], "1209": [48, 57, 238], "1248": [48, 54, 239], "1285": [48, 54, 57, 239], "1325": [48, 54, 57, 239], "366": [48, 57, 58, 252], "1369": [48, 57, 240], "1412": [48, 57, 240], "1452": [48, 54, 57, 240], "1492": [48, 57, 241], "1571": [48, 54, 57, 241], "1649": [48, 241], "1688": 48, "1726": [48, 242], "1766": [48, 57, 195, 247], "1804": [48, 54, 57, 247], "1874": [48, 54, 57, 247], "327": [48, 54, 57, 58, 245], "1917": [48, 57, 247], "1958": [48, 54, 248], "2040": [48, 57, 249], "2126": [48, 249], "2178": [48, 54, 57, 249], "436": [48, 57, 58, 247], "447": [48, 54, 58, 245], "2271": [48, 250], "409": [48, 57, 58, 245], "2313": [48, 54, 57, 254], "2354": [48, 57], "2395": [48, 57], "2435": [48, 253], "2474": [48, 54, 59], "2514": [48, 57], "388": [48, 54, 57, 58, 195, 245], "2554": [48, 253], "2593": [48, 54], "2672": [48, 54, 57, 254], "2711": [48, 57, 254], "2750": [48, 54, 59, 255], "2788": [48, 255], "2826": 48, "2870": 48, "2910": [48, 54, 57], "2951": [48, 57, 59], "395": [48, 54, 58], "2993": [48, 57], "3034": [48, 57], "3075": [48, 57, 247], "homebrew": [48, 55, 59, 62, 63, 139], "caskroom": [48, 55, 59, 62, 63, 139], "miniforg": [48, 55, 59, 62, 63, 139], "env": [48, 55, 59, 62, 63, 139], "x86": [48, 55, 59, 62, 63, 139], "site": [48, 55, 59, 62, 63, 139, 190, 245, 248], "userwarn": [48, 57, 59, 63, 103, 241, 247], "inaccur": [48, 59, 63, 254], "527": [48, 57, 245], "optimum": [48, 187, 189, 195], "optimal_inaccur": 48, "msg": [48, 241], "115": [48, 54, 57, 58, 84, 105, 119, 139, 239], "121": [48, 54, 57, 58, 59, 89, 105, 243], "131": [48, 54, 57, 58, 59, 167, 243], "136": [48, 52, 54, 57, 58, 123, 124, 125, 195, 243], "148": [48, 54, 57, 58, 119], "154": [48, 57, 58, 59], "161": [48, 55, 57, 58, 189, 244], "212": [48, 57, 58, 239, 244], "218": [48, 54, 57, 58, 249], "224": [48, 54, 57, 58, 119, 135], "231": [48, 54, 57, 58, 71, 72, 189], "237": [48, 57, 58, 59, 72, 119, 139, 244], "243": [48, 54, 57, 58, 244], "250": [48, 54, 57, 58, 141, 176, 187, 195, 201], "256": [48, 54, 57, 58, 119, 121, 167, 182, 187, 189, 194, 196, 201, 204, 245, 249], "281": [48, 54, 58], "287": [48, 57, 58, 182, 236, 241], "293": [48, 57, 58, 59, 119, 120], "299": [48, 54, 58, 119, 245], "305": [48, 54, 57, 58, 245], "310": [48, 51, 57, 58, 245], "315": [48, 54, 57, 58, 245], "326": [48, 58, 245], "434": [48, 54, 58, 245], "440": [48, 54, 57, 58, 245], "446": [48, 57, 58, 245], "465": [48, 54, 57, 58, 71, 245], "472": [48, 54, 57, 58, 59, 64, 195, 245], "478": [48, 54, 245], "485": [48, 245], "497": [48, 57, 176, 192, 195, 197, 201, 220, 245, 262], "503": [48, 54, 57, 245], "509": [48, 54, 57, 245], "521": [48, 54, 57, 245], "528": [48, 54, 245], "534": [48, 245], "558": [48, 57, 241], "564": [48, 57, 246], "571": [48, 54, 57, 246], "578": [48, 57, 62, 70, 247], "592": [48, 247], "598": [48, 54, 246], "605": [48, 57, 236], "618": [48, 54, 57, 236], "625": [48, 54, 57, 236], "631": [48, 57, 237], "638": [48, 54, 236], "645": [48, 54, 57, 240, 241], "651": [48, 57, 59, 236], "658": [48, 54, 57, 236], "664": [48, 54, 57, 236], "671": [48, 54, 55, 236], "678": [48, 54, 57, 236], "690": [48, 57, 236], "696": [48, 54, 55, 57, 236], "702": [48, 54, 57, 236], "708": [48, 54, 57, 236], "714": [48, 54, 57, 236], "720": [48, 54, 57, 190, 238, 247, 255], "740": [48, 57, 238], "747": [48, 54, 57, 59, 237], "754": [48, 54, 55, 57, 236], "767": [48, 54, 236], "773": [48, 54], "790": [48, 55, 57], "796": [48, 54, 57], "822": [48, 54, 237], "835": [48, 54, 57, 238], "841": [48, 54, 57, 237], "848": [48, 54, 237], "854": [48, 241], "860": [48, 54, 237], "867": [48, 57, 238], "873": [48, 57, 238], "879": [48, 57, 238], "885": [48, 57, 238], "904": [48, 57, 237], "939": [48, 57, 238], "944": [48, 54, 57, 241], "949": [48, 238], "954": [48, 57, 62, 63, 71, 238], "958": [48, 54, 57, 238], "963": [48, 54, 238], "968": [48, 57, 238], "973": [48, 59, 238], "989": [48, 54, 238], "994": [48, 57, 238], "999": [48, 195, 238], "1004": [48, 57, 238], "1009": [48, 54, 57, 238], "1015": [48, 54, 57, 59, 238], "1021": [48, 57, 238], "1027": [48, 54, 57, 238], "1034": [48, 57, 238], "1040": [48, 57, 238], "1047": [48, 249], "1060": [48, 238], "1066": [48, 57, 238], "1072": [48, 57, 238], "1086": [48, 57, 238], "1093": [48, 54, 57, 241], "1099": [48, 54, 57, 59, 241], "1105": [48, 54, 57, 238], "1111": [48, 54, 57, 195, 241], "1117": [48, 57, 240], "1123": [48, 57, 238], "1133": [48, 54, 195], "1138": [48, 57, 238], "1143": [48, 54, 238], "1149": [48, 54, 84, 238], "1156": [48, 54, 57, 241], "1163": [48, 63, 70, 238], "1169": [48, 59, 239], "1175": [48, 54], "1181": [48, 54, 57, 240], "1187": [48, 57, 238], "1199": [48, 57, 238], "1212": [48, 57, 238], "1218": [48, 54, 57, 238], "1249": [48, 57], "1256": [48, 54], "1262": [48, 54, 239], "1268": [48, 55, 57, 238], "1274": [48, 54, 57], "1280": [48, 54, 57, 242], "1286": [48, 54, 57, 239], "1292": [48, 239], "1298": [48, 54, 239], "1304": [48, 239], "1311": [48, 57, 252], "1317": [48, 54, 57, 239], "1323": [48, 54, 57, 239], "1329": [48, 57, 239], "1336": [48, 57, 189, 239], "1342": [48, 57, 240], "1348": [48, 54, 57, 239], "1354": [48, 57, 250], "1360": [48, 54, 57, 239], "1366": [48, 54, 57, 239], "1381": [48, 54, 57, 240], "1386": [48, 57, 240], "1391": [48, 59, 240], "1398": [48, 57, 240], "1425": [48, 54, 57, 240], "1431": [48, 57, 240], "1463": [48, 240], "1469": [48, 54, 240], "1476": [48, 57, 240], "1483": [48, 240], "1524": [48, 241], "1531": [48, 57, 59, 79], "1540": [48, 54, 241], "1541": [48, 57, 241], "1552": [48, 54, 249], "1558": [48, 247], "1563": [48, 54, 57, 241], "1568": [48, 54, 241], "1578": [48, 57, 241], "1583": [48, 54, 241], "1584": [48, 57, 241], "1589": [48, 54, 55, 57, 241], "1594": [48, 57, 241], "1604": [48, 57, 242, 253], "1608": [48, 54, 57, 241], "1609": [48, 241], "1616": [48, 57, 242], "1622": [48, 54, 57, 189, 241], "1628": [48, 57, 195, 241], "1635": [48, 57, 252], "1641": [48, 241], "1648": [48, 57, 252], "1654": [48, 57, 241], "1661": [48, 54, 57, 242], "1667": [48, 241], "1673": [48, 241], "1685": [48, 57, 59, 241], "1691": [48, 54, 57, 242], "1697": [48, 54, 57, 242], "1703": [48, 57, 242], "1709": [48, 57], "1716": [48, 242], "1723": [48, 57, 242], "1729": [48, 57, 242], "1735": [48, 54, 57, 242], "1742": [48, 57, 242], "1749": [48, 57, 242], "1756": [48, 57, 247], "1762": [48, 57, 250], "1768": [48, 57, 59, 247], "1775": [48, 195, 247], "1781": [48, 247], "1787": [48, 54, 247], "1799": [48, 247], "1805": [48, 253], "1811": [48, 247], "1818": [48, 57, 247], "1824": [48, 57, 59, 247], "1830": [48, 57, 247], "1836": [48, 57, 247], "1841": [48, 71, 248], "1852": [48, 57, 59], "1858": [48, 54, 57, 72, 247], "1864": [48, 54, 57, 249], "1869": [48, 247], "1888": [48, 57, 247], "1894": [48, 57, 59, 247], "1900": [48, 57, 166, 248], "1906": [48, 247], "1912": [48, 54, 247], "1918": [48, 247], "1924": [48, 84, 89, 247], "1939": [48, 57, 247], "1945": [48, 57], "1951": [48, 57, 248], "1957": [48, 57], "1964": [48, 54, 59, 248], "1970": [48, 248], "1976": [48, 54, 248], "1982": [48, 54, 189, 248], "1988": [48, 57, 176, 189, 195, 201, 220, 248, 258], "1994": [48, 53, 146, 147, 176, 184, 195, 201, 219, 248, 258], "2026": [48, 57], "2033": [48, 54, 249], "2052": [48, 57, 249], "2058": [48, 57, 249], "2065": [48, 249], "2072": [48, 57, 249], "2079": [48, 57, 249], "2085": [48, 57, 249], "2091": [48, 57, 249], "2097": [48, 54, 55, 57, 249], "2103": [48, 54, 57, 249], "2109": [48, 57, 250], "2120": [48, 249], "2125": [48, 57, 249], "2130": [48, 249], "2140": [48, 54, 57, 249], "2145": [48, 57, 249], "2150": [48, 249], "2155": [48, 57, 249], "2160": [48, 54, 57, 59, 249], "2165": [48, 57], "2176": [48, 57, 249], "2182": [48, 57, 249], "2187": [48, 54, 57, 59], "2192": [48, 54, 250], "2197": [48, 57, 250], "2203": [48, 54, 57, 249], "2208": [48, 54, 249], "2213": [48, 54, 57], "2225": [48, 54, 250], "2231": [48, 250], "2237": [48, 250], "2243": [48, 57, 250], "2249": [48, 250], "2256": [48, 57, 250], "2263": [48, 250], "2269": [48, 54, 57], "2276": [48, 57], "2282": [48, 57, 251], "2294": [48, 59, 251], "2300": [48, 252], "2307": [48, 251], "2314": [48, 57, 253], "2320": [48, 54, 57, 252], "2326": [48, 54, 57], "2332": [48, 57, 252], "2339": [48, 54, 252], "2345": [48, 54, 57, 252], "2351": [48, 57, 252], "2357": [48, 54], "2363": [48, 68, 252], "2375": [48, 54, 57, 252], "2381": [48, 57, 252], "2387": [48, 57, 252], "2394": [48, 54, 59], "2401": [48, 54, 57], "2407": [48, 57, 253], "2413": [48, 253], "2419": [48, 253], "2425": [48, 84], "2437": 48, "2444": [48, 54, 57, 253], "2450": [48, 254], "2457": [48, 57, 253], "2463": [48, 54, 57, 253], "2470": [48, 253], "2477": [48, 57, 253], "2490": [48, 253], "2496": 48, "2502": [48, 59, 253], "2508": [48, 57], "2520": [48, 57, 253], "2530": [48, 57, 255], "2535": 48, "2540": [48, 57, 59, 255], "2550": [48, 57, 253], "2555": [48, 57, 253], "2560": 48, "2570": [48, 54], "2575": [48, 54, 57, 255], "2580": [48, 57, 68, 254], "2585": 48, "2590": [48, 54, 57, 255], "2606": [48, 254], "2611": [48, 57], "2616": [48, 254], "2621": [48, 57], "2626": [48, 57, 255], "2632": [48, 57], "2638": 48, "2644": 48, "2650": 48, "2656": 48, "2663": [48, 57], "2669": [48, 254], "2675": [48, 54], "2681": [48, 54, 59], "2687": [48, 57, 254], "2699": [48, 57, 254], "2705": [48, 57], "2718": 48, "2724": 48, "2730": 48, "2736": [48, 54], "2743": [48, 57], "2749": [48, 57, 255], "2755": [48, 54, 57], "2761": [48, 57], "2773": [48, 57, 255], "2779": [48, 54, 57], "2785": [48, 57, 59, 255], "2798": 48, "2804": 48, "2810": [48, 54], "2816": [48, 54, 57], "2822": 48, "2828": 48, "2834": 48, "2839": [48, 54, 57], "2844": [48, 54, 84], "2849": [48, 54, 57, 59], "2854": [48, 57], "2859": [48, 57], "2864": [48, 54], "2874": [48, 57], "2879": [48, 57], "2884": 48, "2894": [48, 57], "2899": [48, 57], "2904": [48, 57], "2916": [48, 54, 57], "2922": [48, 54, 55, 57], "2928": [48, 57], "2958": [48, 54, 57], "2964": 48, "2970": [48, 57, 59], "2976": [48, 57], "2982": [48, 57], "2988": [48, 57], "2994": [48, 57], "3006": [48, 54, 59], "3012": [48, 57], "3018": [48, 54], "3024": 48, "3030": [48, 59], "3042": [48, 54, 57, 59], "3048": [48, 57, 59], "3054": 48, "3056": 48, "3063": [48, 57], "3069": [48, 57], "3082": [48, 54, 57], "3085": 48, "3092": [48, 54, 57], "3099": [48, 54, 57], "3105": [48, 54, 57], "3106": 48, "3108": [48, 59], "3112": [48, 54], "3114": [48, 54, 59], "3115": [48, 57], "3116": [48, 54], "3118": 48, "unsmooth": 48, "hansen2013": 48, "glennr2015": 48, "mkt": [48, 195, 202], "kfa": [48, 195, 202, 249, 253], "measures_from_kurtosis_tensor_onli": 48, "report": [48, 57, 195, 238, 245, 252], "jensen": [48, 49, 60, 146, 147, 176, 184, 195, 201, 218], "jh": [48, 49, 60, 176, 195], "helpern": [48, 49, 60, 176, 195, 201, 218], "ja": [48, 49, 60, 176, 195], "ramani": [48, 60, 176, 201, 218], "lu": [48, 60, 69, 176, 195, 201, 218, 219], "kaczynski": [48, 60, 176, 201, 218], "quantif": [48, 60, 90, 176, 195, 198, 201, 218], "non_gaussian": [48, 60, 176], "1432": [48, 54, 60, 176, 201, 218, 247], "1440": [48, 60, 176, 240], "nmr": [48, 64, 176, 189, 195, 201, 219], "biomedicin": [48, 176, 195], "698": [48, 54, 57, 176, 195, 236], "710": [48, 54, 57, 176, 195, 236], "177": [48, 49, 54, 57, 58, 176, 195, 245], "188": [48, 49, 54, 57, 58, 78, 176, 195], "poot": 48, "dh": 48, "heck": 48, "blockx": 48, "linden": 48, "verhoy": 48, "138": [48, 57, 58, 139, 167, 236, 243], "145": [48, 54, 57, 58, 240, 243], "ferreira": [48, 60, 176, 195], "dissert": 48, "bachelor": 48, "programin": 48, "faculti": 48, "repositorio": 48, "ul": 48, "10451": 48, "8511": [48, 59], "ulfc104137_tm_rafael_henriqu": 48, "lund": [48, 195], "te": 48, "sangil": [48, 195], "sn": [48, 49, 59, 60, 167, 189, 195], "experiment": [48, 182, 195, 197], "computationally393fast": 48, "1760": [48, 57, 195, 247], "394doi": 48, "24743": [48, 195], "glenn": [48, 182, 195], "tabesh": [48, 49, 195, 201, 218], "diffusional387kurtosi": 48, "biomedicine28": 48, "448": [48, 57, 58, 195, 245], "459": [48, 54, 58, 195, 236], "nbm": [48, 195], "3271": [48, 195], "nune": [48, 60, 176, 195], "rg": [48, 60, 176, 195], "geometri": [48, 60, 127, 176, 185, 195, 197, 199, 202, 240, 245], "biomark": [48, 60, 127, 176, 195, 197], "111": [48, 54, 57, 58, 60, 76, 95, 105, 127, 176, 195, 197, 201, 219, 243], "cmw": 48, "ott": 48, "dijkhuizen": 48, "rekindl": 48, "794": [48, 55, 57, 237], "808": [48, 54, 55, 57, 237], "dela": [48, 58, 63, 189, 190, 195, 254, 255], "haij": [48, 58, 63, 189, 190, 195, 254, 255], "program": [48, 58, 63, 162, 165, 189, 190, 195, 201, 224], "209": [48, 54, 57, 58, 59, 189, 190, 195, 201, 219, 244], "116405": [48, 58, 189, 190, 195], "reconst_dki": [48, 70, 238], "hinder": [49, 58, 195, 197], "fierem2013": 49, "interpret": [49, 53, 60, 61, 69, 71, 98, 187, 189, 195, 197, 199, 238, 242], "influenc": [49, 55, 190], "cellular": [49, 60, 127, 195], "fierem2012": 49, "latter": [49, 85, 176], "distinguish": [49, 189, 199, 200, 201, 223, 224], "degener": [49, 189], "dki_micro": [49, 202], "fetcher": [49, 57, 61, 90, 99, 107, 135, 138, 182, 194, 202, 237, 238, 241, 244, 245, 247, 249, 250, 252, 254], "example_reconst_dki": [49, 60, 147], "kurtosismicrostructuremodel": [49, 202], "dki_micro_model": 49, "fieremans2011": 49, "planar": [49, 62, 63, 189, 190, 199, 202], "criteria": [49, 199], "publish": [49, 55, 63, 195, 247], "nevertheless": 49, "predefin": [49, 191, 196], "well_aligned_mask": 49, "dtype": [49, 71, 105, 107, 108, 114, 119, 139, 187, 189, 191, 193, 195, 197, 199, 201, 236, 243, 244, 247, 249, 254], "cp": [49, 178, 201, 233], "nan": [49, 53, 76, 189, 195, 197, 236, 237, 241, 242, 245, 249, 250], "isnan": [49, 53, 243], "runtimewarn": [49, 50, 55, 59, 62, 63, 64, 69, 245, 249], "invalid": [49, 50, 59, 60, 62, 63, 64, 84, 89, 135, 187, 189, 193, 199, 236, 240, 253], "encount": [49, 50, 59, 62, 63, 64, 166], "ev1": 49, "ev2": 49, "569": [49, 54, 57, 167, 246], "ev3": 49, "dki_micro_fit": 49, "kurtosismicrostructurefit": 49, "awf": [49, 195, 202], "tort": [49, 189, 196, 201], "cm": [49, 54, 59, 76, 95], "nearest": [49, 51, 54, 57, 61, 68, 89, 98, 114, 187, 189, 196, 199, 201, 229, 255], "im0": [49, 60], "alpha": [49, 61, 65, 88, 103, 163, 170, 187, 189, 190, 191, 195, 201, 208, 213], "im1": [49, 60], "kurtosis_microstructural_measur": 49, "overlaid": [49, 65, 200], "kim": 49, "grossman": [49, 107, 108, 109, 177], "ri": 49, "ingles": 49, "demyelin": 49, "proceed": [49, 57, 59, 195, 196, 200, 201, 223], "20th": 49, "societi": [49, 57, 59, 64, 189, 195, 196, 200, 201, 223], "melbourn": 49, "australia": 49, "benitez": 49, "falangola": 49, "deardorff": 49, "spampinato": 49, "babb": 49, "ferri": 49, "alzheim": 49, "diseas": [49, 168], "ajnr": 49, "neuroradiol": 49, "2112": [49, 249], "3174": [49, 57, 59], "a3553": 49, "683": [49, 54, 236], "reconst_dki_micro": [49, 70], "wedeen08": 50, "cartesian": [50, 60, 64, 78, 128, 146, 147, 176, 184, 189, 195, 197, 263], "keyhol": [50, 195], "get_spher": [50, 52, 53, 54, 56, 58, 59, 64, 65, 66, 67, 71, 86, 88, 123, 124, 125, 128, 130, 195, 199, 202], "diffusionspectrummodel": [50, 51, 52, 123, 124, 125, 202, 237], "dsmodel": [50, 51], "dataslic": [50, 51, 56, 68], "dsfit": [50, 195], "9216": [50, 59], "595622": 50, "fashion": [50, 57, 176, 187, 194, 199], "usag": [50, 87, 167, 182, 194, 195, 201, 235, 245], "ndindex": [50, 64, 202, 243, 245], "disc": [50, 189], "memmap": 50, "gbyte": 50, "tuch04": 50, "fig_hist": [50, 69, 97], "dsi_gfa": 50, "example_reconst_dsi_metr": [50, 147], "1277": [50, 57, 239], "tuch": [50, 146, 147, 184, 195], "1372": [50, 57], "2004": [50, 57, 89, 146, 147, 184, 190, 195, 197, 253], "reconst_dsi": [50, 70], "rtop": [51, 58, 61, 68, 195, 197, 200, 201, 202, 221, 236], "displac": [51, 57, 58, 61, 68, 103, 162, 176, 177, 187, 195, 197, 199, 200, 201, 204, 205, 258], "msd": [51, 58, 60, 61, 68, 195, 197, 201, 202, 221], "wu2007": [51, 68], "wu2008": [51, 68], "qgrid_siz": [51, 195], "filter_width": [51, 195], "normal": [51, 53, 55, 60, 64, 71, 78, 99, 100, 107, 108, 109, 118, 142, 164, 165, 177, 187, 189, 191, 193, 195, 196, 199, 200, 202, 245, 246, 249, 262], "rtop_sign": [51, 68, 195, 202], "632386": 51, "rtop_pdf": [51, 68, 195, 202], "649021": 51, "mse": [51, 68], "rtop_pdf_norm": 51, "645815": 51, "msd_norm": 51, "msd_discret": [51, 195, 202], "636787": 51, "638604": 51, "ax1": [51, 54, 64, 68, 90], "add_subplot": [51, 54, 68, 121], "ind": [51, 54, 68, 195, 198], "ax2": [51, 54, 68, 90], "ax3": [51, 54, 68], "621": [51, 54, 57, 68, 195, 236], "wu": [51, 68, 121, 195], "hybrid": [51, 58, 68, 195], "858": [51, 68, 195, 237], "reconst_dsi_metr": [51, 70], "canales10": [52, 123, 124, 125], "luci": [52, 64, 87, 123, 124, 125, 195], "richardson": [52, 64, 87, 123, 124, 125, 195], "goal": [52, 123, 124, 125, 167, 177], "against": [52, 64, 76, 123, 124, 125, 187, 189, 190, 194, 195, 196], "ground": [52, 60, 63, 123, 124, 125, 200], "truth": [52, 60, 63, 123, 124, 125, 200], "multi_tensor_odf": [52, 66, 123, 124, 125, 128, 202], "diffusionspectrumdeconvmodel": [52, 123, 124, 125, 202], "btabl": [52, 123, 124, 125], "dsi515btabl": [52, 123, 124, 125], "0015": [52, 66, 123, 124, 125, 128, 195, 197], "0003": [52, 66, 123, 124, 125, 128, 195, 197], "subdivid": [52, 66, 123, 124, 125, 128, 189, 201, 202, 243], "odf_gt": [52, 123, 124, 125], "dsi_model": [52, 123, 124, 125], "dsi_odf": [52, 123, 124, 125], "dsid_model": [52, 123, 124, 125], "dsid_odf": [52, 123, 124, 125], "odf_actor": [52, 53, 54, 66, 123, 124, 125, 128], "rotatex": [52, 58, 66, 67, 92, 102, 123, 124, 125, 128], "dsid": [52, 123, 124, 125, 146, 147, 184], "canal": [52, 64, 87, 123, 124, 125, 146, 147, 184, 195, 201, 243], "rodriguez": [52, 64, 123, 124, 125, 146, 147, 184, 195, 243], "149": [52, 54, 57, 58, 123, 124, 125], "reconst_dsid": [52, 70, 123, 238], "colleagu": [53, 176], "basser1994": [53, 176], "influenti": [53, 176], "micro": [53, 146, 147, 176, 184, 238], "commonli": [53, 176], "bmathbf": 53, "durat": [53, 61, 131, 162, 176, 189], "quadrat": [53, 176, 195], "pmatrix": [53, 62, 63, 176, 195, 258, 259], "xx": [53, 176, 258, 259], "xz": [53, 176, 258, 259], "yx": [53, 176, 258, 259], "yy": [53, 176, 258, 259], "yz": [53, 176, 258, 259], "zx": [53, 176], "zy": [53, 176], "zz": [53, 176, 258, 259], "covari": [53, 62, 63, 176, 195], "diagon": [53, 168, 176, 195, 201, 228], "recov": [53, 61, 69, 114, 194, 195, 259, 262], "triangular": [53, 189, 190, 193, 195], "dxx": [53, 176, 195, 201, 219], "dxy": [53, 176, 195, 201, 219], "dyi": [53, 176, 195, 201, 219], "dxz": [53, 176, 195, 201, 219], "dyz": [53, 176, 195, 201, 219], "dzz": [53, 176, 195, 201, 219], "tensor_v": 53, "lower_triangular": [53, 202], "quadratic_form": [53, 195, 202], "eigen": [53, 195, 197], "That": [53, 57, 163, 164, 187, 195], "unrestrict": 53, "frac": [53, 102, 162, 164, 176, 189, 195, 197, 262, 263], "lambda_1": [53, 195, 258, 259], "lambda_2": [53, 195, 258, 259], "lambda_3": [53, 195, 258, 259], "carefulli": [53, 172], "pack": 53, "amount": [53, 58, 69, 76, 97, 114, 189, 196, 199, 200, 201, 223], "decreas": [53, 58, 61, 101, 105, 238, 241], "fan": [53, 102], "color_fa": [53, 69, 165, 202], "tensor_fa": 53, "viewer": [53, 141, 163, 263], "tensor_evec": 53, "complimentari": 53, "equival": [53, 80, 163, 166, 178, 187, 189, 195, 197], "md1": 53, "tensors_md": 53, "md2": 53, "quantiti": [53, 58, 61, 195], "pajevic1999": 53, "tensor_rgb": 53, "ellipsoid": [53, 69, 189, 240], "tensor_slic": [53, 69], "scalar_color": [53, 69], "tensor_ellipsoid": 53, "tensor_odf": 53, "reliabl": 53, "drawback": 53, "mislead": [53, 238, 249], "fortun": [53, 66], "mattielo": [53, 176], "lebihan": [53, 146, 147, 176, 184, 195, 201, 219, 258], "spectroscopi": [53, 176, 258], "pajev": 53, "646": [53, 57, 241], "reconst_dti": [53, 70, 238], "symmetr": [54, 65, 66, 88, 102, 104, 106, 107, 118, 146, 174, 182, 187, 189, 193, 194, 195, 199, 201, 228, 241, 242, 245, 249, 258, 259, 262], "fodf": [54, 59, 65, 87, 176, 194, 195, 201, 236], "anderson2005": 54, "kaden2016": 54, "zucchelli2017": 54, "forecastmodel": [54, 202], "fetch_hbn": [54, 55, 202], "op": [54, 55, 90, 245, 263], "alexander2017": 54, "hbn": [54, 182], "pod2": [54, 190], "richiehalford2022": 54, "data_path": [54, 55], "ndaraa948vfh": [54, 55, 190], "dwi_path": [54, 55], "qsiprep": [54, 55], "se": [54, 55, 71], "hbnsiteru": [54, 55], "ndaraa948vfh_s": [54, 55], "hbnsiteru_acq": [54, 55], "64dir_spac": [54, 55], "t1w_desc": [54, 55], "preproc_dwi": [54, 55], "mask_img": [54, 55, 63, 190], "brain_mask": [54, 55, 167, 176, 201], "mask_smal": [54, 55], "dec_alg": [54, 195], "fm": [54, 195], "f_fit": [54, 195], "5148": [54, 55, 57], "104": [54, 57, 58, 59, 167, 243], "105": [54, 57, 58, 119, 243], "107": [54, 57, 58, 105, 119, 243], "110": [54, 57, 58, 59, 63, 70, 105, 243], "112": [54, 57, 58, 59, 105, 119, 139, 243], "116": [54, 57, 58, 59, 103, 119, 195, 243, 254, 262], "118": [54, 57, 58, 59, 139, 243], "119": [54, 57, 58, 59, 117, 119, 120, 191, 243, 251], "123": [54, 57, 58, 59, 105, 119, 189, 243], "124": [54, 57, 58, 59, 92, 101, 102, 105, 119, 169, 177, 187, 190, 201, 230, 243], "129": [54, 57, 58, 59, 119, 182, 243], "133": [54, 57, 58, 59, 243], "135": [54, 57, 58, 62, 63, 119, 195, 243], "137": [39, 42, 54, 57, 58, 195, 243, 262], "139": [54, 57, 58, 60, 119, 195, 243], "141": [54, 57, 58, 243], "144": [54, 57, 58, 119, 195, 237, 243], "146": [54, 57, 58, 195, 243], "158": [54, 57, 58], "162": [54, 57, 58, 61, 244], "163": [54, 57, 58, 244, 249], "164": [54, 57, 58, 130, 244, 249], "165": [54, 57, 58], "166": [54, 57, 58, 244], "168": [54, 57, 58, 59, 176, 195, 201, 220, 244], "169": [54, 57, 58, 78, 238, 244], "171": [54, 57, 58, 245], "174": [54, 58, 244], "176": [54, 58, 121, 139, 167, 244], "182": [54, 58, 244], "184": [54, 57, 58, 248], "186": [54, 57, 58, 109], "189": [54, 57, 58, 244], "195": [54, 57, 58, 59], "197": [54, 57, 58, 191, 245], "208": [54, 57, 58, 119, 244], "210": [54, 57, 58, 61, 119, 244], "211": [54, 57, 58, 244], "216": [54, 57, 58, 244], "222": [54, 57, 58, 244], "226": [54, 57, 58, 244], "230": [54, 57, 58, 244], "235": [54, 57, 58, 245, 246], "236": [54, 58], "244": [54, 57, 58, 68], "245": [54, 57, 58, 244], "246": [54, 57, 58, 119], "247": [54, 57, 58, 195, 201, 219, 244], "249": [54, 57, 58, 119, 244], "251": [54, 57, 58, 59, 98, 119, 244], "252": [54, 58, 244], "253": [54, 57, 58, 244, 245], "258": [54, 57, 58], "259": [54, 57, 58, 64, 195, 244], "260": [54, 57, 58, 244], "261": [54, 57, 58, 244], "264": [54, 57, 58, 71, 72, 244], "266": [54, 57, 58, 84, 89, 178, 199, 201, 234, 244], "271": [54, 57, 58, 237], "277": [54, 58, 245], "279": [54, 57, 58, 59, 244], "280": [54, 57, 58, 119], "284": [54, 57, 58, 119, 250], "285": [54, 57, 58, 59, 72, 244], "290": [54, 57, 58, 245], "292": [54, 57, 58, 197, 244], "296": [54, 57, 58, 119], "298": [54, 57, 58, 245], "303": [54, 57, 58, 245], "304": [54, 57, 58, 245], "307": [54, 57, 58, 59, 245], "323": [54, 55, 57, 58, 102, 189, 195, 197, 245], "329": [54, 57, 58, 245], "339": [54, 57, 58, 245], "346": [54, 57, 58, 60, 195, 245], "356": [54, 57, 58, 245], "369": [54, 57, 58, 238], "408": [54, 57, 58, 245], "410": [54, 57, 58, 245], "413": [54, 57, 58, 245], "418": [54, 57, 58, 59, 245], "423": [54, 57, 58, 252], "437": [54, 58, 245], "442": [54, 57, 58, 241], "450": [54, 57, 58, 245], "454": [54, 57, 58, 245], "456": [54, 57, 58, 245], "460": [54, 57, 58, 245], "462": [54, 57, 58, 64, 195, 245], "467": [54, 57, 58, 245], "474": [54, 57, 58, 66, 245], "476": [54, 57, 245], "477": [54, 57, 245], "479": [54, 57, 72, 245], "481": [54, 57, 245], "486": [54, 57, 59, 167, 245], "490": [54, 57, 245], "494": [54, 57, 245], "498": [54, 57, 132, 167, 245], "505": [54, 57, 176, 195, 201, 220, 245], "511": [54, 238, 245], "517": [54, 238], "518": [54, 57, 238], "519": [54, 245], "522": [54, 57, 245], "523": [54, 57, 245], "524": [54, 57, 78, 245], "530": [54, 245], "535": [54, 57, 245], "537": [54, 57, 245], "539": [54, 57, 59, 78, 236], "541": [54, 57, 69, 195, 201, 219, 245], "542": [54, 57, 245], "543": [54, 57, 245], "544": [54, 245], "547": [54, 57], "548": [54, 57], "551": [54, 57, 246], "553": [54, 57, 59, 246], "555": [54, 57, 246], "557": [54, 57, 246], "561": [54, 57, 246], "563": [54, 57, 246], "565": [54, 57, 246], "567": [54, 57, 59, 246], "573": [54, 57, 253], "575": [54, 57, 246], "577": [54, 57, 246], "580": [54, 246], "581": [54, 57, 59, 246], "582": [54, 57, 236], "589": [54, 57, 246], "593": [54, 57, 67, 246], "595": [54, 57, 59, 246], "602": [54, 57, 246], "606": [54, 83, 236], "607": [54, 57, 236], "609": [54, 59, 236], "610": [54, 57, 236], "612": [54, 57, 236], "613": [54, 236], "614": [54, 57, 236], "616": [54, 57, 236], "619": [54, 57, 236], "620": [54, 57, 247], "622": [54, 57, 236], "624": [54, 57, 236], "626": [54, 57, 236], "632": [54, 57, 236], "634": [54, 241], "640": [54, 236], "641": [54, 57, 167, 241], "647": [54, 57, 86, 241], "650": [54, 57, 58, 195, 236], "652": [54, 87, 236], "654": [54, 57, 236], "657": [54, 57, 236], "659": [54, 236], "660": [54, 57, 236], "662": [54, 57, 239], "663": [54, 236], "665": [54, 57, 59, 79, 237], "667": [54, 236], "669": [54, 237], "670": [54, 57, 58, 195, 238], "672": [54, 57, 134, 135, 236], "673": [54, 238], "675": [54, 238], "677": [54, 236], "679": [54, 57, 59, 236], "680": [54, 57, 236], "682": [54, 57, 236], "685": [54, 55, 126, 128, 237, 251], "686": [54, 55, 57, 236], "688": [54, 57, 236], "689": [54, 236], "691": [54, 236], "692": [54, 55, 57, 237], "694": [54, 57, 103, 106, 236], "695": [54, 237], "703": [54, 236], "704": [54, 55, 57, 236], "706": [54, 55, 57], "709": [54, 236], "711": [54, 55, 57, 238], "712": [54, 57, 236], "716": [54, 236], "717": [54, 55, 57, 253], "718": [54, 57, 99], "721": [54, 57, 59, 236], "723": [54, 57, 236], "725": [54, 57, 236], "727": [54, 57, 236], "728": [54, 57, 247], "729": [54, 57, 236], "731": [54, 55, 57, 236], "732": [54, 236], "734": [54, 236], "735": [54, 57, 59, 236], "737": [54, 57, 236], "738": [54, 57, 236], "741": [54, 236], "743": [54, 57, 236], "746": [54, 57, 241], "750": [54, 57], "753": [54, 57, 236], "755": [54, 57, 236], "756": 54, "757": [54, 57, 236], "758": [54, 237], "760": [54, 237], "762": [54, 57, 237], "763": [54, 55, 59, 236], "764": [54, 57, 236], "765": [54, 55, 236], "768": [54, 57, 236], "769": [54, 101, 236], "775": [54, 55], "776": [54, 57], "777": [54, 59], "781": 54, "783": 54, "787": [54, 57, 241], "789": [54, 57, 106, 107], "793": [54, 57], "795": [54, 55, 108, 247], "802": [54, 55, 57, 237], "804": [54, 239], "806": [54, 237], "814": [54, 57, 237, 244], "816": [54, 57, 237], "819": [54, 55, 59, 237], "825": [54, 55, 57, 237], "827": [54, 57, 238], "829": [54, 57, 237], "831": [54, 55, 57, 238], "832": [54, 55, 247], "836": [54, 195, 201, 218, 237], "837": [54, 57, 252], "838": [54, 237], "839": [54, 55, 57, 237], "842": [54, 55, 237], "846": [54, 237], "851": [54, 57, 237], "855": [54, 57, 237], "857": [54, 57, 64, 195, 237], "862": [54, 80, 238], "863": [54, 57, 237], "864": [54, 238], "870": [54, 60, 238], "872": [54, 238], "874": [54, 195, 238], "876": [54, 57, 238], "882": [54, 238], "887": [54, 57, 238], "890": [54, 237], "892": [54, 120, 237], "895": [54, 57, 237], "905": [54, 237], "907": [54, 238], "911": [54, 237], "913": [54, 238], "915": [54, 57, 237], "918": [54, 57, 237], "920": [54, 57, 238], "921": [54, 237], "924": [54, 57, 238], "926": [54, 57, 238], "932": [54, 238], "933": [54, 57, 237, 238], "936": [54, 195, 254], "938": [54, 238], "942": [54, 238], "948": [54, 57, 238], "950": [54, 57, 238], "956": [54, 57, 238, 245], "967": [54, 238], "979": [54, 238], "982": [54, 57, 238], "985": [54, 247], "987": [54, 59, 240], "991": [54, 238], "993": [54, 238], "995": [54, 238], "997": [54, 238], "1005": [54, 57, 238], "1007": [54, 57, 238], "1011": [54, 55, 57, 238], "1013": [54, 57, 238], "1018": [54, 57, 238], "1019": [54, 57, 238], "1022": [54, 57, 236, 238, 247], "1023": [54, 57, 238], "1025": [54, 57, 238], "1029": [54, 57, 59, 238], "1030": [54, 57, 138, 238], "1033": [54, 238], "1037": [54, 57, 238], "1044": [54, 57, 239], "1046": [54, 57, 238], "1063": [54, 57, 76, 176, 199, 201, 220, 238], "1067": [54, 238], "1070": [54, 57, 238], "1073": [54, 255], "1075": [54, 238], "1077": [54, 238], "1081": [54, 238], "1083": [54, 238], "1087": [54, 238], "1088": [54, 57, 69, 195, 201, 218, 219, 238], "1089": [54, 57, 238], "1095": [54, 57, 195, 201, 219], "1096": [54, 247], "1098": [54, 238], "1107": [54, 57, 238], "1113": [54, 57, 59, 238], "1118": [54, 57, 238], "1136": [54, 57, 238], "1139": [54, 238], "1151": [54, 238], "1155": [54, 59, 238], "1157": [54, 238], "1160": [54, 57, 238], "1161": [54, 240], "1164": [54, 57], "1170": [54, 57, 238], "1171": [54, 238], "1172": [54, 57], "1174": [54, 57, 238], "1176": [54, 57, 195, 238, 245], "1178": [54, 57], "1182": [54, 57, 238], "1188": [54, 57, 238], "1191": [54, 57, 238], "1194": [54, 57, 195, 238], "1196": [54, 57, 238], "1198": [54, 57, 238], "1202": [54, 57, 238], "1216": [54, 57, 238], "1220": [54, 57, 241], "1222": [54, 57, 238], "1224": [54, 57], "1226": [54, 57, 238], "1228": [54, 57, 238], "1233": [54, 238], "1235": [54, 238], "1239": [54, 57, 59, 239], "1241": [54, 57, 238], "1246": [54, 238], "1258": [54, 238], "1260": [54, 238], "1264": [54, 250], "1271": [54, 57, 238], "1278": [54, 57, 239], "1281": [54, 57, 241], "1284": [54, 57, 239], "1287": [54, 57, 239], "1305": [54, 57, 249], "1310": [54, 239], "1312": [54, 239], "1315": [54, 57, 239], "1319": [54, 57, 239], "1321": [54, 57, 59, 240], "1327": [54, 57, 240], "1328": [54, 239], "1330": [54, 239], "1331": [54, 57, 240], "1332": [54, 57, 239], "1334": [54, 57, 239], "1335": [54, 57, 59, 239], "1338": [54, 57, 241], "1341": [54, 57, 239], "1343": [54, 57, 240], "1345": [54, 57, 239], "1357": [54, 57, 239], "1362": [54, 57, 240], "1364": [54, 57, 64, 249], "1390": [54, 57, 240], "1394": [54, 57, 240], "1402": [54, 240], "1407": [54, 57, 59, 240], "1413": [54, 57, 72, 240], "1415": [54, 57, 240], "1417": [54, 57, 240], "1419": [54, 55, 57, 59, 240], "1421": [54, 57, 240], "1423": [54, 240], "1427": [54, 57, 240], "1429": [54, 57, 240], "1433": [54, 57, 59, 241], "1434": [54, 240], "1441": [54, 57, 240], "1446": [54, 57, 240], "1448": [54, 57, 240], "1454": [54, 57, 240], "1455": [54, 57, 71, 240], "1456": [54, 57, 240], "1477": [54, 57, 240], "1480": [54, 57, 240], "1482": [54, 57, 240], "1486": [54, 57, 241], "1489": [54, 57, 59, 250], "1491": [54, 57, 238, 240], "1494": [54, 57, 240], "1496": [54, 57, 240], "1499": [54, 57, 247], "1501": [54, 57], "1503": [54, 55, 57, 59, 240], "1505": [54, 57], "1506": [54, 57, 241], "1508": [54, 57, 241], "1510": [54, 57, 85, 241], "1512": [54, 241], "1514": [54, 241], "1516": [54, 241], "1519": [54, 57, 241], "1520": [54, 241], "1521": [54, 57, 241], "1522": [54, 57, 241], "1536": [54, 241], "1542": [54, 241], "1544": [54, 241], "1555": [54, 57, 241], "1557": [54, 57, 241], "1559": [54, 57, 59, 241], "1561": [54, 57, 241], "1566": [54, 241], "1576": [54, 57, 241], "1585": [54, 241], "1587": [54, 57, 59, 247], "1591": [54, 57, 80, 241], "1593": [54, 241], "1595": [54, 57, 241], "1597": [54, 57, 241], "1603": [54, 57, 247], "1615": [54, 59, 241], "1620": [54, 57, 241], "1625": [54, 57], "1627": [54, 57], "1640": [54, 57, 242], "1643": [54, 59, 241], "1650": [54, 57, 241], "1653": [54, 241], "1656": [54, 57, 241], "1663": [54, 57, 241], "1668": [54, 57, 241], "1670": [54, 57, 241], "1674": [54, 57, 241], "1676": [54, 57, 241], "1678": [54, 57, 241], "1680": [54, 57, 241], "1681": [54, 57, 241], "1684": [54, 241], "1687": [54, 57], "1689": [54, 57], "1695": [54, 57, 242], "1698": [54, 57, 242], "1699": [54, 57, 59, 249], "1708": [54, 242], "1712": [54, 247], "1715": [54, 57, 242], "1717": [54, 57, 242], "1730": [54, 242], "1733": [54, 57, 242], "1737": [54, 57, 242], "1745": [54, 57, 242], "1748": [54, 57, 242], "1751": [54, 242], "1753": [54, 242], "1755": [54, 57, 242], "1757": [54, 55, 242], "1763": [54, 247], "1765": [54, 249], "1769": [54, 247], "1771": [54, 57, 247], "1776": [54, 57], "1778": [54, 57, 255], "1783": [54, 247], "1785": [54, 249], "1795": [54, 247], "1798": [54, 57, 247], "1802": [54, 57, 247], "1823": [54, 247], "1825": [54, 247], "1828": [54, 57, 68, 247], "1833": [54, 247], "1844": [54, 57, 247], "1849": [54, 247], "1851": [54, 247], "1856": [54, 57, 247], "1860": [54, 57, 247], "1862": [54, 57, 248], "1866": [54, 57, 59, 247], "1870": [54, 57, 248], "1872": [54, 57, 252], "1876": [54, 57, 247], "1881": [54, 247], "1885": [54, 247], "1887": [54, 247], "1891": [54, 247], "1893": [54, 247], "1896": [54, 57, 247], "1909": [54, 57, 247], "1916": [54, 247], "1919": [54, 57, 250], "1922": [54, 59, 247], "1926": [54, 247], "1930": [54, 248], "1938": [54, 84, 89, 249], "1944": [54, 247], "1948": [54, 248], "1952": [54, 248], "1954": [54, 248], "1956": [54, 248], "1960": [54, 248], "1962": [54, 187, 248], "1966": [54, 248], "1967": [54, 57, 248], "1971": [54, 57, 248], "1978": [54, 58, 59, 195, 248], "1980": [54, 248], "1989": [54, 57, 248], "2003": [54, 57, 99, 100, 187, 248], "2023": [54, 57, 103, 165, 170, 187, 201, 208, 248, 254, 255], "2028": [54, 57, 249], "2031": 54, "2035": [54, 249], "2037": [54, 249], "2041": [54, 249], "2043": [54, 249], "2047": [54, 249], "2049": [54, 249], "2051": [54, 249], "2057": [54, 249], "2059": [54, 249], "2066": [54, 57, 249], "2069": [54, 249], "2071": [54, 249], "2073": [54, 249], "2075": [54, 249], "2077": [54, 57, 249], "2092": [54, 57], "2100": [54, 57, 249], "2107": [54, 57, 249], "2110": 54, "2113": [54, 57, 249], "2116": [54, 249], "2119": [54, 57, 250], "2124": [54, 249], "2127": [54, 57, 249], "2131": [54, 57, 249], "2133": [54, 57, 249], "2136": [54, 249], "2138": [54, 57, 249], "2144": [54, 249], "2147": [54, 57, 249], "2157": [54, 57, 249], "2175": [54, 57, 249], "2181": [54, 57, 250], "2185": [54, 57, 250], "2195": [54, 57, 249], "2211": [54, 57, 250], "2215": [54, 57, 250], "2217": [54, 57, 250], "2221": [54, 57, 250], "2223": [54, 250], "2227": [54, 250], "2229": [54, 251], "2232": [54, 57, 250], "2234": [54, 57, 250], "2236": [54, 57, 250], "2238": [54, 57, 250], "2248": [54, 57, 250], "2251": [54, 250], "2272": [54, 57, 250], "2275": [54, 57, 251], "2278": [54, 57, 251], "2283": [54, 251], "2285": [54, 57], "2289": [54, 57, 251], "2291": [54, 57, 251], "2293": [54, 57], "2297": [54, 57], "2299": [54, 57], "2301": [54, 57, 72], "2304": [54, 57], "2306": [54, 57], "2310": [54, 57, 253], "2317": [54, 251], "2324": [54, 57, 252], "2328": [54, 57, 251], "2347": [54, 55, 57, 252], "2361": 54, "2364": 54, "2367": [54, 57, 252], "2370": 54, "2373": [54, 57, 252], "2377": [54, 57, 252], "2380": [54, 59, 252], "2382": [54, 252], "2384": [54, 252], "2386": [54, 252], "2396": 54, "2398": 54, "2403": [54, 57], "2405": [54, 57, 253], "2412": [54, 57], "2414": [54, 57, 255], "2416": [54, 57, 253], "2418": [54, 57, 253], "2430": [54, 55, 57, 253], "2433": 54, "2455": [54, 57], "2468": [54, 253], "2471": [54, 57, 253], "2476": [54, 253], "2480": [54, 253], "2482": [54, 253], "2486": [54, 253], "2503": [54, 57], "2507": [54, 57, 253], "2510": [54, 57, 80, 253], "2517": 54, "2522": [54, 57, 253], "2549": [54, 57, 59, 253], "2558": [54, 253], "2563": [54, 57, 59], "2567": [54, 57, 68, 254], "2573": [54, 57, 254], "2596": [54, 55, 57, 255], "2604": [54, 57], "2615": [54, 57], "2634": [54, 254], "2639": [54, 57, 59], "2643": [54, 57], "2647": [54, 57], "2651": [54, 57], "2654": 54, "2657": [54, 57, 59], "2666": 54, "2678": [54, 57], "2690": [54, 254], "2698": 54, "2702": [54, 254], "2713": [54, 57, 255], "2717": [54, 57, 255], "2721": [54, 57], "2725": [54, 57, 255], "2728": [54, 59], "2731": [54, 57], "2734": [54, 57, 67], "2742": [54, 57, 255], "2747": [54, 57], "2758": [54, 59], "2762": [54, 72, 255], "2765": [54, 57, 255], "2770": [54, 255], "2772": 54, "2782": [54, 255], "2784": [54, 71], "2787": [54, 57], "2789": [54, 57, 64, 195], "2806": 54, "2820": 54, "2823": [54, 57], "2825": [54, 57, 59], "2827": [54, 57], "2829": [54, 57], "2833": [54, 57], "2835": [54, 57], "2841": [54, 57, 59], "2842": 54, "2845": [54, 57, 59], "2853": [54, 57], "2855": [54, 57], "2857": [54, 57], "2866": 54, "2871": [54, 57], "2873": [54, 57], "2875": [54, 57], "2880": [54, 57], "2907": [54, 59], "2913": 54, "2918": [54, 57], "2920": [54, 57], "2930": [54, 57], "2933": 54, "2935": 54, "2937": 54, "2939": 54, "2941": 54, "2943": 54, "2945": 54, "2947": [54, 59], "2948": [54, 57], "2954": [54, 57], "2956": 54, "2960": [54, 57], "2979": 54, "2986": [54, 57], "2992": [54, 57], "2995": [54, 57], "2999": [54, 57], "3004": 54, "3008": 54, "3011": [54, 57], "3020": [54, 59], "3025": [54, 57, 59], "3027": [54, 57], "3031": [54, 57], "3033": [54, 57], "3035": [54, 57, 59], "3046": [54, 57], "3049": [54, 57], "3051": [54, 57, 59], "3067": [54, 57], "3074": 54, "3080": [54, 57], "3088": [54, 57], "3094": [54, 57], "3096": 54, "3109": [54, 57], "3119": [54, 57, 59], "3123": [54, 57], "3125": [54, 57], "3132": [54, 57, 59], "3134": [54, 57], "3136": [54, 57], "3140": [54, 57, 59], "3157": [54, 57], "3161": 54, "3164": [54, 57], "3167": 54, "3171": [54, 57], "3173": [54, 57], "3178": [54, 57], "3181": [54, 57], "3183": [54, 57], "3185": [54, 57], "3188": 54, "3192": [54, 57], "3196": 54, "3201": [54, 57], "3204": 54, "3209": [54, 57], "3212": 54, "3214": 54, "3216": 54, "3222": [54, 59], "3224": 54, "3226": [54, 59], "3228": 54, "3246": [54, 57], "3253": [54, 57], "3258": 54, "3263": [54, 57], "3270": [54, 57], "3274": [54, 57], "3277": 54, "3280": [54, 57], "3282": [54, 57], "3284": [54, 57, 59], "3288": 54, "3294": 54, "3309": [54, 57], "3313": [54, 57], "3316": 54, "3319": [54, 57, 59], "3322": 54, "3327": [54, 57], "3338": 54, "3342": 54, "3345": [54, 57], "3348": [54, 86], "3350": 54, "3352": 54, "3354": 54, "3359": [54, 57], "3366": 54, "3369": [54, 57], "3372": 54, "3377": [54, 57], "3380": 54, "3383": [54, 57, 168], "3395": [54, 57], "3401": [54, 57, 59], "3405": [54, 57, 59], "3408": 54, "3411": [54, 57], "3426": 54, "3430": [54, 57], "3435": [54, 57], "3438": 54, "3441": [54, 57], "3445": [54, 57], "3448": 54, "3452": [54, 59], "3456": 54, "3459": [54, 57], "3461": [54, 57], "3463": [54, 57], "3465": [54, 57, 59], "3467": [54, 57], "3469": [54, 57], "3471": [54, 57], "3472": 54, "3473": [54, 57], "3488": 54, "3491": [54, 59], "3495": [54, 57, 59], "3498": [54, 59], "3514": [54, 57], "3517": [54, 57], "3520": [54, 57], "3523": 54, "3528": 54, "3532": [54, 57], "3535": [54, 57], "3537": [54, 57], "3539": [54, 57], "3541": [54, 57], "3544": [54, 59], "3546": 54, "3548": 54, "3550": 54, "3555": [54, 57], "3559": 54, "3577": [54, 57], "3581": [54, 57], "3584": [54, 57], "3589": [54, 57], "3600": [54, 57], "3604": [54, 57, 59], "3607": [54, 57], "3611": [54, 57], "3614": [54, 59], "3617": [54, 57, 59], "3619": [54, 57, 59], "3621": [54, 57, 59], "3623": [54, 59], "3630": 54, "3633": [54, 57, 59], "3635": [54, 57], "3638": 54, "3642": 54, "3648": 54, "3651": [54, 57], "3655": [54, 57], "3658": 54, "3662": [54, 57], "3666": [54, 57], "3669": [54, 57], "3672": [54, 57], "3674": [54, 57], "3686": 54, "3689": [54, 57], "3699": [54, 57], "3703": [54, 59], "3706": [54, 57, 59], "3709": [54, 59], "3714": [54, 57], "3717": 54, "3719": 54, "3721": 54, "3723": [54, 59], "3725": [54, 59], "3727": [54, 59], "3730": [54, 57], "3732": [54, 57], "3734": [54, 57], "3736": [54, 57], "3742": [54, 57], "3744": [54, 57], "3749": [54, 57], "3751": [54, 57], "3756": [54, 57], "3759": [54, 57], "3761": [54, 55, 57, 59], "3763": [54, 57], "3767": [54, 57], "3769": [54, 57, 59], "3773": [54, 57], "3783": 54, "3789": [54, 57, 59], "3793": [54, 59], "3796": [54, 57], "3800": [54, 57, 59], "3803": [54, 59], "3805": [54, 168], "3807": [54, 57], "3809": [54, 59, 168], "3810": [54, 57], "3811": 54, "3812": [54, 57, 59], "3814": [54, 57, 59], "3815": 54, "3816": [54, 57, 59], "3817": 54, "3818": [54, 57, 59], "3820": [54, 57], "3822": [54, 57], "3835": 54, "3838": [54, 55, 57], "3840": [54, 57], "3842": [54, 57], "3844": [54, 57], "3849": 54, "3851": [54, 168], "3853": [54, 89], "3859": 54, "3861": 54, "3864": [54, 57], "3872": [54, 57], "3876": [54, 57], "3879": 54, "3885": [54, 57, 59], "3888": [54, 57], "3891": [54, 57], "3894": [54, 57], "3896": [54, 57], "3898": [54, 57, 59], "3900": [54, 57], "3903": [54, 57], "3905": [54, 57], "3911": 54, "3913": [54, 89], "3920": [54, 59], "3924": 54, "3927": [54, 57], "3929": [54, 57], "3936": 54, "3939": [54, 57], "3948": [54, 59], "3954": 54, "3957": [54, 57], "3969": [54, 57], "3973": [54, 57], "3976": [54, 57], "3979": 54, "3982": [54, 57], "3985": [54, 57], "3988": [54, 57], "3990": [54, 57, 59], "4002": [54, 57], "4006": [54, 59], "4009": 54, "4012": [54, 57, 59], "4016": [54, 57, 89], "4018": [54, 57], "4020": [54, 57], "4033": [54, 57], "4036": 54, "4051": [54, 57], "4055": [54, 57], "4058": [54, 57], "4061": [54, 57], "4063": [54, 57], "4065": 54, "4067": [54, 57], "4069": [54, 57, 59], "4071": [54, 57], "4078": 54, "4081": [54, 59], "4083": [54, 59], "4089": 54, "4092": [54, 57, 59], "4095": [54, 57], "4098": [54, 59], "4100": [54, 59, 72], "4102": [54, 59], "4105": [54, 57], "4107": [54, 57], "4109": [54, 57], "4114": 54, "4117": [54, 57], "4119": [54, 57], "4121": [54, 57, 89], "4123": [54, 57], "4128": 54, "4132": 54, "4134": 54, "4137": [54, 57], "4139": [54, 57], "4142": [54, 55, 57], "4145": 54, "4149": [54, 57], "4152": [54, 57], "4154": [54, 57], "4156": [54, 57], "4158": [54, 57], "4160": [54, 57], "4163": [54, 59, 85], "4165": [54, 84], "4167": [54, 89], "4169": [54, 59], "4171": 54, "4181": 54, "4184": [54, 57, 84, 89], "4190": [54, 57], "4195": 54, "4209": [54, 57], "4213": 54, "4216": [54, 57], "4219": [54, 57], "4224": [54, 57, 89], "4233": [54, 89], "4236": [54, 57], "4239": [54, 89], "4241": 54, "4245": 54, "4250": [54, 57, 59], "4253": 54, "4258": [54, 57], "4261": 54, "4263": 54, "4271": [54, 59], "4277": [54, 80], "4280": [54, 57], "4283": [54, 57], "4285": 54, "4287": [54, 59, 89], "4289": 54, "4291": [54, 57], "4293": [54, 57, 59, 89], "4298": [54, 57, 89], "4300": [54, 57, 59], "4302": 54, "4304": [54, 57], "4312": [54, 55, 57], "4315": 54, "4323": [54, 89], "4326": [54, 57, 89], "4329": [54, 57], "4331": [54, 57, 84], "4333": [54, 57, 59], "4336": 54, "4338": 54, "4340": 54, "4346": [54, 57], "4348": [54, 57], "4351": 54, "4353": [54, 72], "4355": [54, 59, 72], "4357": 54, "4359": 54, "4361": [54, 72], "4362": [54, 57], "4364": [54, 57, 59, 89], "4366": [54, 57], "4368": [54, 57, 59, 72], "4370": [54, 57], "4371": [54, 57, 59, 72], "4372": [54, 57], "4373": [54, 89], "4374": [54, 57, 72], "4375": 54, "4381": [54, 59, 72, 89], "4383": [54, 72], "4393": [54, 57, 59], "4397": [54, 72], "4400": [54, 59], "4403": [54, 57], "4405": [54, 57, 72], "4407": [54, 57], "4409": [54, 57], "4412": 54, "4414": [54, 59], "4420": [54, 57, 72], "4423": [54, 57], "4425": [54, 57, 72], "4427": [54, 57, 72, 89], "4429": [54, 72], "4431": [54, 72, 84, 89], "4433": [54, 84], "4435": 54, "4437": [54, 59, 72, 84], "4441": [54, 72, 84], "4443": [54, 57, 72], "4445": 54, "4447": 54, "4449": 54, "4451": [54, 57, 72, 84], "4453": [54, 57, 72, 89], "4455": [54, 59, 72], "4457": [54, 72, 89], "4459": 54, "4460": [54, 57, 59, 72], "4466": 54, "4472": [54, 57], "4475": [54, 57, 89], "4477": [54, 57, 59, 84, 89], "4479": [54, 72], "4483": [54, 57], "4486": [54, 72], "4491": [54, 57, 59, 84, 89], "4494": [54, 84], "4497": [54, 57], "4499": [54, 57, 72, 89], "4501": [54, 57, 72, 89], "4503": 54, "4505": 54, "4508": [54, 57, 59, 84], "4510": [54, 57, 89], "4512": [54, 57, 72, 84, 89], "4515": [54, 72], "4522": [54, 57], "4525": [54, 89], "4527": [54, 72, 84], "4529": [54, 72], "4531": 54, "4543": [54, 57, 59, 71, 72, 84, 89], "4548": [54, 57, 59], "4552": [54, 57, 59, 89], "4555": [54, 57], "4558": [54, 72], "4560": [54, 72, 89], "4562": [54, 84, 89], "4564": 54, "4566": 54, "4569": [54, 59, 89], "4571": 54, "4573": [54, 89], "4575": [54, 72], "4577": [54, 84], "4579": [54, 59], "4581": [54, 57], "4583": [54, 57], "4585": 54, "4586": [54, 57, 59, 72, 89], "4593": [54, 57, 72], "4595": [54, 57], "4597": [54, 57], "4599": [54, 57, 84], "4601": [54, 57], "4603": [54, 57, 72], "4606": [54, 57, 71], "4608": [54, 57, 72], "4610": [54, 57], "4618": [54, 57, 59], "4621": [54, 57, 89], "4623": [54, 57, 72, 84, 89], "4627": [54, 57, 59, 84], "4629": [54, 57, 84], "4633": [54, 57, 84, 89], "4635": [54, 57, 59, 71], "4637": [54, 57, 89], "4639": [54, 57, 84], "4641": [54, 57, 89], "4643": [54, 57], "4646": [54, 57, 71, 72], "4648": [54, 57, 59, 84], "4650": [54, 57, 84, 89], "4652": [54, 55, 57, 84, 89], "4658": [54, 57, 84], "4660": [54, 57, 89], "4662": [54, 57, 59, 71, 89], "4664": [54, 57, 84, 89], "4668": [54, 59, 84], "4672": [54, 57, 89], "4674": [54, 57], "4676": [54, 57], "4678": [54, 57, 89], "4680": [54, 59, 84], "4685": [54, 57, 84], "4687": [54, 84, 89], "4689": [54, 57, 89], "4692": [54, 89], "4694": [54, 57, 84], "4697": [54, 57, 72], "4699": [54, 57, 89], "4701": [54, 72, 84, 89], "4705": [54, 57, 84, 89], "4707": [54, 57, 59, 84], "4709": [54, 57], "4711": [54, 57, 89], "4713": [54, 57, 84, 89], "4716": [54, 57], "4718": [54, 57, 89], "4720": 54, "4725": [54, 57, 84, 89], "4731": [54, 57, 84], "4734": [54, 57, 89], "4737": [54, 57, 84], "4740": [54, 57, 84], "4742": [54, 57, 84], "4744": [54, 57, 84], "4751": [54, 57, 89], "4753": [54, 57, 72, 84], "4755": [54, 84, 89], "4761": [54, 84], "4764": [54, 89], "4767": [54, 57, 89], "4770": [54, 59, 84], "4772": [54, 57, 84, 89], "4774": [54, 57, 89], "4780": 54, "4783": [54, 57], "4785": [54, 57, 59], "4787": [54, 57], "4789": [54, 57, 71], "4791": [54, 57, 84], "4793": [54, 84], "4804": [54, 57], "4812": [54, 57, 59, 84], "4821": 54, "4825": 54, "4828": [54, 57], "4833": 54, "4836": [54, 57], "4839": [54, 71, 89], "4841": 54, "4843": 54, "4845": 54, "4847": [54, 57], "4849": 54, "4851": 54, "4858": [54, 57], "4861": [54, 57, 89], "4872": [54, 57], "4876": [54, 57, 89], "4879": [54, 57], "4881": [54, 57], "4883": [54, 57], "4885": [54, 57], "4887": [54, 57, 89], "4890": 54, "4892": 54, "4895": [54, 57], "4899": [54, 57], "4901": [54, 57], "4907": [54, 57], "4910": [54, 57], "4915": 54, "4918": [54, 57], "4921": 54, "4923": [54, 57], "4926": [54, 57], "4928": [54, 57], "4935": [54, 57, 59], "4938": 54, "4941": [54, 57], "4943": [54, 57, 59], "4951": 54, "4954": [54, 57], "4958": [54, 57, 59], "4966": [54, 57], "4969": [54, 57], "4972": [54, 57], "4975": [54, 57], "4978": [54, 57, 59], "4981": [54, 57], "4984": [54, 57], "4987": 54, "4990": [54, 57], "4992": [54, 57, 59], "5003": [54, 57], "5006": [54, 57], "5010": [54, 57], "5013": [54, 57, 59], "5015": [54, 57], "5020": [54, 57], "5023": 54, "5025": [54, 57], "5040": [54, 57], "5044": [54, 57, 59], "5047": [54, 57], "5050": [54, 57, 59], "5053": [54, 57], "5056": 54, "5058": [54, 57], "5063": 54, "5066": [54, 57], "5070": [54, 57, 59, 85], "5073": [54, 57], "5075": [54, 57], "5078": [54, 57], "5082": [54, 57, 59], "5085": 54, "5087": 54, "5097": [54, 57], "5100": [54, 57], "5103": [54, 57, 59], "5105": [54, 57], "5109": [54, 57], "5111": [54, 57], "5130": [54, 57], "5137": 54, "5142": [54, 57], "5147": [54, 57, 59], "d_par": [54, 195], "dpar": [54, 195, 202], "d_perp": [54, 195], "dperp": [54, 195, 202], "forecast_indic": 54, "shrink": 54, "ax4": 54, "dpi": [54, 200], "magnif": 54, "anderson": [54, 146, 147, 184, 194, 195], "kaden": [54, 60, 195], "smt": [54, 60, 146, 147, 184, 195], "miccai": [54, 67, 191, 195, 201, 212], "workshop": [54, 67, 71, 72, 183, 195, 242], "cdmri": [54, 195], "lm": [54, 190], "escalera": [54, 190], "ai": [54, 189, 190], "transdiagnost": [54, 190], "mental": [54, 190], "health": [54, 190], "disord": [54, 190], "170181": [54, 190], "richi": [54, 190, 247], "halford": [54, 190, 247], "reconst_forecast": [54, 70, 240], "parenchyma": 55, "cerebr": [55, 57], "spinal": [55, 57, 95, 191], "morphologi": [55, 190], "enlarg": 55, "atrophi": 55, "pathologi": 55, "pasternak2009": 55, "s_0fe": 55, "iso": [55, 62, 76, 195, 202], "hoy2014": 55, "henriques2017": 55, "fwdti": [55, 146, 147, 184, 202, 238, 239, 247], "freewatertensormodel": [55, 202], "fwdtimodel": 55, "fwdtifit": 55, "805": [55, 57, 59, 237], "242": [55, 57, 58, 131, 244, 254], "405": [55, 58, 59, 245], "493": [55, 111, 120, 245], "666": [55, 57, 237], "843": [55, 57, 237], "751": [55, 57, 236], "925": [55, 237], "850": [55, 237], "1183": [55, 59, 238], "_minpack_pi": 55, "492": [55, 57, 245], "maxfev": 55, "1671": [55, 59, 249], "801": [55, 57, 237], "1838": [55, 57, 59], "1923": [55, 57, 247], "778": [55, 57], "2180": [55, 57, 250], "2264": [55, 57, 250], "824": [55, 57, 237], "2513": [55, 253], "2670": [55, 57, 254], "639": [55, 57, 236], "2757": [55, 57], "2840": 55, "3005": [55, 57], "771": [55, 236], "774": [55, 57, 189], "3169": [55, 57], "3254": [55, 57], "3339": [55, 57, 59], "820": [55, 57, 237], "3425": [55, 57, 59], "3509": [55, 59], "3593": [55, 57], "833": [55, 57, 59, 237], "3677": [55, 57], "3910": [55, 57, 59], "3980": [55, 57], "4064": [55, 57], "715": [55, 57, 236], "4227": 55, "4394": [55, 57], "4482": [55, 59], "818": [55, 57, 237], "4567": [55, 57], "830": [55, 237], "4736": [55, 57, 89], "811": [55, 237], "4818": [55, 57, 89], "4902": [55, 57], "4986": [55, 57, 89], "813": [55, 237, 238], "5072": [55, 57, 59], "784": [55, 57], "freewatertensorfit": [55, 202], "dtimodel": 55, "dtifit": [55, 258, 259], "dti_fa": 55, "dti_md": 55, "fadiff": 55, "5e": [55, 62, 189, 195, 197], "mddiff": 55, "in_vivo_free_water_dti_and_standard_dti_measur": 55, "vivo": [55, 60], "periventricular": 55, "problemat": 55, "reproduc": [55, 61, 62, 93, 174, 189, 190, 194, 196, 199, 201, 241, 245, 249], "inflat": [55, 93], "in_vivo_free_water_dti_and_standard_dti_correct": 55, "dismiss": 55, "pasternak": [55, 146, 147, 184], "sochen": 55, "gur": 55, "intrat": 55, "assaf": [55, 197], "22055": 55, "hoi": 55, "kecskemeti": 55, "053": 55, "reconst_fwdti": [55, 70, 239], "yeh2010": 56, "generalizedqsamplingmodel": [56, 202], "gqmodel": 56, "sampling_length": [56, 195], "gqfit": 56, "4733": [56, 57, 84], "544327": [], "gqpeak": 56, "gqpeak_valu": 56, "gqpeak_indic": 56, "reconst_gqi": [56, 70, 238], "perfus": [57, 165, 176, 182, 195, 201, 220], "sequenc": [57, 102, 117, 118, 139, 162, 163, 164, 176, 187, 189, 190, 194, 196, 197, 199, 200, 201, 203, 249, 258, 259, 260], "understood": [57, 176, 199], "stejskal": [57, 162, 176, 197, 201, 220, 258, 259, 260], "tanner": [57, 162, 168, 176, 197, 201, 220, 258, 259, 260], "stejskal65": [57, 176, 201, 220], "lebihan84": [57, 176, 201, 220], "particl": [57, 61, 71, 75, 77, 146, 174, 176, 182, 199, 201, 234, 240], "brownian": [57, 176], "thermal": [57, 69, 176], "vascular": [57, 176], "blood": [57, 176], "pressur": [57, 176], "pseudo": [57, 59, 176, 189, 195, 200, 201, 220], "randomli": [57, 71, 92, 176, 196, 199], "laid": [57, 176, 195], "macroscop": [57, 176, 195], "fe": 57, "weigh": 57, "ivimmodel": [57, 195], "read_ivim": [57, 202], "bvalu": [57, 59, 60, 127, 189, 193, 195, 201, 209, 210, 216, 217, 218, 219, 220], "midwai": 57, "axhlin": 57, "axvlin": 57, "ivim_data_slic": 57, "heat": 57, "intersect": [57, 60, 76, 94, 96, 107, 146, 199], "hair": 57, "medial": 57, "mixtur": [57, 187], "x1": [57, 195], "x2": [57, 195], "y1": [57, 189], "y2": [57, 189], "csf_slice": 57, "exponenti": [57, 195, 245], "trr": [57, 195], "guess": [57, 187, 189, 195], "split_b_d": [57, 176, 195, 201, 220], "mono": [57, 187, 195], "logarithm": [57, 63, 195], "split_b_s0": [57, 195, 201, 220], "s0_": 57, "prime": [57, 71, 199], "d_star": [57, 195, 201, 202, 220], "two_stag": [57, 195], "bound": [57, 72, 187, 189, 193, 195, 196, 197, 201, 226, 227, 231, 238, 241, 249], "breviti": [57, 76, 88, 107], "experi": [57, 61, 108, 142, 168, 181, 190], "literatur": [57, 98, 195, 262], "survei": 57, "bounds_warn": 57, "ivimfit": [57, 202], "5200": 57, "x0": [57, 113, 187, 189, 196, 201, 230, 247], "feasibl": [57, 195], "leastsq": 57, "warningmsg": 57, "unfeas": 57, "violat": [57, 63], "102": [57, 58, 59, 119, 190, 243], "122": [57, 58, 62, 89, 105, 119, 130, 195, 243], "223": [57, 58, 59, 244], "312": [57, 58, 245], "438": [57, 58, 245, 260], "529": [57, 245], "608": [57, 238], "132": [57, 58, 59, 243], "705": [57, 236], "826": [57, 113, 120, 237], "875": [57, 59, 195, 238], "889": [57, 59, 238], "908": [57, 70, 237], "976": [57, 238], "1050": [57, 238], "1076": [57, 187, 238], "1092": [57, 238], "1132": [57, 238], "130": [57, 58, 59, 243, 248], "113": [57, 58, 61, 105, 139, 167, 243], "1238": [57, 238], "1252": [57, 59, 238], "1265": [57, 59, 238], "1288": [57, 239], "1356": [57, 239], "1368": [57, 240], "1409": [57, 240], "1488": [57, 240], "1537": [57, 241], "1569": [57, 241], "1588": [57, 241], "1621": [57, 241], "1659": [57, 241], "1746": [57, 242], "221": [57, 58, 195, 244], "183": [57, 58, 189, 244], "1832": [57, 247], "1865": [57, 247], "1911": [57, 194, 247], "1943": [57, 247], "181": [57, 58, 59, 85, 119, 244, 245], "2162": [57, 249], "2230": [57, 250], "2257": [57, 250], "2279": [57, 251], "2352": [57, 252], "2389": [57, 85, 253], "191": [57, 58, 116, 117, 119, 125, 196, 244], "2434": [57, 59, 68, 253], "2467": [57, 253], "2631": [57, 254], "2655": 57, "2676": [57, 254], "217": [57, 58, 63, 190, 244], "215": [57, 58, 69, 240], "2793": 57, "2898": 57, "2987": 57, "3065": 57, "3111": 57, "3143": [57, 59], "3191": 57, "3223": 57, "3273": [57, 85], "3305": 57, "3361": 57, "274": [57, 58, 67, 244], "3396": [57, 59], "3433": 57, "3466": 57, "219": [57, 58, 195, 201, 219, 244], "3494": 57, "3521": 57, "3545": 57, "3567": 57, "3588": 57, "156": [57, 58], "3715": [57, 59], "3748": 57, "3765": 57, "3823": [57, 59], "3837": 57, "3860": 57, "3877": 57, "3909": 57, "3926": 57, "3953": 57, "159": [57, 58, 119, 244], "3970": 57, "3999": [57, 59], "4027": 57, "4044": [57, 89], "4059": 57, "4072": 57, "4084": 57, "4106": [57, 59], "4135": 57, "4147": 57, "4159": [57, 59], "4173": 57, "4187": [57, 196], "4200": [57, 59], "4212": [57, 89], "4223": 57, "4234": 57, "4249": 57, "4267": 57, "4281": [57, 72], "4295": 57, "4308": 57, "4320": [57, 59], "4334": 57, "4350": 57, "4363": [57, 72], "4376": [57, 72], "4388": 57, "4399": 57, "4417": 57, "4430": 57, "4454": [57, 84], "4465": [57, 72], "4513": [57, 84], "4526": [57, 72, 89], "4539": [57, 89], "4551": [57, 71, 72], "4563": [57, 84, 89], "4584": [57, 72, 84, 89], "4612": 57, "4625": [57, 84], "4688": [57, 84], "4723": [57, 89], "4756": 57, "4778": 57, "4800": [57, 72, 84], "4813": 57, "4824": 57, "4873": 57, "4897": 57, "4909": [57, 59], "4922": 57, "4934": 57, "4946": [57, 59], "4980": 57, "4991": 57, "5002": 57, "5024": [57, 59], "5036": [57, 59], "5069": [57, 84], "5080": 57, "5091": 57, "5102": 57, "5114": 57, "5125": [57, 59], "5136": [57, 59], "5146": 57, "5157": [57, 59], "5168": 57, "5178": 57, "5189": 57, "5199": 57, "model_param": [57, 195, 238], "arrang": [57, 190, 197, 199], "ivimparam": 57, "20x20": 57, "height": [57, 240], "denot": [57, 62, 63, 71, 76, 102, 162, 187, 189, 195, 262], "estimated_param": 57, "97863113e": 57, "00000000e": [57, 109], "69394176e": 57, "71052305e": 57, "heatmap": [57, 64], "def": [57, 61, 92, 97, 100, 102, 105, 107, 108, 116, 117, 118, 138, 141, 142, 145, 187, 189, 193, 195, 197, 245], "plot_map": 57, "raw_data": 57, "clim": 57, "s0_predict": [57, 195, 201, 202, 220], "predicted_s0": 57, "measured_s0": 57, "perfusion_fract": [57, 195, 201, 202, 220], "perfusion_coeff": 57, "diffusion_coeff": 57, "refin": [57, 99, 113, 187, 195, 196, 201, 202, 228], "varpro": [57, 195, 247, 248, 254], "mix": [57, 168, 182, 194, 195, 201, 205, 206, 239, 240, 242], "farooq16": 57, "differenti": [57, 71, 187, 195, 199], "evolut": [57, 71, 108, 187, 189, 195, 202, 245], "convex": [57, 58, 99, 195], "oppos": [57, 80, 178, 187, 195, 199], "simultan": [57, 64, 76, 101, 107, 182, 195], "basin": 57, "fadnavis19": 57, "ivimmodel_vp": 57, "ivimfit_vp": 57, "185": [57, 58, 119, 244], "205": [57, 58, 244], "214": [57, 58], "225": [57, 58, 114, 120, 195, 243, 244], "229": [57, 58, 244], "254": [57, 58, 195, 201, 219], "257": [57, 58, 244], "263": [57, 58, 244], "269": [57, 58], "270": [57, 58, 119, 244], "272": [57, 58], "276": [57, 58], "278": [57, 58, 84, 89, 178, 199, 201, 234, 245], "286": [57, 58, 236], "289": [57, 58, 167, 182, 244, 247], "291": [57, 58], "316": [57, 58, 245], "318": [57, 58, 245], "320": [57, 58, 65, 105, 195, 245], "324": [57, 58, 245], "342": [57, 58, 238, 250], "347": [57, 58, 245], "398": [57, 58, 97, 245], "403": [57, 58, 195, 245], "411": [57, 58, 59, 195, 245], "417": [57, 58, 245], "419": [57, 58, 65, 245], "429": [57, 58, 195, 245], "431": [57, 58, 59, 245], "435": [57, 58, 245], "444": [57, 58, 59, 245], "464": [57, 58, 245], "466": [57, 58, 245], "468": [57, 58], "470": [57, 58, 245], "483": [57, 106, 245], "484": [57, 245], "499": [57, 59, 137, 245], "502": [57, 245], "506": [57, 245], "508": [57, 245], "510": [57, 192, 195, 197, 245, 262], "512": [57, 245], "531": [57, 69, 195, 201, 219, 245], "545": [57, 252], "549": [57, 246], "550": [57, 246], "562": [57, 252], "570": [57, 239], "574": [57, 246], "576": [57, 236], "583": [57, 247], "587": [57, 236], "590": [57, 137, 140, 247], "599": [57, 246], "627": [57, 236], "628": [57, 236], "630": [57, 236], "633": [57, 236], "635": [57, 86, 236], "644": [57, 88, 240], "648": [57, 236], "653": [57, 236], "656": [57, 236], "722": [57, 251], "742": [57, 189, 237, 241], "770": 57, "780": 57, "782": 57, "786": [57, 59], "788": 57, "792": 57, "798": 57, "810": [57, 237], "845": [57, 237], "849": [57, 237], "861": [57, 59, 252], "869": [57, 238], "877": [57, 238], "881": [57, 195, 238, 239], "883": [57, 238], "893": [57, 237], "899": [57, 238], "901": [57, 89, 238], "902": [57, 238], "906": [57, 237], "912": [57, 238], "914": [57, 197, 237], "917": [57, 59, 237], "931": [57, 59, 238], "937": [57, 238], "941": [57, 238], "943": [57, 195, 238], "951": [57, 238], "952": [57, 238], "955": [57, 238], "957": [57, 72, 238], "959": [57, 59, 68, 238], "962": [57, 238], "964": [57, 238], "974": [57, 238], "980": [57, 238], "986": [57, 238], "988": [57, 238], "992": [57, 238], "998": [57, 238], "1012": [57, 238], "1017": [57, 238], "1024": [57, 238], "1028": [57, 238], "1031": [57, 238], "1035": [57, 238], "1036": [57, 238], "1043": [57, 59, 68, 238], "1048": [57, 247], "1051": [57, 238], "1055": [57, 238], "1056": [57, 238], "1059": [57, 238], "1061": [57, 238], "1064": [57, 238], "1068": [57, 238], "1074": 57, "1080": [57, 238], "1082": [57, 238], "1084": [57, 239], "1101": [57, 238], "1114": [57, 238], "1115": [57, 195, 238], "1119": [57, 238], "1125": [57, 238], "1127": [57, 59, 238], "1140": [57, 238], "1142": [57, 238], "1144": 57, "1146": [57, 239], "1148": [57, 238], "1150": [57, 240], "1152": [57, 249], "1154": [57, 238], "1162": [57, 238], "1184": [57, 240], "1185": [57, 195, 238], "1189": [57, 238], "1190": [57, 238], "1192": [57, 247], "1197": [57, 59, 248], "1201": [57, 238], "1203": [57, 241], "1204": [57, 238], "1205": [57, 238], "1207": [57, 238], "1208": [57, 195, 238], "1210": [57, 238], "1214": [57, 238], "1230": [57, 247], "1232": [57, 241], "1234": [57, 238], "1236": [57, 241], "1245": [57, 247], "1247": [57, 239], "1251": [57, 238], "1253": [57, 238], "1255": [57, 238], "1259": 57, "1261": [57, 238], "1266": [57, 250], "1270": [57, 238], "1272": [57, 238], "1275": 57, "1282": [57, 240], "1289": [57, 239], "1291": [57, 240], "1293": [57, 59, 239], "1295": [57, 241], "1297": [57, 239], "1299": [57, 240], "1301": [57, 240], "1307": [57, 59, 239], "1309": [57, 239], "1313": [57, 239], "1316": [57, 239], "1318": [57, 239], "1324": [57, 239], "1337": [57, 239], "1344": [57, 239], "1347": [57, 240], "1349": [57, 59, 189, 239], "1350": [57, 240], "1359": [57, 239], "1361": [57, 239], "1363": [57, 59, 249], "1367": [57, 239], "1374": [57, 240], "1375": [57, 240], "1377": [57, 59, 240], "1379": [57, 240], "1382": [57, 240], "1384": [57, 240], "1388": [57, 240], "1396": [57, 241], "1401": [57, 248], "1403": [57, 240], "1414": [57, 241], "1416": [57, 240], "1422": [57, 240], "1426": [57, 240], "1428": [57, 240], "1435": [57, 240], "1439": [57, 240], "1442": [57, 248], "1443": [57, 240], "1445": [57, 240], "1460": [57, 240], "1462": [57, 240], "1466": [57, 240], "1468": [57, 240], "1470": [57, 240], "1474": [57, 240], "1479": [57, 240], "1487": [57, 241], "1493": [57, 240], "1498": [57, 240], "1507": [57, 241], "1513": [57, 241], "1515": [57, 241], "1517": [57, 59, 241], "1523": [57, 241], "1527": [57, 241], "1529": [57, 241], "1535": [57, 241], "1543": [57, 241], "1545": [57, 59, 241], "1547": [57, 241], "1549": [57, 241], "1551": [57, 241], "1565": [57, 242], "1575": [57, 241], "1577": [57, 241], "1580": [57, 241], "1582": [57, 241], "1590": [57, 241], "1596": [57, 241], "1598": [57, 241], "1601": [57, 59, 241], "1602": [57, 241], "1607": [57, 241], "1612": 57, "1614": [57, 189, 241], "1619": [57, 241], "1623": [57, 241], "1626": [57, 241], "1630": [57, 247], "1632": [57, 242], "1633": [57, 242], "1636": [57, 241], "1638": [57, 241], "1642": [57, 241], "1652": [57, 242], "1660": [57, 241], "1662": [57, 241], "1664": [57, 242], "1666": [57, 242], "1677": [57, 241], "1683": [57, 241], "1701": [57, 242], "1705": [57, 242], "1707": [57, 242], "1711": [57, 248], "1719": [57, 242], "1721": [57, 247], "1725": 57, "1731": [57, 247], "1739": [57, 242], "1743": [57, 242], "1744": [57, 250], "1750": 57, "1752": [57, 247], "1758": [57, 247], "1764": [57, 247], "1770": [57, 247], "1772": [57, 247], "1774": [57, 247], "1782": [57, 59, 247], "1784": [57, 247], "1788": [57, 247], "1790": [57, 247], "1794": [57, 247], "1796": [57, 59, 247], "1806": [57, 247], "1808": [57, 247], "1810": [57, 59, 247], "1812": [57, 247], "1814": [57, 247], "1816": [57, 247], "1822": [57, 247], "1826": 57, "1842": [57, 247], "1848": [57, 249], "1850": [57, 247], "1878": [57, 247], "1880": [57, 59, 247], "1884": [57, 247], "1886": 57, "1890": [57, 247], "1892": [57, 247], "1898": [57, 247], "1903": [57, 247], "1905": [57, 247], "1913": [57, 247], "1915": [57, 247], "1925": [57, 247], "1927": [57, 247], "1931": [57, 247], "1933": [57, 247], "1935": [57, 247], "1937": [57, 247], "1941": [57, 247], "1947": [57, 247], "1949": [57, 248], "1955": [57, 248], "1961": [57, 248], "1963": [57, 248], "1969": [57, 253], "1973": [57, 252], "1975": [57, 248], "1981": [57, 248], "1983": [57, 248], "1985": 57, "1987": [57, 84, 248], "1991": 57, "1993": [57, 190, 248], "1995": [57, 197, 248], "1997": [57, 64, 195, 241, 248], "2024": [57, 249], "2030": [57, 248], "2034": [57, 59, 249], "2036": 57, "2038": [57, 249], "2042": [57, 249], "2044": [57, 249], "2048": [57, 59, 249], "2050": 57, "2054": [57, 250], "2056": [57, 249], "2062": [57, 59], "2068": [57, 249], "2070": [57, 249], "2076": [57, 59, 249], "2078": [57, 249], "2080": [57, 249], "2083": [57, 249], "2084": [57, 249], "2086": [57, 249], "2088": [57, 249], "2089": [57, 249], "2090": [57, 59, 249], "2095": [57, 249], "2099": [57, 249], "2111": [57, 249], "2117": [57, 250], "2121": [57, 249], "2123": [57, 253], "2137": 57, "2143": 57, "2151": [57, 249], "2153": [57, 249], "2159": [57, 249], "2161": [57, 249], "2164": 57, "2166": 57, "2167": 57, "2168": [57, 249], "2169": [57, 249], "2171": [57, 249], "2172": [57, 249], "2173": [57, 59, 249], "2179": [57, 253], "2183": [57, 249], "2189": 57, "2193": [57, 249], "2199": [57, 249], "2201": [57, 59, 250], "2207": [57, 249], "2209": [57, 253], "2218": [57, 250], "2222": [57, 195, 250], "2224": [57, 250], "2228": [57, 59, 250], "2242": [57, 59, 250], "2244": [57, 250], "2245": [57, 250], "2246": [57, 250], "2250": [57, 250], "2252": [57, 250], "2258": [57, 250], "2262": [57, 250], "2268": [57, 250], "2270": 57, "2273": 57, "2280": [57, 59, 251], "2287": [57, 251], "2309": [57, 252], "2311": [57, 252], "2312": [57, 253], "2316": [57, 71, 252], "2318": [57, 251], "2327": [57, 254], "2330": 57, "2334": [57, 252], "2338": 57, "2340": [57, 252], "2344": [57, 252], "2350": [57, 252], "2353": [57, 252], "2356": 57, "2358": [57, 59], "2360": 57, "2365": [57, 252], "2371": [57, 252], "2379": [57, 89], "2385": [57, 252], "2391": [57, 253], "2393": [57, 253], "2399": 57, "2409": [57, 253], "2411": [57, 79, 253], "2420": [57, 253], "2422": [57, 59, 253], "2426": 57, "2428": 57, "2432": [57, 253], "2436": [57, 253], "2440": 57, "2442": [57, 253], "2443": [57, 86, 253], "2447": [57, 253], "2449": [57, 253], "2451": 57, "2453": [57, 253], "2461": [57, 59, 253], "2469": 57, "2473": 57, "2475": [57, 253], "2479": [57, 253], "2481": [57, 253], "2483": [57, 253], "2485": [57, 253], "2487": [57, 253], "2489": [57, 253], "2493": [57, 253], "2495": [57, 253], "2497": [57, 253], "2499": [57, 253], "2504": [57, 253], "2506": [57, 253], "2512": [57, 253], "2516": [57, 59], "2524": [57, 253], "2526": [57, 68, 253], "2528": [57, 59, 253], "2532": [57, 253], "2534": [57, 253], "2542": [57, 253], "2544": 57, "2546": [57, 253], "2547": 57, "2548": [57, 253], "2551": [57, 253], "2553": [57, 254], "2557": [57, 253], "2561": [57, 253], "2569": 57, "2582": 57, "2584": [57, 254], "2586": 57, "2588": 57, "2591": [57, 59, 254], "2592": [57, 254], "2594": [57, 254], "2598": 57, "2602": [57, 254], "2609": [57, 255], "2613": 57, "2617": [57, 254], "2619": 57, "2623": 57, "2625": [57, 255], "2628": [57, 255], "2629": [57, 254], "2630": [57, 59, 254], "2635": [57, 187, 254], "2637": 57, "2641": 57, "2645": 57, "2649": [57, 254], "2659": [57, 254], "2661": 57, "2665": 57, "2668": [57, 254], "2683": [57, 254], "2685": 57, "2689": 57, "2691": 57, "2695": 57, "2697": [57, 254], "2701": [57, 254], "2703": 57, "2707": [57, 255], "2709": [57, 254], "2715": 57, "2723": [57, 255], "2727": [57, 255], "2729": [57, 255], "2733": [57, 255], "2735": [57, 59], "2737": 57, "2741": [57, 59, 255], "2745": [57, 255], "2748": 57, "2751": [57, 255], "2759": 57, "2763": [57, 255], "2771": [57, 59], "2775": [57, 255], "2777": 57, "2781": 57, "2783": [57, 255], "2791": 57, "2795": 57, "2797": 57, "2801": 57, "2803": 57, "2807": 57, "2808": 57, "2809": [57, 59], "2815": 57, "2818": [57, 59], "2819": 57, "2821": 57, "2831": [57, 59], "2847": 57, "2852": [57, 59], "2861": 57, "2865": 57, "2867": 57, "2877": 57, "2878": 57, "2881": 57, "2883": [57, 59], "2885": 57, "2886": 57, "2887": 57, "2890": 57, "2892": 57, "2893": 57, "2895": 57, "2897": [57, 59], "2900": 57, "2902": 57, "2906": 57, "2908": 57, "2912": 57, "2914": 57, "2924": 57, "2926": [57, 59], "2931": [57, 59], "2932": 57, "2936": [57, 59], "2938": [57, 71], "2942": 57, "2944": [57, 59], "2953": 57, "2955": 57, "2957": [57, 59], "2961": 57, "2963": 57, "2966": 57, "2967": 57, "2968": 57, "2972": 57, "2974": 57, "2978": 57, "2980": 57, "2984": 57, "2990": 57, "2991": 57, "2997": 57, "3001": 57, "3003": 57, "3007": 57, "3010": 57, "3013": 57, "3014": [57, 59], "3015": 57, "3017": 57, "3019": 57, "3021": 57, "3028": 57, "3032": 57, "3037": 57, "3039": [57, 59], "3041": 57, "3044": 57, "3045": [57, 59], "3047": 57, "3053": 57, "3055": 57, "3059": 57, "3061": [57, 67], "3073": 57, "3076": 57, "3078": 57, "3089": 57, "3091": 57, "3093": 57, "3095": 57, "3101": 57, "3107": 57, "3113": 57, "3124": [57, 59], "3126": 57, "3127": 57, "3128": [57, 59], "3129": 57, "3130": 57, "3131": 57, "3133": 57, "3138": 57, "3142": 57, "3144": 57, "3146": 57, "3148": 57, "3150": 57, "3152": 57, "3154": 57, "3156": 57, "3158": 57, "3159": 57, "3160": [57, 59], "3162": 57, "3165": 57, "3166": 57, "3168": 57, "3170": 57, "3172": 57, "3176": 57, "3177": 57, "3187": 57, "3189": 57, "3193": 57, "3195": [57, 59], "3197": 57, "3199": 57, "3203": 57, "3205": 57, "3206": 57, "3208": [57, 59, 72], "3211": 57, "3213": [57, 59], "3215": 57, "3217": [57, 59], "3219": 57, "3221": 57, "3225": 57, "3227": 57, "3229": 57, "3231": 57, "3233": 57, "3235": [57, 89], "3237": [57, 59], "3238": 57, "3239": 57, "3241": [57, 59], "3243": 57, "3244": 57, "3245": [57, 89], "3247": 57, "3249": 57, "3251": 57, "3252": 57, "3255": 57, "3256": 57, "3257": 57, "3259": 57, "3260": 57, "3261": [57, 59], "3264": 57, "3266": 57, "3268": 57, "3272": 57, "3276": 57, "3278": 57, "3283": 57, "3285": 57, "3287": 57, "3289": [57, 84], "3291": 57, "3293": 57, "3295": 57, "3297": 57, "3299": [57, 79], "3301": 57, "3303": [57, 59], "3307": [57, 59], "3311": [57, 59], "3315": 57, "3317": 57, "3321": 57, "3323": 57, "3325": 57, "3329": 57, "3331": 57, "3333": [57, 195], "3335": 57, "3337": 57, "3341": 57, "3343": 57, "3347": 57, "3349": 57, "3351": 57, "3353": [57, 59], "3355": 57, "3357": 57, "3363": 57, "3365": 57, "3367": [57, 59], "3371": 57, "3373": 57, "3375": 57, "3379": 57, "3381": 57, "3386": 57, "3387": [57, 168], "3391": [57, 59], "3393": 57, "3397": 57, "3399": 57, "3403": 57, "3407": 57, "3409": [57, 59], "3413": [57, 59], "3415": 57, "3417": [57, 59], "3419": 57, "3421": 57, "3423": 57, "3427": 57, "3428": [57, 59], "3432": 57, "3434": 57, "3437": 57, "3439": 57, "3443": 57, "3447": 57, "3449": 57, "3451": 57, "3453": 57, "3455": 57, "3457": 57, "3475": 57, "3477": 57, "3479": 57, "3481": [57, 59], "3483": 57, "3484": 57, "3486": [57, 59], "3487": 57, "3490": 57, "3492": 57, "3496": 57, "3497": 57, "3499": 57, "3501": [57, 59], "3502": 57, "3504": 57, "3505": [57, 59], "3506": 57, "3507": [57, 59], "3508": 57, "3510": 57, "3511": [57, 59], "3513": 57, "3515": 57, "3516": [57, 59], "3518": 57, "3519": [57, 59], "3522": [57, 59], "3524": 57, "3525": [57, 59], "3527": [57, 59], "3529": 57, "3530": 57, "3531": 57, "3533": [57, 59], "3534": 57, "3542": 57, "3543": 57, "3547": 57, "3549": 57, "3551": 57, "3553": 57, "3557": 57, "3560": 57, "3562": 57, "3564": 57, "3566": 57, "3568": [57, 59], "3570": 57, "3572": 57, "3573": 57, "3574": 57, "3575": 57, "3576": [57, 59], "3578": 57, "3579": 57, "3580": 57, "3582": [57, 59], "3583": 57, "3586": 57, "3587": [57, 59], "3590": 57, "3591": [57, 59], "3594": 57, "3595": [57, 59], "3596": 57, "3598": [57, 59], "3599": 57, "3601": [57, 59], "3603": 57, "3605": 57, "3609": 57, "3613": 57, "3615": 57, "3618": 57, "3620": 57, "3622": 57, "3624": 57, "3625": 57, "3627": 57, "3628": [57, 59], "3631": 57, "3637": 57, "3639": 57, "3641": 57, "3643": 57, "3645": [57, 59], "3647": 57, "3649": 57, "3652": 57, "3653": 57, "3657": [57, 59], "3659": 57, "3660": 57, "3661": 57, "3663": 57, "3664": 57, "3665": [57, 59], "3667": 57, "3668": 57, "3670": 57, "3671": 57, "3675": 57, "3676": 57, "3679": [57, 59], "3681": 57, "3683": 57, "3685": [57, 59], "3687": 57, "3691": 57, "3693": 57, "3695": 57, "3697": [57, 59], "3700": [57, 59], "3701": 57, "3702": 57, "3704": 57, "3708": 57, "3710": 57, "3712": 57, "3716": [57, 84], "3718": [57, 59], "3720": [57, 59], "3722": 57, "3724": 57, "3726": 57, "3728": 57, "3738": [57, 59], "3740": 57, "3743": 57, "3745": 57, "3746": 57, "3747": [57, 84], "3752": [57, 59], "3754": 57, "3758": 57, "3760": 57, "3762": 57, "3764": 57, "3766": 57, "3770": 57, "3772": 57, "3775": [57, 59], "3777": 57, "3778": 57, "3780": [57, 59], "3782": 57, "3784": 57, "3786": 57, "3788": 57, "3790": 57, "3792": 57, "3794": 57, "3798": 57, "3802": 57, "3804": 57, "3806": [57, 59, 168], "3808": 57, "3819": 57, "3821": 57, "3824": 57, "3825": 57, "3827": 57, "3829": 57, "3830": 57, "3831": 57, "3832": 57, "3834": 57, "3836": [57, 59], "3839": 57, "3841": 57, "3843": 57, "3846": 57, "3848": 57, "3850": [57, 59, 168], "3852": 57, "3854": 57, "3856": 57, "3858": [57, 59], "3862": 57, "3866": 57, "3868": 57, "3870": [57, 59], "3874": 57, "3878": 57, "3880": 57, "3882": 57, "3884": 57, "3886": 57, "3887": 57, "3889": [57, 59], "3890": 57, "3892": [57, 59], "3893": 57, "3895": [57, 59], "3897": 57, "3899": 57, "3902": 57, "3904": [57, 59], "3906": [57, 59], "3907": 57, "3908": [57, 59], "3912": [57, 59], "3914": [57, 59], "3916": 57, "3917": 57, "3918": [57, 59, 84], "3919": 57, "3921": 57, "3923": 57, "3925": 57, "3931": 57, "3933": 57, "3935": 57, "3937": 57, "3941": 57, "3943": 57, "3945": 57, "3947": 57, "3949": 57, "3951": 57, "3955": 57, "3959": 57, "3961": 57, "3962": [57, 59], "3964": 57, "3965": 57, "3966": 57, "3967": [57, 59], "3968": 57, "3972": [57, 59], "3974": [57, 84], "3978": 57, "3984": [57, 59], "3986": 57, "3989": 57, "3992": 57, "3994": 57, "3996": [57, 59], "3998": 57, "4003": 57, "4005": 57, "4007": 57, "4010": [57, 59], "4014": [57, 59], "4022": 57, "4024": 57, "4026": 57, "4028": 57, "4030": 57, "4031": 57, "4032": 57, "4035": 57, "4038": 57, "4040": 57, "4042": 57, "4043": 57, "4047": 57, "4049": 57, "4053": 57, "4054": 57, "4056": 57, "4057": [57, 59], "4062": [57, 59], "4066": [57, 59], "4068": 57, "4070": 57, "4074": 57, "4075": 57, "4076": [57, 59], "4077": 57, "4080": 57, "4082": 57, "4086": 57, "4088": 57, "4090": [57, 59], "4094": [57, 84], "4097": [57, 89], "4099": [57, 89], "4101": 57, "4103": 57, "4111": [57, 89], "4112": 57, "4113": 57, "4115": 57, "4125": 57, "4127": 57, "4129": 57, "4131": [57, 59], "4133": 57, "4136": 57, "4138": 57, "4140": 57, "4141": [57, 59], "4143": 57, "4144": 57, "4146": 57, "4148": [57, 59], "4150": 57, "4151": 57, "4153": [57, 59], "4157": 57, "4161": [57, 84], "4162": 57, "4164": 57, "4166": [57, 59], "4168": 57, "4170": 57, "4172": [57, 59], "4174": 57, "4176": 57, "4178": 57, "4180": [57, 59], "4182": [57, 59], "4186": 57, "4188": [57, 84], "4192": 57, "4194": [57, 59], "4196": 57, "4198": 57, "4202": [57, 59], "4204": [57, 59], "4206": 57, "4208": [57, 59], "4210": 57, "4211": 57, "4214": 57, "4218": 57, "4220": 57, "4222": 57, "4226": [57, 84], "4228": 57, "4230": 57, "4232": [57, 89], "4238": 57, "4240": 57, "4242": 57, "4244": 57, "4246": 57, "4248": 57, "4252": [57, 72], "4254": 57, "4256": 57, "4260": [57, 59], "4262": 57, "4264": [57, 59], "4266": 57, "4268": [57, 59, 84, 86], "4270": 57, "4272": [57, 84], "4274": [57, 59], "4276": [57, 59], "4278": [57, 89], "4282": [57, 59], "4284": 57, "4286": 57, "4288": 57, "4290": [57, 59], "4292": 57, "4294": 57, "4296": 57, "4301": 57, "4303": 57, "4305": 57, "4306": [57, 59, 84], "4307": 57, "4310": 57, "4311": 57, "4314": 57, "4316": 57, "4318": [57, 89], "4322": 57, "4324": 57, "4325": 57, "4327": 57, "4335": 57, "4337": [57, 84], "4339": [57, 84], "4341": 57, "4343": [57, 89], "4345": 57, "4347": 57, "4352": [57, 72], "4354": [57, 89], "4356": 57, "4358": 57, "4360": [57, 59], "4367": 57, "4369": 57, "4378": 57, "4380": [57, 72], "4382": 57, "4384": 57, "4386": [57, 89], "4387": 57, "4389": [57, 59], "4390": 57, "4391": 57, "4392": [57, 72], "4395": [57, 89], "4396": [57, 59, 84], "4398": 57, "4401": [57, 72], "4411": [57, 72], "4413": 57, "4415": 57, "4419": 57, "4421": [57, 72], "4422": [57, 84], "4424": 57, "4426": 57, "4428": [57, 59], "4432": [57, 72], "4434": 57, "4436": [57, 72], "4438": [57, 72], "4440": 57, "4442": [57, 84], "4444": [57, 59], "4446": [57, 72], "4448": 57, "4450": [57, 59, 84, 89], "4452": [57, 84, 89], "4456": [57, 72, 84], "4458": [57, 72], "4462": 57, "4463": [57, 72], "4464": [57, 59], "4467": [57, 59, 84], "4469": 57, "4470": [57, 72, 84, 89], "4474": [57, 84], "4476": 57, "4478": 57, "4481": [57, 84], "4485": 57, "4487": [57, 59, 89], "4489": [57, 72, 84, 89], "4493": [57, 72], "4495": [57, 59], "4502": [57, 72], "4504": [57, 84], "4506": [57, 71], "4514": [57, 72], "4516": [57, 72, 84], "4518": 57, "4520": 57, "4524": [57, 84, 89], "4528": [57, 72], "4530": [57, 59, 72, 84], "4532": [57, 84, 89], "4533": 57, "4534": [57, 72, 84], "4536": [57, 72, 84, 89], "4537": [57, 59, 84], "4541": [57, 72, 89], "4545": [57, 72], "4547": [57, 72, 84, 89], "4549": [57, 89], "4550": [57, 84], "4553": [57, 72, 84, 89], "4554": [57, 84, 89], "4557": [57, 59, 84, 89], "4559": [57, 72], "4561": [57, 59, 72, 89], "4565": 57, "4568": [57, 84, 89], "4570": [57, 72, 89], "4572": 57, "4574": [57, 59, 72, 89], "4576": [57, 89], "4578": [57, 72], "4580": [57, 72, 89], "4582": [57, 84], "4588": 57, "4590": 57, "4592": [57, 72, 84], "4594": 57, "4596": [57, 72, 84, 89], "4604": [57, 59], "4605": [57, 72], "4607": [57, 72], "4609": [57, 89], "4613": [57, 84], "4614": [57, 84, 89], "4615": [57, 89], "4616": [57, 84], "4617": [57, 89], "4619": [57, 72, 84, 89], "4630": 57, "4631": [57, 72], "4632": [57, 72], "4645": [57, 72], "4647": [57, 84, 89], "4651": [57, 72, 84], "4653": [57, 89], "4654": 57, "4655": [57, 72, 89], "4656": [57, 59, 72, 84, 89], "4657": [57, 71, 72, 89], "4659": [57, 84], "4661": [57, 84], "4663": [57, 84], "4665": [57, 84], "4667": [57, 84], "4669": 57, "4670": [57, 84], "4671": [57, 84], "4673": [57, 59, 84], "4675": [57, 84, 89], "4677": [57, 84], "4679": 57, "4681": [57, 72], "4682": [57, 72, 84], "4683": [57, 89], "4686": [57, 84], "4690": [57, 84], "4691": [57, 72, 84], "4693": [57, 59], "4695": 57, "4696": [57, 72, 89], "4700": [57, 72], "4702": [57, 84, 89], "4704": [57, 84], "4706": [57, 84], "4708": 57, "4710": [57, 84, 89], "4712": [57, 84], "4714": [57, 72, 84], "4715": 57, "4719": [57, 59, 89], "4721": [57, 72, 89], "4722": [57, 72, 84, 89], "4726": [57, 89], "4728": [57, 84], "4729": [57, 59, 84, 89], "4732": 57, "4735": [57, 84], "4738": [57, 59, 84, 89], "4739": [57, 72, 84], "4741": 57, "4743": 57, "4745": [57, 84], "4747": [57, 84, 89], "4749": [57, 84], "4754": [57, 89], "4758": 57, "4759": 57, "4760": [57, 72, 84, 89], "4762": [57, 89], "4763": 57, "4765": [57, 59, 84], "4769": [57, 89], "4771": 57, "4773": 57, "4775": [57, 84], "4776": [57, 89], "4777": [57, 59, 84], "4779": [57, 72, 84], "4781": 57, "4790": 57, "4792": 57, "4794": 57, "4796": 57, "4798": [57, 84, 89], "4802": 57, "4806": 57, "4808": [57, 89], "4810": 57, "4814": 57, "4816": [57, 89], "4820": 57, "4822": [57, 59, 89], "4826": [57, 89], "4830": [57, 59, 71], "4832": 57, "4834": 57, "4838": [57, 59, 89], "4840": 57, "4842": 57, "4844": [57, 59], "4846": [57, 89], "4848": 57, "4850": [57, 59, 89], "4852": 57, "4854": 57, "4855": 57, "4856": 57, "4857": [57, 89], "4859": 57, "4863": 57, "4865": 57, "4867": [57, 89], "4868": 57, "4869": 57, "4870": 57, "4874": 57, "4875": [57, 59], "4878": 57, "4880": 57, "4882": [57, 89], "4884": [57, 59], "4886": [57, 89], "4889": [57, 71], "4891": 57, "4893": 57, "4894": 57, "4898": [57, 59], "4900": 57, "4903": 57, "4904": 57, "4905": 57, "4906": 57, "4911": 57, "4912": 57, "4913": 57, "4914": 57, "4916": 57, "4917": [57, 59, 71], "4919": 57, "4920": 57, "4925": [57, 71], "4927": 57, "4929": 57, "4930": [57, 59], "4931": 57, "4932": 57, "4933": 57, "4937": 57, "4939": [57, 59], "4944": 57, "4945": 57, "4947": 57, "4949": 57, "4950": 57, "4952": 57, "4956": 57, "4960": 57, "4962": [57, 59], "4964": 57, "4968": [57, 59], "4970": 57, "4971": 57, "4973": [57, 59], "4974": 57, "4976": 57, "4977": 57, "4979": 57, "4982": 57, "4983": 57, "4985": [57, 72], "4988": 57, "4989": 57, "4993": 57, "4995": 57, "4996": 57, "4997": 57, "4998": 57, "4999": 57, "5001": 57, "5004": 57, "5005": [57, 59], "5007": 57, "5008": 57, "5009": 57, "5011": 57, "5012": 57, "5014": 57, "5016": 57, "5017": 57, "5018": 57, "5019": [57, 59], "5021": 57, "5022": 57, "5026": 57, "5027": 57, "5029": 57, "5030": 57, "5031": 57, "5032": [57, 59], "5033": 57, "5034": 57, "5035": 57, "5038": 57, "5039": [57, 59], "5041": 57, "5042": [57, 59], "5043": 57, "5045": 57, "5046": [57, 59], "5048": 57, "5051": 57, "5052": 57, "5055": 57, "5057": [57, 59], "5059": 57, "5060": [57, 59], "5061": 57, "5062": [57, 59], "5064": 57, "5068": [57, 59], "5071": 57, "5074": 57, "5076": 57, "5077": 57, "5079": 57, "5081": 57, "5084": 57, "5086": 57, "5088": 57, "5090": 57, "5092": 57, "5093": 57, "5094": 57, "5095": [57, 59], "5096": 57, "5098": 57, "5099": 57, "5101": [57, 79], "5104": 57, "5106": 57, "5107": 57, "5108": 57, "5110": [57, 59], "5112": 57, "5113": 57, "5116": 57, "5117": 57, "5118": 57, "5119": 57, "5120": [57, 59], "5121": 57, "5122": 57, "5123": 57, "5124": 57, "5126": 57, "5127": 57, "5128": 57, "5129": [57, 59], "5132": 57, "5134": 57, "5138": 57, "5140": 57, "5144": 57, "5149": 57, "5150": 57, "5151": [57, 59], "5152": 57, "5153": 57, "5154": [57, 59], "5155": 57, "5156": 57, "5158": 57, "5159": 57, "5160": 57, "5161": 57, "5162": [57, 59, 80], "5163": 57, "5165": [57, 59], "5166": 57, "5167": 57, "5169": [57, 59], "5170": 57, "5171": 57, "5172": 57, "5173": 57, "5174": 57, "5175": 57, "5176": 57, "5177": 57, "5179": 57, "5180": 57, "5182": 57, "5184": 57, "5186": 57, "5188": 57, "5190": 57, "5191": 57, "5192": 57, "5193": [57, 86], "5194": [57, 59], "5195": 57, "5196": 57, "5197": 57, "5198": 57, "15609783e": 57, "09732577e": 57, "86659301e": 57, "19170291e": 57, "ivim_trr_predict": 57, "s0_est": 57, "f_est": 57, "d_star_est": 57, "d_est": 57, "text_fit": 57, "param": [57, 142, 145, 187, 195, 199, 201, 236, 241, 245, 255], "3f": 57, "4f": [57, 189], "5f": 57, "horizontalalign": [57, 76], "verticalalign": [57, 76], "gca": 57, "transax": [57, 76], "ivim_predict_vp": 57, "ivim_voxel_plot": 57, "spin": [57, 58, 162, 176, 190, 194, 195, 197, 201, 219, 220, 221, 258, 260], "echo": [57, 162, 176, 190, 195, 197, 201, 219, 220, 258, 260], "presenc": [57, 63, 69, 176, 197, 201, 220, 262], "chemic": [57, 176, 197, 201, 220], "bibcod": [57, 176, 201, 220], "1965jchph": [57, 176, 201, 220], "1695690": [57, 176, 201, 220], "deni": [57, 176, 195, 201, 220], "radiologi": [57, 176, 195, 201, 220], "microlearn": [57, 195, 242], "canada": [57, 67, 183, 195, 200, 201, 223], "farooq": [57, 195], "hamza": [57, 195], "reconst_ivim": [57, 70], "ozarslan2013": [58, 61], "varieti": [58, 100, 118, 135, 176], "rotation": [58, 61, 71, 72, 189], "invers": [58, 61, 76, 108, 109, 138, 164, 187, 189, 192, 195, 198, 199, 200, 201, 202, 204, 239, 247], "qiv": [58, 61, 195, 201, 202, 221], "teturn": 58, "ng": [58, 195, 201, 202, 221, 240], "interestingli": 58, "rtap": [58, 61, 176, 195, 201, 202, 221, 236], "plane": [58, 61, 127, 138, 141, 164, 176, 189, 195, 199, 247, 258, 263], "rtpp": [58, 61, 176, 195, 201, 202, 221, 236], "delahaije2020": 58, "laplacian": [58, 61, 182, 195, 201, 221, 238], "mapl": [58, 146, 147, 182, 184, 195, 239, 240], "fick2016a": 58, "mapmri": [58, 61, 176, 201, 202, 221, 236, 238, 239, 240, 241, 242, 249, 256], "explicitli": [58, 69, 135, 187, 189, 194, 195, 196, 237, 238, 247], "big_delta": [58, 61, 189, 195, 201, 221, 239], "small_delta": [58, 61, 189, 195, 201, 221, 239], "0365": [58, 176], "0157": [58, 176], "radial_ord": [58, 61, 67, 195, 201, 221], "anisotropic_sc": [58, 195], "laplacian_regular": [58, 61, 195, 249], "given": [58, 59, 61, 62, 63, 64, 69, 71, 72, 92, 95, 99, 102, 114, 118, 141, 164, 177, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 223, 229, 236, 241, 242, 258, 262], "regularization_weight": 58, "gcv": [58, 61, 195, 247], "craven1978": 58, "omit": [58, 187, 195, 199], "custom": [58, 59, 187, 194, 195, 201, 203, 238, 250], "positivity_constraint": [58, 195], "global_constraint": [58, 195], "pos_grid": [58, 195], "pos_radiu": [58, 195], "job": [58, 162, 241], "viabl": 58, "impos": [58, 61, 63, 195], "extrapol": [58, 61, 195, 199], "desir": [58, 95, 113, 118, 187, 189, 195, 196, 197], "map_model_laplacian_aniso": 58, "mapmrimodel": [58, 202], "laplacian_weight": [58, 61, 195, 201, 221], "map_model_positivity_aniso": 58, "map_model_both_aniso": 58, "map_model_plus_aniso": 58, "preset": [58, 61, 195], "faster": [58, 113, 116, 166, 182, 187, 191, 194, 195, 196, 199, 201, 210, 211, 237, 238, 243, 245, 257], "mapfit_laplacian_aniso": [58, 240], "mapfit_positivity_aniso": 58, "mapfit_both_aniso": 58, "mapfit_plus_aniso": 58, "cmapl": 58, "198": 58, "422": [58, 245], "157": 58, "232": [58, 236, 244], "238": [58, 63, 195, 247], "240": [58, 244], "295": 58, "328": [58, 84, 238], "383": [58, 245], "420": [58, 245], "428": [58, 77, 100, 245], "430": [58, 245], "443": [58, 245], "449": [58, 245], "453": [58, 245], "461": [58, 245], "map_label": [58, 200], "mapmri_rtop": 58, "smoother": [58, 187, 195, 196, 201, 204], "norm_of_laplacian_sign": [58, 195, 202], "mapmri_norm_laplacian": 58, "overal": [58, 76, 97], "mapmri_map": 58, "proton": [58, 162, 260], "said": 58, "hosseinbor2013": 58, "composit": [58, 187], "fick2016b": 58, "puls": [58, 61, 162, 189, 190, 195, 197, 258, 260], "appar": [58, 172, 174, 182, 191, 195], "diamet": 58, "strong": 58, "pore": [58, 195], "realist": 58, "map_model_both_ng": 58, "bval_threshold": [58, 195, 201, 221], "map_model_plus_ng": 58, "mapfit_both_ng": 58, "mapfit_plus_ng": 58, "ng_perpendicular": [58, 195, 202], "ng_parallel": [58, 195, 202], "mapmri_ng": 58, "clue": 58, "map_model_both_iso": 58, "mapfit_both_iso": 58, "sharpen": [58, 71, 195, 244], "noisier": 58, "sfu": [58, 67], "hj": [58, 190, 195], "craven": [58, 195], "spline": [58, 187, 195, 202], "hosseinbor": [58, 195], "bessel": [58, 195], "bfor": [58, 195], "dispers": [58, 60], "reconst_mapmri": [58, 70, 240], "msmt": [59, 182, 195, 247, 248, 250], "jeurissen2014": 59, "goe": [59, 61, 71, 200], "overestim": [59, 195], "ssst": [59, 195], "median": [59, 76, 176, 189, 196, 198, 201, 227, 238, 244, 252], "otsu": [59, 176, 202, 238, 244], "powermap": 59, "unavail": 59, "unique_bvals_toler": [59, 195, 202], "auto_response_msmt": [59, 202], "mask_for_response_msmt": [59, 202], "response_from_mask_msmt": [59, 202, 251], "multishelldeconvmodel": [59, 202], "thetax": 59, "dellacqua2014": [59, 146, 147, 184], "qball_model": 59, "qballmodel": [59, 202], "ap": [59, 195, 199], "anisotropic_pow": [59, 202, 238], "shm_coeff": [59, 71, 72, 80, 84, 85, 89, 192, 193, 195, 202, 249], "matshow": [59, 76, 95], "bone": [59, 76, 95], "anisotropic_power_map": 59, "treat": [59, 187, 189, 190, 195, 201], "hidden": [59, 121, 187, 190, 194, 240, 249], "markov": [59, 121, 196, 243, 244], "hmrf": [59, 121], "nclass": [59, 121, 196], "factor": [59, 64, 67, 98, 99, 100, 107, 121, 130, 131, 187, 189, 191, 195, 201, 203, 204, 210, 221, 250, 258, 262], "beta": [59, 65, 76, 103, 121, 163, 187, 195, 196, 199, 201, 208], "initial_segment": [59, 121, 196], "final_segment": [59, 121, 196], "precis": [59, 60, 118, 162, 189, 194, 195, 238, 240, 245, 246], "mask_wm": [59, 195], "mask_gm": [59, 195], "mask_csf": [59, 195], "wm_fa_thr": [59, 195], "gm_fa_thr": [59, 195], "csf_fa_thr": [59, 195], "gm_md_thr": [59, 195], "csf_md_thr": [59, 195], "0032": [59, 195], "594": [59, 236, 246], "msg_bval": 59, "multipli": [59, 66, 76, 97, 127, 187, 195, 196, 201, 217], "nvoxels_wm": 59, "nvoxels_gm": 59, "nvoxels_csf": 59, "precalcul": [59, 201, 208], "response_wm": [59, 195], "response_gm": [59, 195], "response_csf": [59, 195], "auto_response_wm": 59, "auto_response_gm": 59, "auto_response_csf": 59, "56692320e": 59, "46085143e": 59, "62131485e": 59, "34276461e": 59, "52534556e": 59, "71997238e": 59, "03193240e": 59, "83911565e": 59, "84828549e": 59, "24057454e": 59, "48173768e": 59, "33583578e": 59, "54048426e": 59, "19247972e": 59, "03434085e": 59, "70814058e": 59, "99497542e": 59, "66589967e": 59, "37647490e": 59, "22844899e": 59, "02876747e": 59, "64284096e": 59, "90155949e": 59, "05450074e": 59, "52760292e": 59, "33298612e": 59, "19461602e": 59, "31346774e": 59, "09567957e": 59, "48548376e": 59, "multishellrespons": [59, 202], "ubval": [59, 189, 195], "response_mcsd": 59, "wm_rf": [59, 195], "gm_rf": [59, 195], "csf_rf": [59, 195], "mcsd_model_simple_respons": 59, "inspir": [59, 71, 72, 196], "mcsd_model": 59, "mcsd_fit": 59, "1001": [59, 238], "1057": [59, 238], "1211": [59, 238], "1279": [59, 239], "1447": [59, 240], "1461": [59, 240], "1475": [59, 240], "1629": [59, 241], "1657": [59, 241], "1740": [59, 242], "1908": [59, 247], "1936": 59, "1950": [59, 248], "2104": [59, 249], "2118": [59, 249], "2132": [59, 250], "2214": [59, 250], "2255": [59, 250], "2335": [59, 252], "2366": 59, "2408": 59, "2454": [59, 253], "2488": [59, 253], "2556": [59, 253], "2605": 59, "2618": [59, 254], "2652": 59, "2694": [59, 254], "2708": [59, 254], "2754": [59, 255], "2836": 59, "3100": 59, "3137": 59, "3147": 59, "3186": 59, "3202": 59, "3230": 59, "3234": 59, "3248": 59, "3275": [59, 84], "3292": 59, "3298": 59, "3314": 59, "3324": 59, "3328": 59, "3332": 59, "3336": 59, "3376": 59, "3384": [59, 138], "3422": 59, "3431": 59, "3440": 59, "3474": 59, "3503": 59, "3556": 59, "3606": 59, "3608": 59, "3610": 59, "3673": 59, "3690": 59, "3694": 59, "3711": 59, "3713": 59, "3785": 59, "3797": 59, "3865": 59, "3875": 59, "3881": 59, "3901": 59, "3934": 59, "3956": 59, "3977": 59, "3981": 59, "3987": 59, "3993": 59, "4001": 59, "4004": 59, "4008": 59, "4023": 59, "4037": 59, "4046": 59, "4052": 59, "4073": 59, "4079": 59, "4085": 59, "4087": 59, "4096": 59, "4104": 59, "4108": 59, "4110": 59, "4118": 59, "4175": 59, "4177": [59, 84], "4185": 59, "4191": [59, 79], "4197": 59, "4221": 59, "4235": 59, "4243": [59, 84], "4255": 59, "4279": 59, "4297": 59, "4342": 59, "4349": 59, "4385": 59, "4521": 59, "4591": 59, "4642": 59, "4746": [59, 89], "4752": [59, 72, 84], "4757": [59, 84], "4799": 59, "4860": 59, "4866": 59, "4871": 59, "4924": 59, "4948": 59, "4953": 59, "4965": 59, "5028": 59, "5054": 59, "5065": 59, "5115": 59, "5133": 59, "5139": 59, "5141": 59, "5143": 59, "5181": 59, "5202": 59, "5209": 59, "5215": 59, "5220": 59, "5224": 59, "5228": 59, "5231": 59, "5234": 59, "5237": 59, "5240": 59, "5243": 59, "5247": 59, "5250": 59, "5253": 59, "5256": 59, "5259": 59, "5261": 59, "5263": 59, "5265": 59, "5277": 59, "5290": 59, "5297": 59, "5304": 59, "5310": 59, "5315": 59, "5319": 59, "5323": 59, "5326": 59, "5329": 59, "5332": 59, "5335": 59, "5338": 59, "5341": 59, "5344": 59, "5346": 59, "5348": 59, "5350": 59, "5352": 59, "5354": 59, "5356": 59, "5360": 59, "5371": 59, "5384": 59, "5391": 59, "5398": 59, "5403": 59, "5407": 59, "5411": 59, "5417": [59, 89], "5420": 59, "5423": 59, "5427": 59, "5430": 59, "5433": 59, "5436": 59, "5439": 59, "5441": 59, "5443": 59, "5445": 59, "5447": 59, "5449": 59, "5451": 59, "5453": 59, "5455": 59, "5462": 59, "5476": 59, "5486": 59, "5494": 59, "5500": 59, "5505": 59, "5509": 59, "5513": 59, "5517": 59, "5520": 59, "5523": 59, "5526": 59, "5529": 59, "5532": 59, "5535": 59, "5538": 59, "5540": 59, "5542": 59, "5544": 59, "5546": 59, "5548": 59, "5550": 59, "5552": 59, "5565": 59, "5579": 59, "5587": 59, "5594": 59, "5599": 59, "5604": 59, "5609": 59, "5613": 59, "5616": 59, "5620": 59, "5623": 59, "5626": 59, "5628": 59, "5630": 59, "5632": 59, "5634": 59, "5636": 59, "5638": 59, "5640": 59, "5642": 59, "5644": 59, "5648": 59, "5662": 59, "5675": 59, "5683": 59, "5689": 59, "5694": 59, "5699": 59, "5703": 59, "5707": 59, "5710": 59, "5713": 59, "5716": 59, "5719": 59, "5721": 59, "5723": 59, "5725": 59, "5727": 59, "5729": 59, "5731": 59, "5733": 59, "5735": 59, "5738": 59, "5740": 59, "5747": 59, "5760": 59, "5774": 59, "5783": 59, "5790": 59, "5795": 59, "5799": 59, "5802": 59, "5805": 59, "5808": 59, "5810": 59, "5812": 59, "5814": 59, "5817": 59, "5820": 59, "5822": 59, "5824": 59, "5826": 59, "5828": 59, "5830": 59, "5832": 59, "5835": 59, "5845": 59, "5859": 59, "5872": 59, "5881": 59, "5888": 59, "5894": 59, "5898": 59, "5902": 59, "5905": 59, "5908": 59, "5912": 59, "5916": 59, "5919": 59, "5922": 59, "5925": 59, "5928": 59, "5931": 59, "5942": 59, "5955": 59, "5968": 59, "5976": 59, "5982": 59, "5987": 59, "5991": 59, "5994": 59, "5997": 59, "6000": [59, 79], "6003": 59, "6008": 59, "6013": 59, "6017": 59, "6020": 59, "6024": [59, 119], "6027": 59, "6034": 59, "6047": 59, "6061": 59, "6070": 59, "6078": 59, "6084": 59, "6089": 59, "6093": 59, "6096": 59, "6099": 59, "6103": 59, "6108": [59, 80], "6112": 59, "6116": 59, "6119": 59, "6122": 59, "6125": 59, "6138": 59, "6151": 59, "6162": 59, "6170": 59, "6177": 59, "6182": 59, "6186": 59, "6190": 59, "6195": 59, "6199": 59, "6203": 59, "6207": 59, "6211": 59, "6215": 59, "6218": 59, "6228": 59, "6242": 59, "6256": 59, "6265": 59, "6273": 59, "6279": 59, "6286": 59, "6292": 59, "6297": 59, "6301": 59, "6305": 59, "6308": 59, "6314": 59, "6326": 59, "6340": 59, "6354": 59, "6364": 59, "6372": 59, "6378": 59, "6383": 59, "6388": 59, "6392": 59, "6396": 59, "6399": 59, "6402": 59, "6404": 59, "6406": 59, "6413": 59, "6426": 59, "6439": 59, "6451": 59, "6461": 59, "6469": 59, "6475": 59, "6480": 59, "6485": [59, 85], "6489": 59, "6492": 59, "6495": 59, "6498": 59, "6501": 59, "6504": 59, "6518": 59, "6532": 59, "6546": 59, "6556": 59, "6564": 59, "6571": 59, "6577": 59, "6582": 59, "6587": 59, "6591": 59, "6595": 59, "6598": 59, "6606": 59, "6620": 59, "6634": 59, "6648": 59, "6658": 59, "6666": 59, "6673": 59, "6680": 59, "6685": 59, "6690": 59, "6699": 59, "6713": 59, "6726": 59, "6738": 59, "6748": 59, "6758": 59, "6766": 59, "6772": 59, "6778": 59, "6783": 59, "6788": 59, "6800": 59, "6814": 59, "6827": 59, "6840": 59, "6851": 59, "6860": 59, "6867": 59, "6873": 59, "6879": 59, "6891": 59, "6905": 59, "6919": 59, "6932": 59, "6944": 59, "6956": 59, "6965": 59, "6972": 59, "6985": 59, "6999": 59, "7013": 59, "7027": 59, "7040": 59, "7052": 59, "7062": 59, "7075": 59, "7089": 59, "7103": 59, "7117": 59, "7130": 59, "7143": 59, "7155": 59, "7169": 59, "7182": 59, "7196": 59, "7210": 59, "7223": 59, "7237": 59, "7250": 59, "7263": 59, "7276": 59, "7290": 59, "7304": 59, "7318": 59, "7332": 59, "7346": 59, "7360": 59, "7374": 59, "7388": 59, "7402": 59, "7416": 59, "7430": 59, "7444": 59, "7457": 59, "7471": 59, "7485": 59, "7499": 59, "7513": 59, "7527": 59, "7541": 59, "7555": 59, "7569": 59, "7583": 59, "7597": 59, "7611": 59, "7625": 59, "7639": 59, "7653": 59, "7667": 59, "7681": 59, "7695": 59, "7709": 59, "7723": 59, "7737": 59, "7751": 59, "7765": 59, "7779": 59, "7793": 59, "7807": 59, "7821": 59, "7835": 59, "7849": 59, "7863": 59, "7877": 59, "7891": 59, "7905": 59, "7919": 59, "7933": 59, "7947": 59, "7961": 59, "7975": 59, "7989": 59, "8003": 59, "8017": 59, "8031": 59, "8045": 59, "8059": 59, "8073": 59, "8087": 59, "8101": 59, "8115": 59, "8128": 59, "8141": 59, "8154": 59, "8167": 59, "8180": 59, "8193": 59, "8206": 59, "8219": 59, "8232": 59, "8245": 59, "8258": 59, "8271": [59, 79], "8284": 59, "8297": 59, "8310": 59, "8323": 59, "8336": 59, "8349": 59, "8362": 59, "8375": 59, "8388": 59, "8401": 59, "8414": 59, "8427": 59, "8441": 59, "8455": 59, "8469": 59, "8483": 59, "8497": 59, "8525": 59, "8539": 59, "8553": 59, "8567": 59, "8581": 59, "8595": 59, "8609": 59, "8623": 59, "8637": 59, "8651": 59, "8665": 59, "8679": 59, "8693": 59, "8707": 59, "8721": 59, "8735": 59, "8749": [59, 85], "8763": 59, "8777": 59, "8791": 59, "8805": [59, 79], "8819": 59, "8833": 59, "8847": 59, "8861": 59, "8875": 59, "8888": 59, "8901": 59, "8914": 59, "8928": 59, "8942": 59, "8956": 59, "8970": [59, 79], "8984": 59, "8998": 59, "9011": 59, "9024": 59, "9037": 59, "9050": [59, 79], "9064": 59, "9078": 59, "9092": 59, "9106": 59, "9120": 59, "9134": [59, 79], "9148": 59, "9161": [59, 79, 80], "9175": 59, "9189": 59, "9203": [59, 85], "sh": [59, 66, 85, 182, 192, 193, 194, 195, 201, 233, 241, 247, 249, 250, 253, 254, 262], "all_shm_coeff": [59, 195, 202], "vf": 59, "volume_fract": [59, 195, 202], "sh_coeff": [59, 66, 195, 202], "csf_sh_coeff": 59, "gm_sh_coeff": 59, "wm_sh_coeff": 59, "mcsd_pred": 59, "mcsd_odf": 59, "reset_camera_tight": 59, "msdodf": 59, "07825714e": 59, "48320688e": 59, "86296574e": 59, "78587170e": 59, "13735690e": 59, "90413144e": 59, "91231786e": 59, "78762352e": 59, "98478870e": 59, "62344531e": 59, "17122629e": 59, "22765485e": 59, "38664442e": 59, "01082781e": 59, "16166084e": 59, "06773266e": 59, "41480505e": 59, "65267032e": 59, "38412226e": 59, "35372242e": 59, "67682855e": 59, "33196727e": 59, "37010673e": 59, "26876858e": 59, "69441781e": 59, "45155684e": 59, "79924130e": 59, "77920204e": 59, "30414334e": 59, "04371319e": 59, "12873011e": 59, "58197594e": 59, "04074927e": 59, "23541599e": 59, "53194270e": 59, "99136992e": 59, "66444502e": 59, "10730689e": 59, "39150785e": 59, "84296018e": 59, "67754591e": 59, "53366214e": 59, "37294028e": 59, "11570872e": 59, "04505730e": 59, "97962172e": 59, "41602185e": 59, "40733046e": 59, "15893785e": 59, "28407355e": 59, "98608252e": 59, "42820604e": 59, "33807225e": 59, "95418963e": 59, "73769172e": 59, "12470030e": 59, "61559671e": 59, "29336264e": 59, "62753571e": 59, "59015145e": 59, "00676680e": 59, "11111760e": 59, "20283855e": 59, "52107559e": 59, "07375854e": 59, "29958882e": 59, "87700865e": 59, "55472608e": 59, "42076050e": 59, "96028375e": 59, "09408894e": 59, "07250667e": 59, "60013139e": 59, "08099370e": 59, "87255730e": 59, "04596989e": 59, "93302298e": 59, "46639760e": 59, "88176082e": 59, "67566968e": 59, "08017508e": 59, "69246541e": 59, "03389847e": 59, "06214708e": 59, "97455817e": 59, "01074331e": 59, "83107191e": 59, "05432765e": 59, "29875192e": 59, "50743469e": 59, "69107948e": 59, "72161258e": 59, "71912972e": 59, "02315620e": 59, "61453459e": 59, "72171800e": 59, "70710508e": 59, "20540576e": 59, "80871371e": 59, "74810860e": 59, "37481277e": 59, "04012366e": 59, "76952950e": 59, "88628982e": 59, "98581560e": 59, "11698750e": 59, "16370265e": 59, "02031598e": 59, "15078161e": 59, "34125626e": 59, "57636814e": 59, "87057751e": 59, "08372530e": 59, "73156134e": 59, "23466158e": 59, "42254193e": 59, "16393361e": 59, "97176333e": 59, "89462386e": 59, "01111645e": 59, "44506317e": 59, "44825417e": 59, "17301579e": 59, "25120845e": 59, "88156543e": 59, "43064774e": 59, "60591938e": 59, "65014580e": 59, "62778847e": 59, "22901817e": 59, "12828243e": 59, "80152378e": 59, "11872383e": 59, "74946717e": 59, "21786048e": 59, "36295168e": 59, "99807838e": 59, "15505101e": 59, "70146711e": 59, "41700758e": 59, "26276630e": 59, "32720643e": 59, "28680221e": 59, "38750248e": 59, "78389703e": 59, "13442956e": 59, "47154094e": 59, "56322265e": 59, "83758020e": 59, "77165982e": 59, "97217733e": 59, "26284263e": 59, "84276583e": 59, "62880666e": 59, "03669802e": 59, "04120838e": 59, "54014665e": 59, "45846373e": 59, "01404115e": 59, "09567480e": 59, "53773308e": 59, "48612768e": 59, "38566743e": 59, "18646811e": 59, "19626835e": 59, "43518929e": 59, "50190348e": 59, "42733094e": 59, "41860290e": 59, "33033575e": 59, "62874065e": 59, "10453134e": 59, "68331457e": 59, "71118430e": 59, "43995453e": 59, "39594177e": 59, "78945359e": 59, "73880579e": 59, "33509989e": 59, "02294699e": 59, "02849534e": 59, "29218291e": 59, "81699502e": 59, "01333399e": 59, "40521983e": 59, "21620846e": 59, "74911001e": 59, "81117988e": 59, "05512944e": 59, "39219383e": 59, "33589970e": 59, "94852606e": 59, "97354508e": 59, "70845545e": 59, "36840692e": 59, "44512043e": 59, "18406153e": 59, "12789423e": 59, "50548952e": 59, "25164556e": 59, "07545195e": 59, "44507819e": 59, "95032378e": 59, "10790142e": 59, "53192098e": 59, "05477408e": 59, "42565078e": 59, "28451785e": 59, "63248989e": 59, "45732303e": 59, "24078865e": 59, "35111453e": 59, "89079865e": 59, "81911446e": 59, "00037849e": 59, "98130298e": 59, "64082879e": 59, "95458303e": 59, "06277180e": 59, "48686190e": 59, "63461534e": 59, "62134858e": 59, "61983453e": 59, "00689115e": 59, "80014854e": 59, "02479403e": 59, "63986776e": 59, "19701223e": 59, "12828761e": 59, "04013277e": 59, "31057955e": 59, "02732914e": 59, "00853583e": 59, "63258297e": 59, "32776999e": 59, "45073241e": 59, "48253675e": 59, "24362168e": 59, "11416894e": 59, "55594227e": 59, "66211961e": 59, "66886607e": 59, "88707047e": 59, "61079769e": 59, "48963962e": 59, "50954495e": 59, "06762823e": 59, "62260204e": 59, "05394052e": 59, "57027962e": 59, "19017156e": 59, "53315878e": 59, "93977986e": 59, "00634246e": 59, "04843097e": 59, "22854463e": 59, "29006140e": 59, "35060517e": 59, "25226224e": 59, "55946751e": 59, "97190232e": 59, "38455423e": 59, "30405431e": 59, "29341975e": 59, "74269074e": 59, "73567857e": 59, "98495256e": 59, "77695478e": 59, "76407017e": 59, "37220435e": 59, "90821002e": 59, "25568377e": 59, "27628010e": 59, "25484024e": 59, "30601546e": 59, "83352609e": 59, "39557189e": 59, "03764614e": 59, "02919100e": 59, "60554893e": 59, "71033953e": 59, "54295431e": 59, "17083871e": 59, "58058228e": 59, "33512713e": 59, "51400640e": 59, "60319120e": 59, "99770887e": 59, "82553416e": 59, "44161611e": 59, "13505427e": 59, "07856758e": 59, "09364381e": 59, "87529083e": 59, "75690864e": 59, "18739736e": 59, "57024130e": 59, "79057318e": 59, "09783747e": 59, "45253011e": 59, "85215762e": 59, "51340946e": 59, "20780614e": 59, "84502352e": 59, "66357823e": 59, "13090933e": 59, "16813681e": 59, "43923789e": 59, "49644586e": 59, "33582602e": 59, "62862393e": 59, "59266012e": 59, "14100138e": 59, "27178993e": 59, "17189219e": 59, "94850871e": 59, "09268151e": 59, "61374828e": 59, "80829657e": 59, "55534409e": 59, "38498453e": 59, "84362522e": 59, "10932934e": 59, "72180943e": 59, "07894493e": 59, "27947146e": 59, "26764599e": 59, "83527206e": 59, "54044597e": 59, "66744918e": 59, "42317391e": 59, "12562647e": 59, "83840281e": 59, "57695119e": 59, "48376096e": 59, "04471758e": 59, "09779280e": 59, "60482926e": 59, "72692458e": 59, "45709255e": 59, "54483280e": 59, "70784301e": 59, "52923050e": 59, "17282803e": 59, "58778170e": 59, "10633216e": 59, "06985422e": 59, "70202356e": 59, "25659716e": 59, "15013999e": 59, "35414498e": 59, "99825768e": 59, "17744343e": 59, "64915308e": 59, "12219560e": 59, "90813033e": 59, "60830121e": 59, "51522181e": 59, "26438843e": 59, "78209872e": 59, "35279596e": 59, "46778239e": 59, "dell": [59, 64, 195], "acqua": [59, 64, 195], "reveal": [59, 60, 127, 194, 195], "milan": [59, 195], "itali": [59, 195], "reconst_mcsd": [59, 70], "implaus": 60, "mesoscop": 60, "contrari": [60, 116], "netohe2019": [60, 146, 147, 184], "confound": [60, 69], "secondli": 60, "kaden2016b": [60, 146, 147, 184], "example_simulate_multi_tensor": [60, 66, 147], "four": [60, 61, 67, 127, 178, 187, 189, 194, 195], "example_simulate_dki": [60, 147], "meval": [60, 66, 127, 128, 195, 197], "00099": [60, 127, 197], "00226": [60, 127, 197], "00087": [60, 127, 197], "loop": [60, 64, 121, 141, 142, 145, 162, 189, 195, 196, 199, 241, 247, 253], "linspac": [60, 61, 97, 197, 199], "num": [60, 189, 237], "ang": 60, "empti": [60, 76, 168, 187, 189, 195, 196, 197, 199, 247, 249, 253, 255], "f_i": 60, "a_i": 60, "msdki_model": 60, "msdki_fit": 60, "ncol": [60, 61, 105, 200], "linewidth": [60, 72, 87, 88, 91, 92, 93, 97, 102, 107, 119, 139, 200], "2f": [60, 76], "bbox_to_anchor": 60, "msdki_simul": 60, "curv": [60, 199], "regard": [60, 67, 72, 187, 238], "art": [60, 182, 256], "im2": 60, "im3": 60, "msdki_invivo": 60, "insur": [60, 195, 238], "intris": [60, 195], "di": [60, 253], "microscop": [60, 62, 189, 195], "smt2f": [60, 195, 202], "smt2di": [60, 195, 202], "ufa2": 60, "smt2ufa": [60, 195, 202], "ufa": [60, 62, 63, 195, 200, 202], "msdki_smt2_invivo": 60, "rescal": 60, "colleg": [60, 195], "shemesh": [60, 195], "misestim": [60, 195], "encod": [60, 62, 63, 182, 187, 189, 190, 193, 194, 195, 258], "press": [60, 195], "27606": [60, 195], "kelm": [60, 195], "nd": [60, 79, 192, 195, 196, 199, 238], "carson": [60, 195], "rp": [60, 195], "dc": 60, "reconst_msdki": [60, 70], "sought": 61, "unsolv": 61, "qtau": [61, 146, 147, 182, 184, 241], "fick2017": 61, "terminologi": 61, "au": [61, 190, 199], "sparsiti": [61, 65, 189, 195], "drastic": 61, "nervou": 61, "mous": [61, 141], "fetch_qtdmri_test_retest_2subject": [61, 202], "read_qtdmri_test_retest_2subject": [61, 202], "qtdmri": [61, 202], "tau": [61, 72, 189, 191, 195, 197, 199, 201, 202, 210, 250, 258], "freeli": 61, "citeabl": 61, "wassermann2017": 61, "cc_mask": [61, 190], "mt": [61, 146, 147, 184, 189, 190], "5m": [61, 190], "visualise_gradient_table_g_delta_rainbow": [61, 202], "dmri_acquisition_schem": 61, "dot": [61, 62, 63, 78, 118, 187, 189, 192, 195, 199, 243, 253, 254], "isolin": [61, 195], "architectur": [61, 195, 247], "subplot_titl": 61, "subject1": 61, "subject2": 61, "data_": 61, "mask_": 61, "gtab_": [61, 195], "enumer": [61, 62, 92, 93, 97, 102], "data_middle_slic": 61, "mask_middle_slic": 61, "tenmod": 61, "opac": [61, 76, 98, 116, 119, 138, 140, 141, 236, 240, 241], "overlai": [61, 108], "mask_templ": 61, "r_": [61, 71, 195], "greys_r": 61, "tight_layout": [61, 62, 89, 105], "dmri_datasets_fa_with_ccmask": 61, "caution": [61, 87], "tau_min": 61, "tau_max": 61, "qtdmri_fit": 61, "cc_voxel": 61, "time_ord": [61, 195], "l1": [61, 65, 195, 196], "cv": [61, 195], "qtdmri_mod": 61, "qtdmrimodel": [61, 202], "l1_regular": [61, 195], "l1_weight": [61, 195], "5th": [61, 195, 201, 219], "append": [61, 66, 72, 91, 93, 97, 142, 145, 196, 201], "trend": 61, "hot": [61, 76], "plot_mean_with_std": 61, "ind1": 61, "plotcolor": 61, "std_mult": 61, "lw": 61, "fill_between": 61, "delta_": [61, 71], "005": [61, 197], "msd_": 61, "4e": 61, "10e": 61, "delta_grid": 61, "msd_grid": 61, "meshgrid": 61, "d_grid": 61, "d_level": 61, "1e": [61, 62, 67, 187, 189, 191, 192, 193, 195, 196, 201, 247], "contourf": 61, "1e3": 61, "1e5": 61, "dashdot": 61, "marker": [61, 168], "0091": 61, "14e": 61, "set_ylim": 61, "set_xlim": 61, "009": 61, "0185": 61, "cb": [61, 187], "set_label": 61, "qt_indices_msd": 61, "slowli": 61, "surround": [61, 69, 72], "nearli": 61, "perfectli": [61, 103, 192], "cube": [61, 72, 195], "rtxp_": 61, "rtxp_grid": 61, "d_color": 61, "tile": [61, 78], "3e": [61, 62, 195], "6e": 61, "qt_indices_rtop": 61, "experienc": 61, "odd": [61, 195, 250, 262], "arriv": 61, "qt_indices_rtap": 61, "9e": 61, "15e": 61, "qt_indices_rtpp": 61, "bigger": [61, 189], "asid": 61, "sharpening_factor": 61, "conclud": 61, "tempor": [61, 162, 195, 258, 259], "reconst_qtdmri": [61, 70], "westin": [62, 63, 146, 147, 184, 189, 190, 195, 244], "briefli": [62, 63], "summar": [62, 63, 198], "dtd": [62, 63, 195], "langl": [62, 63, 195], "otim": [62, 63, 195], "product": [62, 63, 187, 189, 195, 196, 201], "cumul": [62, 63, 195, 199], "pprox": [62, 63], "exp": [62, 63, 195, 260], "inner": [62, 63, 187, 189, 195, 199], "eta": 62, "ln": [62, 63], "s_1": [62, 63], "s_n": [62, 63], "ext": [62, 63, 195], "_1": [62, 63, 195, 258, 259], "_n": [62, 63, 195], "_i": [62, 63, 65, 195], "column": [62, 63, 65, 76, 98, 102, 141, 164, 187, 189, 195, 196, 197, 199, 200], "voigt": [62, 63, 195], "notat": [62, 63, 195, 242], "qte": [62, 190], "fdata": 62, "fmask": 62, "qte_lte_pt": 62, "bten": [62, 189, 195, 197, 249, 250, 251], "lte": [62, 189], "pte": [62, 189], "linalg": [62, 76, 87, 88, 138, 139, 195, 250, 254], "matrix_rank": 62, "qtimodel": [62, 63, 202], "qtifit": [62, 63, 202], "\u03bcfa": 62, "c_mu": [62, 63, 195, 202], "set_xtick": [62, 76, 95], "set_ytick": [62, 76, 95], "v_md": [62, 195, 202], "v_shear": [62, 195, 202], "shear": [62, 98, 99, 164, 177, 187, 189, 195, 196, 199, 201, 203, 238], "v_iso": [62, 195, 202], "c_md": [62, 195, 202], "\u03bc": 62, "c_m": [62, 195, 202], "c_c": [62, 195, 202], "k_bulk": [62, 195, 202], "bulk": [62, 195], "k_shear": [62, 195, 202], "k_mu": [62, 195, 202], "carl": [62, 63, 195], "fredrik": [62, 63, 195], "multidimension": [62, 63, 189, 195, 197, 249], "039": [62, 63, 195], "008": [], "reconst_qti": [62, 70], "herberthson": [63, 146, 147, 184, 195], "heteroskedast": 63, "mathrm": [63, 189, 195, 199, 258], "s_k": 63, "ldot": [63, 102], "ddot": 63, "condit": [63, 71, 89, 102, 121, 189, 195, 196, 199, 201, 239, 241, 245], "semi": [63, 189, 199], "succeq": 63, "unreli": [63, 194], "enfoc": 63, "semidefinit": [63, 190, 195], "sdp": [63, 195], "sc": [63, 195], "readili": 63, "licenc": 63, "academ": [63, 72], "read_dib_217_lte_pte_st": [63, 202], "read_dib_70_lte_pte_st": [63, 202], "showcas": [63, 64, 172, 173, 175, 176, 178, 249], "subsampl": [63, 135, 187, 199], "richer": 63, "emul": 63, "shorter": [63, 93, 199, 201], "scan": [63, 194], "patient": [63, 69, 168, 190, 198, 201], "clinic": [63, 189, 195], "filip": 63, "szczepankiewicz": [63, 190], "szczepankiewicz_dib_2019": 63, "mark": [63, 105, 195, 199, 240], "_217": 63, "suffix": 63, "data_img": [63, 190], "gtab_217": 63, "data_217": 63, "downsampl": [63, 97, 119, 202, 243, 253], "_70": 63, "gtab_70": 63, "data_70": 63, "consider": [63, 97, 102, 195, 201, 216], "qtimodel_217": 63, "qtifit_217": 63, "qtimodel_unconstrain": 63, "qtifit_unconstrain": 63, "sdpdc": [63, 195], "qtimodel_constrain": 63, "qtifit_constrain": 63, "\u00b5fa": 63, "compare_qti_map": [63, 202], "clearli": [63, 180], "fall": [63, 187, 199, 201, 204, 248, 251], "rich": 63, "despit": 63, "cost": [63, 65, 102, 187, 195, 196], "dens": [63, 114, 187, 189, 194, 254], "boito": [63, 195, 254], "feragen": [63, 195], "118198": 63, "hoge": [63, 190], "waveform": [63, 190], "oil": [63, 190], "liquid": [63, 190], "crystal": [63, 190], "brief": [63, 116, 117, 190], "dib": [63, 190], "104208": [63, 190], "reconst_qtiplu": [63, 70], "rumba": [64, 75, 77, 146, 182, 184, 201, 202, 253, 254, 255], "sd": [64, 75, 77, 146, 176, 182, 184, 195, 201, 254, 255, 262], "canalesrodriguez2015": [64, 87], "priori": [64, 121, 195], "convolut": [64, 71, 194, 195], "rl": 64, "richardson1972": 64, "noncentr": [64, 87, 195, 201], "reflect": [64, 87, 93, 98, 164, 187, 195, 201, 229], "constantinides1997": 64, "tv": [64, 87, 191, 195, 201, 222], "neighbor": [64, 71, 72, 113, 187, 192, 196], "rudin1992": 64, "symmetric362": [64, 190, 195], "rumbasdmodel": [64, 87, 202], "constructor": [64, 187, 189, 195, 197, 240, 248], "wm_respons": [64, 87, 195], "7e": [64, 195], "csf_respons": [64, 195, 201], "gm_respons": [64, 195, 201], "8e": [64, 195], "adequ": [64, 195], "impuls": [64, 195], "imprecis": [64, 195], "acqua2007": 64, "0017": [64, 195], "003": [64, 195, 201], "0008": [64, 195, 201], "default_respons": 64, "auto_response_sst": 64, "estimated_respons": 64, "arang": [64, 116, 117, 118, 119, 197], "rec_respons": 64, "1165": [64, 240], "single_peak_mask": 64, "rec_response_sign": 64, "wish": [64, 135], "voxelwis": [64, 87, 195, 201, 238], "use_tv": [64, 87, 195, 201], "bear": 64, "n_iter": [64, 87, 195, 201], "recon_typ": [64, 195, 201], "n_coil": [64, 195, 201], "suitabl": [64, 190, 195, 258, 259], "smf": [64, 195, 201], "isn": [64, 162, 189], "acceler": [64, 71, 72, 99, 173, 187, 195, 201], "ipat": [64, 195, 201], "asset": [64, 195, 201], "cover": [64, 98, 100, 193, 238], "example_reconst_csd": [64, 131, 147], "wherein": 64, "sequenti": [64, 118, 196], "rumba_fit": [64, 87], "inclus": [64, 187, 199], "neither": [64, 189, 196], "f_iso": [64, 195, 202], "f_wm": [64, 87, 195, 202], "ax0": 64, "wm_iso_partit": 64, "rumbafit": [64, 202], "combined_odf_iso": [64, 195, 202], "rumba_odf": 64, "rumba_peak": 64, "exchang": [64, 195], "demand": 64, "ram": [64, 85, 195], "gb": [64, 195], "suffici": [64, 88, 130, 195, 245], "singleton": [64, 195, 201, 237, 240], "data_tv": 64, "rumba_global_odf": 64, "peak_direct": [64, 202, 247, 255], "npeak": [64, 130, 131, 192, 201, 247], "pk": 64, "rumba_global_peak": 64, "rodr\u00edguez": [64, 87, 146, 147, 184, 195, 201], "sotiropoulo": [64, 87, 195, 201], "aja": [64, 87, 195, 201], "fern\u00e1ndez": [64, 87, 195, 201], "radua": [64, 87, 195, 201], "mendizab": [64, 87, 195, 201], "iturria": [64, 87, 195, 201], "medina": [64, 87, 195, 201], "meli": [64, 87, 195, 201], "garc\u00eda": [64, 87, 195, 201], "alem\u00e1n": [64, 87, 195, 201], "g\u00f3mez": [64, 87, 195, 201], "thiran": [64, 87, 195, 201], "sarr\u00f3": [64, 87, 195, 201], "pomarol": [64, 87, 195, 201], "clotet": [64, 87, 195, 201], "salvador": [64, 87, 195, 201], "multichannel": [64, 87, 195, 201], "e0138910": [64, 87, 195, 201], "0138910": [64, 87, 195, 201], "bayesian": [64, 121, 182, 238], "josa": 64, "000055": 64, "constantinid": [64, 195], "atalar": [64, 195], "mcveigh": [64, 195], "offici": [64, 182, 183, 195], "rudin": [64, 195], "osher": [64, 195], "fatemi": [64, 195], "physica": [64, 195], "phenomena": [64, 195], "0167": [64, 189, 195], "90242": [64, 195], "dellacqua2007": 64, "rizzo": [64, 195], "scifo": [64, 195], "clark": [64, 195], "scotti": [64, 195], "fazio": [64, 195], "bio": [64, 195], "tbme": [64, 195], "888830": [64, 195], "067": [64, 167], "reconst_rumba": [64, 70], "sfm": [65, 88, 146, 147, 184, 202, 237, 238, 240, 246, 249, 253], "rokem2015": [65, 88, 195], "dpp": [65, 253], "subsequ": [65, 191, 196], "examin": [65, 105, 189, 195, 197, 256], "elast": [65, 195], "net": [65, 189, 194, 195, 201, 214, 244], "zou2005": [65, 195], "y_i": [65, 193, 262], "lambda": [65, 118, 187, 195, 236], "w_j": 65, "2_j": 65, "balanc": [65, 195], "l1_ratio": [65, 88, 195], "l2": [65, 164, 189, 195, 196], "surfac": [65, 75, 77, 88, 93, 95, 136, 137, 146, 182, 189, 190, 195, 238, 240, 252, 262], "sf_model": [65, 88], "sparsefasciclemodel": [65, 88, 202], "sf_fit": 65, "sf_odf": 65, "sf_peak": 65, "return_sh": [65, 85, 131, 192], "sf_both": 65, "jason": [65, 88, 90, 195, 198], "franco": [65, 76, 88, 195], "kendrick": [65, 88, 195], "aviv": [65, 88, 195], "brian": [65, 88, 90, 195, 198], "zou": [65, 195], "reconst_sfm": [65, 70], "sf": [66, 189, 192, 195, 241], "00015": 66, "symm_sign": 66, "sf_to_sh": [66, 71, 202], "sh_basi": [66, 195], "sh_to_sf": [66, 71, 202], "reproject": 66, "high_res_sph": 66, "symm_reconst": 66, "asymmetr": [66, 165, 187, 201, 228, 253, 255, 262], "odf2": 66, "n_pts_hemispher": 66, "asym_odf": 66, "asym_sign": 66, "asym_reconst": 66, "deal": [66, 69, 196, 252, 253, 256], "full_basi": [66, 195], "asym_reconst_ful": 66, "reconst_sh": [66, 70, 253], "merlet2013": 67, "\u00f6zarslan2008": 67, "\u00f6zarslan2009": 67, "shoremodel": [67, 68, 202], "fetch_isbi2013_2shel": [67, 202], "contest": 67, "xmin": 67, "xmax": 67, "ymin": 67, "ymax": 67, "zmin": 67, "zmax": 67, "zeta": [67, 195], "lambdan": [67, 195], "lambdal": [67, 195], "cheng2011": 67, "asm": [67, 68, 195], "asmfit": [67, 68, 195], "\u00f6zarslan": [67, 146, 147, 184], "toronto": 67, "honolulu": 67, "hi": [67, 189, 195], "eap": [67, 189, 195], "compress": [67, 97, 193, 195, 199, 201, 216, 217, 236], "cheng": [67, 194, 195, 197], "insight": [67, 195], "unifi": [67, 189, 195, 200, 201, 223], "reconst_shor": [67, 70], "504": [68, 167, 245], "2581": [68, 254], "2610": 68, "2597": 68, "shore_map": 68, "ON": [68, 189, 195, 196, 201], "reconst_shore_metr": [68, 70], "physiolog": [69, 195, 201, 219], "pernici": 69, "particip": [69, 196], "young": 69, "yendiki": 69, "yendiki2013": 69, "refit": 69, "chang2005": [69, 195], "intermitt": [69, 241, 247, 253], "2d": [69, 71, 72, 100, 104, 106, 109, 146, 162, 172, 187, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 238, 239, 243, 254], "ne": 69, "fetch_stanford_hardi": [69, 99, 100, 202], "baselin": [69, 76], "dti_wl": 69, "roi_idx": 69, "establish": [69, 87, 187], "fit_wl": 69, "fa1": 69, "evals1": 69, "evecs1": 69, "cfa1": 69, "tensor_ellipsoids_wl": 69, "noisy_data": 69, "noisy_idx": 69, "fit_wls_noisi": 69, "fa2": 69, "evals2": 69, "evecs2": 69, "cfa2": 69, "tensor_ellipsoids_wls_noisi": 69, "distort": [69, 172, 194], "dti_restor": 69, "fit_restore_noisi": 69, "fa3": 69, "evals3": 69, "evecs3": 69, "cfa3": 69, "tensor_ellipsoids_restore_noisi": 69, "noiseless": [69, 71, 127, 128], "convinc": 69, "ourselv": [69, 163], "chung2006": 69, "hist": [69, 76, 93, 97, 194], "ravel": [69, 116, 118, 243], "histtyp": [69, 76, 93, 97], "dti_fa_distribut": 69, "examples_revamp": 69, "07_reconstruct": 69, "restore_dti": [69, 70, 238], "retain": [69, 189, 196, 200, 201], "consum": [69, 99], "rcparam": 69, "max_open_warn": 69, "resembl": [69, 190], "importantli": 69, "believ": 69, "koldewynb": 69, "kakunooria": 69, "kanwish": 69, "fischl": 69, "reject": [69, 195, 201, 218, 219], "chung": [69, 195, 250], "sw": [69, 195, 201, 219], "henri": [69, 93, 195, 201, 219], "bootstrap": [69, 75, 77, 146, 182, 185, 195, 201, 219, 240, 243], "uncertainti": [69, 162, 195, 201, 219], "081": 69, "examples_built_07_reconstruct": 70, "fod": [71, 72, 80, 85, 86, 190, 195, 237, 239, 247], "meesters2016": [71, 72], "pde": [71, 72], "portegies2015a": 71, "elong": 71, "junction": 71, "hypo": 71, "ellipt": [71, 195], "2nd": [71, 167], "domain": [71, 72, 76, 108, 109, 118, 187, 201, 248], "geometr": [71, 163, 187, 195, 241], "notion": 71, "geq": 71, "cdot": [71, 76, 164, 195, 199, 260], "abla": 71, "laplac": [71, 195], "beltrami": [71, 195], "twist": 71, "st_": 71, "p_t": [71, 72], "int_": [71, 189, 195, 197, 262], "t_": [71, 195], "euclidean": [71, 164, 187, 189, 195, 196, 199, 263], "duitsandfranken2011": [71, 72], "accumul": 71, "walk": [71, 99, 168, 172, 173, 175, 176, 177, 178], "contour": [71, 95, 105, 200, 201, 223, 238, 240, 241], "formula": [71, 162, 189, 195, 258, 259, 263], "portegies2015b": 71, "add_nois": [71, 202], "b0_slice": 71, "data_noisi": 71, "noise_typ": [71, 197], "pad": [71, 72, 100, 194, 195], "boundari": [71, 89, 187, 196, 199, 200, 201, 229], "data_noisy_smal": 71, "csd_model_orig": 71, "csd_fit_orig": 71, "csd_shm_orig": 71, "csd_model_noisi": 71, "csd_fit_noisi": 71, "csd_shm_noisi": 71, "3087": 71, "4786": [], "1996": [195, 201, 219, 249, 252], "1821": 247, "2298": [], "rodrigues2010": [71, 72], "lookup": [71, 72, 141, 199], "enhancement_kernel": [71, 72], "enhancementkernel": [71, 72], "shift_twist_convolut": 71, "convolv": 71, "d33": [71, 72], "d44": [71, 72], "delta": [71, 162, 176, 189, 200, 201, 202, 221, 245, 254, 258, 260], "spike": 71, "get_orient": 71, "spike_shm_conv": 71, "test_mod": 71, "spike_sf_conv": 71, "model_kernel": 71, "set_camera": [71, 72, 78, 91, 97, 98, 113, 114, 139], "focal_point": [71, 72, 91, 97, 98, 113, 114, 139], "view_up": [71, 72, 78, 91, 98, 113, 114, 139], "csd_shm_enh": 71, "odf_sh_to_sharp": [71, 202], "csd_shm_enh_sharp": 71, "lambda_": [71, 195], "csd_sf_orig": 71, "csd_sf_noisi": 71, "csd_sf_enh": 71, "csd_sf_enh_sharp": 71, "amax": 71, "closer": [71, 101, 109, 177, 187, 250], "fodf_spheres_org": 71, "setposit": [71, 97, 141], "fodf_spheres_enh": 71, "fodf_spheres_enh_sharp": 71, "bottom": [71, 72, 163], "sanguinetti": [71, 72, 236], "portegi": [71, 72], "duit": [71, 72], "confer": [71, 72, 187, 195, 199], "flow": [71, 72, 145, 187, 195, 201, 240, 241, 248, 254], "fifth": 71, "franken": [71, 72], "rodrigu": [71, 72, 189], "romeni": [71, 72], "vilanova": [71, 72], "eurograph": [71, 72], "biologi": [71, 72, 98], "contextual_enhanc": [71, 74], "fbc": [72, 182, 238, 250], "poorli": [72, 195], "lfbc": 72, "portegies2015": 72, "5d": [72, 193], "lift": 72, "rfbc": 72, "t1_data": [72, 76, 87, 88, 95, 98], "dshape": 72, "xa": 72, "xb": 72, "ya": 72, "yb": 72, "za": [72, 201], "zb": 72, "selectionmask": 72, "cda": 72, "csd_fit_shm": 72, "prob_dg": [72, 85, 87], "from_shcoeff": [72, 80, 84, 85, 89, 255], "max_angl": [72, 79, 80, 84, 85, 86, 87, 89, 199, 201, 233, 234, 255], "69795": 72, "4544": 72, "4379": 72, "3654": 72, "5459": 72, "5910": 72, "6356": 72, "6799": 72, "7242": 72, "7686": 72, "8160": 72, "8612": 72, "9056": 72, "9503": [72, 80], "9949": 72, "10400": 72, "4461": 72, "10859": 72, "11310": 72, "11754": 72, "12202": 72, "12650": 72, "13114": 72, "4507": 72, "13565": 72, "4488": 72, "14014": 72, "14472": 72, "14922": 72, "15369": 72, "15838": 72, "16291": 72, "16745": 72, "17204": 72, "17657": 72, "4490": 72, "18108": 72, "18564": 72, "19017": 72, "19469": 72, "19932": 72, "20387": 72, "20850": 72, "21307": 72, "21762": 72, "22217": 72, "4523": [72, 84, 89], "22670": 72, "23122": 72, "23579": 72, "4509": 72, "24030": 72, "24480": 72, "4468": 72, "24943": 72, "25395": 72, "25862": 72, "26331": 72, "26791": 72, "27249": 72, "27714": 72, "28186": 72, "28661": 72, "29127": 72, "29588": 72, "30057": 72, "30526": 72, "30992": 72, "4620": 72, "31455": 72, "31918": 72, "4602": 72, "32379": 72, "32861": 72, "33342": 72, "33812": 72, "34282": 72, "34751": 72, "35239": 72, "35734": 72, "36215": 72, "36698": 72, "37174": 72, "37658": 72, "38142": 72, "38619": 72, "39090": 72, "39561": 72, "40027": 72, "4600": 72, "40507": 72, "40973": 72, "41437": 72, "41907": 72, "4611": [72, 89], "42369": 72, "42839": 72, "43315": 72, "43799": 72, "44276": 72, "44748": 72, "4626": [72, 84], "45212": 72, "45701": 72, "46183": 72, "46666": 72, "47142": 72, "47613": 72, "48091": 72, "48559": 72, "49046": 72, "4717": [72, 84, 89], "49521": 72, "4724": [72, 89], "49994": 72, "50456": 72, "50923": 72, "51384": 72, "51863": 72, "52328": 72, "52789": 72, "53251": 72, "53713": 72, "54179": 72, "54641": 72, "55102": 72, "55552": 72, "55991": 72, "56429": 72, "56871": 72, "4377": 72, "57314": 72, "57754": 72, "58183": 72, "58643": 72, "59095": 72, "59562": 72, "4480": 72, "60029": 72, "60484": 72, "60929": 72, "4404": 72, "61381": 72, "61837": 72, "62309": 72, "62769": 72, "63226": 72, "63673": 72, "4418": 72, "64116": 72, "64558": 72, "65026": 72, "65473": 72, "65914": 72, "66368": 72, "66830": 72, "67295": 72, "67749": 72, "4496": [72, 84], "68199": 72, "68638": 72, "69079": 72, "69529": 72, "optic": [72, 187, 190, 195], "radiat": [72, 95, 190], "calcarin": 72, "sulcu": 72, "cortex": [72, 76, 107], "v1": [72, 118, 189], "genicul": 72, "nucleu": 72, "lgn": [72, 190], "3x3x3": 72, "rad": [72, 189], "getter": [72, 75, 77, 84, 86, 87, 89, 146, 178, 193, 201, 233, 239, 240, 245, 247, 249], "travers": [72, 76], "mask_lgn": 72, "filtered_fibers2": 72, "tol": [72, 187, 189, 190, 195, 199], "sfil": 72, "len": [72, 78, 91, 97, 98, 114, 116, 117, 118, 119, 135, 189, 190, 194, 195, 196, 197, 199, 200, 236, 250], "fbcmeasur": 72, "recal": [72, 163, 195], "percent": [72, 196], "fbc_sl_orig": 72, "clrs_orig": 72, "rfbc_orig": 72, "get_points_rfbc_threshold": 72, "emphasi": 72, "fbc_sl_thre": 72, "clrs_thre": 72, "rfbc_thre": 72, "lineactor": 72, "horizont": [72, 200, 263], "vol_actor1": 72, "vol_actor2": [72, 76, 87, 88, 98], "or_befor": 72, "or_aft": 72, "pauli": [72, 201], "ossenblok": 72, "epileptologi": 72, "kempenhaegh": 72, "maastricht": 72, "fiber_to_bundle_coher": [72, 74, 240], "examples_built_10_contextual_enhanc": 74, "transport": [75, 77, 146, 165, 189, 254, 255], "biggest": 76, "pestilli2014": 76, "frontal": [76, 98, 107], "matric": [76, 94, 96, 101, 107, 146, 164, 187, 189, 190, 195, 199, 238, 241], "pjoin": [76, 99, 100, 103, 107], "mpl_toolkit": [76, 95], "axes_grid1": [76, 95], "axesgrid": [76, 95], "fetch_stanford_track": [76, 107, 202], "cc_slice": [76, 98], "streamline_tool": [76, 96, 98, 238, 240, 245, 247], "candid": [76, 199], "streamlines_fil": [76, 107], "lr_superiorfrontal_path": [76, 107], "lr": [76, 98, 107, 195], "superiorfront": [76, 98, 107], "candidate_sl_sft": 76, "to_vox": [76, 135, 193, 202], "candidate_sl": 76, "candidate_streamlines_actor": 76, "streamtub": [76, 87, 88, 92, 97, 102, 107, 116, 117, 118, 119, 138, 139, 236, 240, 241, 244], "cc_roi_actor": [76, 98], "contour_from_roi": [76, 95, 98, 140], "vol_actor": [76, 87, 88, 98], "canva": [76, 98], "life_candid": 76, "fiber_model": [76, 199], "ac": [76, 190], "pc": 76, "inv_affin": 76, "inv": [76, 87, 88, 138, 139, 187, 195], "fiberfit": [76, 202], "arbitrarili": 76, "percentag": [76, 99, 127, 128, 189, 196, 197], "node": [76, 90, 189, 194, 196, 198, 199, 254], "cylindr": [76, 197], "fiber_fit": 76, "ey": [76, 98, 99, 100, 107, 135, 138, 187, 195, 199, 246], "beta_i": 76, "beta_histogram": 76, "optimized_sl": 76, "row_stack": 76, "life_optim": 76, "presum": 76, "unseen": 76, "model_error": 76, "model_rms": 76, "naiv": [76, 105, 195], "beta_baselin": 76, "pred_weight": 76, "reshap": [76, 192, 193, 194, 195, 196, 197], "spdot": [76, 202], "life_matrix": [76, 199], "vox_coord": [76, 199], "mean_pr": 76, "b0_signal": [76, 199], "demean": 76, "mean_error": 76, "mean_rms": 76, "rmse": 76, "error_histogram": 76, "vol_model": 76, "vol_mean": 76, "vol_improv": 76, "sl_idx": 76, "nrows_ncol": [76, 95], "label_mod": 76, "share_al": 76, "cbar_loc": [76, 95], "cbar_mod": [76, 95], "cbar_siz": [76, 95], "cbar_pad": [76, 95], "cbar_ax": [76, 95], "rdbu": 76, "lax": [76, 95], "spatial_error": 76, "example_probabilistic_fiber_track": [76, 95], "matlab": [76, 162, 189, 246, 250, 261], "webpag": 76, "live": [76, 166, 194, 199, 248], "nmeth": [76, 199], "3098": [76, 199], "linear_fascicle_evalu": [76, 77, 242], "examples_built_13_fiber_track": 77, "tracking_ptt": [77, 86], "surface_se": [77, 78], "tracking_bootstrap_peak": [77, 79], "tracking_determinist": [77, 80], "tracking_introduction_eudx_0": [77, 82], "tracking_introduction_eudx_1": [77, 83], "tracking_pft": [77, 84], "tracking_probabilist": [77, 85], "tracking_rumba": [77, 87], "tracking_sfm": [77, 88], "tracking_stopping_criterion": [77, 89], "cortic": [78, 90], "stonge2018": 78, "mesh": [78, 182, 185, 189, 202, 252], "random_coordinates_from_surfac": [78, 202], "seeds_from_surface_coordin": [78, 202], "load_polydata": [78, 202], "get_polydata_triangl": 78, "get_polydata_vertic": 78, "get_actor_from_polydata": 78, "normals_from_v_f": 78, "brain_lh": 78, "fury_surfac": 78, "polydata": [78, 193, 249], "triangl": [78, 102, 128, 189, 199, 238], "vt": [78, 199], "surface_actor": 78, "uncom": [78, 139, 140, 141], "reset_camera": [78, 138, 139, 141], "surface_seed1": 78, "nb_seed": [78, 199], "100000": 78, "nb_triangl": [78, 199], "tri_idx": 78, "trilin_co": 78, "seed_pt": 78, "seed_n": 78, "seed_actor": 78, "dot_siz": 78, "normal_length": 78, "normal_in": 78, "newaxi": [78, 247], "normal_out": 78, "normal_in_actor": 78, "normal_out_actor": 78, "surface_seed2": 78, "ong": [78, 114, 196, 200, 201, 223, 238, 252, 255], "berman": [79, 195], "berman2008": 79, "example_tracking_introduction_eudx": [79, 85, 147], "small_spher": [79, 85, 87, 202], "bootdirectiongett": 79, "closestpeakdirectiongett": 79, "58788": [79, 80, 85, 86], "6642": 79, "7828": 79, "8509": 79, "8654": 79, "8863": [79, 85], "6915": 79, "8952": 79, "7820": 79, "8982": 79, "8719": 79, "9642": 79, "9048": 79, "10558": [79, 84], "9081": [79, 80, 85], "11467": 79, "9072": 79, "12385": 79, "9101": 79, "13320": 79, "9174": [79, 85], "14238": 79, "9108": 79, "15159": 79, "9135": 79, "16096": 79, "9204": 79, "17017": 79, "9188": 79, "17959": 79, "9257": [79, 86], "18885": 79, "9180": 79, "19804": 79, "9133": [79, 86], "20727": 79, "21644": 79, "9127": 79, "22581": 79, "9187": 79, "23500": 79, "9166": 79, "24417": 79, "9164": [79, 86], "25349": 79, "9210": [79, 85], "26271": 79, "27184": 79, "28090": 79, "8994": [79, 85], "28990": 79, "8908": 79, "29882": 79, "8844": 79, "30767": 79, "8790": 79, "31647": 79, "8746": [79, 85], "32540": 79, "8799": 79, "33449": 79, "8882": 79, "34362": 79, "8955": 79, "35258": 79, "8891": 79, "36181": 79, "8989": 79, "37093": 79, "9028": 79, "38023": 79, "38954": 79, "9168": 79, "39877": 79, "9185": 79, "40807": 79, "9217": 79, "41737": 79, "9241": 79, "42662": 79, "9213": 79, "43600": 79, "9261": 79, "44527": 79, "9172": 79, "45452": 79, "9193": 79, "46372": 79, "47290": 79, "9141": 79, "48209": 79, "9155": 79, "49148": 79, "9225": 79, "50071": 79, "9182": 79, "50990": 79, "9165": 79, "51907": 79, "52823": 79, "53737": 79, "9095": 79, "54647": 79, "55562": 79, "9109": 79, "56473": 79, "9003": 79, "57374": 79, "58270": 79, "8782": 79, "8991": 79, "serv": [79, 92, 113, 142, 195], "boot_dg_csd": 79, "from_data": 79, "boot_streamline_gener": 79, "tractogram_bootstrap_dg": 79, "NOT": [79, 189, 196, 201, 238, 247], "peak_dg": 79, "from_pmf": [79, 85, 86, 87], "peak_streamline_gener": 79, "closest_peak_dg_csd": 79, "tractogram_closest_peak_dg": 79, "draw": [80, 99, 105, 108, 178, 200], "unlik": [80, 85, 178, 195], "example_tracking_probabilist": [80, 84, 87, 147], "deterministicmaximumdirectiongett": [80, 89], "697": [80, 236], "6963": 80, "8094": 80, "8592": 80, "8669": 80, "8738": 80, "8774": 80, "8997": 80, "7058": 80, "9156": 80, "8020": 80, "9300": 80, "8964": 80, "9342": 80, "9926": 80, "9427": 80, "10895": 80, "9505": 80, "11846": 80, "9354": 80, "12782": 80, "9291": 80, "13712": 80, "9287": 80, "14642": 80, "9249": 80, "15568": 80, "9206": 80, "16534": 80, "9340": [80, 86], "17490": 80, "9405": 80, "18436": 80, "9419": 80, "19390": 80, "9455": 80, "20336": 80, "9393": 80, "21276": 80, "9360": 80, "22236": 80, "9430": 80, "23189": 80, "9456": 80, "24153": 80, "9509": 80, "25123": 80, "9566": 80, "26080": 80, "9537": 80, "27034": 80, "9483": [80, 86], "27983": 80, "9449": [80, 86], "28928": 80, "9382": [80, 86], "29867": 80, "9273": 80, "30795": 80, "9163": 80, "31712": 80, "9067": 80, "32619": 80, "9035": [80, 85], "33539": 80, "34448": 80, "9036": 80, "35394": [80, 86], "36352": 80, "9282": 80, "37316": 80, "9389": 80, "38268": 80, "39248": 80, "40204": 80, "9543": 80, "41159": 80, "42133": 80, "9600": 80, "43094": 80, "9563": 80, "44053": 80, "9568": [80, 86], "45010": 80, "9554": 80, "45966": 80, "46931": 80, "9545": [80, 86], "47898": 80, "9581": 80, "48857": 80, "9540": 80, "49823": 80, "9574": 80, "50801": 80, "9636": 80, "51765": 80, "9552": 80, "52721": 80, "9471": 80, "53669": 80, "9433": 80, "54613": 80, "9322": 80, "55560": 80, "9365": 80, "56497": 80, "9272": 80, "57425": 80, "9220": 80, "58348": 80, "9098": 80, "9280": 80, "detmax_dg": 80, "streamline_gener": [80, 85, 86, 87, 88, 89, 98], "tractogram_deterministic_dg": 80, "079": 82, "pft": [84, 174, 182, 241, 242], "girard2014": [84, 89, 178], "incorrectli": [84, 178], "invalidpoint": [84, 89], "example_tracking_stopping_criterion": [84, 147], "f_pve_csf": [84, 89], "f_pve_gm": [84, 89], "f_pve_wm": [84, 89], "stanford_pve_map": [84, 89, 178], "pve_csf_data": [84, 89], "pve_gm_data": [84, 89], "pve_wm_data": [84, 89], "dg": [84, 89, 241], "77848": [84, 89], "1556": [84, 241], "5512": 84, "5979": 84, "6423": 84, "6895": 84, "7359": 84, "7813": 84, "8290": 84, "8745": 84, "9199": 84, "9657": 84, "10108": 84, "11019": 84, "11485": 84, "11940": 84, "12413": 84, "12886": 84, "4622": 84, "13349": 84, "13834": 84, "4638": [84, 89], "14308": 84, "14775": 84, "15241": 84, "15716": 84, "16184": 84, "16650": 84, "17108": 84, "17566": 84, "18030": 84, "18489": 84, "18980": 84, "19455": 84, "19943": 84, "20417": 84, "20903": 84, "4750": [84, 89], "21380": 84, "21856": 84, "22331": 84, "22805": 84, "4730": [84, 89], "23289": 84, "23766": 84, "24240": 84, "24738": 84, "25225": 84, "25706": 84, "26180": 84, "26687": 84, "4801": 84, "27168": 84, "27649": 84, "28126": 84, "28602": 84, "29082": 84, "29558": 84, "30040": 84, "30514": 84, "30999": 84, "31471": 84, "4684": 84, "31941": 84, "32424": 84, "32900": 84, "33382": 84, "33866": 84, "34345": 84, "34821": 84, "35307": 84, "35782": 84, "36256": 84, "36734": 84, "37208": 84, "37683": 84, "38153": 84, "38617": 84, "39094": 84, "39559": 84, "40024": 84, "40487": 84, "40950": 84, "41406": 84, "41868": 84, "4519": 84, "42321": 84, "42773": 84, "43237": 84, "43690": 84, "44160": 84, "44618": 84, "45073": 84, "45536": 84, "45988": 84, "46438": 84, "46887": 84, "47371": 84, "47832": 84, "48290": 84, "48754": 84, "49211": 84, "49666": 84, "50119": 84, "50574": 84, "51027": 84, "51501": 84, "51959": 84, "52416": 84, "52868": 84, "53357": 84, "53831": 84, "54296": 84, "54762": 84, "55226": 84, "55714": 84, "56185": 84, "56657": 84, "57126": 84, "57606": 84, "58082": 84, "58554": 84, "59021": 84, "59484": 84, "59970": 84, "60460": 84, "60935": 84, "61416": 84, "61890": 84, "62395": 84, "62884": 84, "4803": 84, "63365": 84, "63841": 84, "64316": 84, "64816": 84, "65301": 84, "4797": [84, 89], "65781": 84, "66264": 84, "66744": 84, "67251": 84, "4835": 84, "67735": 84, "68217": 84, "68691": 84, "69161": 84, "4666": [84, 89], "69671": 84, "70151": 84, "70629": 84, "71104": 84, "71603": 84, "72080": 84, "72555": 84, "73022": 84, "73493": 84, "73976": 84, "74448": 84, "74918": 84, "75385": 84, "75870": 84, "76339": 84, "76807": 84, "4649": [84, 89], "77273": 84, "77773": 84, "78245it": 84, "78716it": 84, "79185it": 84, "79711it": 84, "4807": 84, "80193it": 84, "80667it": 84, "81140it": 84, "81658it": 84, "82137it": 84, "82614it": 84, "83090it": 84, "83582it": 84, "84057it": 84, "84529it": 84, "4634": 84, "84993it": 84, "85478it": 84, "85947it": 84, "86416it": 84, "86905it": 84, "87376it": 84, "87842it": 84, "88323it": 84, "88787it": 84, "89238it": 84, "89702it": 84, "90157it": 84, "90634it": 84, "91089it": 84, "91552it": 84, "92004it": 84, "92451it": 84, "92899it": 84, "93345it": 84, "93780it": 84, "94215it": 84, "94645it": 84, "4247": 84, "95071it": 84, "95490it": 84, "95907it": 84, "4126": 84, "96320it": 84, "4060": 84, "96727it": 84, "4025": 84, "96989it": [84, 89], "smith2012": [84, 89], "conjunct": 84, "cmc_criterion": 84, "from_pv": 84, "average_voxel_s": 84, "pft_streamline_gener": 84, "max_cross": [84, 199], "maxlen": [84, 199], "pft_back_tracking_dist": [84, 199], "pft_front_tracking_dist": [84, 199], "particle_count": [84, 199], "return_al": [84, 89, 199], "tractogram_pft": 84, "prob_streamline_gener": 84, "tractogram_probabilistic_cmc": 84, "whittingstal": [84, 89, 178, 190, 199, 201, 234], "7733": 85, "8213": 85, "8459": 85, "8617": 85, "8770": 85, "5978": 85, "8869": 85, "6880": 85, "8917": 85, "7775": 85, "8926": 85, "8687": 85, "8983": 85, "9617": 85, "9077": 85, "10537": 85, "9114": 85, "11449": 85, "12364": 85, "9100": 85, "13300": 85, "9176": 85, "14218": 85, "9157": 85, "15139": 85, "9173": 85, "16075": 85, "9228": 85, "16998": 85, "17944": 85, "9278": 85, "18872": 85, "19794": 85, "9082": 85, "20717": 85, "9124": 85, "21630": 85, "9085": [85, 86], "22553": 85, "9128": 85, "23467": 85, "9111": 85, "24387": 85, "9136": 85, "25312": 85, "9169": 85, "26230": 85, "9059": 85, "27137": 85, "28037": 85, "8931": 85, "28931": 85, "8841": 85, "29816": 85, "30692": 85, "31568": 85, "8729": 85, "32449": 85, "8750": 85, "33363": 85, "34267": 85, "8915": 85, "35165": 85, "8934": 85, "36093": 85, "36999": 85, "9042": 85, "37930": 85, "9119": 85, "38858": 85, "9167": 85, "39775": 85, "9154": 85, "40711": 85, "9215": 85, "41638": 85, "9229": 85, "42572": 85, "9259": [85, 119], "43498": 85, "9252": 85, "44424": 85, "45360": 85, "9227": 85, "46283": 85, "47206": 85, "9201": 85, "48140": 85, "9240": 85, "49072": 85, "9262": 85, "50001": 85, "9270": 85, "50929": 85, "9265": 85, "51856": 85, "9219": 85, "52778": 85, "9178": 85, "53696": 85, "9143": 85, "54611": 85, "55528": 85, "9150": 85, "56444": 85, "9043": 85, "57349": 85, "9005": 85, "58250": 85, "8802": 85, "8992": [85, 86], "strictli": [85, 87, 92, 195, 196], "tractogram_probabilistic_dg_pmf": 85, "disadvantag": 85, "tractogram_probabilistic_dg_sh": 85, "Not": [85, 236], "fod_coeff": 85, "tractogram_probabilistic_dg_sh_pfm": 85, "097": 85, "ptt": [86, 165, 190, 254, 255], "aydogan2021": 86, "pttdirectiongett": 86, "6422": 86, "1530": [86, 241], "7853": 86, "8431": 86, "8671": 86, "8860": 86, "6124": 86, "9096": 86, "7064": 86, "9191": 86, "8012": 86, "9279": 86, "8940": 86, "9878": 86, "9294": 86, "10823": 86, "11758": 86, "9335": 86, "12702": 86, "9364": 86, "13666": 86, "9445": 86, "14627": 86, "9491": 86, "15577": 86, "9467": 86, "16543": 86, "9522": 86, "17502": 86, "9542": 86, "18457": 86, "9489": 86, "19407": 86, "9452": 86, "20353": 86, "9440": 86, "21298": 86, "9436": 86, "22266": 86, "9507": 86, "23217": 86, "9437": 86, "24161": 86, "9411": 86, "25114": 86, "9446": 86, "27004": 86, "27943": 86, "9349": 86, "28879": 86, "9234": 86, "29803": 86, "9104": 86, "30714": 86, "9071": 86, "31626": 86, "32551": 86, "33504": 86, "9248": 86, "34449": 86, "9308": 86, "9350": 86, "36350": 86, "9412": 86, "37304": 86, "38257": 86, "9472": 86, "39225": 86, "9533": 86, "40182": 86, "9541": 86, "41137": 86, "9532": 86, "42119": 86, "9616": 86, "43081": 86, "9565": 86, "44039": 86, "44996": 86, "45951": 86, "46901": 86, "47847": 86, "48792": 86, "9432": 86, "49739": 86, "9441": 86, "50708": 86, "9513": 86, "51660": 86, "52609": 86, "9338": 86, "53544": 86, "9258": 86, "54471": 86, "55388": 86, "9145": 86, "56303": 86, "9055": 86, "57209": 86, "8953": 86, "58105": 86, "8835": 86, "9243": 86, "ptt_dg": 86, "probe_length": 86, "direction_gett": [86, 199], "tractogram_ptt_dg_pmf": 86, "aydogan": [86, 255], "db": 86, "shi": 86, "tmi": [86, 195], "3034038": 86, "epub": 86, "pmid": [86, 189], "33104507": 86, "pmcid": [86, 189], "pmc7931442": 86, "example_reconst_rumba": [87, 147], "transform_streamlin": [87, 88, 138, 139, 202, 254, 255], "t1_aff": [87, 88], "f_wm_tracking_mask": 87, "adher": 87, "manipul": [87, 135, 145, 185, 193], "tractogram_probabilistic_rumba": 87, "select_random_set_of_streamlin": [88, 92, 135, 202], "freesurf": [88, 98, 190], "canon": [88, 195, 199], "pnm": 88, "anatomi": [88, 93, 95, 113, 135, 165, 182, 201, 208, 223], "throughout": [88, 103, 187], "subset": [88, 187, 194], "plot_streamlin": 88, "tractogram_sfm": 88, "tractogram_sfm_detr": 88, "exit": [89, 98, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241], "endpoint": [89, 98, 102, 118, 195, 202], "outsideimag": [89, 238], "trackpoint": [89, 247], "example_tracking_determinist": [89, 147], "1131": 89, "2796": 89, "4205": 89, "3656": 89, "5868": 89, "6309": 89, "6744": 89, "7213": 89, "7657": 89, "8125": 89, "8572": 89, "9018": 89, "9461": 89, "9916": 89, "10360": 89, "10833": 89, "11285": 89, "11735": 89, "12221": 89, "4556": 89, "12684": 89, "13142": 89, "13599": 89, "14069": 89, "14534": 89, "14996": 89, "15473": 89, "15936": 89, "16396": 89, "16855": 89, "17324": 89, "17780": 89, "4542": 89, "18245": 89, "18703": 89, "19180": 89, "19644": 89, "20113": 89, "20583": 89, "21060": 89, "21529": 89, "21997": 89, "22470": 89, "22940": 89, "23408": 89, "23875": 89, "24342": 89, "24831": 89, "25305": 89, "25778": 89, "26245": 89, "26745": 89, "27223": 89, "27699": 89, "28170": 89, "28658": 89, "29128": 89, "29598": 89, "30072": 89, "30541": 89, "31031": 89, "31502": 89, "31978": 89, "32452": 89, "32924": 89, "33401": 89, "33886": 89, "34363": 89, "34836": 89, "35327": 89, "35803": 89, "36284": 89, "36766": 89, "4782": 89, "37245": 89, "37727": 89, "38203": 89, "38676": 89, "39152": 89, "39626": 89, "40099": 89, "40569": 89, "41037": 89, "41499": 89, "41965": 89, "4589": 89, "42425": 89, "42883": 89, "43339": 89, "43794": 89, "44247": 89, "44703": 89, "45156": 89, "45617": 89, "46068": 89, "46533": 89, "46986": 89, "4498": 89, "47456": 89, "47931": 89, "48393": 89, "48859": 89, "49316": 89, "49771": 89, "50236": 89, "50693": 89, "51150": 89, "51612": 89, "52070": 89, "52529": 89, "52987": 89, "53474": 89, "53952": 89, "54421": 89, "54888": 89, "55383": 89, "55869": 89, "4768": 89, "56346": 89, "56834": 89, "4784": 89, "57313": 89, "57820": 89, "58303": 89, "58783": 89, "59262": 89, "59738": 89, "60254": 89, "60739": 89, "61220": 89, "61703": 89, "62187": 89, "62691": 89, "63180": 89, "63667": 89, "64152": 89, "64643": 89, "65145": 89, "4896": 89, "65635": 89, "66121": 89, "66607": 89, "67132": 89, "67622": 89, "68112": 89, "68597": 89, "69080": 89, "69589": 89, "70076": 89, "4795": 89, "70556": 89, "71033": 89, "71513": 89, "71991": 89, "72466": 89, "72937": 89, "73408": 89, "73907": 89, "74383": 89, "74858": 89, "75331": 89, "75820": 89, "76293": 89, "76764": 89, "77233": 89, "77749": 89, "78227it": 89, "78704it": 89, "79178it": 89, "79717it": 89, "80206it": 89, "80685it": 89, "81164it": 89, "81686it": 89, "82169it": 89, "82644it": 89, "83117it": 89, "83607it": 89, "84080it": 89, "84552it": 89, "85018it": 89, "85484it": 89, "4628": 89, "85948it": 89, "86410it": 89, "86889it": 89, "87351it": 89, "4598": 89, "87812it": 89, "88288it": 89, "88746it": 89, "89203it": 89, "89670it": 89, "90126it": 89, "90600it": 89, "91057it": 89, "91521it": 89, "91975it": 89, "92421it": 89, "92861it": 89, "93300it": 89, "93743it": 89, "94177it": 89, "94616it": 89, "95045it": 89, "95468it": 89, "95890it": 89, "96307it": 89, "96718it": 89, "metric_map": 89, "tensor_model": 89, "threshold_criterion": 89, "mask_fa": 89, "threshold_fa": 89, "tractogram_probabilistic_thresh_al": 89, "tractogram_deterministic_thresh_al": 89, "neighborhood": [89, 113, 187, 201, 204], "binary_criterion": 89, "white_matter_mask": 89, "tractogram_deterministic_binary_al": 89, "include_map": 89, "exclude_map": 89, "stem": 89, "act_criterion": 89, "act_map": 89, "tractogram_deterministic_act_al": 89, "tractogram_deterministic_act_valid": 89, "cut": [89, 200], "subcort": 89, "backtrack": 89, "diverg": 90, "yeatman2012": [90, 198], "dsa": 90, "metricspe": [90, 196], "averagepointwiseeuclideanmetr": [90, 116, 117, 196], "get_two_hcp842_bundl": [90, 91, 113, 114, 202], "grab": [90, 190], "bundles_path": 90, "fetch_bundles_2_subject": [90, 138, 139, 141, 202], "bundles_fold": 90, "cst_l_file": 90, "subj_2": [90, 190], "bundles_cst": 90, "af_l_fil": 90, "bundles_af": 90, "cst_l": [90, 168, 252], "bbox_valid_check": [90, 91, 103, 107, 113, 114, 116, 117, 118, 119, 135, 193, 196], "af_l": [90, 91, 168, 169, 190, 196, 201], "won": [90, 117, 241, 247, 249], "opposit": [90, 99, 187, 195, 240], "centroid": [90, 92, 101, 113, 116, 118, 119, 187, 196, 198, 201, 202, 230], "af": [90, 91, 114, 138, 189, 190], "roughli": [90, 99, 107, 109, 187, 196], "model_af_l_fil": [90, 91, 113, 114], "model_cst_l_fil": [90, 91, 113, 114], "model_af_l": [90, 91, 113, 114], "model_cst_l": [90, 113], "nb_point": [90, 116, 117, 196, 238], "qb": [90, 116, 117, 118, 119, 196, 240], "cluster_cst_l": 90, "standard_cst_l": 90, "cluster_af_l": 90, "standard_af_l": 90, "oriented_cst_l": 90, "orient_by_streamlin": [90, 198, 202], "oriented_af_l": 90, "volumetr": 90, "fa_affin": 90, "hcp_bundle_fa": 90, "w_cst_l": 90, "gaussian_weight": [90, 202], "w_af_l": 90, "profile_cst_l": 90, "profile_af_l": 90, "tract_profil": 90, "robert": [90, 198, 254], "dougherti": [90, 198], "nathaniel": [90, 198], "myall": [90, 198], "heidi": [90, 198], "feldman": [90, 198], "e49790": [90, 198], "garyfallidis17": [90, 113, 169, 187, 196, 201, 225, 228, 230], "036": [90, 96], "afq_tract_profil": [90, 96], "chandio2020": [91, 92, 113, 196, 198, 201, 207, 228], "fetch_bundle_atlas_hcp842": [91, 113, 114, 202], "assignment_map": [91, 202], "atlas_fil": [91, 113], "atlas_fold": [91, 113], "sft_af_l": [91, 113, 114], "arcuat": [91, 101, 113, 114, 138, 168, 169, 190], "fasiculu": 91, "fake_tub": 91, "17281532": [91, 113, 114], "55606842": [91, 113, 114], "92485857": [91, 113, 114], "af_l_before_assignment_map": 91, "indx": 91, "si": 91, "disks_color": 91, "af_l_after_assignment_map": 91, "risach": [91, 92, 113, 168, 196, 198, 201, 207, 228], "bullock": [91, 92, 113, 168, 196, 198, 201, 207, 228, 253], "fc": [91, 92, 113, 168, 196, 198, 201, 207, 228], "harezlak": [91, 92, 113, 168, 196, 198, 201, 207, 228], "rep": [91, 92, 113, 168, 196, 198, 201, 207, 228], "17149": [91, 92, 113, 168, 196, 198, 201, 207, 228], "bundle_assignment_map": [91, 96], "extrem": [92, 103, 116, 118, 187, 201, 208], "whatsoev": 92, "dissimilar": 92, "bundle_shape_similar": [92, 96, 202, 250], "two_cingulum_bundl": [92, 102, 202], "cingulum": [92, 102, 139, 190], "cb_subj1": [92, 102], "rng": [92, 113, 187, 196, 199, 202, 249], "randomst": [92, 113, 187, 194, 196, 199], "bundle1": [92, 139, 196, 199], "bundle2": [92, 139, 196, 199], "show_both_bundl": [92, 102], "streamtube_actor": 92, "rotatez": [92, 102], "two_bundl": 92, "cluster_thr": [92, 167, 200, 201, 223], "clust_thr": [92, 196, 201, 228], "ba_scor": 92, "6416666666666666": 92, "9583333333333333": 92, "lenient": 92, "pairwis": [93, 101, 102, 187], "jordan_2018_plm": [93, 95], "cluster_confid": [93, 96, 202], "40mm": 93, "cci": [93, 199], "long_streamlin": 93, "sl": [93, 146, 147, 184, 237], "hue": [93, 139], "satur": [93, 139], "lut_cmap": [93, 139], "colormap_lookup_t": [93, 114, 139, 141], "scale_rang": [93, 114, 139, 141], "hue_rang": [93, 139, 141], "saturation_rang": [93, 139, 141], "bar3": [93, 139], "scalar_bar": [93, 114, 139], "stream_actor": [93, 138, 139], "lookup_colormap": [93, 114, 139, 141], "pop": [93, 95, 140], "cci_streamlin": 93, "complex": [93, 135, 164, 182, 195, 253, 260, 262], "landscap": 93, "probe": 93, "stabl": [93, 195, 245, 253], "phenomenon": 93, "lone": 93, "vote": 93, "lend": 93, "cci_histogram": 93, "histogram": [93, 97, 187, 189, 196, 200], "keep_streamlin": 93, "keep_streamlines_actor": 93, "filtered_cci_streamlin": 93, "keshavan": 93, "creation": [94, 96, 118, 146, 165, 194, 196, 201, 236, 241, 243], "afq": [94, 96, 146, 247, 252], "confid": [94, 96, 146, 189, 199], "therapi": 95, "shortest": [95, 189, 199], "distanc": [95, 97, 101, 102, 103, 113, 114, 117, 118, 119, 162, 187, 189, 192, 193, 195, 196, 198, 199, 200, 201, 202, 208, 223, 228, 234, 248, 252, 256, 263], "treatment": [95, 163], "gross": 95, "tumor": [95, 253], "gtv": 95, "mpl": [95, 200, 238, 245], "lesion": 95, "electrod": 95, "surface_opac": [95, 140], "surface_color": [95, 140], "seedroi_actor": [95, 140], "plm_roi_sl": 95, "transpar": [95, 140, 200, 201, 223], "hypothesi": 95, "motor": 95, "cortico": 95, "path_length_map_base_roi": 95, "wmpl": 95, "example_cc_path_length_map": 95, "ignor": [95, 189, 194, 195, 196, 198, 241, 245, 249], "wmpl_show": 95, "masked_wher": 95, "slx": 95, "sly": 95, "slz": 95, "path_length_map": [95, 96], "plan": [95, 164, 241, 247, 258, 259], "neuro": 95, "oncologi": 95, "preprint": [95, 194], "biorxiv": [95, 103, 170, 187, 201, 208], "examples_built_17_streamline_analysi": 96, "streamline_length": [96, 97], "row": [97, 98, 102, 114, 118, 141, 164, 187, 189, 190, 193, 195, 196, 197, 199, 200, 247], "n_i": [97, 118, 195], "approx_polygon_track": [97, 253], "set_number_of_point": [97, 102, 103, 116, 117, 199, 236, 238, 239, 241, 245], "cosin": [97, 118, 189], "simulated_bundl": 97, "no_streamlin": 97, "randint": [97, 236, 242], "burlywood": 97, "length_histogram": 97, "millimet": [97, 113, 162, 187, 195, 196], "nativ": [97, 101, 102, 138, 139, 167, 168, 169, 187, 193, 200, 201, 223, 230], "2mm": 97, "bundle_downsampl": 97, "n_pts_d": 97, "curvi": 97, "bundle_downsampled2": 97, "n_pts_ds2": 97, "lossi": 97, "bundle_actor": 97, "bundle_actor2": 97, "bundle_actor3": 97, "simulated_cosine_bundl": 97, "equidist": 97, "obviou": 97, "great": [97, 189], "n_pts_histogram": 97, "lengths_downsampl": 97, "lengths_downsampled2": 97, "id": [97, 189, 196, 200, 201], "lengths_plot": 97, "meant": [98, 139, 189, 194, 195], "labels_img": 98, "belong": [98, 116, 117, 118, 168, 198, 201], "cc_streamlin": 98, "other_streamlin": 98, "cc_streamlines_actor": 98, "corpuscallosum_axi": 98, "corpuscallosum_sagitt": 98, "pair": [98, 101, 187, 189, 193, 199, 200, 201, 208], "return_map": [98, 189, 199], "mapping_as_streamlin": [98, 199], "log1p": 98, "gyru": 98, "surpris": 98, "tricki": 98, "lr_superiorfrontal_track": 98, "dm": 98, "int16": [98, 167, 189, 193, 195, 197], "lr_sf_trk": 98, "vox": [98, 135, 193, 202], "footnot": 98, "aparc": [98, 190, 249], "aseg": 98, "mgz": 98, "lie": [98, 189, 199], "label_info": 98, "translat": [98, 99, 100, 107, 164, 177, 189, 196, 199, 201, 202, 203, 228, 247], "4x4": [98, 187, 189, 193, 200], "mutual": [99, 100, 177, 187, 201, 203], "mattes03": [99, 100, 187], "ant": [99, 100, 107, 108, 109, 121, 177, 187], "avants11": [99, 100, 107, 108, 109, 177], "twice": [99, 163, 189, 199, 238, 241], "simplifi": [99, 119, 163, 182, 187, 193, 195, 199, 240, 244, 250, 256], "regtool": [99, 100, 105, 107, 108, 109, 202, 245, 246, 249], "fetch_syn_data": [99, 202], "transform_centers_of_mass": [99, 202], "mutualinformationmetr": [99, 100, 107, 202], "affineregistr": [99, 100, 107, 202, 237, 253], "translationtransform3d": [99, 100, 107], "rigidtransform3d": [99, 100, 107], "affinetransform3d": [99, 107], "static_data": [99, 100], "static_affin": [99, 100, 107, 109, 187], "static_img": [99, 100], "hardi150": [99, 100, 172, 176], "static_grid2world": [99, 100, 187], "folder2": 99, "moving_data": 99, "moving_affin": [99, 100, 107, 109, 187], "moving_img": 99, "moving_grid2world": [99, 100, 187], "affine_map": [99, 100, 107, 109, 187], "overlay_slic": [99, 100, 107, 109, 202], "resampled_0": 99, "resampled_1": 99, "resampled_2": 99, "640x480": [99, 100, 107, 108, 109], "rough": [99, 102], "c_of_mass": 99, "occupi": [99, 189, 195, 197], "transformed_com_0": 99, "transformed_com_1": 99, "transformed_com_2": 99, "joint": [99, 187, 201, 203, 260], "margin": [99, 187, 201, 203], "nbin": [99, 100, 107, 187, 196, 201, 203], "sampling_prop": [99, 100, 107, 201, 203], "optima": 99, "pyramid": [99, 108, 109, 187, 201, 204], "flexibl": [99, 118, 195, 238, 262], "indirectli": 99, "coarsest": [99, 187, 201, 203], "medium": [99, 127, 201, 228], "finest": [99, 108, 109, 187, 201, 203], "level_it": [99, 100, 105, 107, 108, 109, 187, 201, 203, 204], "nx": [99, 189], "nz": [99, 189], "affreg": [99, 100], "regtransform": 99, "params0": [99, 107, 187], "starting_affin": [99, 100, 107, 187, 201, 253], "transformed_trans_0": 99, "transformed_trans_1": 99, "transformed_trans_2": 99, "rigid": [99, 100, 102, 103, 107, 177, 196, 201, 202, 203, 208, 228, 230, 241, 247, 250, 253], "slight": [99, 163], "transformed_rigid_0": 99, "transformed_rigid_1": 99, "transformed_rigid_2": 99, "safer": [99, 135], "freedom": [99, 135, 163, 187], "transformed_affine_0": 99, "transformed_affine_1": 99, "transformed_affine_2": 99, "affine_registr": [99, 100, 202], "register_dwi_to_templ": [99, 202], "center_of_mass": [99, 202], "rigid_isosc": [99, 201, 202, 203], "rigid_sc": [99, 201, 202, 203], "xformed_img": [99, 100], "reg_affin": [39, 99, 100], "mi": [99, 100, 135, 187, 193, 201, 253], "xformed_affine_0": 99, "xformed_affine_1": 99, "xformed_affine_2": 99, "bvals_fil": [99, 201, 221, 231], "bvecs_fil": [99, 201, 221, 231], "revers": [99, 118, 194, 196, 263], "xformed_dwi": 99, "reg_method": [99, 187], "aff": [99, 101, 187], "xformed_dwi_0": 99, "xformed_dwi_1": 99, "xformed_dwi_2": 99, "dwi_to_templ": 99, "haynor": [99, 100, 187], "vessel": [99, 100, 187], "lewellen": [99, 100, 187], "eubank": [99, 100, 187], "pet": [99, 100, 187], "ct": [99, 100, 187, 253], "chest": [99, 100, 187], "deform": [99, 100, 103, 104, 105, 106, 108, 146, 187, 199, 200, 201, 204, 208, 240, 248, 249], "avant": [99, 100, 107, 108, 109, 121, 177, 187], "tustison": [99, 100, 107, 108, 109, 121, 177], "song": [99, 100, 107, 108, 109, 177], "affine_registration_3d": [99, 106], "pixel": [100, 105, 172, 187, 191, 196, 199, 200], "circumst": 100, "cardiac": 100, "priorit": 100, "register_seri": [100, 202], "pad_bi": 100, "constant_valu": 100, "affmat": 100, "sin": [100, 163, 189, 197, 199, 263], "deregist": 100, "transl": 100, "static_mask": [100, 187], "moving_mask": [100, 187], "reg_func": 100, "fignam": 100, "scope": 100, "hopefulli": 100, "transformed_pipelin": 100, "corner": [100, 135, 189, 193, 199, 241, 248], "border": [100, 141, 245], "troublesom": 100, "sz": 100, "pd": 100, "squares_st": 100, "int32": 100, "squares_mv": 100, "deregistered_squar": 100, "masked_stat": 100, "transformed_squar": 100, "pin": [100, 247, 254], "transformed_squares_mask": 100, "transformed_squares_mask_2": 100, "transformed_squares_mask_3": 100, "xform": [100, 187], "series_affin": [100, 187], "series_mask_1": 100, "series_mask_2": 100, "affine_registration_mask": [100, 106], "coregist": 101, "garyfallidis15": [101, 102, 113, 169, 177, 187, 201, 230], "shuffl": [101, 194], "streamlinear": [101, 102, 113, 202, 241, 245], "groupwise_slr": [101, 202], "read_five_af_bundl": [101, 202], "show_bundl": [101, 202], "basicconfig": 101, "fasciculi": 101, "save_a": [101, 200], "before_group_registr": 101, "bundles_reg": 101, "after_group_registr": 101, "romerobascones22": 101, "romero": [101, 252, 253, 254], "bascon": [101, 252, 253, 254], "bundleatlas": 101, "bundle_group_registr": [101, 106], "garyfallidis14": [102, 167, 168, 169, 170, 187, 201, 230], "sleep": 102, "cb_subj2": 102, "streamlinelinearregistr": [102, 202], "srr": 102, "srm": 102, "cb_subj2_align": 102, "lines_actor": [102, 107], "orang": [102, 107, 139], "before_registr": 102, "after_registr": 102, "stai": [102, 118, 258, 259], "bmd": [102, 187], "operatornam": [102, 163, 260, 263], "flip": [102, 107, 113, 196, 239, 249, 262], "mdf": [102, 103, 113, 116, 119, 187, 199, 201, 202, 208, 228, 249], "eq": [102, 187, 189, 195, 239], "primarili": [102, 195], "visser": 102, "intact": [102, 187], "x_": 102, "prove": 102, "nonneg": [102, 195], "satisfi": [102, 189, 199], "inequ": [102, 189, 195], "formul": [102, 121, 189, 195, 258, 260], "underset": 102, "compos": [102, 187, 189, 195, 201], "bundle_registr": [102, 106], "nonlinearli": [103, 170, 187, 201, 208], "chandio23": [103, 170], "chandio20": [103, 168], "uncin": [103, 168, 170], "streamwarp": [103, 202], "bundlewarp_vector_fil": [103, 202], "bundlewarp_shape_analysi": [103, 202], "fetch_bundle_warp_dataset": [103, 202], "unlist_streamlin": [103, 187, 202], "viz_two_bundl": [103, 202], "viz_vector_field": [103, 202], "viz_displacement_mag": [103, 202], "loaf": 103, "uf_l": [103, 168], "test_bundles_for_dipi": [103, 170], "22557733": [103, 170], "bundle_warp_fil": 103, "s_uf_l_path": 103, "s_uf_l": [103, 170], "m_uf_l_path": 103, "m_uf_l": [103, 170], "uf_subj1": 103, "uf_subj2": 103, "static_and_mov": 103, "trade": [103, 170, 187, 201, 208], "deformed_bundl": [103, 187], "moving_align": [103, 187], "match_pair": 103, "warp_map": 103, "max_it": [103, 187, 196, 201, 208], "4690449237823486": 103, "warp": [103, 105, 107, 108, 109, 170, 177, 187, 190, 200, 201, 204, 208, 252], "static_and_partially_deform": 103, "linearli": [103, 187, 201, 208], "linearly_and_nonlinearly_mov": 103, "c1": [103, 190, 200], "points_align": [103, 200], "partially_vectorfield": 103, "partially_vectorfield_over_linearly_mov": 103, "partially_deformation_magnitude_over_linearly_mov": 103, "new_tractogram": 103, "partially_deformed_bundl": 103, "deformed_bundle2": 103, "5579748153686523": 103, "static_and_fully_deform": 103, "fully_vectorfield": 103, "fully_vectorfield_over_linearly_mov": 103, "fully_deformation_magnitude_over_linearly_mov": 103, "no_disk": [103, 187, 198, 201, 206, 207], "fully_deformed_bundl": 103, "stnd": 103, "neurip": 103, "bundlewarp_registr": [103, 106], "groupwis": [104, 106, 146, 182, 187, 254], "diffeomorph": [104, 106, 107, 146, 174, 182, 187, 200, 201, 204, 205, 242, 245, 250, 254], "fuzzi": [104, 106, 146, 241], "nonrigid": [104, 106, 146, 201, 208], "bundlewarp": [104, 106, 146, 165, 200, 201, 202, 208, 255], "skimag": [105, 196, 236, 238], "imwarp": [105, 107, 108, 109, 202, 238], "symmetricdiffeomorphicregistr": [105, 107, 108, 109, 202], "ssdmetric": [105, 108, 202], "ellips": [105, 189], "draw_ellips": 105, "rr": 105, "img_ref": 105, "img_in": 105, "show_imag": 105, "img_warp": 105, "fig_nam": 105, "axarr": 105, "ssd": [105, 108, 177, 187, 195, 201, 204], "02f": 105, "step_length": [105, 187, 201, 204], "sdr": [105, 107, 108, 109, 240, 241, 254], "ndim": [105, 108, 189, 195, 197, 247], "inv_it": [105, 108, 187, 201, 204], "ss_sigma_factor": [105, 187, 201, 204], "opt_tol": [105, 187, 201, 204], "plot_2d_diffeomorphic_map": [105, 108, 202, 245], "38399": 105, "57997": 105, "46935": 105, "357605": 105, "70613": 105, "00001": [105, 108], "511505": 105, "32039": 105, "232216": 105, "77921": 105, "14425": 105, "19761": 105, "96389": 105, "99999": [105, 108], "195205": 105, "391754": 105, "773254": 105, "26481": 105, "818726": 105, "22971": 105, "945564": 105, "12815": 105, "529335": 105, "99735": 105, "59097": 105, "39428": 105, "35901": 105, "08593": 105, "9184668": 105, "04836": 105, "811745": 105, "813194": 105, "31409": 105, "539505": 105, "62846": 105, "748116": 105, "96909": 105, "10664": 105, "97683": 105, "18689": 105, "738045": 105, "76541": 105, "99135": 105, "97298": 105, "17303": 105, "87969": 105, "326607": 105, "register_binary_fuzzi": [105, 106], "examples_built_20_registr": 106, "streamline_registr": [106, 107, 202], "syn_registration_2d": [106, 108], "syn_registration_3d": [106, 109, 236], "greene17": 107, "ra": [107, 135, 138, 167, 189, 193, 196], "vox_siz": [107, 193], "2x2x2": 107, "fetch_mni_templ": [107, 202], "read_mni_templ": [107, 202], "img_t2_mni": 107, "new_zoom": [107, 187], "b0_idx_stanford": 107, "b0_data_stanford": 107, "skull": [107, 108, 109, 121], "b0_masked_stanford": 107, "mean_b0_masked_stanford": 107, "rigidli": 107, "transform_origin": [107, 202], "mismatch": [107, 238, 241], "affine_reg": [107, 177], "rigid_map": 107, "highres_map": 107, "avants09": [107, 108, 109, 177], "ccmetric": [107, 108, 109, 202, 238, 247], "warped_mov": [107, 108, 109, 177, 187, 201], "transformed_sagitt": 107, "transformed_coron": 107, "transformed_axi": 107, "whose": [107, 187, 201], "extent": 107, "isocent": 107, "target_isocent": 107, "diag": [107, 189, 195], "origin_affin": 107, "fov": 107, "zoom": [107, 138, 141, 172, 173, 187, 193, 241], "implicitli": 107, "mni_streamlin": 107, "deform_field": [107, 199], "get_forward_field": [107, 187, 202], "stream_to_current_grid": [107, 199], "current_grid_to_world": [107, 199], "stream_to_ref_grid": [107, 199], "ref_grid_to_world": [107, 199], "show_template_bundl": 107, "template_actor": 107, "streamlines_dsn_mni": 107, "epstein": [107, 108, 109, 177], "gee": [107, 108, 109, 121, 177], "correl": [107, 108, 109, 172, 177, 182, 187, 189, 201, 204, 238], "elderli": [107, 108, 109, 177], "neurodegen": [107, 108, 109, 177], "grafton": 107, "fname_mov": 108, "reg_o": [108, 190], "fname_stat": 108, "reg_c": [108, 190], "overlay_imag": [108, 202], "input_imag": 108, "decis": 108, "dim": [108, 182, 187, 240, 254], "n_0": [108, 109], "n_1": [108, 109], "n_k": [108, 109, 195], "diffeomorphicmap": [108, 109, 200, 202, 250, 254], "forth": [108, 109], "diffeomorphic_map": 108, "87221": 108, "88522": 108, "86069": 108, "lattic": [108, 200], "direct_warp_result": 108, "warped_stat": [108, 109], "inverse_warp_result": 108, "callback_cc": 108, "react": [108, 240], "registrationstag": [108, 202], "scale_end": 108, "wmove": 108, "moving_imag": [108, 187], "wstatic": 108, "static_imag": [108, 187], "t1_name": 108, "b0_name": 108, "sigma_diff": [108, 187, 253], "callback": [108, 138, 141, 187, 189, 194, 200], "t1_slices_input": 108, "t1_slices_r": 108, "inv_warp": 108, "t1_slices_res2": 108, "diffeomorphic_map_b0": 108, "99708": 108, "999725": 108, "99444": 108, "modal": [109, 187, 201, 204], "stanford_b0": 109, "stanford_b0_affin": 109, "b0_fname": 109, "syn_b0": 109, "syn_b0_affin": 109, "stanford_b0_mask": 109, "syn_b0_mask": 109, "pre_align": 109, "02783543e": 109, "83019053e": 109, "07735639e": 109, "57654118e": 109, "34051706e": 109, "41918267e": 109, "66525861e": 109, "23579799e": 109, "34288908e": 109, "90262026e": 109, "80820307e": 109, "46216651e": 109, "input_3d": 109, "brain_extraction_dwi_0": [111, 120], "brain_extraction_dwi_1": [112, 120], "whole_brain_slr": 113, "fetch_target_tractogram_hcp": [113, 114, 202], "get_bundle_atlas_hcp842": [113, 202], "get_target_tractogram_hcp": [113, 114, 202], "create_tractogram_head": [113, 135, 202], "target_fil": 113, "target_fold": 113, "all_bundles_fil": 113, "sft_atla": 113, "atlas_head": 113, "space_attribut": [113, 135, 193, 202], "sft_target": 113, "target_head": 113, "tractograms_initi": [113, 114], "qb_centroids1": 113, "qb_centroids2": 113, "1984": [113, 146, 147, 184, 189, 248], "slr_transform": [113, 201, 228], "npy": [113, 162, 168, 169, 193, 201, 236], "tractograms_after_registr": 113, "tri": [113, 200], "model_clust_thr": [113, 196, 201, 228], "reduction_thr": [113, 196, 201, 228], "pruning_thr": [113, 196, 201, 228], "reduction_dist": [113, 196, 201, 228], "pruning_dist": [113, 196, 201, 228], "diferect": 113, "mam": [113, 196, 201, 228, 248], "neighbour": [113, 191, 201, 222], "af_l_model_bundl": [113, 114], "recognized_af_l": [113, 114], "af_l_label": 113, "model_bundl": [113, 196, 198], "af_l_recognized_bundl": [113, 114], "reco_af_l": 113, "af_l_rec_1": 113, "af_l_org_1": 113, "af_l_recognized_bundle2": 113, "af_l_rec_2": 113, "af_l_org_2": 113, "af_l_recognized_bundle3": 113, "af_l_rec_3": 113, "af_l_org_3": 113, "r_recognized_af_l": 113, "r_af_l_label": 113, "pruned_streamlin": [113, 196], "af_l_refine_recognized_bundl": 113, "af_l_rec_refin": 113, "af_l_org_refin": 113, "sft_cst_l": 113, "cst_l_model_bundl": 113, "recognized_cst_l": 113, "cst_l_label": 113, "cst_l_recognized_bundl": 113, "reco_cst_l": 113, "cst_l_rec_1": 113, "cst_l_org_1": 113, "cst_l_recognized_bundle2": 113, "cst_l_rec_2": 113, "cst_l_org_2": 113, "cst_l_recognized_bundle3": 113, "cst_l_rec_3": 113, "cst_l_org_3": 113, "r_recognized_cst_l": 113, "r_cst_l_label": 113, "cst_l_refine_recognized_bundl": 113, "cst_l_rec_refin": 113, "cst_l_org_refin": 113, "bundle_extract": [113, 120, 241, 248], "stonge2022": [114, 196], "fss": [114, 202], "faststreamlinesearch": [114, 202], "nearest_from_matrix_row": [114, 202], "hcp_file": 114, "faststreamlinessearch": 114, "ref_streamlin": [114, 196], "max_radiu": [114, 196], "radius_search": [114, 196, 202], "Be": [114, 135, 170, 189, 199], "cautiou": 114, "fs_tree_af": 114, "coo_mdist_mtx": 114, "ids_": 114, "ids_ref": 114, "col": [114, 141], "nn_": 114, "nn_ref": 114, "nn_dist": 114, "af_l_recognized_bundle_dist": 114, "ref_color": 114, "af_l_model_bundle_reach": 114, "fast_streamline_search": [114, 120], "familiar": [116, 117], "get_streamlin": [116, 117], "fornix": [116, 117, 118, 119, 182, 190, 196], "identityfeatur": [116, 117], "unalt": 116, "nb": [116, 117, 119, 195], "predetermin": 116, "perman": 116, "centerofmassfeatur": 116, "graviti": [116, 187], "wiki": [116, 117, 118, 163, 189, 190, 195], "euclideanmetr": 116, "create_colormap": [116, 117, 118, 119], "colormap_ful": [116, 117, 118, 119], "center_of_mass_featur": 116, "midpointfeatur": 116, "halfwai": [116, 187], "midpoint_featur": 116, "arclengthfeatur": [116, 118], "arclength_featur": 116, "vectorofendpointsfeatur": [116, 117, 118], "ambigu": 116, "cosinemetr": [116, 117, 118], "vector_of_endpoints_featur": 116, "segment_clustering_featur": [116, 120], "0x2be7d9fa0": 117, "sumpointwiseeuclideanmetr": [117, 118], "0x2bdd51f40": 117, "cosine_metr": 117, "segment_clustering_metr": [117, 120], "modular": [118, 200, 201, 223], "subclass": [118, 195, 196], "capabl": [118, 138, 189, 195, 249], "hierarch": [118, 193], "clustermap": [118, 119, 202], "example_segment_clustering_featur": [118, 147], "arc": 118, "redefin": 118, "infer_shap": 118, "is_order_invari": 118, "educ": [118, 119], "neuroanatomi": [118, 119], "fornix_clusters_arclength": 118, "example_segment_clustering_metr": [118, 147], "minu": [118, 187, 189, 191, 192, 195, 196, 201, 216, 217, 222, 229, 230], "wikipedia": [118, 163, 164, 189, 195, 263], "cosine_similar": [118, 194], "are_compat": [118, 193, 196, 202, 253], "shape1": [118, 196], "shape2": [118, 196], "speedup": [118, 130, 131, 182, 196], "v2": [118, 189], "cos_theta": 118, "arccosin": 118, "arcco": [118, 189, 242, 263], "fornix_clusters_cosin": 118, "segment_extending_clustering_framework": [118, 120], "pickl": [119, 162, 202, 238], "save_pickl": [119, 162, 202], "10mm": [119, 196], "upsampl": [119, 196], "0x2bdd6dc70": 119, "83774": 119, "322784": 119, "108505": 119, "84363": 119, "91885": 119, "40357": 119, "25677": 119, "7293": 119, "48337": 119, "60328": 119, "137825": 119, "238976": 119, "51007": 119, "29447": 119, "04564": 119, "460205": 119, "542404": 119, "14851": 119, "84209": 119, "98937": 119, "57682": 119, "63652": 119, "72344": 119, "60828": 119, "939186": 119, "40846": 119, "158745": 119, "4484": 119, "745346": 119, "002625": 119, "82582": 119, "02451": 119, "43942": 119, "06974": 119, "83773804": 119, "92590332": 119, "32278442": 119, "10850525": 119, "84362793": 119, "91885376": 119, "40357208": 119, "25676727": 119, "72930145": 119, "48336792": 119, "60327911": 119, "13782501": 119, "23897552": 119, "5100708": 119, "29447174": 119, "04563904": 119, "46020508": 119, "54240417": 119, "60240173": 119, "14851379": 119, "84208679": 119, "98937225": 119, "57682037": 119, "63652039": 119, "72344208": 119, "60827637": 119, "9391861": 119, "40846252": 119, "15874481": 119, "4484024": 119, "74534607": 119, "00262451": 119, "82582092": 119, "02451324": 119, "43942261": 119, "0697403": 119, "fornix_initi": 119, "fornix_centroid": 119, "fornix_clust": 119, "pkl": 119, "segment_quickbundl": [119, 120, 236, 240, 244], "examples_built_23_segment": 120, "tissue_classif": [120, 121], "mrf": [121, 182, 238], "zhang": 121, "zhang2001": 121, "avants2011": 121, "fsl": [121, 190, 201, 219, 249, 258, 259], "atropo": 121, "strip": [121, 247], "coron": [121, 200, 247], "img_ax": 121, "imgplot": 121, "img_cor": 121, "t1_imag": 121, "pad_inch": 121, "adult": 121, "100th": 121, "t0": [121, 189], "total_tim": 121, "final_seg": 121, "44483494758606": 121, "light": 121, "bradi": 121, "cook": 121, "multivari": 121, "reconst_dsid_0": [124, 126], "reconst_dsid_1": [125, 126], "examples_built_26_simul": 126, "simulate_multi_tensor": [126, 128], "simulate_dki": [126, 127], "barrier": 127, "media": 127, "rnh2015": 127, "multi_tensor_dki": [127, 202], "decompose_tensor": [127, 202], "from_lower_triangular": [127, 202], "small_64d": [127, 190, 197], "circ": [127, 195], "fie": 127, "signal_dki": 127, "signal_noisi": [127, 128], "decompos": 127, "dt_eval": 127, "dt_evec": 127, "signal_dti": 127, "simulated_dki_sign": 127, "085": 127, "simulated_sign": 128, "cach": [128, 199, 202, 243], "multi_tensor_simul": 128, "start_tim": [130, 131], "processor": 130, "csapeaks_parallel": 130, "time_parallel": [130, 131], "ran": [130, 131], "93455815315247": [], "333221912": 130, "time_singl": [130, 131], "23192286491394": [], "872478008": 130, "9034164399145339": [], "72191839533": 130, "frozen": [130, 131, 245], "__name__": [130, 131, 142, 145], "__main__": [130, 131, 142, 145], "freeze_support": [130, 131], "reconst_csa_parallel": [130, 132], "cpu": [131, 173, 244], "csd_peaks_parallel": 131, "407976865768433": [], "425682068": 131, "21995711326599": [], "772505999": 131, "5971243041295131": [], "reconst_csd_parallel": [131, 132], "examples_built_29_multiprocess": 132, "examples_built_32_file_format": 134, "streamline_format": [134, 135], "create_nifti_head": [135, 202], "get_reference_info": [135, 202], "is_header_compat": [135, 202], "fetch_file_format": [135, 202], "get_file_format": [135, 202], "cc_m_sub": 135, "laf_m_sub": 135, "lpt_m_sub": 135, "raf_m_sub": 135, "rpt_m_sub": 135, "template0": 135, "bundles_filenam": 135, "ref_anat_filenam": 135, "basenam": 135, "reference_anatomi": 135, "cc_trk": 135, "cc_sft": 135, "laf_sft": 135, "raf_sft": 135, "998783": 135, "041415": 135, "026771": 135, "003548": 135, "044491": 135, "990912": 135, "126939": 135, "781647": 135, "021270": 135, "127975": 135, "991549": 135, "033348": 135, "voxel_ord": [135, 193, 202], "streamline_count": 135, "6276": 135, "point_count": 135, "205884": 135, "data_per_streamlin": [135, 193, 201, 202, 233, 234], "data_per_point": [135, 193, 202, 253], "anywai": [135, 258, 259], "lpt_sft": 135, "rpt_sft": 135, "nifti1": [135, 190, 201, 215, 224, 232], "trkfile": [135, 193], "nifti1head": [135, 193], "9878335e": 135, "1415159e": 135, "6770778e": 135, "0900355e": 135, "4491168e": 135, "9091226e": 135, "2693870e": 135, "2678165e": 135, "1270305e": 135, "2797531e": 135, "9154925e": 135, "7033348e": 135, "0000000e": 135, "accept": [135, 183, 189, 196, 243], "fake": 135, "beginn": [135, 249], "nifti_head": 135, "lpt": 135, "rpt": 135, "laf": 135, "raf": 135, "is_bbox_in_vox_valid": [135, 193, 202], "remove_invalid_streamlin": [135, 193, 202], "removing_invalid_coordin": 135, "to_voxmm": [135, 193, 202], "to_rasmm": [135, 193, 202], "voxmm": [135, 193, 196, 199, 202], "to_corn": [135, 193, 202], "cc_streamlines_vox": 135, "laf_streamlines_vox": 135, "raf_streamlines_vox": 135, "lpt_streamlines_vox": 135, "rpt_streamlines_vox": 135, "cc_densiti": 135, "laf_dens": 135, "raf_dens": 135, "lpt_densiti": 135, "rpt_densiti": 135, "metadata": [135, 194], "cc_1000": 135, "laf_1000": 135, "raf_1000": 135, "lpt_1000": 135, "rpt_1000": 135, "examples_built_35_visu": 137, "viz_roi_contour": [137, 140], "viz_bundl": [137, 139], "viz_advanc": [137, 138, 241], "084": [137, 138, 167], "thin": 138, "screenshot": [138, 141], "dialog": 138, "snapshot": [138, 168], "primit": 138, "slider": [138, 200, 238, 240, 241, 253], "event": [138, 189, 196, 200, 201, 238, 241], "lineslider2d": 138, "read_bundles_2_subject": [138, 139, 202, 238], "tar": 138, "38477": 138, "97756fbef11ce2df31f1bedf1fc7aac7": 138, "exp_bundles_and_map": [138, 141], "subj_1": [138, 139, 141, 190], "cc_1": [138, 190], "1mm": [138, 196], "world_coord": [138, 200], "image_actor_z": 138, "slicer_opac": 138, "display_ext": 138, "image_actor_x": 138, "x_midpoint": 138, "round": [138, 189, 194, 195, 237, 240, 245, 246], "image_actor_i": 138, "y_midpoint": 138, "image_actor": 138, "showmanag": [138, 141, 200], "show_m": [138, 141], "line_slider_z": 138, "min_valu": 138, "max_valu": [138, 195], "initial_valu": 138, "text_templ": 138, "0f": 138, "line_slider_x": 138, "line_slider_i": 138, "opacity_slid": 138, "change_slice_z": 138, "change_slice_x": 138, "change_slice_i": 138, "change_opac": 138, "on_chang": 138, "build_label": [138, 202], "textblock2d": [138, 141, 200, 240], "font_siz": [138, 200], "font_famili": 138, "arial": 138, "justif": 138, "ital": 138, "shadow": 138, "background_color": 138, "line_slider_label_z": 138, "line_slider_label_x": 138, "line_slider_label_i": 138, "opacity_slider_label": 138, "panel2d": [138, 141, 240], "add_el": [138, 141], "screen": [138, 163, 190], "re_align": 138, "getsiz": 138, "win_callback": 138, "size_old": 138, "size_chang": 138, "reset_clipping_rang": 138, "add_window_callback": 138, "bundles_and_3_slic": 138, "del": 138, "garyfallidis2021": 138, "soham": 138, "biswa": 138, "david": [138, 195, 236, 238, 239, 240, 241, 252, 253, 254], "reagan": [138, 200, 201, 223, 238, 239, 240, 241], "nasim": [138, 252, 253], "anousheh": [138, 252, 253], "filipi": 138, "silva": 138, "geoffrei": 138, "fox": 138, "21105": 138, "joss": [138, 247], "03384": 138, "dix": [139, 190, 193], "subj_id": [139, 190], "bundle_n": 139, "knew": 139, "camera": 139, "camera_info": 139, "focal": 139, "stream_actor2": 139, "stream_actor3": 139, "bar2": 139, "bundle3": 139, "stream_actor4": 139, "bundle4": 139, "stream_actor5": 139, "bundle5": 139, "stream_actor6": 139, "bundle6": 139, "visibledeprecationwarn": 139, "ndarrai": [139, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 250], "rag": [139, 249], "cols_arr": 139, "decim": [140, 239], "contour_from_roi_tutori": 140, "fname_t1": 141, "t1_warp": 141, "value_rang": [141, 250], "slice_actor": [141, 200, 202], "slice_actor2": 141, "hsv": 141, "fname_fa": 141, "fa_1x1x1": 141, "lut": 141, "fa_actor": 141, "slices_lut": 141, "label_posit": 141, "label_valu": 141, "result_posit": 141, "result_valu": 141, "panel_pick": 141, "left_click_callback": 141, "ev": 141, "event_po": 141, "iren": [141, 200], "geteventposit": 141, "picker": [141, 241], "getpointijk": 141, "8f": 141, "setinterpol": 141, "addobserv": 141, "leftbuttonpressev": 141, "perspect": [141, 189], "show_m_mosa": 141, "left_click_callback_mosa": 141, "slice_mosa": 141, "drag": 141, "scroll": [141, 241], "combinedworkflow": [142, 202], "combined_workflow": [142, 202], "nlmeansflow": [142, 202], "medianotsuflow": [142, 202], "denoiseandseg": 142, "_get_sub_flow": 142, "commandlin": [142, 168, 201], "input_fil": [142, 145, 167, 201, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 229, 232], "out_fil": [142, 145, 201, 205, 231], "wildcard": [142, 145, 173, 175, 201, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 227, 229, 231, 233, 234], "out_": [142, 145], "parser": [142, 145, 201], "io_it": [142, 145], "get_io_iter": [142, 145, 201, 202, 241], "in_fil": [142, 145], "nl_flow": 142, "run_sub_flow": [142, 201, 202], "last_generated_output": 142, "out_denois": [142, 201, 210, 211, 212, 213], "me_flow": 142, "ioiter": [142, 145, 202], "globbin": 142, "bit": [142, 145, 166, 189, 237, 238, 240, 241, 245, 246, 258], "flow_runn": [142, 145, 202], "run_flow": [142, 145, 202], "argpars": [142, 145, 201], "combined_workflow_cr": [142, 144], "overwrit": [142, 145, 194, 250], "wrote": [142, 145], "examples_built_37_workflow": 144, "workflow_cr": [144, 145], "callabl": [145, 187, 189, 190, 192, 195, 198, 245, 249], "t1_denois": 145, "my_workflow": 145, "shutil": 145, "Will": [145, 190, 193, 194, 195], "appendtextflow": 145, "text_to_append": 145, "myfil": 145, "glob": 145, "newli": 145, "text_fil": 145, "examples_built_python": 146, "examples_built_jupyt": 146, "example_gradients_spher": 147, "example_brain_extraction_dwi": 147, "example_reslice_dataset": 147, "example_motion_correct": 147, "example_denoise_patch2self": 147, "example_denoise_nlmean": 147, "example_denoise_localpca": 147, "example_denoise_mppca": 147, "example_denoise_gibb": 147, "nnl": [146, 147, 184, 189, 195], "ye": [146, 147, 162, 184], "sdt": [146, 147, 184, 195, 236, 237, 244, 247], "opdt": [146, 147, 184], "tristan": [146, 147, 184, 195], "vega": [146, 147, 184, 195], "sm": [146, 147, 184], "behren": [146, 147, 184, 195, 197], "smt2": [146, 147, 182, 184, 195, 250], "example_reconst_mcsd": 147, "example_reconst_forecast": 147, "example_reconst_shor": 147, "example_reconst_shore_metr": 147, "example_reconst_mapmri": 147, "example_reconst_qtdmri": 147, "example_restore_dti": 147, "example_reconst_fwdti": 147, "example_reconst_csa": 147, "example_reconst_dsi": 147, "example_reconst_gqi": 147, "example_reconst_dsid": 147, "example_reconst_sfm": 147, "example_reconst_ivim": 147, "example_kfold_xv": 147, "example_reconst_sh": 147, "example_reconst_qti": 147, "example_reconst_qtiplu": 147, "example_contextual_enhanc": 147, "example_fiber_to_bundle_coher": 147, "example_tracking_bootstrap_peak": 147, "example_tracking_pft": 147, "example_tracking_sfm": 147, "example_tracking_rumba": 147, "example_linear_fascicle_evalu": 147, "example_surface_se": 147, "example_streamline_tool": 147, "example_streamline_length": 147, "example_cluster_confid": 147, "example_path_length_map": 147, "example_afq_tract_profil": 147, "example_bundle_assignment_map": 147, "example_bundle_shape_similar": 147, "example_affine_registration_3d": 147, "example_affine_registration_mask": 147, "example_syn_registration_2d": 147, "example_syn_registration_3d": 147, "example_register_binary_fuzzi": 147, "example_bundle_registr": 147, "example_bundle_group_registr": 147, "example_streamline_registr": 147, "example_bundlewarp_registr": 147, "example_segment_quickbundl": 147, "example_segment_extending_clustering_framework": 147, "example_tissue_classif": 147, "example_bundle_extract": 147, "example_reconst_csd_parallel": 147, "example_reconst_csa_parallel": 147, "example_streamline_format": 147, "example_viz_advanc": 147, "example_viz_slic": 147, "example_viz_bundl": 147, "example_viz_roi_contour": 147, "example_workflow_cr": 147, "example_combined_workflow_cr": 147, "paradigm": [162, 258], "bloch": 162, "torrei": 162, "pgse": [162, 258, 259, 260], "readout": 162, "gamma": [162, 163, 191, 195, 258], "gyromagnet": [162, 258], "width": [162, 187, 195, 200, 258], "wave": [162, 190, 195, 260], "proport": [162, 187, 194], "stand": [162, 194], "gather": [162, 201, 203], "mobil": 162, "molecul": 162, "movement": 162, "counterintuit": 162, "dephas": 162, "dwmri": 162, "speak": 162, "plenti": 162, "qbi": [162, 256, 262], "nonisotrop": [162, 245], "textrm": [162, 195], "batteri": 162, "painless": 162, "noth": [162, 187, 247], "ever": 162, "consol": [162, 166], "dicom": [162, 247], "npz": [162, 190, 241], "pydicom": 162, "v4": 162, "v6": 162, "v7": 162, "loadmat": 162, "pytabl": [162, 182, 238, 239], "hdf5": [162, 182, 193, 194, 238, 248], "serial": [162, 195], "load_pickl": [162, 202], "huge": [162, 201, 228, 256], "pycharm": 162, "sublim": 162, "aptana": 162, "emac": 162, "eclips": 162, "pydev": 162, "chri": [162, 168, 241], "rorden": 162, "dcm2nii": 162, "cabiatl": 162, "mricro": 162, "mricron": 162, "reader": [162, 202], "openli": 162, "grade": 162, "fcon_1000": 162, "nitrc": 162, "humanconnectom": [162, 190], "openneuro": 162, "gimbal_lock": [163, 249], "euler": [163, 164, 189, 249], "defici": 163, "indistinguish": 163, "spitfir": 163, "aircraft": 163, "tail": 163, "wing": 163, "roll": [163, 189], "tilt": 163, "violent": 163, "straight": [163, 199], "wait": 163, "pm": [163, 195, 258, 259], "radian": [163, 189, 199, 258], "smallmatrix": 163, "pm1": 163, "proof": 163, "mathworld": [163, 164, 189, 263], "rewrit": 163, "v_": [163, 189, 195], "v_1": 163, "v_2": 163, "conclus": 163, "gregslabaugh": 163, "homogen": [164, 187, 189, 195, 197], "theorem": 164, "boldsymbol": 164, "x_1": 164, "x_n": 164, "pythagora": 164, "gimbal": 164, "lock": [164, 195], "quaternion": 164, "suffer": [164, 195], "rapid": 164, "orthogon": [164, 195, 262, 263], "transpos": [164, 187, 189, 195, 197, 200], "synonym": 164, "paragon": 165, "special": [165, 187, 189, 194, 195, 196, 201], "dtiflow": 182, "lpcaflow": [182, 202], "rumbaflow": 182, "vtp": [182, 193, 253, 254], "older": [165, 195, 238, 240, 241, 243, 245], "dec": [165, 167, 193, 241], "colorfa": [165, 243], "exercis": 165, "filepath": [165, 194], "acknowledg": [165, 247], "intellig": 165, "bioengin": 165, "nih": [165, 193, 242], "gordon": 165, "betti": 165, "moor": [165, 195], "alfr": 165, "sloan": [165, 195], "escienc": 165, "summer": [165, 182, 183, 248], "facil": 165, "gotten": 166, "greatest": 166, "bleed": 166, "platform": [166, 173, 245], "conda": [166, 236, 238, 239, 241, 246], "forg": 166, "success": [166, 193, 194, 195], "xcode": 166, "mint": 166, "neurodebian": 166, "mac": [166, 167, 237, 241, 250, 254, 256], "big": [166, 176, 189, 195, 201, 221, 239, 245, 247], "uninstal": 166, "__file__": 166, "canopi": 166, "pythonxi": 166, "64bit": [166, 182], "alloc": [166, 187, 189, 195, 197, 202], "chunk": [166, 195], "32bit": [166, 246], "okai": 166, "among": [166, 199], "old": [166, 182, 241, 243, 245, 249, 250], "pythonpath": 166, "bashrc": 166, "bash_profil": 166, "retyp": 166, "export": [166, 200], "user_dir": 166, "restart": 166, "cmd": [166, 241], "powershel": 166, "python_compil": 166, "msc": 166, "amd64": 166, "visualstudiobuildtool": 166, "msc_ver": 166, "1910": [166, 247], "unabl": [166, 195, 238, 245, 250], "vcvarsal": 166, "bat": 166, "reinstal": 166, "multithread": [166, 182], "clang": 166, "brew": 166, "multilib": 166, "bash": 166, "usr": 166, "cellar": 166, "omp": [166, 238], "hombrew": 166, "hour": [166, 190], "build_modref_templ": 166, "docgen_cmd": 166, "reference_cmd": 166, "examples_built": 166, "make_exampl": 166, "traceback": [166, 190, 199], "modulenotfounderror": [166, 248], "virtual": 166, "sphinxbuild": 166, "path_to_sphinx": 166, "mkdir": [167, 168, 169, 171, 172, 173, 175, 176, 177, 178], "data_fold": [167, 171], "__dti_ax_ep2d_2_5_iso_33d_20141015095334_4": [167, 172, 176], "mv": 167, "uint16": [167, 236], "888": [167, 238], "avg": [167, 199], "940581408413976": 167, "percentil": [167, 200], "98th": 167, "psr": 167, "62918037280702": 167, "069": 167, "082": 167, "elef": 167, "b0_thr": 167, "out_work": 167, "ga": [167, 195, 201, 202, 218, 219], "fastest": 167, "out_mask": [167, 201, 214, 226, 227], "pam5": [167, 168, 178, 182, 193, 201, 248], "out_tractogram": [167, 201, 233, 234], "tracks_from_peak": 167, "tracking_method": [167, 178, 201, 233], "random_color": [167, 169, 170, 200, 201, 223, 253], "length_gt": [167, 200, 201, 223], "length_lt": [167, 200, 201, 223], "clusters_gt": [167, 200, 201, 223], "clusters_lt": [167, 200, 201, 223], "native_coord": [167, 201, 223], "stealth": [167, 200, 201, 223], "emergency_head": [167, 201, 223], "bg_color": [167, 200, 201, 223], "disable_order_transpar": [167, 201, 223], "out_stealth_png": [167, 201, 223], "out_strat": 167, "mix_nam": [167, 169, 201], "log_level": [167, 193, 194], "log_fil": 167, "stretch": 167, "nonetheless": 167, "parkinson": 168, "ppmi": 168, "marek11": 168, "yeh18": [168, 169], "atlas_of_30_human_brain_bundles_in_mni_spac": [168, 169], "12089652": [168, 169], "35092": 168, "yhjc": 168, "12098397": 168, "h5": [168, 193], "subjects_smal": 168, "af_r": 168, "ccmid": 168, "cc_forcepsmajor": [168, 190], "cc_forcepsminor": 168, "cst_r": [168, 190], "emc_l": 168, "emc_r": 168, "fpt_l": 168, "fpt_r": 168, "ifof_l": 168, "ifof_r": 168, "ilf_l": 168, "ilf_r": 168, "mlf_l": 168, "mlf_r": 168, "ml_l": 168, "ml_r": 168, "mdlf_l": 168, "mdlf_r": 168, "opt_l": 168, "opt_r": 168, "or_l": 168, "or_r": 168, "stt_l": 168, "stt_r": 168, "uf_r": 168, "anatomical_measur": [168, 202], "org_bundl": 168, "rec_bundl": 168, "3392": 168, "3552": 168, "streamlines_moved_af_l__labels__recognized_orig": 168, "streamlines_moved_af_r__labels__recognized_orig": 168, "streamlines_moved_ccmid__labels__recognized_orig": 168, "streamlines_moved_uf_l__labels__recognized_orig": 168, "streamlines_moved_uf_r__labels__recognized_orig": 168, "streamlines_moved_v__labels__recognized_orig": 168, "moved_af_l__recogn": 168, "moved_af_r__recogn": 168, "moved_ccmid__recogn": 168, "moved_uf_l__recogn": 168, "moved_uf_r__recogn": 168, "moved_v__recogn": 168, "overridden": 168, "eg": [168, 196, 198, 201, 244, 255], "bundle_profil": 168, "lmm": [168, 201], "lmm_plot": 168, "buan_thr": [168, 201, 223], "buan_highlight": [168, 201, 223], "af_l_fa_pvalu": 168, "pvalu": [168, 201, 223], "cst_l_fa_pvalu": 168, "sm_plot": 168, "dipy_buan_shap": [168, 249], "12033390": 168, "blob": 168, "marek": 168, "kenneth": 168, "jen": [168, 201, 218], "danna": 168, "lasch": 168, "shirlei": 168, "siderowf": 168, "carolin": 168, "simuni": 168, "tanya": 168, "coffei": 168, "kieburtz": 168, "karl": 168, "flagg": 168, "emili": 168, "chowdhuri": 168, "sohini": 168, "neurobiologi": 168, "panesar": [168, 169], "fernand": [168, 169], "meola": [168, 169], "yoshino": [168, 169], "fernandez": [168, 169], "miranda": [168, 169], "vettel": [168, 169], "verstynen": [168, 169], "hcp_tractogram_zip": 169, "7013003": 169, "whole_brain_mni": 169, "rb_output": 169, "pink": [169, 170], "org_output": 169, "visit": [169, 170, 185, 196], "chandio2023": [170, 187, 201, 208], "hhttp": 170, "m_uf": 170, "s_uf_li": 170, "capac": 170, "\u03bb": [170, 201, 208], "requirs": 170, "nonlinearly_mov": [170, 201], "caustiou": 170, "destin": 171, "specific_dataset": 171, "specific_data_out_fold": 171, "eigenspectrum": 172, "lpca": [172, 182, 201, 210, 247, 248, 253], "ow": 172, "denoise_lpca_output": 172, "suffic": [172, 173, 175], "dwi_lpca": [172, 201], "subtl": 172, "hardli": 172, "visibl": [172, 240, 243, 247, 251], "denoise_mppca_output": 172, "textur": 172, "denoise_nlmeans_output": 172, "lcpa": 172, "veraart15": 173, "perrone15": 173, "gibbs_ringing_output": 173, "t1_brain_denois": 173, "motion_output": 175, "recons_csd_output": 176, "stanford_hardi_mask": 176, "recons_mapmri_output": 176, "recons_dti_output": 176, "save_metr": [176, 201, 203, 218, 219, 220, 221], "out_tensor": [176, 201, 219], "dti_tensor": [176, 201], "recons_dki_output": 176, "cfin_multib_mask": 176, "recons_csa_output": 176, "pam": [176, 192, 193, 200, 201, 216, 217, 233, 234, 241], "extract_pam_valu": [176, 201, 216, 217], "recons_ivim_output": 176, "ivim_mask": 176, "sort": [177, 190, 192, 195, 199, 200, 201, 223, 245], "image_reg_output": 177, "path_to_static_fil": 177, "path_to_moving_fil": 177, "affine_reg_output": 177, "out_affin": [177, 201, 203, 209, 230], "syn_reg_output": 177, "out_warp": [177, 201, 204], "em": [177, 187, 201, 204], "syn_reg_warp": 177, "transform_typ": [177, 201, 205], "transform_reg_output": 177, "path_to_transform_map_fil": 177, "nb_pt": [177, 187, 196, 201, 230], "sl_reg_output": 177, "stop_fil": 178, "seed_dens": [178, 201, 233, 234], "recon": [178, 238, 247], "pve_wm": 178, "eudx_tracking_output": 178, "det_tracking_output": 178, "det": [178, 189, 195, 201, 233, 239, 240], "prob_tracking_output": 178, "prob": [178, 201, 233, 247], "closest_peaks_output": 178, "prematur": 178, "pft_output": 178, "pve_gm": 178, "pve_csf": 178, "expertis": 179, "didn": 179, "depict": 179, "replic": [181, 189], "tripl": [181, 242], "quot": [181, 242, 245], "alter": [181, 199], "pymvpa": 181, "resdnn": [182, 190, 194, 253], "dkiflow": 182, "imageregistrationflow": [182, 202], "motioncorrectionflow": [182, 202], "parallelis": 182, "horizon": [165, 182, 201, 202, 223, 242, 247, 248, 249, 250, 253, 255], "govern": [182, 195, 252], "cli": [182, 247, 249, 250, 251, 252, 253, 254], "10x": 182, "multiplatform": [182, 256], "vtk9": [182, 249], "typographi": 182, "tensorflow": [182, 194, 248], "smarter": 182, "critic": [182, 193, 194], "mtm": [182, 247], "quickbundlesx": [182, 187, 200, 201, 202, 223, 230, 240], "tractometri": [182, 185, 242], "almost": [182, 195, 243], "cvxopt": [182, 239, 245, 247], "reorient": [182, 189, 199, 236, 237, 241], "cleaner": 182, "exhibitor": [182, 183], "ohbm": [182, 183], "massiv": 182, "geodes": [182, 195, 201, 218, 219, 246], "robustli": 182, "novemb": [183, 189], "septemb": 183, "august": 183, "decemb": [183, 189], "octob": [183, 187], "june": [183, 189], "magazin": 183, "nov": [183, 195, 262], "22nd": 183, "3x": 183, "teach": 183, "fundament": 183, "seminar": 183, "neuroscientist": 183, "qbin": 183, "dont": 183, "april": [165, 183], "creator": 183, "attend": 183, "hbm": [183, 236, 245], "0dev": 183, "win": 183, "took": 183, "mia": 183, "school": 183, "mcgill": [183, 190], "3rd": [183, 199], "sprint": 183, "gui": 185, "unittest": [185, 245], "__version__": 185, "pycpd": 187, "siavashk": 187, "encapsul": 187, "codomain": 187, "parzen": 187, "parzen62": 187, "cubic": [187, 195, 199, 201, 204], "annal": 187, "kwd": 187, "enum": [187, 193], "diagnos": 187, "debug": [187, 189, 193, 194, 238], "prealign": 187, "metric_kwarg": 187, "ride": [187, 193], "dwi_affin": 187, "template_affin": 187, "reg_kwarg": 187, "warped_b0": 187, "fist": 187, "disp": [187, 189], "domain_img": 187, "codomain_img": 187, "between_affin": 187, "ret_metr": 187, "gradual": 187, "boolean": [187, 189, 191, 194, 195, 199, 200, 201], "sampling_proport": 187, "interv": 187, "xopt": [187, 189, 193, 202], "fopt": [187, 189, 193, 202], "isosc": [187, 250, 253], "kwarg": [187, 189, 190, 193, 194, 195, 196, 201, 236, 250, 254], "ref_affin": 187, "b0_ref": 187, "xform_img": 187, "affine_arrai": 187, "n_point": [187, 191, 198, 199, 201, 222, 249], "native_resampl": 187, "opm_get_num_proc": [], "streamlines_a": [], "streamlines_b": [], "sigma2": 187, "low_rank": 187, "num_eig": 187, "max_iter": 187, "arg": [187, 189, 190, 193, 194, 195, 196, 201, 242], "cloud": 187, "nxd": 187, "mxd": 187, "ty": 187, "consecut": [187, 247], "span": [187, 189, 195], "exclus": [187, 199], "absolut": [187, 189, 194, 195, 201, 238, 242, 249, 262], "mxn": 187, "pt1": 187, "nx1": 187, "p1": 187, "mx1": 187, "likelihoo": 187, "lowrank": 187, "get_registration_paramet": [187, 202], "registration_paramet": 187, "transform_point_cloud": [187, 202], "update_transform": [187, 202], "arxiv": [187, 194, 195], "0905": 187, "update_vari": [187, 202], "eig_fgt": 187, "gauss": [187, 201, 204], "grad_mov": [], "avants2008": [], "precomput": [187, 195], "avants08": [], "grad_stat": [], "pointwis": [], "sq": [], "ocegueda2016": [], "delta_field": 187, "sigma_sq_field": 187, "gradient_mov": [], "sigma_sq_x": [], "demon": [187, 201, 204, 240, 241], "vercauteren09": 187, "arce14": [], "sigma_i": [], "vercauteren": 187, "intend": [187, 194, 200, 201, 221, 254], "quantiz": [187, 201, 204], "sigma_x": [], "demons_step": [], "santana": [], "campo": [], "delgado": [], "viguera": [], "multimod": [], "168140": [], "pennec": [187, 195], "perchant": 187, "ayach": [187, 195], "suppl": [], "s61": [], "040": [], "num_label": [], "infinit": [187, 197, 199, 247], "num_level": 187, "undefin": [], "secial": [], "domain_grid_shap": 187, "domain_grid2world": 187, "codomain_grid_shap": 187, "codomain_grid2world": 187, "domain_grid": 187, "codomain_grid": 187, "stream": 187, "get_affin": [187, 202, 238], "set_affin": [187, 202], "affine_inv": 187, "unchang": [187, 189, 195, 197, 199], "image_grid2world": 187, "sampling_grid_shap": 187, "sampling_grid2world": 187, "resample_onli": 187, "domain_shap": 187, "codomain_shap": 187, "drive": 187, "neg_mi": 187, "distance_and_gradi": [187, 202], "neg_mi_grad": 187, "grad": [187, 199], "bfg": [187, 189, 196, 245], "newton": [187, 189, 194, 253], "dogleg": [187, 189], "trust": [187, 189, 195], "ncg": [187, 189], "n_scale": [187, 201, 204], "never": [187, 199], "docstring_addendum": [187, 202], "accomplish": [187, 195, 201], "disp_shap": 187, "disp_grid2world": 187, "compute_inversion_error": [187, 202], "perfect": 187, "comp": [187, 195], "dinv": 187, "expand_field": [187, 202], "expand_factor": 187, "new_shap": 187, "get_backward_field": [187, 202], "is_invers": 187, "get_simplified_transform": [187, 202], "diffeomorh": 187, "interpret_matrix": [187, 202], "shallow_copi": [187, 202], "shallow": 187, "new_map": 187, "image_world2grid": 187, "out_shap": 187, "out_grid2world": 187, "_warp_forward": 187, "_warp_backward": 187, "transform_point": [187, 202], "coord2world": 187, "world2coord": 187, "transform_points_invers": [187, 202], "warp_endomorph": [187, 202], "endomorph": 187, "inherit": [187, 191, 195, 201, 213], "costli": 187, "computation": [187, 195], "simpler": [187, 243], "abstract": [187, 189, 195, 196, 200, 201], "get_map": [187, 202, 250], "upon": [187, 195, 199, 201, 243, 244], "set_level_it": [187, 202], "inv_tol": [187, 201, 204], "static_to_ref": 187, "current_displac": 187, "new_displac": 187, "disp_world2grid": 187, "time_sc": 187, "d2": [187, 193, 195], "d1": [187, 195], "mean_norm": 187, "csv": [187, 189, 193, 194, 195, 196], "xl": [187, 189, 193, 194, 195, 196], "gnumer": [187, 189, 193, 194, 195, 196], "cater": [187, 189, 193, 194, 195, 196], "hierarchi": [187, 189, 193, 194, 195, 196], "period": [187, 189, 193, 194, 195, 196, 249], "java": [187, 189, 193, 194, 195, 196], "gnu": [187, 189, 193, 194, 195, 196], "charg": [187, 189], "compute_backward": [187, 202], "compute_forward": [187, 202], "free_iter": [187, 202], "registrationoptim": 187, "get_energi": [187, 202], "initialize_iter": [187, 202], "unpract": 187, "set_levels_abov": [187, 202], "set_levels_below": [187, 202], "set_moving_imag": [187, 202], "moving_spac": 187, "moving_direct": 187, "set_static_imag": [187, 202], "static_spac": 187, "static_direct": 187, "use_moving_image_dynam": [187, 202], "original_moving_imag": 187, "diffeomorficmap": 187, "use_static_image_dynam": [187, 202], "original_static_imag": 187, "inner_it": 187, "q_level": 187, "double_gradi": 187, "step_typ": 187, "gauss_newton": [187, 201, 204], "transfer": [187, 242], "seidel": [187, 201, 204], "schedul": [187, 201, 204, 238], "compute_demons_step": [187, 202], "forward_step": 187, "compute_gauss_newton_step": [187, 202], "bruhn": 187, "weickert": 187, "bruhn05": 187, "andr": 187, "joachim": 187, "ultim": 187, "iccv": 187, "use_double_gradi": 187, "dynam": 187, "originalstaticimag": 187, "tom": [187, 238, 254, 255], "xavier": 187, "aymer": 187, "nichola": 187, "gradient_field": 187, "lambda_param": 187, "coarser": 187, "sigmafield": 187, "_joint_pdf_gradient_dense_2d": [], "_joint_pdf_gradient_dense_3d": [], "jacobian": [189, 195], "bin_index": [], "xnorm": [], "bin_normalize_mov": [], "mmin": [], "mmax": [], "bin_normalize_stat": [], "smin": [], "smax": [], "smask": [], "mmask": [], "ones_lik": [], "update_gradient_dens": [], "grid2world": [], "mgradient": [], "joint_grad": [], "update_gradient_spars": [], "sval": [], "mval": [], "sample_point": [], "sampled_point": [], "update_pdfs_dens": [], "smargin": [], "mmargin": [], "update_pdfs_spars": [], "joint_gradi": [], "mi_gradi": [], "buffer": [189, 190, 195, 197, 238], "floor": 191, "total_voxel": [], "lexicograph": [], "perturb": [], "increasingli": [], "rate": 196, "total_pixel": [], "isampl": [], "cval": [187, 201, 229], "pool": [187, 191, 194, 195, 201, 222, 229, 244], "f_name": 187, "input_spac": 187, "sigma_factor": 187, "mask0": 187, "weaker": 187, "from_level": 187, "get_affine_inv": [187, 202], "get_domain_shap": [187, 202], "get_expand_factor": [187, 202], "to_level": 187, "get_imag": [187, 202], "get_scal": [187, 202], "get_sigma": [187, 202], "get_spac": [187, 202], "print_level": [187, 202], "aka": 187, "hungri": [187, 237], "l_bfgs_b": [187, 196], "powel": [187, 189, 196], "mat": [187, 189, 195, 199, 244], "matopt": 187, "matopt_histori": 187, "func": [187, 189, 195, 197, 201], "matrix_histori": 187, "matrix1": 187, "matrix2": 187, "block_siz": 187, "min_siz": [187, 196], "default_bound": 187, "rm_small_clust": [187, 201, 230, 255], "maxit": [187, 189, 195], "select_random": 187, "greater_than": [187, 196, 201, 228, 230], "less_than": [187, 195, 196, 201, 228, 230], "qbx_thr": [187, 201, 230], "n_bundl": 187, "lst": 187, "unmatch": 187, "ml": [187, 201, 208], "matched_pair": [187, 201], "unitari": [187, 200], "shape_profilen": 187, "stdv": 187, "greedi": [], "descent": 189, "useless": [], "sigmasq_field": [], "displacement_field": 201, "max_displac": [], "mx": [], "2x2": [], "is_singular": [], "singular": [189, 191, 201, 210, 211, 259], "contract": [189, 196, 201], "_jacobian": [], "_get_identity_paramet": [], "_param_to_matrix": [], "wrapper": [194, 195, 243], "get_dim": [], "get_identity_paramet": [], "get_number_of_paramet": [], "param_to_matrix": [], "premult_index": [], "premult_disp": [], "sinv": [], "cancel": [], "standard_devi": [], "iff": [], "chen": 236, "ruchala": [], "olivera": [], "2816107": [], "nslice": [], "from_shap": [], "to_shap": [], "from_grid2world": [], "to_grid2world": [], "int_field": [], "ceil": [], "img_world2grid": [], "img_spac": [], "d_world2grid": [], "cell": [189, 236], "affine_idx_in": [], "affine_idx_out": [], "affine_disp": [], "rinv": [], "cinv": [], "pinv": [], "tinv": [], "ref_shap": [], "bilinear": [], "necessarili": [], "bi": [], "in2world": [], "world2out": [], "field_world2grid": [], "dipycor": [], "bench": [195, 196, 199], "svv": [195, 196, 199], "ini": [195, 196, 199], "algebra": 189, "descriptor": 189, "reserv": [189, 194, 196], "redistribut": [189, 196, 201], "permit": [189, 195, 196, 201], "met": [189, 196, 201], "disclaim": [189, 196, 201], "materi": [189, 196, 201], "endors": [189, 196], "BY": [189, 196, 201], "THE": [189, 196, 201], "holder": 189, "AND": [189, 193, 196, 201], "AS": [189, 196, 201], "OR": [189, 196, 201], "warranti": [189, 190, 196, 201], "BUT": [189, 196, 201], "TO": [189, 196, 201], "OF": [189, 196, 201], "merchant": [189, 196, 201], "FOR": [189, 196, 201], "NO": [189, 196, 201], "shall": [189, 196, 201], "owner": 189, "liabl": [189, 196, 201], "indirect": [189, 196, 201], "incident": [189, 196, 201], "exemplari": [189, 196, 201], "consequenti": [189, 196, 201], "damag": [189, 190, 196, 201], "procur": [189, 196, 201], "profit": [189, 196, 201], "busi": [189, 196, 201], "interrupt": [189, 196, 201], "liabil": [189, 196, 201], "strict": [189, 190, 193, 196, 201], "neglig": [189, 196, 201], "aris": [189, 196, 201], "IF": [189, 196, 201], "SUCH": [189, 196, 201], "declar": [189, 194, 242, 243, 247], "overhead": [189, 195], "untrigg": 189, "raymond": 189, "hetting": 189, "rcn": 189, "htm": 189, "datamodel": 189, "octahedron": [189, 243], "modulu": 189, "lon": 189, "lat": 189, "parameter": [189, 254], "duration_in_second": [], "init_hemispher": [], "num_iter": [], "init_pointset": 189, "inclin": [189, 190, 263], "azimuth": [189, 190, 195, 263], "south": [189, 263], "north": [189, 263], "west": [189, 263], "east": [189, 263], "posterior": [189, 193], "anterior": [189, 193], "zenith": [189, 263], "counter": 189, "clockwis": 189, "geograph": 189, "nomenclatur": [189, 248], "latitud": [189, 263], "longitud": [189, 263], "array_lik": [189, 190, 195, 198, 199], "cartes": 189, "spherical_coordinate_system": 189, "wolfram": 189, "sphericalcoordin": 189, "hypotenus": 189, "sph2cart": [189, 263], "unusu": [189, 247], "trivial": [189, 242], "vec": [189, 195], "nvec": 189, "l2n": 189, "allclos": [189, 199, 243], "keepdim": 189, "flatten": [189, 195, 197], "instabl": 189, "taylor": [189, 197], "tetha": 189, "teta2": 189, "theta2": 189, "ur": 189, "rad2deg": 189, "npd": 189, "niethamm": 189, "estepar": 189, "bouix": 189, "shenton": 189, "cf": [189, 195, 244], "eng": 189, "biol": 189, "pubm": 189, "17946125": 189, "pmc2791793": 189, "pts1": 189, "pts2": 189, "check_radiu": 189, "broadcast": [189, 195, 196, 247, 254], "5708": 189, "7124": 189, "vecs1": 189, "vecs2": 189, "v_co": 189, "vco": 189, "lambert": 189, "mardia": 189, "jupp": 189, "y_1": 189, "y_2": 189, "annulu": 189, "vice": [189, 249], "versa": [189, 249], "aj": 189, "sxyz": 189, "gohlk": 189, "lfd": 189, "uci": 189, "yaw": 189, "syxz": 189, "34786452": 189, "383436184": 189, "_axes2tupl": 189, "partit": 189, "persp": 189, "m0": 189, "smallest": [189, 195, 196, 199], "collinear": [189, 236], "furthest": 189, "3x3": [189, 191, 195], "ru": 189, "mat1": 189, "mat2": 189, "matn": 189, "circumfer": 189, "otherw": 189, "psampl": 189, "frame": [189, 199, 201], "third": [189, 191, 195, 201, 222], "a_": [189, 195], "gsoc2015dipydki": 189, "blogspot": 189, "rnh": 189, "is_hemi": 189, "pole": [189, 195, 199], "rstudio": 189, "pub": 189, "s3": [189, 190], "amazonaw": 189, "27121_a22e51b47c544980bad594d5e0bb2d04": 189, "noqa": [189, 190], "qval": [189, 195, 202], "ie": [189, 195], "immut": 189, "factori": [189, 240], "gradient_strength": [189, 202], "bmag": [189, 195], "rbval": 189, "expireddeprecationerror": [189, 193, 195, 199], "log_": [189, 195], "atol": [189, 193], "bo_threshold": 189, "ste": 189, "cte": 189, "cigar": 189, "30m": 189, "10m": 189, "sq2": 189, "gt": [189, 196, 200], "03e": 189, "compens": 189, "leemans2009": 189, "bvector": [189, 195, 201, 209, 210, 216, 217, 219, 237], "bmagmax": 189, "bmaxmag": 189, "gap": [189, 195], "regroup": 189, "n_bval": 189, "non_zero": 189, "ztol": 189, "trace": [189, 202, 258], "asymmetri": 189, "bdelta": 189, "b_eta": 189, "topgaard": 189, "valiullin": 189, "ed": 189, "porou": 189, "royal": 189, "chemistri": 189, "ornt1": [189, 193], "ornt2": [189, 193], "orn1": [189, 193], "orn2": [189, 193], "current_ornt": [189, 193], "new_ornt": [189, 193], "stort": [189, 193], "lp": [189, 193], "inferior": [189, 193], "string_ornt": [189, 193], "ornt": [189, 193], "add_nod": [189, 202], "add_edg": [189, 202], "up_short": [189, 202], "wp": 189, "attr": [189, 238], "all_path": [189, 202], "del_nod": [189, 202], "del_node_and_edg": [189, 202], "down_short": [189, 202], "shortest_path": [189, 202], "arr": [189, 191, 195, 199], "num_bin": 189, "janeriksolem": 189, "sphere_origin": [], "sphere_target": [], "multiquadr": [], "epsilon": [193, 249], "spread": 190, "rbf": 243, "_interpolate_scalar_2d": [], "map_coordin": [], "_interpolate_scalar_3d": [], "_interpolate_scalar_nn_2d": [], "_interpolate_scalar_nn_3d": [], "_interpolate_vector_2d": [], "_interpolate_vector_3d": [], "data_strid": [], "len_point": [], "mixin": 189, "offer": [189, 262], "accessor": 189, "uniformtimeseri": 189, "sampling_r": 189, "sampling_interv": 189, "lose": [189, 252], "circular": [189, 197, 238, 239], "chain": 189, "_no_reset": 189, "protect": 189, "caveat": 189, "emptor": 189, "recomput": 189, "fire": 189, "mostli": [189, 195, 199, 236, 243, 246], "decor": [189, 195, 236, 238, 240, 241, 243, 248, 254], "afterward": 189, "magicprop": 189, "__dict__": 189, "jac": [189, 195], "hess": 189, "hessp": 189, "hessian": 189, "nelder": 189, "mead": 189, "anneal": 189, "tnc": 189, "cobyla": 189, "slsqp": 189, "ineq": 189, "wherea": [189, 195, 201], "xk": 189, "show_opt": 189, "nfev": [189, 202], "nit": [189, 202, 245], "print_summari": [189, 202], "sklearn": [189, 191, 195, 201, 213, 248, 253], "signatur": [189, 195, 246, 255], "coef_": 189, "y_hat": 189, "n_sampl": 189, "n_featur": 189, "a_0": 189, "h_i": 189, "s_j": 189, "slack": 189, "polynomi": [189, 195, 262], "design_matrix": [189, 202, 250], "pipermail": 189, "027700": 189, "momentum": 189, "non_neg": [189, 195], "check_error_it": 189, "max_error_check": 189, "converge_on_ss": 189, "xh": 189, "persist": [189, 238], "increment": 189, "sse": [189, 195], "h_best": 189, "caller": 189, "print_stat": [189, 202], "prin": 189, "1000000": [189, 196, 201], "src": 189, "profiling_tutori": 189, "line_profil": 189, "pstat": 189, "slowest": 189, "function_nam": 189, "ix": 189, "100001": 189, "200002": 189, "iz": 189, "300003": 189, "400004": 189, "wichmann": 189, "hill": 189, "9473": 189, "csda": 189, "019": 189, "sciencedirect": 189, "b6v8v": 189, "4k7f86w": 189, "a3a33291b8264e4c882a8f21b6e43351": 189, "r_number": 189, "uniformli": 189, "rectangularli": 189, "95e": 189, "claim": 189, "30000": 189, "arithmet": 189, "5212632": 189, "s1": [189, 196], "s2": [189, 196], "ecuy": 189, "portabl": 189, "30584e": 189, "unspecifi": [189, 190, 200], "delaunai": [189, 190, 243], "triangul": [189, 190, 200], "find_closest": [189, 202], "vertex": [189, 195, 199, 245], "____": 189, "subdivis": 189, "new_spher": 189, "remap": [189, 190, 247], "classmethod": [189, 201], "from_spher": [189, 202], "__________": 189, "return_invers": 189, "hemi": 189, "const": 189, "felt": 189, "unstabl": [189, 241], "reimplement": 189, "fmin_slsqp": 189, "number_of_edg": 189, "__new__": [189, 195, 197], "expos": [189, 190, 195, 197], "fortran": [189, 195, 197], "c_contigu": [189, 195, 197], "owndata": [189, 195, 197], "writeabl": [189, 195, 197, 245], "flatit": [189, 195, 197], "todo": [189, 195, 197, 238], "imaginari": [189, 195, 197, 262], "items": [189, 195, 197], "nbyte": [189, 195, 197, 202], "contigu": [189, 195, 197], "jump": [189, 195, 197], "ctype": [189, 195, 197], "garbag": [189, 195, 197], "coord": [189, 237], "spherepointpick": 189, "fisher": 189, "lewi": 189, "embleton": 189, "coverag": [189, 238, 245, 247, 252, 253], "b1": [189, 200, 248], "max_mean_cosin": 189, "max_cosine_dist": 189, "7071067811865475": 189, "unimport": 189, "12f": 189, "707106781187": 189, "recursion_level": 189, "n1": [189, 199], "n2": 189, "n3": [189, 242], "shife": 189, "perm": 189, "permut": [189, 195], "bank": 189, "n1xn2xn2": 189, "ni": [189, 236, 242], "lowpass": 189, "highpass": 189, "lo": 189, "subband": 189, "synthesi": 189, "n1xn2xn3": 189, "sf1": 189, "sf2": 189, "sf3": 189, "sfi": 189, "af1": 189, "af2": 189, "af3": 189, "afi": 189, "byte_data": 190, "bytes_or_buff": 190, "handler": 190, "__str__": [190, 252], "repr": [190, 240], "sy": [190, 201], "getdefaultencod": 190, "fib1": 190, "fib0": 190, "fib2": 190, "sv2": 190, "skeleton": [190, 246], "lsc": 190, "c3": 190, "symmetric642": 190, "repulsion100": [190, 195], "repulsion200": 190, "vert": [190, 200], "func_coef": 190, "func_discret": 190, "dwi2sh": 190, "maptlotlib": 190, "model_nam": 190, "unsign": [190, 195, 201, 249], "sdp_constraint": 190, "id_constraint_ord": 190, "fsrc": 190, "fdst": 190, "total_length": 190, "16384": 190, "stored_md5": 190, "md5": [190, 201, 215, 238, 244], "data_s": 190, "checksum": [190, 201, 215], "fetchererror": 190, "3shell": 190, "nath": [190, 194], "synb0": [165, 190, 202, 255], "schill": [190, 194], "evac": [190, 201, 202, 214, 255], "park": [190, 194, 201, 214, 255], "session": 190, "rc": [190, 236], "mcconnel": 190, "neurolog": 190, "fee": 190, "herebi": 190, "equip": 190, "injuri": 190, "misus": [190, 238], "oneof": 190, "small_101d": [190, 197], "pittsburgh": 190, "competit": 190, "gqi_vector": [190, 246], "small_25": 190, "10x8x2": 190, "test_piesno": 190, "cb_2": 190, "wild": 190, "bruker": 190, "80x160x5": 190, "110x110x500\u03bcm": 190, "drawn": [190, 200], "subject1_test": 190, "subject1_retest": 190, "subject2_test": 190, "subject2_retest": 190, "with_raw": 190, "meta": 190, "uw": 190, "exp_bundles_map": 190, "renauld": [190, 254], "bernier": 190, "thalamu": 190, "eeg": [190, 242], "submiss": 190, "bundles_list": 190, "ref_anat": 190, "file1": 190, "file2": 190, "arraysequ": [190, 193, 199, 238, 239, 255], "dataset_descript": 190, "json": [190, 201], "bidsvers": 190, "dump": [190, 255], "bid": 190, "hcp_bucket": 190, "openaccess": 190, "profile_nam": 190, "hcp_1200": 190, "aws_access_key_id": 190, "aws_secret_access_kei": 190, "bucket": 190, "aw": 190, "credenti": 190, "xxxxxxxxxxxxxxxx": 190, "publicdata": 190, "gorgolewski": [190, 241], "160044": 190, "ndarek918ec2": 190, "ima": [191, 199], "fimau": 191, "fimao": 191, "5x5": 191, "fima": 191, "force_recomput": [], "meesters2016_ismrm": [], "duitsandfranken_ijcv": [], "evaluate_kernel": [], "kernel_valu": [], "get_lookup_t": [], "dataerror": 202, "tempfil": [192, 193, 254], "tempdir": [192, 245], "vg": [191, 201, 222], "pca_method": [191, 201, 210, 211], "eig": [191, 201, 210, 211], "out_dtyp": 191, "suppress_warn": 191, "svd": [191, 201, 210, 211, 238, 239], "occasion": [191, 201, 210, 211], "tau_": [191, 201, 210], "patch_siz": [191, 254], "patch_radius_sigma": 191, "descoteaux08": [191, 201, 212], "wiest": [191, 201, 212], "daessl\u00e9": [191, 201, 212], "nicola": [191, 201, 212], "christian": [191, 195, 201, 212], "rachid": [191, 201, 212], "columnwis": 195, "upfirdn": [], "port": 254, "itermax": 191, "ep": [191, 195, 199], "realis": 191, "fmri": 191, "repetit": 191, "cord": 191, "disable_background_mask": 191, "ok": 191, "oversmooth": 191, "un": [191, 240, 245], "inaccuraci": 191, "nonloc": 191, "1x1x1": [191, 196, 201, 227], "lasso": [191, 195, 201, 213], "sklearnlinearsolv": [191, 195, 201, 202, 213], "scikit": [191, 195, 196, 201, 213], "linear_model": [191, 195, 201, 213, 248], "linearregress": [191, 201, 213], "regressormixin": [191, 195, 201, 213], "image_as_sampl": [], "sigma_corr": [], "stacklevel": [], "basis_typ": [194, 195], "legaci": [195, 239, 240, 247, 253, 255, 262], "angelino": [192, 195, 197, 262], "fitzgibbon": [192, 195, 197, 262], "raffelt": [195, 262], "tabbara": [195, 262], "dholland": [195, 262], "pietsch": [195, 262], "mrtrix3": [195, 247, 262], "trekker": [], "tangent": 199, "max_attempt": [], "get_pmf": [], "get_pmf_no_boot": [], "initial_direct": 247, "incom": 193, "shcoeff": [], "real_sh_descoteaux": 202, "is_symmetr": 192, "descend": [192, 195], "sphere_ev": 192, "xtol": [192, 195], "finder": [192, 243], "gfa_thr": 192, "sh_basis_typ": 192, "invb": [192, 195], "subprocess": [192, 195, 201, 216, 217], "cpu_count": [192, 195, 201, 216, 217], "fibernavig": [192, 238], "pmf_gen": [], "cylinder": [], "k1": [], "max_curvatur": [], "probe_radiu": [], "mitig": 199, "harder": [], "intric": [], "erod": [], "probe_qu": [], "cylind": 197, "probe_count": [], "data_support_expon": [], "datasupportexpon": [], "generate_streamlin": [202, 253], "curvatur": [199, 253, 255], "min_radius_curvatur": 199, "onlinelibrari": 199, "wilei": 199, "22005": 199, "hdfgroup": 193, "storag": [193, 199], "mkstemp": 193, "temp": [193, 244], "dpy_exampl": 193, "fd": 193, "dpw": 193, "write_track": [193, 202], "dpr": 193, "read_track": [193, 202], "read_tracksi": [193, 202], "as_ndarrai": 193, "arrayproxi": 193, "return_coord": 193, "aff2axcod": 193, "hdr": 193, "peaksandmetr": [193, 200, 202, 238], "fname_shm": 193, "fname_dir": 193, "fname_valu": 193, "fname_indic": 193, "fname_gfa": 193, "reshape_dir": 193, "attach": 193, "fh": 193, "neat": 193, "awar": [193, 259], "verif": 193, "sft_1": 193, "sft_2": 193, "compute_bounding_box": [193, 202], "dtype_dict": [193, 202], "from_sft": [193, 202], "get_data_per_point_kei": [193, 202], "get_data_per_streamline_kei": [193, 202], "get_streamlines_copi": [193, 202], "indices_to_remov": 193, "indices_to_keep": 193, "to_cent": [193, 202], "to_origin": [193, 202], "target_origin": 193, "to_spac": [193, 202], "target_spac": 193, "trk_header_check": 193, "ttype": 193, "loader": 193, "saver": 193, "image_data": 193, "intent": 193, "img_orig": 193, "compliant": 193, "nimh": 193, "gov": 193, "nifti1field": 193, "nifti1fields_pag": 193, "reference_1": 193, "reference_2": 193, "tractogram_typ": 193, "datafram": [193, 198], "panda": 193, "helper": [193, 194, 195, 199], "file_nam": [193, 200], "ply": 193, "stl": 193, "xml": 193, "vtkpolydata": 193, "color_array_nam": 193, "to_lp": 193, "mitkdiffus": 193, "crucial": 194, "advers": 194, "five": [194, 195], "layer": [194, 195, 196, 201, 214, 249], "speech": 194, "relu": 194, "vinci": 194, "booher": 194, "wang": 194, "caron": 194, "wen": 194, "newman": 194, "e0274396": 194, "0274396": 194, "histolog": 194, "sig_length": 194, "mean_squared_error": 194, "loss_weight": 194, "sgd": 194, "rmsprop": 194, "adagrad": 194, "adadelta": 194, "mean_absolute_error": 194, "mean_absolute_percentage_error": 194, "mean_squared_logarithmic_error": 194, "squared_hing": 194, "hing": 194, "categorical_hing": 194, "logcosh": 194, "categorical_crossentropi": 194, "sparse_categorical_crossentropi": 194, "binary_crossentropi": 194, "kullback_leibler_diverg": 194, "poisson": 194, "binary_accuraci": 194, "categorical_accuraci": 194, "top_k_categorical_accuraci": 194, "sparse_categorical_accuraci": 194, "sparse_top_k_categorical_accuraci": 194, "batch_siz": 194, "max_queue_s": 194, "worker": [194, 195], "use_multiprocess": 194, "return_dict": 194, "silent": 194, "epoch": 194, "queue": [194, 249], "validation_split": 194, "validation_data": 194, "initial_epoch": 194, "steps_per_epoch": 194, "validation_step": 194, "validation_batch_s": 194, "validation_freq": 194, "kera": 194, "x_val": 194, "y_val": 194, "tf": [194, 199], "Its": [194, 195, 197], "load_weight": [194, 202], "save_weight": [194, 202], "textual": 194, "nonetyp": 194, "train_test_split": [194, 202], "test_siz": 194, "train_siz": 194, "random_st": 194, "stratifi": 194, "complement": 194, "glossari": 194, "x_train": 194, "x_test": 194, "y_train": 194, "y_test": 194, "out_channel": 194, "kernel_s": 194, "drop_r": 194, "n_layer": 194, "layer_typ": 194, "invoc": [194, 244, 245], "init_scop": 194, "input_shap": 194, "input_spec": 194, "savedmodel": 194, "ecosystem": 194, "tfmot": 194, "tflite": 194, "came": 194, "crf": [194, 201], "fetch_default_weight": [194, 202], "load_model_weight": [194, 202], "weights_path": 194, "voxsiz": 194, "return_affin": 194, "return_prob": 194, "ndarri": [194, 195], "pred_output": 194, "input_data": 194, "model_scal": 194, "histologi": 194, "resdnn_model": 194, "fetch_model_weights_path": 194, "histo_resdnn_weight": 194, "mimick": 194, "parvathaneni": 194, "hainlin": 194, "huo": 194, "stepniewska": 194, "untap": 194, "bermudez": 194, "st\u0119pniewska": 194, "07927": 194, "chunk_siz": 194, "assembl": 194, "nonzero": [194, 196], "pred_sh_coef": 194, "num_hidden": 194, "act_hidden": 194, "dropout": 194, "num_out": 194, "act_out": 194, "softmax": 194, "perceptron": 194, "batchsiz": 194, "testsiz": 194, "outputs": 194, "disco": 194, "alon": 194, "blaber": 194, "landman": 194, "synthes": 194, "cai": 194, "roger": 194, "e0236418": 194, "min_v": 194, "max_v": 194, "new_min": 194, "new_max": 194, "norm_min": 194, "norm_max": 194, "init_shap": 194, "voxelspac": 194, "transformed_img": 194, "ori_shap": 194, "recovered_img": 194, "reus": 195, "dire": 195, "summat": 195, "methodologi": 195, "funk": 195, "radon": 195, "bx": 195, "plug": 195, "rewritten": 195, "sh_coef": 195, "mymodel": 195, "mymodelfit": 195, "cache_get": [195, 202], "odf_basis_matrix": 195, "_compute_basis_matrix": 195, "cache_set": [195, 202], "cache_clear": [195, 202], "compute_expensive_matrix": 195, "expens": 195, "expensive_matrix": 195, "cod": 195, "coefficient_of_determin": 195, "model_arg": 195, "model_kwarg": 195, "dwi_respons": 195, "reg_spher": 195, "inject": 195, "knowledg": 195, "tractomet": 195, "pred_sig": 195, "sdtmodel": 195, "csdmodel": 195, "opppos": 195, "roi_cent": [195, 201, 217], "roi_radiu": 195, "fa_cal": 195, "return_number_of_voxel": 195, "fa_oper": [195, 239], "versu": 195, "r2_term": 195, "frt": 195, "dwsignal": 195, "b_reg": 195, "r_rh": 195, "fodf_sh": 195, "num_it": 195, "minimis": 195, "f_n": 195, "xf_n": 195, "h_": 195, "b_": [195, 258, 259], "reg": 195, "hf_": 195, "rightarrow": 195, "2x": 195, "th_": 195, "tx": 195, "regularis": 195, "superresolut": 195, "mu": 195, "qf_n": 195, "choleski": [195, 246], "l_y": 195, "tf_n": 195, "rankn": 195, "f_0": 195, "pf_0": 195, "l_": 195, "h_n": 195, "f_": 195, "donald": 195, "odf_sh": [195, 202], "odfs_sh": 195, "plai": 195, "odfdeconv": [195, 245], "20x20x20": 195, "ull": [195, 201, 218], "wll": 195, "uwll": [195, 201, 218], "lmi": 195, "ardekani": [195, 201, 218], "multi_fit": [195, 202], "dki_param": 195, "fifteen": 195, "min_kurtosi": 195, "42857142857142855": 195, "e1": [195, 197], "analogi": 195, "barmpouti": 195, "zhuo": 195, "8th": 195, "symposium": 195, "nano": [195, 201, 228], "macro": 195, "5872402": 195, "akc": [195, 202], "adc": [195, 202, 244], "equiv": 195, "_f": 195, "frobeniu": 195, "kmax": [195, 202], "gtol": 195, "4pi": 195, "domega_mathbf": 195, "f_1": 195, "f_2": 195, "lambda_2lambda_3": 195, "r_f": 195, "3lambda_1": 195, "lambda_1lambda_2": 195, "lambda_1lambda_3": 195, "r_d": 195, "2lambda_1": 195, "3sqrt": 195, "carlson": 195, "hardin": 195, "mclaren": 195, "snub": 195, "omega_": 195, "mathnbf": 195, "n_j": 195, "n_l": 195, "tr": 195, "2w_": 195, "medicine69": 195, "2pi": 195, "domega": 195, "_mathbf": 195, "k_": 195, "bot": [195, 236, 240, 241, 245, 247], "g_1": 195, "g_2": 195, "errtol": 195, "incomplet": [195, 236, 238, 239, 240, 241, 242, 247, 248, 249, 251, 252, 253, 254, 255], "infti": [195, 262], "9409227": 195, "min_diffus": [195, 243], "adv": 195, "biologicali": 195, "pluasibl": 195, "advc": 195, "eingenvalu": 195, "max_dir": 195, "inverse_design_matrix": 195, "sunaert": 195, "pitfal": 195, "positivedefiniteleastsquar": [195, 202], "wrot": 195, "hui": 195, "cheung": 195, "qi": 195, "indi": 195, "indj": 195, "indk": 195, "indl": 195, "wre": 195, "ind_i": [195, 197], "ind_j": [195, 197], "ind_k": [195, 197], "ind_l": [195, 197], "k_element": 195, "eigval": 195, "eigvec": 195, "columnar": 195, "kurtosismicrostruturemodel": 195, "ols_fit_dki": 195, "wls_fit_dki": 195, "006": 195, "awf_onli": 195, "optiom": 195, "kurtosismicrostructur": 195, "axonal_diffus": [195, 202], "hindered_ad": [195, 202], "hindered_ev": [195, 202], "hindered_rd": [195, 202], "adc_": 195, "restricted_ev": [195, 202], "rde": 195, "edt": 195, "idt": 195, "r_start": 195, "r_end": 195, "r_step": 195, "nowrap": 195, "eqnarrai": 195, "i2pimathbf": 195, "cdotmathbf": 195, "dmathbf": 195, "sit": 195, "q_space": 195, "han": 195, "dsi_voxel": [195, 202], "gqrid_siz": 195, "generalizedqsampl": 195, "dr_x": 195, "dr_y": 195, "dr_z": 195, "psi_": 195, "rhat": 195, "dr": 195, "2002": [195, 248], "truncat": [195, 262], "p_": [195, 260], "iiintlimits_": 195, "q_": 195, "bigg": 195, "qspace": 195, "qgrid": 195, "qtabl": 195, "premultipli": 195, "rradiu": 195, "interp_coord": 195, "diffusionspectrum": 195, "new_data": 195, "new_gtab": 195, "estimated_snr": 195, "qgrid_sampl": 195, "siz_x": 195, "siz_i": 195, "siz_z": 195, "psf": 195, "ifft": 195, "prop": 195, "numit": 195, "acc_factor": 195, "return_s0_hat": 195, "nll": [195, 201, 219, 248], "min_sign": [195, 245, 247], "consumpt": 195, "1e4": 195, "mattiello": [195, 201, 219], "elucid": [195, 201, 219], "lin": [195, 201, 219], "ching": [195, 201, 219], "dti_param": 195, "model_s0": 195, "s0_hat": [195, 202], "ec": 195, "pele": 195, "gubjartsson": 195, "kikini": 195, "jolesz": 195, "dodf": 195, "scratch": [195, 238, 247], "ftp": 195, "sop": 195, "athena": [195, 238], "descoteaux_thesi": 195, "heta": 195, "infin": 195, "lambda_i": [195, 258, 259], "quad": 195, "lambda_1lambda_2lambda_3": 195, "denomin": 195, "appendix": 195, "batchelor": 195, "moakher": 195, "atkinson": 195, "rigor": 195, "calculu": 195, "newcomb": 195, "etal": 195, "thompson": 195, "monozygot": 195, "dizygot": 195, "twin": 195, "arsigni": 195, "fillard": 195, "medecin": 195, "q_form": 195, "a_hat": 195, "daniel": [195, 241], "enni": 195, "kindlmann": 195, "a_squiggl": 195, "widetild": 195, "mo": 195, "orthotropi": 195, "fit_tensor": [195, 236, 238], "counteract": 195, "heteroscedast": 195, "return_lower_triangular": 195, "fail_is_nan": 195, "npar": 195, "gmm": 195, "5267": [195, 201, 218, 219], "background_nois": [195, 201, 218, 219], "nlls_param": 195, "n_direct": 195, "num_vox": 195, "restore_param": 195, "sixth": 195, "dummi": 195, "1994a": 195, "hermitian": 195, "bxx": 195, "byi": 195, "bzz": 195, "bxy": 195, "bxz": 195, "byz": 195, "odf_vertic": [195, 245], "ang_thr": [], "qa_thr": [], "total_weight": [], "lambda_lb": 195, "lambda_csd": 195, "rho": [195, 258, 260], "po": [195, 244], "tessel": 195, "get_3shell_gtab": [195, 202], "descoteaux07_legacy_msg": 195, "catch_warn": 195, "filterwarn": 195, "pendingdeprecationwarn": 195, "analyticalmodel": 195, "clip_neg": 195, "b_uniqu": 195, "data_norm": 195, "lb_matrix": 195, "fwdti_param": 195, "diso": 195, "sig": 195, "mdreg": 195, "0027": 195, "piter": 195, "md_reg": 195, "inter": 195, "fw_param": 195, "f_transform": 195, "ft": 195, "arcsin": 195, "tensor_el": 195, "cholesky_el": 195, "r0": 195, "r1": 195, "r3": 195, "r4": 195, "r5": 195, "carew": 195, "meyerand": 195, "anomal": 195, "20832": 195, "pg": 195, "subdivide_octahedron": [195, 202], "create_unit_spher": [195, 202], "gq": 195, "voxel_sign": 195, "max_qa": 195, "nqa": 195, "equatori": 195, "zone": 195, "conjug": [195, 262], "cone": 195, "x_scale": 195, "ftol": 195, "extracellular": 195, "fill_na": 195, "least_squar": 195, "federau": 195, "estimate_f_d_star": [195, 202], "params_f_d_star": 195, "estimate_linear_fit": [195, 202], "split_b": 195, "intercept": 195, "ivim_param": 195, "ivim_sign": 195, "cvx_fit": [195, 202], "f1": 195, "f2": 195, "ivim_mix_cost_on": [195, 202], "stoc_search_cost": [195, 202], "penros": 195, "thorough": 195, "nlls_cost": [195, 202], "x_f": 195, "stationari": 195, "exp_phi1": 195, "x_and_f_to_x_f": [195, 202], "x_f_to_x_and_f": [195, 202], "selector": [195, 239], "eigenvalue_threshold": 195, "dti_scale_estim": 195, "static_diffus": 195, "0007": [195, 197], "eapoc": 195, "ensembl": [195, 197], "ph": 195, "avram": 195, "posiv": 195, "vastli": 195, "golden_direct": 195, "map_model": 195, "mapfit": 195, "mapmri_coef": 195, "lopt": 195, "errorcod": 195, "linalgerror": [195, 237, 241], "fitted_sign": [195, 202], "mapmri_r": [195, 202], "mapmri_coeff": [195, 202], "mapmri_mu": [195, 202], "c13": 195, "gaussiann": 195, "act": [195, 200, 238, 246], "c8": 195, "r_point": 195, "recalcul": 195, "qvals_or_gtab": 195, "qvalu": [195, 245], "c14": 195, "44a": 195, "c11": 195, "mu_squar": 195, "u0": 195, "index_matrix": 195, "q_gradient": 195, "rgrad": 195, "psi": 195, "binomi": 195, "odf_mat": 195, "n_vertic": 195, "n_mapmri_coef": 195, "odf_sh_mat": 195, "n_sh_coef": 195, "c7": 195, "n_coef": 195, "ind_mat": 195, "gridsiz": 195, "radius_max": 195, "tab": [195, 202, 243, 245, 255], "phi_n": 195, "phi_m": 195, "submatric": 195, "s_mat": 195, "t_mat": 195, "u_mat": 195, "weights_arrai": 195, "ncoef": 195, "n_of_weight": 195, "gcv_startpoint": 195, "startpoint": [195, 202], "optimal_lambda": 195, "coeff": 195, "setter": 195, "warm": 195, "qp": 195, "iso_comp": 195, "osqp": 195, "primal": 195, "multishel": [195, 253], "msdki_param": 195, "diffusit": 195, "intrins": 195, "msignal": 195, "nub": 195, "fit_arrai": 195, "single_voxel_fit": 195, "sum_i": 195, "psi_i": 195, "bracket": 195, "cohen": 195, "adad": 195, "wald": 195, "jmri": 195, "ndrrai": 195, "constrain_q0": 195, "10000000000": 195, "eco": 195, "textbf": 195, "sum_k": 195, "ik": 195, "phi_i": 195, "t_k": 195, "c_i": 195, "q0": 195, "uniti": 195, "cham": 195, "qtdmri_coef": 195, "ut": 195, "tau_scal": 195, "cvxpy_solution_optim": 195, "rt_point": 195, "qtdmri_to_mapmri_coef": [195, 202], "convers": [195, 247, 263], "depen": 195, "sparsity_ab": [195, 202], "sparsity_dens": [195, 202], "part1_ut_precomp": 195, "part23_ut_precomp": 195, "part4_ut_precomp": 195, "part1_uq_iso_precomp": 195, "b2": [195, 200], "c4": 195, "0005": 195, "grid_size_r": 195, "max_radius_r": 195, "grid_size_tau": 195, "min_radius_tau": 195, "max_radius_tau": 195, "weight_arrai": 195, "big_delta_start": 195, "big_delta_end": 195, "g_start": 195, "g_end": 195, "bval_isolin": 195, "7500": 195, "14000": 195, "alpha_shad": 195, "shade": 195, "_ols_fit": 195, "_wls_fit": 195, "_sdpdc_fit": 195, "c_": 195, "d_sq": [195, 202], "mean_d_sq": [195, 202], "themselv": 195, "bmatrix": 195, "ig": 195, "bmat": 195, "otimesmathbf": 195, "_notimesmathbf": 195, "obj_arr": [], "adj_indic": [], "adj_ind": [], "unrol": [], "vertex_ind": [], "vertind": [], "uint32": [], "adj_count": [], "return_index": [], "remove_antipod": [], "return_indic": [196, 202], "unique_vertic": 243, "relative_threshold": [], "intp": [], "alongsid": [195, 199], "f_csf": [195, 202], "f_gm": [195, 202], "fit_vec": 195, "s_i": 195, "f_j": 195, "b_i": 195, "_j": 195, "b_id_": 195, "v_i": 195, "d_j": 195, "hf": 195, "modern": 195, "prod_": 195, "i_": 195, "i_n": 195, "t_n": 195, "gautschi": 195, "slavik": 195, "s0025": 195, "5718": 195, "0470267": 195, "discontinu": 195, "global_fit": 195, "elsewher": 195, "alpha_": 195, "div": 195, "triangledown": 195, "lvert": 195, "rvert": 195, "biggr": 195, "rvert_": 195, "discrep": [195, 238, 245, 250], "chambol": 195, "boil": 195, "n_vox": 195, "elasticnet": 195, "parallel_backend": 195, "joblib": [195, 253], "parallelbackendbas": 195, "backend": 195, "loki": 195, "bottleneck": 195, "gil": 195, "tensor_matrix": 195, "behrens2007": 195, "stick_matrix": 195, "tej": [195, 238], "berg": 195, "jbabdi": 195, "rushworth": 195, "mf": [195, 197], "woolrich": 195, "mw": 195, "gain": [195, 197], "sampling_matrix": [195, 202], "assume_norm": 195, "qball": [195, 243], "shm_coef": 195, "signal_object": 195, "where_dwi": 195, "residualbootstrapwapp": 195, "rh": 195, "r_sh": 195, "dirac": [195, 254], "colatitudin": 195, "use_scipi": 195, "y_mn": 195, "m_n": 195, "sph_harm": [195, 236], "onward": 195, "interchang": 195, "agre": [195, 262], "0_n": 195, "real_sh": 195, "gadian": 195, "m_list": 195, "n_list": 195, "kx1": 195, "lazi": 195, "where_b0": 195, "leverag": 195, "hd": 195, "lcr": 195, "ruturn": 195, "haroon": 195, "return_inv": 195, "n_coeff": 195, "rarrow": 195, "2n": 195, "3l": 195, "8n": 195, "norm_factor": 195, "rectifi": 195, "log_ap": 195, "ixjxkxc": 195, "2l": [195, 262], "ixjxkx6": 195, "lacerda": 195, "catani": 195, "simmon": 195, "full_sh_coeff": 195, "out_sh_coeff": 195, "025330295910584444": [195, 197], "constrain_e0": 195, "positive_constraint": 195, "amongst": 195, "rathi": 195, "20e": 195, "get_isbi2013_2shell_gtab": [195, 202], "shore_coef": 195, "pdf_grid": [195, 202], "shore_coeff": [195, 202], "qtextbf": 195, "nlm": 195, "biggl": 195, "dfrac": 195, "expbiggl": 195, "2zeta": 195, "y_l": [195, 262], "rtab": 195, "sphere_vertic": 195, "bxxxx": 195, "byyyi": 195, "bzzzz": 195, "bxxxy": 195, "bxxxz": 195, "bxyyi": 195, "byyyz": 195, "bxzzz": 195, "byzzz": 195, "bxxyi": 195, "bxxzz": 195, "byyzz": 195, "bxxyz": 195, "bxyyz": 195, "bxyzz": 195, "blogs0": 195, "ellid": [], "dipyseg": 196, "features1": 196, "features2": 196, "cluster_map": 196, "evaluate_result": [196, 202], "slr_select": 196, "neirborhood": 196, "ba_valu": 196, "prune": [196, 201, 228], "bmd_valu": 196, "slr_metric": [196, 201, 228], "slr_x0": 196, "slr_bound": 196, "slr_method": 196, "bundlemindistancemetr": [196, 202], "recognized_transf": 196, "recognized_label": 196, "lt": 196, "dtracks0": 196, "dtracks1": 196, "ba": 196, "recognized_bundl": 196, "expert_bundl": 196, "select_randomli": 196, "500000": 196, "refdata": [196, 202], "id_datum": 196, "add_clust": [196, 202], "clusters_s": [196, 202], "get_large_clust": [196, 202], "get_small_clust": [196, 202], "max_siz": 196, "remove_clust": [196, 202], "mdf_12point": 196, "max_nb_clust": 196, "2147483647": 196, "nk": 196, "farther": 196, "exceed": 196, "tradeoff": [196, 199], "garyfallidis16": 196, "million": 196, "singapor": 196, "quickbundlex": 196, "child": [196, 201], "is_leaf": [196, 202], "get_clust": [196, 202], "wanted_level": 196, "iter_preord": [196, 202], "traverse_postord": [196, 202], "clusters_list": [], "centroid_shap": [], "get_cluster_map": [], "get_stat": [], "get_tree_cluster_map": [], "nb_dimens": [], "c_infer_shap": [], "overrid": [199, 238, 249], "nb_mpt": 196, "bin_siz": 196, "bidirect": 196, "barycent": 196, "use_neg": 196, "nb_sline": 196, "nb_slines_ref": 196, "coo_matrix": 196, "non_zero_id": 196, "nb_non_empty_row": 196, "sline": 196, "nearest_id": 196, "nearest_dist": 196, "nb_non_empty_col": 196, "masked_vol": 196, "npmin": 196, "npmax": 196, "input_volum": [196, 201, 227], "bet": 196, "maskedvolum": 196, "tensor_fit": 196, "r_min": 196, "r_max": 196, "g_min": 196, "g_max": 196, "b_min": 196, "b_max": 196, "coars": 196, "new_cc_mask": 196, "manhattan": 196, "c_dist": [], "c_are_compat": [], "datum1": [], "datum2": [], "spawn": [], "data1": [], "llist": [], "mu_": [], "sigma_": [], "eta_": [], "initialize_param_uniform": [], "negloglikelihood": [], "sigmasq": [], "nloglik": [], "prob_imag": [], "p_l_n": [], "prob_neighborhood": [], "p_l_y": [], "seg_stat": [], "seg_imag": [], "update_param": [], "jan": [], "mu_upd": [], "var_upd": [], "icm_is": [], "seg": [], "pott": [], "Ising": [], "potts_model": [], "new_seg": [], "initialize_maximum_likelihood": [], "loglikelihood": [], "neglog": [], "likelihhood": [], "stan": [], "pln": [], "upperbound": 196, "upper_bound": 196, "save_histori": 196, "posteriori": 196, "rice": 197, "rayleigh": 197, "gudbjartson": 197, "patz": 197, "signal_w_nois": 197, "dx": 197, "dy": 197, "dz": 197, "0004": 197, "00628947": 197, "01257895": 197, "01886842": 197, "0251579": 197, "03144737": 197, "03773685": 197, "04402632": 197, "0503158": 197, "05660527": 197, "06289475": 197, "06918422": 197, "0754737": 197, "08176317": 197, "08805265": 197, "09434212": 197, "1006316": 197, "10692107": 197, "11321055": 197, "11950002": 197, "1257895": 197, "13207897": 197, "13836845": 197, "14465792": 197, "15094739": 197, "15723687": 197, "16352634": 197, "16981582": 197, "17610529": 197, "18239477": 197, "18868424": 197, "19497372": 197, "20126319": 197, "20755267": 197, "21384214": 197, "22013162": 197, "22642109": 197, "23271057": 197, "23900004": 197, "24528952": 197, "25157899": 197, "25786847": 197, "26415794": 197, "27044742": 197, "27673689": 197, "28302637": 197, "28931584": 197, "29560531": 197, "30189479": 197, "30818426": 197, "31447374": 197, "32076321": 197, "32705269": 197, "33334216": 197, "33963164": 197, "34592111": 197, "35221059": 197, "35850006": 197, "36478954": 197, "37107901": 197, "37736849": 197, "38365796": 197, "38994744": 197, "39623691": 197, "40252639": 197, "40881586": 197, "41510534": 197, "42139481": 197, "42768429": 197, "43397376": 197, "44026323": 197, "44655271": 197, "45284218": 197, "45913166": 197, "46542113": 197, "47171061": 197, "47800008": 197, "48428956": 197, "49057903": 197, "49686851": 197, "50315798": 197, "50944746": 197, "51573693": 197, "52202641": 197, "52831588": 197, "53460536": 197, "54089483": 197, "54718431": 197, "55347378": 197, "55976326": 197, "56605273": 197, "57234221": 197, "57863168": 197, "58492115": 197, "59121063": 197, "5975001": 197, "60378958": 197, "61007905": 197, "61636853": 197, "622658": 197, "62894748": 197, "63523695": 197, "64152643": 197, "6478159": 197, "65410538": 197, "66039485": 197, "66668433": 197, "6729738": 197, "67926328": 197, "68555275": 197, "69184223": 197, "6981317": 197, "70442118": 197, "71071065": 197, "71700013": 197, "7232896": 197, "72957907": 197, "73586855": 197, "74215802": 197, "7484475": 197, "75473697": 197, "76102645": 197, "76731592": 197, "7736054": 197, "77989487": 197, "78618435": 197, "79247382": 197, "7987633": 197, "80505277": 197, "81134225": 197, "81763172": 197, "8239212": 197, "83021067": 197, "83650015": 197, "84278962": 197, "8490791": 197, "85536857": 197, "86165805": 197, "86794752": 197, "87423699": 197, "88052647": 197, "88681594": 197, "89310542": 197, "89939489": 197, "90568437": 197, "91197384": 197, "91826332": 197, "92455279": 197, "93084227": 197, "93713174": 197, "94342122": 197, "94971069": 197, "95600017": 197, "96228964": 197, "96857912": 197, "97486859": 197, "98115807": 197, "98744754": 197, "99373702": 197, "00002649": 197, "00631597": 197, "01260544": 197, "01889491": 197, "02518439": 197, "03147386": 197, "03776334": 197, "04405281": 197, "05034229": 197, "05663176": 197, "06292124": 197, "06921071": 197, "07550019": 197, "08178966": 197, "08807914": 197, "09436861": 197, "10065809": 197, "10694756": 197, "11323704": 197, "11952651": 197, "12581599": 197, "13210546": 197, "13839494": 197, "14468441": 197, "15097389": 197, "15726336": 197, "16355283": 197, "16984231": 197, "17613178": 197, "18242126": 197, "18871073": 197, "19500021": 197, "20128968": 197, "20757916": 197, "21386863": 197, "22015811": 197, "22644758": 197, "23273706": 197, "23902653": 197, "24531601": 197, "25160548": 197, "25789496": 197, "26418443": 197, "27047391": 197, "27676338": 197, "28305286": 197, "28934233": 197, "29563181": 197, "30192128": 197, "30821075": 197, "31450023": 197, "3207897": 197, "32707918": 197, "33336865": 197, "33965813": 197, "3459476": 197, "35223708": 197, "35852655": 197, "36481603": 197, "3711055": 197, "37739498": 197, "38368445": 197, "38997393": 197, "3962634": 197, "40255288": 197, "40884235": 197, "41513183": 197, "4214213": 197, "42771078": 197, "43400025": 197, "44028973": 197, "4465792": 197, "45286867": 197, "45915815": 197, "46544762": 197, "4717371": 197, "47802657": 197, "48431605": 197, "49060552": 197, "496895": 197, "50318447": 197, "50947395": 197, "51576342": 197, "5220529": 197, "52834237": 197, "53463185": 197, "54092132": 197, "5472108": 197, "55350027": 197, "55978975": 197, "56607922": 197, "5723687": 197, "57865817": 197, "58494765": 197, "59123712": 197, "59752659": 197, "60381607": 197, "61010554": 197, "61639502": 197, "62268449": 197, "62897397": 197, "63526344": 197, "64155292": 197, "64784239": 197, "65413187": 197, "66042134": 197, "66671082": 197, "67300029": 197, "67928977": 197, "68557924": 197, "69186872": 197, "69815819": 197, "70444767": 197, "71073714": 197, "71702662": 197, "72331609": 197, "72960557": 197, "73589504": 197, "74218451": 197, "74847399": 197, "75476346": 197, "76105294": 197, "76734241": 197, "77363189": 197, "77992136": 197, "78621084": 197, "79250031": 197, "79878979": 197, "80507926": 197, "81136874": 197, "81765821": 197, "82394769": 197, "83023716": 197, "83652664": 197, "84281611": 197, "84910559": 197, "85539506": 197, "86168454": 197, "86797401": 197, "87426349": 197, "88055296": 197, "88684243": 197, "89313191": 197, "89942138": 197, "90571086": 197, "91200033": 197, "91828981": 197, "92457928": 197, "93086876": 197, "93715823": 197, "94344771": 197, "94973718": 197, "95602666": 197, "96231613": 197, "96860561": 197, "97489508": 197, "98118456": 197, "98747403": 197, "99376351": 197, "00005298": 197, "00634246": 197, "01263193": 197, "01892141": 197, "02521088": 197, "03150035": 197, "03778983": 197, "0440793": 197, "05036878": 197, "05665825": 197, "06294773": 197, "0692372": 197, "07552668": 197, "08181615": 197, "08810563": 197, "0943951": 197, "10068458": 197, "10697405": 197, "11326353": 197, "119553": 197, "12584248": 197, "13213195": 197, "13842143": 197, "1447109": 197, "15100038": 197, "15728985": 197, "16357932": 197, "1698688": 197, "17615827": 197, "18244775": 197, "18873722": 197, "1950267": 197, "20131617": 197, "20760565": 197, "21389512": 197, "2201846": 197, "22647407": 197, "23276355": 197, "23905302": 197, "2453425": 197, "25163197": 197, "25792145": 197, "26421092": 197, "2705004": 197, "27678987": 197, "28307935": 197, "28936882": 197, "2956583": 197, "30194777": 197, "30823724": 197, "31452672": 197, "32081619": 197, "32710567": 197, "33339514": 197, "33968462": 197, "34597409": 197, "35226357": 197, "35855304": 197, "36484252": 197, "37113199": 197, "37742147": 197, "38371094": 197, "39000042": 197, "39628989": 197, "40257937": 197, "40886884": 197, "41515832": 197, "42144779": 197, "42773727": 197, "43402674": 197, "44031622": 197, "44660569": 197, "45289516": 197, "45918464": 197, "46547411": 197, "47176359": 197, "47805306": 197, "48434254": 197, "49063201": 197, "49692149": 197, "50321096": 197, "50950044": 197, "51578991": 197, "52207939": 197, "52836886": 197, "53465834": 197, "54094781": 197, "54723729": 197, "55352676": 197, "55981624": 197, "56610571": 197, "57239519": 197, "57868466": 197, "58497414": 197, "59126361": 197, "59755308": 197, "60384256": 197, "61013203": 197, "61642151": 197, "62271098": 197, "62900046": 197, "63528993": 197, "64157941": 197, "64786888": 197, "65415836": 197, "66044783": 197, "66673731": 197, "67302678": 197, "67931626": 197, "68560573": 197, "69189521": 197, "69818468": 197, "70447416": 197, "71076363": 197, "71705311": 197, "72334258": 197, "72963206": 197, "73592153": 197, "742211": 197, "74850048": 197, "75478995": 197, "76107943": 197, "7673689": 197, "77365838": 197, "77994785": 197, "78623733": 197, "7925268": 197, "79881628": 197, "80510575": 197, "81139523": 197, "8176847": 197, "82397418": 197, "83026365": 197, "83655313": 197, "8428426": 197, "84913208": 197, "85542155": 197, "86171103": 197, "8680005": 197, "87428998": 197, "88057945": 197, "88686892": 197, "8931584": 197, "89944787": 197, "90573735": 197, "91202682": 197, "9183163": 197, "92460577": 197, "93089525": 197, "93718472": 197, "9434742": 197, "94976367": 197, "95605315": 197, "96234262": 197, "9686321": 197, "97492157": 197, "98121105": 197, "98750052": 197, "99379": 197, "00007947": 197, "00636895": 197, "01265842": 197, "0189479": 197, "02523737": 197, "03152684": 197, "03781632": 197, "04410579": 197, "05039527": 197, "05668474": 197, "06297422": 197, "06926369": 197, "07555317": 197, "08184264": 197, "08813212": 197, "09442159": 197, "10071107": 197, "10700054": 197, "11329002": 197, "11957949": 197, "12586897": 197, "13215844": 197, "13844792": 197, "14473739": 197, "15102687": 197, "15731634": 197, "16360582": 197, "16989529": 197, "17618476": 197, "18247424": 197, "18876371": 197, "19505319": 197, "20134266": 197, "20763214": 197, "21392161": 197, "22021109": 197, "22650056": 197, "23279004": 197, "23907951": 197, "24536899": 197, "25165846": 197, "25794794": 197, "26423741": 197, "27052689": 197, "27681636": 197, "28310584": 197, "28939531": 197, "29568479": 197, "30197426": 197, "30826374": 197, "31455321": 197, "32084268": 197, "32713216": 197, "33342163": 197, "33971111": 197, "34600058": 197, "35229006": 197, "35857953": 197, "36486901": 197, "37115848": 197, "37744796": 197, "38373743": 197, "39002691": 197, "39631638": 197, "40260586": 197, "40889533": 197, "41518481": 197, "42147428": 197, "42776376": 197, "43405323": 197, "44034271": 197, "44663218": 197, "45292166": 197, "45921113": 197, "4655006": 197, "47179008": 197, "47807955": 197, "48436903": 197, "4906585": 197, "49694798": 197, "50323745": 197, "50952693": 197, "5158164": 197, "52210588": 197, "52839535": 197, "53468483": 197, "5409743": 197, "54726378": 197, "55355325": 197, "55984273": 197, "5661322": 197, "57242168": 197, "57871115": 197, "58500063": 197, "5912901": 197, "59757958": 197, "60386905": 197, "61015852": 197, "616448": 197, "62273747": 197, "62902695": 197, "63531642": 197, "6416059": 197, "64789537": 197, "65418485": 197, "66047432": 197, "6667638": 197, "67305327": 197, "67934275": 197, "68563222": 197, "6919217": 197, "69821117": 197, "70450065": 197, "71079012": 197, "7170796": 197, "72336907": 197, "72965855": 197, "73594802": 197, "7422375": 197, "74852697": 197, "75481644": 197, "76110592": 197, "76739539": 197, "77368487": 197, "77997434": 197, "78626382": 197, "79255329": 197, "79884277": 197, "80513224": 197, "81142172": 197, "81771119": 197, "82400067": 197, "83029014": 197, "83657962": 197, "84286909": 197, "84915857": 197, "85544804": 197, "86173752": 197, "86802699": 197, "87431647": 197, "88060594": 197, "88689542": 197, "89318489": 197, "89947436": 197, "90576384": 197, "91205331": 197, "91834279": 197, "92463226": 197, "93092174": 197, "93721121": 197, "94350069": 197, "94979016": 197, "95607964": 197, "96236911": 197, "96865859": 197, "97494806": 197, "98123754": 197, "98752701": 197, "99381649": 197, "00010596": 197, "00639544": 197, "01268491": 197, "01897439": 197, "02526386": 197, "03155334": 197, "03784281": 197, "04413228": 197, "05042176": 197, "05671123": 197, "06300071": 197, "06929018": 197, "07557966": 197, "08186913": 197, "08815861": 197, "09444808": 197, "10073756": 197, "10702703": 197, "11331651": 197, "11960598": 197, "12589546": 197, "13218493": 197, "13847441": 197, "14476388": 197, "15105336": 197, "15734283": 197, "16363231": 197, "16992178": 197, "17621126": 197, "18250073": 197, "1887902": 197, "19507968": 197, "20136915": 197, "20765863": 197, "2139481": 197, "22023758": 197, "22652705": 197, "23281653": 197, "239106": 197, "24539548": 197, "25168495": 197, "25797443": 197, "2642639": 197, "27055338": 197, "27684285": 197, "28313233": 197, "2894218": 197, "29571128": 197, "30200075": 197, "30829023": 197, "3145797": 197, "32086918": 197, "32715865": 197, "33344812": 197, "3397376": 197, "34602707": 197, "35231655": 197, "35860602": 197, "3648955": 197, "37118497": 197, "37747445": 197, "38376392": 197, "3900534": 197, "39634287": 197, "40263235": 197, "40892182": 197, "4152113": 197, "42150077": 197, "42779025": 197, "43407972": 197, "4403692": 197, "44665867": 197, "45294815": 197, "45923762": 197, "4655271": 197, "47181657": 197, "47810604": 197, "48439552": 197, "49068499": 197, "49697447": 197, "50326394": 197, "50955342": 197, "51584289": 197, "52213237": 197, "52842184": 197, "53471132": 197, "54100079": 197, "54729027": 197, "55357974": 197, "55986922": 197, "56615869": 197, "57244817": 197, "57873764": 197, "58502712": 197, "59131659": 197, "59760607": 197, "60389554": 197, "61018502": 197, "61647449": 197, "62276396": 197, "62905344": 197, "63534291": 197, "64163239": 197, "64792186": 197, "65421134": 197, "66050081": 197, "66679029": 197, "67307976": 197, "67936924": 197, "68565871": 197, "69194819": 197, "69823766": 197, "70452714": 197, "71081661": 197, "71710609": 197, "72339556": 197, "72968504": 197, "73597451": 197, "74226399": 197, "74855346": 197, "75484294": 197, "76113241": 197, "76742188": 197, "77371136": 197, "78000083": 197, "78629031": 197, "79257978": 197, "79886926": 197, "80515873": 197, "81144821": 197, "81773768": 197, "82402716": 197, "83031663": 197, "83660611": 197, "84289558": 197, "84918506": 197, "85547453": 197, "86176401": 197, "86805348": 197, "87434296": 197, "88063243": 197, "88692191": 197, "89321138": 197, "89950086": 197, "90579033": 197, "9120798": 197, "91836928": 197, "92465875": 197, "93094823": 197, "9372377": 197, "94352718": 197, "94981665": 197, "95610613": 197, "9623956": 197, "96868508": 197, "97497455": 197, "98126403": 197, "9875535": 197, "99384298": 197, "00013245": 197, "00642193": 197, "0127114": 197, "01900088": 197, "02529035": 197, "03157983": 197, "0378693": 197, "04415878": 197, "05044825": 197, "05673772": 197, "0630272": 197, "06931667": 197, "07560615": 197, "08189562": 197, "0881851": 197, "09447457": 197, "10076405": 197, "10705352": 197, "113343": 197, "11963247": 197, "12592195": 197, "13221142": 197, "1385009": 197, "14479037": 197, "15107985": 197, "15736932": 197, "1636588": 197, "16994827": 197, "17623775": 197, "18252722": 197, "1888167": 197, "19510617": 197, "20139564": 197, "20768512": 197, "21397459": 197, "22026407": 197, "22655354": 197, "23284302": 197, "23913249": 197, "24542197": 197, "25171144": 197, "25800092": 197, "26429039": 197, "27057987": 197, "27686934": 197, "28315882": 197, "28944829": 197, "29573777": 197, "30202724": 197, "30831672": 197, "31460619": 197, "32089567": 197, "32718514": 197, "33347462": 197, "33976409": 197, "34605356": 197, "35234304": 197, "35863251": 197, "36492199": 197, "37121146": 197, "37750094": 197, "38379041": 197, "39007989": 197, "39636936": 197, "40265884": 197, "40894831": 197, "41523779": 197, "42152726": 197, "42781674": 197, "43410621": 197, "44039569": 197, "44668516": 197, "45297464": 197, "45926411": 197, "46555359": 197, "47184306": 197, "47813254": 197, "48442201": 197, "49071148": 197, "49700096": 197, "50329043": 197, "50957991": 197, "51586938": 197, "52215886": 197, "52844833": 197, "53473781": 197, "54102728": 197, "54731676": 197, "55360623": 197, "55989571": 197, "56618518": 197, "57247466": 197, "57876413": 197, "58505361": 197, "59134308": 197, "59763256": 197, "60392203": 197, "61021151": 197, "61650098": 197, "62279046": 197, "62907993": 197, "6353694": 197, "64165888": 197, "64794835": 197, "65423783": 197, "6605273": 197, "66681678": 197, "67310625": 197, "67939573": 197, "6856852": 197, "69197468": 197, "69826415": 197, "70455363": 197, "7108431": 197, "71713258": 197, "72342205": 197, "72971153": 197, "736001": 197, "74229048": 197, "74857995": 197, "75486943": 197, "7611589": 197, "76744838": 197, "77373785": 197, "78002732": 197, "7863168": 197, "79260627": 197, "79889575": 197, "80518522": 197, "8114747": 197, "81776417": 197, "82405365": 197, "83034312": 197, "8366326": 197, "84292207": 197, "84921155": 197, "85550102": 197, "8617905": 197, "86807997": 197, "87436945": 197, "88065892": 197, "8869484": 197, "89323787": 197, "89952735": 197, "90581682": 197, "9121063": 197, "91839577": 197, "92468524": 197, "93097472": 197, "93726419": 197, "94355367": 197, "94984314": 197, "95613262": 197, "96242209": 197, "96871157": 197, "97500104": 197, "98129052": 197, "98757999": 197, "99386947": 197, "00015894": 197, "00644842": 197, "01273789": 197, "01902737": 197, "02531684": 197, "03160632": 197, "03789579": 197, "04418527": 197, "05047474": 197, "05676422": 197, "06305369": 197, "06934316": 197, "07563264": 197, "08192211": 197, "08821159": 197, "09450106": 197, "10079054": 197, "10708001": 197, "11336949": 197, "11965896": 197, "12594844": 197, "13223791": 197, "13852739": 197, "14481686": 197, "15110634": 197, "15739581": 197, "16368529": 197, "16997476": 197, "17626424": 197, "18255371": 197, "18884319": 197, "19513266": 197, "20142214": 197, "20771161": 197, "21400108": 197, "22029056": 197, "22658003": 197, "23286951": 197, "23915898": 197, "24544846": 197, "25173793": 197, "25802741": 197, "26431688": 197, "27060636": 197, "27689583": 197, "28318531": 197, "datashap": 197, "2026834": 197, "40536679": 197, "60805019": 197, "81073359": 197, "01341699": 197, "21610038": 197, "41878378": 197, "62146718": 197, "82415057": 197, "02683397": 197, "22951737": 197, "43220076": 197, "63488416": 197, "83756756": 197, "04025096": 197, "24293435": 197, "44561775": 197, "64830115": 197, "85098454": 197, "05366794": 197, "25635134": 197, "45903473": 197, "66171813": 197, "86440153": 197, "06708493": 197, "26976832": 197, "47245172": 197, "67513512": 197, "87781851": 197, "08050191": 197, "orbit": 197, "thick": 197, "unweight": 197, "remaind": 197, "soderman": 197, "s\u00f6derman": 197, "oll": 197, "bengt": 197, "j\u00f6nsson": 197, "yaniv": 197, "ten": 197, "nr": 197, "e0": [197, 245, 246], "multicompartment": 197, "imperm": 197, "neglect": [197, 199], "bvals_2": 197, "bvecs_2": 197, "d_comp": 197, "odf_vert": 197, "pdf_point": 197, "pname": 198, "bname": 198, "group_id": [198, 201], "dir_nam": 198, "hd5": 198, "10001": [198, 201], "target_bundl": 198, "return_mahalnobi": 198, "mahalanobi": 198, "return_mahalanobi": 198, "n_streamlin": [198, 199], "profile_stat": 198, "orient_bi": 198, "weights_kwarg": 198, "outlin": 198, "voxel_to_rasmm": [198, 199], "dipytrack": 199, "distanch": [], "phrase": 199, "nb_streamlin": 199, "min_nb_point": 199, "max_nb_point": 199, "get_direct": [], "rougher": [], "decahexagon": [], "octagon": [], "characteristic_point": [], "helix": 199, "xyza": [], "tracksa": [], "nm": 199, "tracksb": [], "hit": [], "rcd": [], "refx": [], "bundlex": [], "70710683": [], "70710677": [], "sa": 201, "sb": 201, "collis": [], "ericson": [], "reassign": [], "distant": [], "sqd_thr": [], "larch_fast_split": [], "3track": [], "sqd_trh": [], "trh": [], "rep3": [], "whang": [], "sigmod07": [], "end0": [], "start0": [], "end1": [], "start1": [], "angle_dist": [], "l_0": [], "l_1": [], "cos_theta_squar": [], "perpendicular_dist": [], "l0": [], "k0": [], "u1": [], "u2": [], "pe": [], "lperp1": [], "lperp2": [], "6f": [], "787888": [], "d_thr": [], "t_1": [], "t_2": [], "fo": [], "xyz1": [], "xyz2": 199, "laidlaw": [], "ieeexplor": [], "xpl": [], "freeabs_al": [], "jsp": [], "arnumb": [], "4479455": [], "coroug": [], "avg_mcd": [], "average_mean_closest_dist": [], "min_mcd": [], "minimum_mean_closest_dist": [], "max_mcd": [], "maximum_mean_closest_dist": [], "minab": [], "minba": [], "avg_minab": [], "avg_minba": [], "min_minab": [], "min_minba": [], "vagu": [], "tracks_combinations_of_2": [], "mean_closest_dist": [], "mcd_i": [], "mcd_j": [], "vec_out": [], "sq_dist_thr": [], "sq_distanc": [], "f4": 199, "3pt": [], "721573": [], "min_fiberlength": [], "minimum_length": [], "max_windows": [], "meesters2016_hbm": [], "stress": [], "leafsiz": [], "compact_nod": [], "copy_data": [], "balanced_tre": [], "boxsiz": [], "ckdtree": [], "kd": [], "rapidli": [], "bogu": [], "brute": [], "hyperrectangl": [], "queri": [], "toroid": [], "x_i": [], "l_i": [], "maneewongvatana": [], "mount": [], "count_neighbor": [], "nearbi": [], "minkowski": [], "overflow": [236, 241, 245], "cosmologi": [], "assembli": [], "landi": [], "szalai": [], "xi": [], "loos": 258, "dual": [], "redshift": [], "sky": [], "astro": [], "0012333": [], "astrophys": [], "adsab": [], "harvard": [], "1993apj": [], "64l": [], "sheth": [], "connolli": [], "skibba": [], "galaxi": [], "0511773": [], "hawkin": [], "2df": [], "peculiar": [], "veloc": [], "monthli": [], "astronom": [], "2003mnra": [], "78h": [], "5647": [], "issuecom": [], "168474926": [], "default_rng": [], "points1": [], "points2": [], "kd_tree1": [], "kd_tree2": [], "query_ball_tre": [], "innernod": [], "ckdtreenod": [], "split_dim": [], "leafnod": [], "ckdtree_nod": [], "distance_upper_bound": [], "kth": [], "query_ball_point": [], "mgrid": [], "dd": [], "sep": [], "2236068": [], "unsqueez": [], "23606798": [], "80622577": [], "return_sort": [], "return_length": [], "nearer": [], "indici": [], "nearby_point": [], "markers": [], "og": [], "query_pair": [], "output_typ": [], "kd_tree": [], "sparse_distance_matrix": [], "max_dist": [], "dok_matrix": [], "sdm": [], "toarrai": [], "12295571": [], "28942611": [], "2333084": [], "24617575": [], "29571802": [], "26836782": [], "distance_matrix": 201, "56906522": [], "39923701": [], "8658745": [], "79428925": [], "37327919": [], "7225693": [], "87665969": [], "32580855": [], "75679479": [], "30088013": [], "6395831": [], "33630734": [], "31994999": [], "72658602": [], "71124834": [], "55396483": [], "90785663": [], "57714465": [], "6473269": [], "bounds_error": [], "fill_valu": 199, "assume_sort": [], "_interpolator1d": [], "slinear": [], "zeroth": [], "x_new": [], "monoton": [], "__call__": [], "splrep": [], "splev": 199, "fitpack": 199, "univariatesplin": [], "interp2d": [], "xnew": [], "ynew": [], "streamlines_length": [], "streamlines_scor": [], "tracks1": 199, "tracks2": 199, "m1": 199, "track2track": 199, "tl": 199, "indices2": 199, "speedi": 199, "maker": 199, "calc_sign": [199, 202], "reconstmodel": [199, 202], "bunch": [199, 202], "to_fit": 199, "weighted_sign": 199, "relative_sign": 199, "mean_sig": 199, "vox_data": 199, "reconstfit": [199, 202], "interior": 199, "n_node": 199, "unique_idx": 199, "v2f": 199, "v2fn": 199, "answer": 199, "fixedstep": 199, "random_se": 199, "save_se": [199, 201, 233, 234, 250], "stepsiz": [199, 255], "pft_max_trial": 199, "back_tracking_dist": [199, 201, 234], "front_tracking_dist": [199, 201, 234], "trial": 199, "workhors": [], "seed_po": [], "first_step": [], "prev_dir": [], "fixed_step": [], "stream_statu": [], "pft_max_nbr_back_step": [], "pft_max_nbr_front_step": [], "particle_path": [], "pft_max_step": [], "particle_dir": [], "particle_weight": [], "particle_step": [], "particle_stream_status": [], "triangles_mask": 199, "triangles_weight": 199, "rand_gen": 199, "triangles_indic": 199, "trilinear_coord": 199, "triangles_idx": 199, "trilin_coord": 199, "trilinear_coordin": 199, "vts_valu": 199, "vertices_norm": 199, "vertices_color": 199, "triangles_valu": 199, "expected_len": 199, "len_along": 199, "cumsum": 199, "n_pol": 199, "frenet": 199, "serret": 199, "mathwork": 199, "matlabcentr": 199, "fileexchang": 199, "11169": 199, "parametris": 199, "qquad": 199, "binorm": 199, "kappa": 199, "torsion": 199, "tm": 199, "ic": 199, "longest": [199, 201], "longest_or_indic": 199, "sph_cent": 199, "sph_radiu": 199, "rai": [199, 254], "wasp": 199, "uwa": 199, "pbourk": 199, "spherelin": 199, "cpp": 199, "xyzn": 199, "cookbook": 199, "netlib": 199, "dierckx": 199, "datapoint": 199, "knot": 199, "ascend": 199, "spiral": 199, "splprep": 199, "travel": 199, "va": 199, "51010101": 199, "09883545": 199, "step_sz": [], "max_point": [], "lenind": [], "types": [], "interp_out_doubl": [], "interp_out_view": [], "wm_map": [], "gm_map": [], "csf_map": [], "get_exclud": [], "get_includ": [], "cmc": [201, 234], "correction_factor": [], "check_point": [], "intenum": [], "pyerror": [], "pxd": [], "new_streamlin": 199, "inv_shift": 199, "in_plac": 199, "selected_streamlin": 199, "roi1": 199, "roi2": 199, "n_roi": 199, "either_end": 199, "both_end": 199, "mask1": 199, "mask2": 199, "max_mdf": 199, "subsamplen": 199, "degrad": 199, "5mm": 199, "jordan17": 199, "as_gener": 199, "ndarrrai": 199, "presseau15": [], "max_segment_length": 199, "rheault15": [], "tol_error": [], "01mm": [], "probabilit": [], "compressed_streamlin": [], "wiggl": [], "c_streamlin": [], "houde15": 199, "presseau": [], "common_shap": [], "expected_length": [], "modified_streamlin": [], "vol_dim": 199, "image_volum": 199, "indexerror": [199, 247], "label_volum": 199, "defaultdict": 199, "bincount": 199, "new_label": 199, "output_streamlin": 199, "seeds_count": 199, "seed_count_per_voxel": 199, "0640051": 199, "47407377": 199, "04966248": 199, "0507979": 199, "20814782": 199, "20909526": 199, "46702984": 199, "04723225": 199, "47268436": 199, "27800683": 199, "37073231": 199, "29328084": 199, "39286015": 199, "16802019": 199, "32122912": 199, "42369171": 199, "27991879": 199, "06159077": 199, "70671916": 199, "48962585": 199, "00187459": 199, "99577329": 199, "target_mask": 199, "whatev": 199, "bresenham5": 199, "bresenham": 199, "jack": 199, "elton": 199, "plotter": 199, "ibm": 199, "roi_coord": 199, "region_of_interest": 199, "in_arrai": 199, "u_return": 199, "tracking_output": 199, "include_roi": 199, "exclude_roi": 199, "aoi": 199, "seq": 199, "plm": 199, "trackviz": [], "return_el": [], "tc": [], "vox_track0": [], "vox_track1": [], "vox_dim": [], "out_png": 200, "recorded_ev": 200, "return_showm": 200, "order_transpar": 200, "buan_color": 200, "roi_imag": [200, 201, 223], "roi_color": [200, 201, 223], "peakandmetr": 200, "pictur": [200, 201, 223], "cababl": 200, "peel": [200, 201, 223], "anti": [200, 201, 223], "alias": [200, 201, 223], "horizon_ismrm19": [200, 201, 223], "juneja": [200, 201, 223, 240], "build_scen": [200, 202], "build_show": [200, 202], "abc": [200, 253], "tab_id": 200, "tab_ui": [200, 202], "win_siz": 200, "reposit": [200, 202], "clusters_visu": 200, "peak_actor": 200, "contour_actor": 200, "slices_visu": 200, "show_manag": 200, "enable_callback": 200, "add_cluster_actor": [200, 202], "tract_idx": 200, "thr": 200, "centroid_actor": [200, 202], "cluster_actor": [200, 202], "recluster_tractogram": [200, 202], "tractogram_clust": [200, 202], "interactor": [200, 238, 239], "change_volum": [200, 202], "prev_idx": 200, "next_idx": 200, "visible_slic": 200, "data_shap": [200, 202], "intensities_rang": [200, 202], "register_picker_callback": [200, 202], "selected_slic": [200, 202], "volume_max": [200, 202], "volume_min": [200, 202], "mem": 200, "fit_kwarg": 200, "fit1": 200, "fit2": 200, "fitnam": 200, "xlimit": 200, "disprang": 200, "shape_profil": 200, "cbar": 200, "basemap_arg": 200, "triang": 200, "xlabel": 200, "ylabel": 200, "ylabl": 200, "img0": 200, "img1": 200, "title0": 200, "title_mid": 200, "title1": 200, "fig_kwarg": [200, 249], "segular": 200, "direct_grid_shap": 200, "direct_grid2world": 200, "inverse_grid_shap": 200, "inverse_grid2world": 200, "show_figur": 200, "warped_forward": 200, "warped_backward": 200, "wouldn": 200, "slice_indic": 200, "slice_index": 200, "slice_typ": 200, "ltitl": 200, "rtitl": 200, "sagit": 200, "c2": 200, "magnitdu": 200, "docscrap": 201, "numpydoc": 201, "mentat": 201, "virtanen": 201, "pav": 201, "iki": 201, "fi": 201, "output_strategi": 201, "get_short_nam": [201, 202], "troubl": 201, "subworkflow": 201, "strongli": 201, "new_vox_s": [201, 229], "out_resl": [201, 229], "new_vox_sz": [201, 229], "static_fil": [201, 208, 230], "moving_fil": [201, 208, 230], "out_mov": [201, 203, 209, 230], "out_stat_centroid": [201, 230], "static_centroid": 201, "out_moving_centroid": [201, 230], "moving_centroid": 201, "out_moved_centroid": [201, 230], "moved_centroid": 201, "static_image_fil": [201, 203, 204, 205], "moving_image_fil": [201, 203, 204, 205], "out_qual": [201, 203], "quality_metr": [201, 203], "transform_map_fil": [201, 205], "overwritten": [201, 205], "prealign_fil": [201, 204], "inv_stat": [201, 204], "mopt_sigma_diff": [201, 204], "mopt_radiu": [201, 204], "mopt_smooth": [201, 204], "mopt_inner_it": [201, 204], "mopt_q_level": [201, 204], "mopt_double_gradi": [201, 204], "mopt_step_typ": [201, 204], "out_inv_stat": [201, 204], "inc_stat": 201, "out_field": [201, 204], "bvalues_fil": [201, 209, 210, 216, 217, 218, 219, 220], "bvectors_fil": [201, 209, 210, 216, 217, 218, 219, 220], "bvecs_tol": [201, 209, 210, 216, 217, 219, 224], "out_linear_mov": [201, 208], "linearly_mov": 201, "out_nonlinear_mov": [201, 208], "out_warp_transform": [201, 208], "warp_transform": 201, "out_warp_kernel": [201, 208], "warp_kernel": 201, "out_dist": [201, 208], "out_matched_pair": [201, 208], "cpd": [201, 202, 208], "treamlin": [201, 208], "prog": 201, "epilog": 201, "formatter_class": 201, "rawtexthelpformatt": 201, "prefix_char": 201, "fromfile_prefix_char": 201, "argument_default": 201, "conflict_handl": 201, "add_help": 201, "argumentpars": 201, "augment": 201, "argv": 201, "helpformatt": 201, "charact": [201, 238, 240, 244, 245], "add_descript": [201, 202], "add_epilogu": [201, 202], "add_sub_flow_arg": [201, 202], "sub_flow": 201, "introspect": 201, "sub_flow_opt": 201, "add_workflow": [201, 202], "arpars": 201, "get_flow_arg": [201, 202], "optional_paramet": [201, 202], "output_paramet": [201, 202], "positional_paramet": [201, 202], "show_argu": [201, 202], "dest": 201, "update_argu": [201, 202], "karg": 201, "get_opt": [201, 202], "get_sub_run": [201, 202], "set_sub_flows_opt": [201, 202], "_option": 201, "bval_fil": [201, 213], "dwi_patch2self": [201, 213], "globe": [201, 212, 213, 218, 219, 220, 227, 263], "dwi_nlmean": 201, "dwi_mppca": 201, "out_sigma": [201, 211], "dwi_sigma": 201, "out_unr": [201, 222], "dwi_unr": 201, "eof": [201, 202], "is_empti": [201, 202], "peek": [201, 202], "read_to_condit": [201, 202], "condition_func": 201, "read_to_next_empty_lin": [201, 202], "read_to_next_unindented_lin": [201, 202], "seek_next_non_empty_lin": [201, 202], "deindent": 201, "lvl": 201, "bshell_thr": [201, 224], "load_modul": [201, 202], "module_path": 201, "reload": [201, 238], "data_nam": [201, 215], "out_split": [201, 232], "lb": [201, 226, 255], "ub": [201, 226], "out_fnam": 201, "create_directori": [201, 202], "create_output": [201, 202], "file_existence_check": [201, 202], "set_input": [201, 202], "set_out_dir": [201, 202], "set_out_fnam": [201, 202], "set_output_kei": [201, 202], "substr": 201, "dir_str": 201, "prepend": 201, "multi_input": 201, "out_kei": 201, "fnc": 201, "frameobject": 201, "data_fil": [201, 221, 231], "out_rtop": [201, 221], "out_lapnorm": [201, 221], "lapnorm": [201, 221], "out_msd": [201, 221], "out_qiv": [201, 221], "out_rtap": [201, 221], "out_rtpp": [201, 221], "out_ng": [201, 221], "out_perng": [201, 221], "perng": [201, 221], "out_parng": [201, 221], "parng": [201, 221], "laplacian_sign": [201, 221], "get_fitted_tensor": [201, 202], "optional_arg": 201, "mask_fil": [201, 216, 217, 218, 219, 220, 231], "out_fa": [201, 218, 219], "out_ga": [201, 218, 219], "out_rgb": [201, 218, 219], "out_md": [201, 218, 219], "out_ad": [201, 218, 219], "out_rd": [201, 218, 219], "out_mod": [201, 218, 219], "out_evec": [201, 218, 219], "out_ev": [201, 218, 219], "nifti_tensor": [201, 219], "hung": [201, 219], "frf": [201, 217], "odf_to_sh_ord": [201, 216, 217], "out_pam": [201, 216, 217], "out_shm": [201, 216, 217], "out_peaks_dir": [201, 216, 217], "peaks_dir": 201, "out_peaks_valu": [201, 216, 217], "peaks_valu": 201, "out_peaks_indic": [201, 216, 217], "peaks_indic": 201, "out_gfa": [201, 216, 217], "peak_from_model": [201, 216, 217, 244], "out_dt_tensor": [201, 218], "out_dk_tensor": [201, 218], "dki_tensor": 201, "out_mk": [201, 218], "out_ak": [201, 218], "out_rk": [201, 218], "joseph": [201, 218], "anita": [201, 218], "hanzhang": [201, 218], "kyle": [201, 218], "get_fitted_ivim": [201, 202], "out_s0_predict": [201, 220], "out_perfusion_fract": [201, 220], "out_d_star": [201, 220], "out_d": [201, 220], "sphere_nam": 201, "save_mask": [201, 214, 227], "dwi_mask": 201, "streamline_fil": [201, 225, 228], "model_bundle_fil": [201, 228], "no_slr": [201, 228], "slr_matrix": [201, 228], "r_reduction_thr": [201, 228], "r_pruning_thr": [201, 228], "no_r_slr": [201, 228], "out_recognized_transf": [201, 228], "out_recognized_label": [201, 228], "tini": [201, 228], "labels_fil": [201, 225], "out_bundl": [201, 225], "recognized_orig": 201, "park2022": [201, 214], "bbox_threshold": [201, 231], "out_mask_cc": [201, 231], "out_mask_nois": [201, 231], "model_bundle_fold": [201, 207], "subject_fold": [201, 207], "get_metric_nam": [201, 202], "af_l_fa": 201, "h5_file": [201, 206], "save_lmm_plot": [201, 202], "plot_fil": 201, "bundle_nam": 201, "log10": 201, "bundle_fold": 201, "orig_bundle_fold": 201, "metric_fold": 201, "orig_fold": 201, "pam_fil": [201, 233, 234], "stopping_fil": [201, 233], "seeding_fil": [201, 233, 234], "use_binary_mask": [201, 233], "stopping_thr": [201, 233], "binar": [201, 233], "regularli": [201, 233, 234, 249], "closestpeak": [201, 233, 242], "wm_file": [201, 234], "gm_file": [201, 234], "csf_file": [201, 234], "pft_back": [201, 234], "pft_front": [201, 234], "pft_count": [201, 234], "100000000": 201, "icbm_2009a": [201, 223], "emerg": [201, 223], "icbm_2009c": [201, 223], "manage_output_overwrit": [201, 202], "_force_overwrit": 201, "outcom": 201, "liter": [201, 249, 250], "subpackag": 202, "_public": [202, 251], "bundlemin": [], "crosscorr": 245, "expectmax": [], "parzenhist": [], "scalespac": 202, "sumsqdiff": [], "verbositylevel": 202, "syn_registr": [202, 245], "write_map": [202, 254], "read_map": 202, "_method_dict": 202, "register_dwi_seri": 202, "determine_num_thread": [], "distance_matrix_mdf": [], "deformableregistr": 202, "gaussian_kernel": 202, "low_rank_eigen": 202, "initialize_sigma2": 202, "lowrankq": 202, "compute_cc_backward_step_2d": [], "compute_cc_backward_step_3d": [], "compute_cc_forward_step_2d": [], "compute_cc_forward_step_3d": [], "precompute_cc_factors_2d": [], "precompute_cc_factors_2d_test": [], "precompute_cc_factors_3d": [], "precompute_cc_factors_3d_test": [], "compute_em_demons_step_2d": [], "compute_em_demons_step_3d": [], "compute_masked_class_stats_2d": [], "compute_masked_class_stats_3d": [], "quantize_positive_2d": [], "quantize_positive_3d": [], "affineinversionerror": 202, "affineinvalidvalueserror": 202, "_transform_method": 202, "transform_geometric_cent": 202, "diffeomorphicregistr": [202, 247], "logger": [202, 254], "mult_aff": 202, "get_direction_and_spac": 202, "similaritymetr": 202, "emmetr": 202, "v_cycle_2d": 202, "v_cycle_3d": 202, "parzenjointhistogram": 187, "compute_parzen_mi": [], "cubic_splin": [], "cubic_spline_deriv": [], "sample_domain_regular": [], "isotropicscalespac": 202, "streamlinedistancemetr": 202, "bundlemindistancematrixmetr": 202, "bundlemindistanceasymmetricmetr": 202, "bundlesumdistancematrixmetr": 202, "jointbundlemindistancemetr": 202, "streamlineregistrationmap": 202, "jointstreamlineregistrationmap": 202, "bundle_sum_dist": 202, "bundle_min_dist": 202, "bundle_min_distance_fast": 202, "bundle_min_distance_asymmetric_fast": 202, "remove_clusters_by_s": 202, "progressive_slr": 202, "slr_with_qbx": [202, 255], "get_unique_pair": 202, "compose_matrix44": 202, "decompose_matrix44": 202, "average_bundle_length": 202, "find_miss": 202, "compute_energy_ssd_2d": [], "compute_energy_ssd_3d": [], "compute_residual_displacement_field_ssd_2d": [], "compute_residual_displacement_field_ssd_3d": [], "compute_ssd_demons_step_2d": [], "compute_ssd_demons_step_3d": [], "iterate_residual_displacement_field_ssd_2d": [], "iterate_residual_displacement_field_ssd_3d": [], "solve_2d_symmetric_positive_definit": [], "solve_3d_symmetric_positive_definit": [], "affinetransform2d": [], "rigidisoscalingtransform2d": [], "rigidisoscalingtransform3d": [], "rigidscalingtransform2d": [], "rigidscalingtransform3d": [], "rigidtransform2d": [], "rotationtransform2d": [], "rotationtransform3d": [], "scalingtransform2d": [], "scalingtransform3d": [], "translationtransform2d": 252, "compose_vector_fields_2d": [], "compose_vector_fields_3d": [], "create_circl": [], "create_harmonic_fields_2d": [], "create_harmonic_fields_3d": [], "create_random_displacement_2d": [], "create_random_displacement_3d": [], "create_spher": [], "downsample_displacement_field_2d": [], "downsample_displacement_field_3d": [], "downsample_scalar_field_2d": [], "downsample_scalar_field_3d": [], "invert_vector_field_fixed_point_2d": [], "invert_vector_field_fixed_point_3d": [], "is_valid_affin": [], "reorient_vector_field_2d": [], "reorient_vector_field_3d": [], "resample_displacement_field_2d": [], "resample_displacement_field_3d": [], "simplify_warp_function_2d": [], "simplify_warp_function_3d": 238, "sparse_gradi": [], "warp_2d": [], "warp_2d_nn": [], "warp_3d": [], "warp_3d_nn": [], "warp_coordinates_2d": [], "warp_coordinates_3d": [], "benchmark": [202, 238, 243], "bench_spher": [], "onetim": 202, "sphere_stat": [202, 244, 245], "timer": 241, "func_minimize_adhoc": [], "func_minimize_scipi": [], "bench_disperse_charges_alt": [], "_tuple2ax": 202, "sphere2cart": [202, 243, 263], "cart2spher": [202, 243, 246], "sph2latlon": 202, "normalized_vector": 202, "vector_norm": [202, 243], "rodrigues_axis_rot": 202, "nearest_pos_semi_def": 202, "sphere_dist": 202, "cart_dist": 202, "vector_cosin": 202, "lambert_equal_area_projection_polar": 202, "lambert_equal_area_projection_cart": 202, "euler_matrix": 202, "compose_matrix": [202, 245], "decompose_matrix": 202, "circumradiu": 202, "vec2vec_rotmat": [202, 236, 252], "compose_transform": 202, "perpendicular_direct": 202, "dist_to_corn": 202, "is_hemispher": [202, 247], "gradient_table_from_bvals_bvec": 202, "gradient_table_from_qvals_bvec": 202, "gradient_table_from_gradient_strength_bvec": 202, "reorient_bvec": [202, 249], "generate_bvec": 202, "round_bval": 202, "get_bval_indic": 202, "check_multi_b": 202, "btens_to_param": 202, "params_to_bten": 202, "ornt_map": 202, "reorient_vector": 202, "reorient_on_axi": 202, "orientation_from_str": 202, "orientation_to_str": 202, "nearestneighborinterpol": [], "trilinearinterpol": [], "interpolate_scalar_2d": [], "interpolate_scalar_3d": [], "interpolate_scalar_nn_2d": [], "interpolate_scalar_nn_3d": [], "interpolate_vector_2d": [], "interpolate_vector_3d": [], "map_coordinates_trilinear_iso": [], "nearestneighbor_interpol": 238, "trilinear_interp": [], "trilinear_interpolate4d": 247, "resetmixin": 202, "onetimeproperti": 202, "auto_attr": [202, 245], "nonnegativeleastsquar": 202, "sparse_nnl": 202, "wichmannhill2006": 202, "wichmannhill1982": 202, "lecuy": 202, "faces_from_sphere_vertic": 202, "unique_edg": 202, "unique_set": 202, "disperse_charges_alt": 202, "euler_characteristic_check": 202, "octahedron_vertic": 202, "octahedron_fac": 202, "icosahedron_vertic": 202, "icosahedron_fac": 202, "unit_octahedron": 202, "unit_icosahedron": 202, "hemi_icosahedron": 202, "random_uniform_on_spher": [202, 244, 245], "eigenstat": 202, "compare_orientation_set": 202, "angular_similar": 202, "create_unit_hemispher": 202, "cshift3d": 202, "permutationinvers": 202, "afb3d_a": 202, "sfb3d_a": 202, "sfb3d": 202, "afb3d": 202, "dwt3d": 202, "idwt3d": 202, "loads_compat": 202, "data_dir": 202, "get_sim_voxel": 202, "get_skeleton": 202, "get_gtab_taiwan_dsi": 202, "dsi_deconv_voxel": 202, "mrtrix_spherical_funct": 202, "get_cmap": [202, 245], "matlab_life_result": 202, "load_sdp_constraint": 202, "copyfileobj_withprogress": 202, "check_md5": 202, "fetch_data": 202, "fetch_stanford_label": 202, "fetch_resdnn_weight": 202, "fetch_synb0_weight": 202, "fetch_synb0_test": 202, "fetch_evac_weight": 202, "fetch_evac_test": 202, "fetch_stanford_t1": 202, "fetch_taiwan_ntu_dsi": 202, "fetch_scil_b0": 202, "fetch_cfin_multib": 202, "fetch_gold_standard_io": [202, 249], "fetch_qte_lte_pt": 202, "fetch_fury_surfac": 202, "fetch_dib_70_lte_pte_st": 202, "fetch_dib_217_lte_pte_st": 202, "fetch_ptt_minimal_dataset": 202, "read_scil_b0": 202, "read_siemens_scil_b0": 202, "read_isbi2013_2shel": 202, "read_sherbrooke_3shel": 202, "read_stanford_label": 202, "read_stanford_hardi": 202, "read_stanford_t1": 202, "read_stanford_pve_map": 202, "read_taiwan_ntu_dsi": 202, "read_syn_data": 202, "fetch_tissue_data": 202, "read_tissue_data": 202, "fetch_cenir_multib": 202, "read_cfin_dwi": 202, "read_cfin_t1": 202, "read_qte_lte_pt": 202, "extract_example_tract": 202, "to_bids_descript": 202, "fetch_hcp": 202, "denspe": 238, "nlmeans_block": [], "add_padding_reflect": [], "correspond_indic": [], "nlmeans_3d": 245, "remove_pad": [], "gettempdir": [], "firdn": [], "upfir": [], "convolve_sf": [], "bootstrap_direction_gett": [], "ptt_direction_gett": [], "bootpmfgen": [], "pmfgendirectiongett": 255, "peak_directions_nl": 202, "reshape_peaks_for_visu": 202, "shcoeffpmfgen": [], "simplepmfgen": [], "min_radius_curvature_from_angl": 202, "read_bvec_fil": 202, "save_qa_metr": 202, "load_peak": [202, 248], "save_peak": 202, "peaks_to_nifti": 202, "set_sft_logger_level": 202, "load_gener": 202, "save_gener": 202, "load_vtk": 202, "load_vtp": 202, "load_fib": 202, "load_dpi": 202, "save_vtk": 202, "save_vtp": 202, "save_fib": 202, "save_dpi": 202, "nifti1_symmat": 202, "make5d": 202, "decfa": [202, 242, 247], "decfa_to_float": 202, "is_reference_info_valid": 202, "save_buan_profiles_hdf5": 202, "read_img_arr_or_path": 202, "save_polydata": 202, "save_vtk_streamlin": [202, 249], "load_vtk_streamlin": [202, 249], "cnn_1d_denois": 202, "cnn": [165, 202, 255], "histo_resdnn": 202, "cnn1ddenois": 202, "channelsum": 202, "evacplu": 202, "prepare_img": 202, "init_model": 202, "historesdnn": 202, "singlelayerperceptron": 202, "multiplelayerpercepton": 202, "encoderblock": 202, "decoderblock": 202, "unet3d": 202, "unnorm": 202, "set_logger_level": 202, "transform_img": 202, "recover_img": 202, "bench_bounding_box": 202, "bench_csd": 202, "bench_peak": 202, "bench_squash": 202, "bench_vec_val_sum": 202, "multi_voxel": [202, 243, 249], "quick_squash": [], "recspe": [], "vec_val_sum": [], "num_grad": 202, "bench_csdeconv": 202, "bench_local_maxima": 202, "old_squash": 202, "bench_quick_squash": 202, "bench_vec_val_vect": 202, "coeff_of_determin": 202, "axsymshrespons": 202, "constrainedsdtmodel": 202, "estimate_respons": 202, "forward_sdt_deconv_mat": 202, "odf_deconv": 202, "fa_trace_to_lambda": 202, "carlson_rf": 202, "carlson_rd": 202, "directional_diffus": 202, "directional_diffusion_vari": 202, "directional_kurtosi": 202, "apparent_kurtosis_coef": 202, "radial_kurtosi": 202, "kurtosis_maximum": 202, "mean_kurtosis_tensor": 202, "kurtosis_fractional_anisotropi": 202, "dki_predict": 202, "params_to_dki_param": 202, "ls_fit_dki": 202, "cls_fit_dki": 202, "wrotat": 202, "wrotate_el": 202, "wcon": 202, "split_dki_param": 202, "kurtosismicrostructuralfit": 202, "axonal_water_fract": 202, "diffusion_compon": 202, "dkimicro_predict": 202, "diffusionspectrumfit": 202, "diffusionspectrumdeconvfit": 202, "create_qspac": 202, "create_qt": 202, "hanning_filt": 202, "pdf_interp_coord": 202, "pdf_odf": [202, 243], "half_to_full_qspac": 202, "project_hemisph_bvec": 202, "threshold_propag": 202, "gen_psf": 202, "lr_deconv": 202, "geodesic_anisotropi": 202, "axial_diffus": 202, "radial_diffus": 202, "deviator": 202, "apparent_diffusion_coef": 202, "tensor_predict": 202, "iter_fit_tensor": [202, 236], "wls_fit_tensor": 202, "ols_fit_tensor": 202, "nlls_fit_tensor": 202, "restore_fit_tensor": 202, "_lt_indic": 202, "_lt_row": 202, "_lt_col": 202, "quantize_evec": [202, 238, 249], "eig_from_lo_tri": [202, 245], "forecastfit": 202, "find_signal_mean": 202, "forecast_error_func": 202, "psi_l": 202, "forecast_matrix": 202, "rho_matrix": 202, "lb_forecast": 202, "fwdti_predict": 202, "wls_iter": 202, "nls_iter": 202, "nls_fit_tensor": 202, "lower_triangular_to_choleski": 202, "cholesky_to_lower_triangular": 202, "generalizedqsamplingfit": 202, "normalize_qa": 202, "squared_radial_compon": 202, "npa": 202, "equatorial_zone_vertic": 202, "polar_zone_vertic": 202, "upper_hemi_map": 202, "equatorial_maximum": 202, "patch_vertic": 202, "patch_maximum": 202, "odf_sum": 202, "patch_sum": 202, "triple_odf_maxima": 202, "ivimmodeltrr": 202, "ivimmodelvp": 202, "ivim_predict": 202, "f_d_star_predict": 202, "f_d_star_error": 202, "ivim_model_selector": 202, "mapmrifit": 202, "isotropic_scale_factor": 202, "mapmri_index_matrix": 202, "b_mat": 202, "b_mat_isotrop": 202, "mapmri_phi_1d": 202, "mapmri_phi_matrix": 202, "mapmri_psi_1d": 202, "mapmri_psi_matrix": 202, "mapmri_odf_matrix": 202, "mapmri_isotropic_phi_matrix": 202, "mapmri_isotropic_radial_signal_basi": 202, "mapmri_isotropic_m_mu_independ": 202, "mapmri_isotropic_m_mu_depend": 202, "mapmri_isotropic_psi_matrix": 202, "mapmri_isotropic_radial_pdf_basi": 202, "mapmri_isotropic_k_mu_independ": 202, "mapmri_isotropic_k_mu_depend": 202, "binomialfloat": 202, "mapmri_isotropic_odf_matrix": 202, "mapmri_isotropic_odf_sh_matrix": 202, "mapmri_isotropic_laplacian_reg_matrix": 202, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 202, "mapmri_isotropic_index_matrix": 202, "create_rspac": 202, "map_laplace_u": 202, "map_laplace_t": 202, "map_laplace_": 202, "mapmri_stu_reg_matric": 202, "mapmri_laplacian_reg_matrix": 202, "generalized_crossvalidation_arrai": 202, "generalized_crossvalid": 202, "gcv_cost_funct": 202, "msdeconvfit": 202, "qpfitter": 202, "multi_tissue_basi": 202, "solve_qp": [202, 250, 255], "meandiffusionkurtosisfit": 202, "mean_signal_bvalu": 202, "msk_from_awf": 202, "awf_from_msk": 202, "msdki_predict": 202, "wls_fit_msdki": 202, "multivoxelfit": 202, "callablearrai": 202, "multi_voxel_fit": [202, 253], "odfmodel": 202, "odffit": 202, "minmax_norm": [202, 244, 247], "qtdmrifit": 202, "qtdmri_to_mapmri_matrix": 202, "qtdmri_isotropic_to_mapmri_matrix": 202, "qtdmri_temporal_norm": 202, "qtdmri_mapmri_norm": 202, "qtdmri_mapmri_isotropic_norm": 202, "qtdmri_signal_matrix_": 202, "qtdmri_signal_matrix": 202, "qtdmri_eap_matrix": 202, "qtdmri_isotropic_signal_matrix_": 202, "qtdmri_isotropic_signal_matrix": 202, "qtdmri_eap_matrix_": 202, "qtdmri_isotropic_eap_matrix_": 202, "qtdmri_isotropic_eap_matrix": 202, "radial_basis_opt": 202, "angular_basis_opt": 202, "radial_basis_eap_opt": 202, "angular_basis_eap_opt": 202, "temporal_basi": 202, "qtdmri_index_matrix": 202, "qtdmri_isotropic_index_matrix": 202, "qtdmri_laplacian_reg_matrix": 202, "qtdmri_isotropic_laplacian_reg_matrix": 202, "part23_reg_matrix_q": 202, "part23_iso_reg_matrix_q": 202, "part4_reg_matrix_q": 202, "part4_iso_reg_matrix_q": 202, "part1_reg_matrix_tau": 202, "part23_reg_matrix_tau": 202, "part4_reg_matrix_tau": 202, "qtdmri_isotropic_sc": 202, "qtdmri_anisotropic_sc": 202, "design_matrix_spati": 202, "create_rt_space_grid": 202, "qtdmri_number_of_coeffici": 202, "l1_crossvalid": 202, "elastic_crossvalid": 202, "from_3x3_to_6x1": 202, "from_6x1_to_3x3": 202, "from_6x6_to_21x1": 202, "from_21x1_to_6x6": 202, "cvxpy_1x6_to_3x3": 202, "cvxpy_1x21_to_6x6": 202, "dtd_covari": 202, "qti_sign": 202, "adj_to_countarr": [], "argmax_from_adj": [], "argmax_from_countarr": [], "le_to_odf": [], "local_maxima": [], "proc_reco_arg": [], "remove_similar_vertic": 243, "search_descend": [], "sum_on_blocks_1d": [], "rumba_deconv": 202, "mbessel_ratio": 202, "generate_kernel": 202, "rumba_deconv_glob": 202, "isotropicmodel": 202, "isotropicfit": 202, "exponentialisotropicmodel": 202, "exponentialisotropicfit": 202, "sparsefasciclefit": 202, "sfm_design_matrix": 202, "sphharmmodel": [202, 244], "qballbasemodel": [202, 247], "sphharmfit": [202, 244], "opdtmodel": 202, "residualbootstrapwrapp": 202, "forward_sdeconv_mat": 202, "sh_to_rh": 202, "gen_dirac": 202, "spherical_harmon": 202, "real_sph_harm": [202, 238], "real_sh_tournier_from_index": 202, "real_sh_descoteaux_from_index": 202, "real_sh_tourni": 202, "real_sym_sh_mrtrix": 202, "real_sym_sh_basi": 202, "sph_harm_ind_list": 202, "order_from_ncoef": 202, "smooth_pinv": 202, "lazy_index": 202, "normalize_data": 202, "lcr_matrix": 202, "bootstrap_data_arrai": 202, "bootstrap_data_voxel": 202, "sh_to_sf_matrix": 202, "calculate_max_ord": [202, 241], "convert_sh_to_full_basi": 202, "convert_sh_from_legaci": 202, "convert_sh_to_legaci": [202, 254], "shorefit": 202, "shore_matrix": 202, "shore_matrix_pdf": 202, "shore_matrix_odf": 202, "l_shore": 202, "n_shore": 202, "shore_indic": 202, "shore_ord": 202, "dki_design_matrix": 202, "vec_val_vect": 243, "bench_quickbundl": 202, "clustering_algorithm": [], "clusteringspe": [], "cythonutil": [], "mdfpy": 202, "check_rang": 202, "bundle_adjac": 202, "ba_analysi": 202, "cluster_bundl": 202, "clustercentroid": 202, "treeclust": 202, "treeclustermap": 202, "qbx_and_merg": 202, "clusters_centroid2clustermap_centroid": [], "clusterscentroid": [], "evaluate_aabb_check": [], "cythonfeatur": [], "nearest_from_matrix_col": 202, "applymask": 202, "clean_cc_mask": 202, "mean_manhattan_dist": 202, "mean_euclidean_dist": 202, "cythonmetr": [], "minimumaveragedirectflipmetr": [], "constantobservationmodel": [], "iteratedconditionalmod": [], "upper_bound_by_r": 202, "upper_bound_by_perc": 202, "diff2eigenvector": 202, "orbital_phantom": 202, "diffusion_ev": 202, "callaghan_perpendicular": 202, "gaussian_parallel": 202, "cylinders_and_ball_soderman": 202, "kurtosis_el": 202, "dki_sign": [202, 238], "all_tensor_evec": [202, 246], "single_tensor_rtop": 202, "multi_tensor_rtop": 202, "single_tensor_pdf": 202, "multi_tensor_pdf": 202, "single_tensor_msd": 202, "multi_tensor_msd": 202, "bench_streamlin": 202, "propspe": 245, "streamlinespe": [238, 245], "vox2track": [], "bench_set_number_of_point": 202, "bench_length": 202, "bench_compress_streamlin": 202, "add_3vec": [], "approximate_mdl_trajectori": [], "bundles_distances_mam": [], "bundles_distances_mdf": 253, "cut_plan": [], "inner_3vec": [], "intersect_segment_cylind": [], "larch_3merg": [], "larch_3split": [], "lee_angle_dist": [], "lee_perpendicular_dist": [], "local_skeleton_clust": [], "local_skeleton_clustering_3pt": [], "mam_dist": 199, "minimum_closest_dist": [], "most_similar_track_mam": [], "mul_3vec": [], "norm_3vec": [], "normalized_3vec": [], "point_segment_sq_dist": [], "point_track_sq_distance_check": [], "sub_3vec": [], "track_dist_3pt": [], "track_roi_intersection_check": [], "kdtree": [], "interp1d": [], "compute_rfbc": [], "min_moving_averag": [], "detect_corresponding_track": 202, "detect_corresponding_tracks_plu": 202, "lifesignalmak": 202, "streamline_sign": 202, "streamline_gradi": 202, "grad_tensor": 202, "streamline_tensor": 202, "pft_tracker": [], "triangles_area": 202, "vertices_to_triangles_valu": 202, "wind": [202, 238], "midpoint": 202, "frenet_serret": 202, "mean_curvatur": 202, "mean_orient": 202, "generate_combin": 202, "longest_track_bundl": 202, "intersect_spher": 202, "inside_spher": 202, "inside_sphere_point": 202, "arbitrarypoint": 202, "principal_compon": 202, "midpoint2point": 202, "eudx_both_direct": [], "ndarray_offset": [], "relist_streamlin": 202, "center_streamlin": 202, "compress_streamlin": [199, 236, 254], "ndbincount": 202, "reduce_label": 202, "subseg": 202, "streamline_near_roi": [202, 253], "unique_row": [202, 245], "transform_tracking_output": 202, "reduce_roi": [202, 253], "max_angle_from_curvatur": 202, "streamline_map": 240, "track_count": [], "gmem": 202, "globalhorizon": 202, "horizontab": 202, "tabmanag": 202, "color_single_slid": 202, "color_double_slid": 202, "clusterstab": 202, "peakstab": 202, "roistab": 202, "slicestab": 202, "clustersvisu": 202, "slicesvisu": 202, "slicer_panel": 202, "bundle_shape_profil": 202, "sph_project": [202, 243, 245], "simple_plot": 202, "draw_lattice_2d": 202, "plot_slic": 202, "docstring_pars": 202, "multi_io": [202, 239, 241], "resliceflow": 202, "slrwithqbxflow": 202, "applytransformflow": 202, "synregistrationflow": [202, 255], "bundlewarpflow": 202, "check_dimens": 202, "introspectiveargumentpars": 202, "get_args_default": 202, "none_or_dtyp": 202, "patch2selfflow": 202, "mppcaflow": 202, "gibbsringingflow": 202, "numpydocstr": 202, "dedent_lin": 202, "get_level": 202, "ioinfoflow": 202, "splitflow": [202, 248], "maskflow": 202, "common_start": 202, "slash_to_und": 202, "connect_output_path": 202, "concatenate_input": 202, "basename_without_extens": 202, "io_iter": 202, "io_iterator_": 202, "reconstmapmriflow": 202, "reconstdtiflow": 202, "reconstcsdflow": 202, "reconstcsaflow": 202, "reconstdkiflow": 202, "reconstivimflow": 202, "reconstrumbaflow": 202, "recobundlesflow": 202, "labelsbundlesflow": 202, "evacplusflow": 202, "snrinccflow": 202, "bundleanalysistractometryflow": 202, "linearmixedmodelsflow": 202, "bundleshapeanalysi": 202, "buan_bundle_profil": 202, "localfibertrackingpamflow": 202, "pftrackingpamflow": 202, "horizonflow": 202, "andgaryfallidi": [207, 228], "forinvestig": [207, 228], "acrosspopul": [207, 228], "randommatrix": [210, 247], "noisemap": [210, 211], "inmedicin": 210, "matrixtheori": 211, "andprima": 212, "onhardi": 212, "featurecrf": 214, "mridata": 222, "ringingartifact": 222, "2016doi": 222, "linearregistr": 230, "ofstreamlin": 230, "fiberbundl": 230, "matterbundl": 230, "registrationand": 230, "towardsquantit": 234, "alphabet": 236, "qixiang": 236, "gonzalo": 236, "github_stat": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "altogeth": 236, "xvfb": 236, "headless": 236, "car": 236, "gitter": [236, 237, 240, 249, 257], "chat": [236, 237, 240], "tst": [236, 237, 238, 240, 241, 243, 245, 248, 249, 250], "offscreen": 236, "test_slic": 236, "pr1": [236, 246], "748": 236, "_to_voxel_toler": 236, "memleak": 236, "sinkpoint": 236, "tk": 236, "wip": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], "699": 236, "gh707": 236, "pr3": 236, "da": [236, 253], "segfault": [236, 241, 244], "sourceforg": 236, "gh": [236, 245], "upl": 236, "infrastructur": 236, "mrg": [236, 237, 238, 239, 240, 244, 245], "pyhon26": 236, "pr2": 236, "usherbrook": 236, "wrt": 236, "resav": 236, "tissuetyp": 236, "loosevers": 236, "dconn": 236, "tkinter": 236, "mesa": 236, "cleanup": [236, 238, 243, 244, 245, 246, 249, 252, 253], "test_shm": 236, "test_sf_to_sh": 236, "typeerror": [236, 244, 245, 255], "same_kind": 236, "730": 236, "cento": [236, 241], "python2": 236, "timeout": [236, 245, 250, 253], "test_spher": 236, "test_interp_rbf": 236, "701": 236, "hyp1f1": 236, "revisit": [236, 244], "cuba": 236, "arm": 236, "test_vector_field": [236, 238], "test_reorient_vector_field_2d": 236, "icon": [236, 241], "nanmean": [236, 246], "dipy_quickbundl": 237, "test_expectmax": 237, "upcom": [237, 239, 245, 247, 248, 252, 255], "856": 237, "room": 237, "miscellan": [237, 253, 254], "examples_index": 237, "817": 237, "toollib": 237, "anymor": [237, 241, 243, 245, 250, 254], "moco": 237, "revert": [237, 238, 241, 243, 245], "commit_info": 237, "807": 237, "shebang": [237, 238], "886": 237, "919": 237, "896": [237, 238], "broken": [237, 238, 239, 240, 241, 242, 245, 247, 248, 249, 255], "badg": [237, 238, 239, 240, 241, 253], "quickstart": [237, 241], "me": 237, "urlerror": 237, "urlopen": 237, "errno": 237, "10060": 237, "3rc": 237, "macosx": 237, "pip": [237, 238, 245], "pr5": [237, 251], "_voxel2stream": 237, "vm": 237, "antonio": 238, "ossa": 238, "etienn": [238, 252, 255], "julio": 238, "villalon": 238, "manu": 238, "sharma": [238, 241, 242], "gonzalez": 238, "riddhish": 238, "bhalodia": 238, "sourav": 238, "singh": [238, 240], "stong": 238, "guillaum": [238, 239, 241], "theaud": [238, 239, 241], "tingyi": 238, "wanyan": 238, "wright": 238, "vibhatha": 238, "abeykoon": 238, "theaveragegui": 238, "1273": 238, "tut": 238, "1223": 238, "1244": 238, "dipy_hom": 238, "ascii": [238, 240, 244, 245], "lightweight": [238, 239, 241], "1227": 238, "1229": 238, "dropbox": 238, "1221": 238, "1217": 238, "clarif": 238, "simplify_warp_funcion_3d": 238, "cla": 238, "textbox": 238, "wheelhous": 238, "assert_arrays_equ": 238, "accent": [238, 247], "anticip": 238, "int64": 238, "get_head": 238, "fmin": 238, "studio": 238, "1137": 238, "pathlength": 238, "1130": 238, "minor": [238, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251], "1124": 238, "1110": 238, "drop26": 238, "nbr_process": 238, "1112": 238, "1106": 238, "imp": 238, "1102": 238, "py35": 238, "1100": 238, "1094": 238, "1069": 238, "test_shor": 238, "1062": 238, "1041": 238, "heavi": 238, "981": 238, "progressbar": [238, 250], "1003": 238, "pkg_info": 238, "1006": 238, "929": 238, "971": 238, "977": 238, "test_sumsqdiff": 238, "test_scalespac": 238, "test_imaffin": 238, "947": 238, "clamp": 238, "mathjax": 238, "927": 238, "test_bvectxt": 238, "todai": 238, "test_nlmeans_4d_3dsigma_and_thread": 238, "cryptic": 238, "1242": 238, "intermittenli": 238, "revamp": 238, "1179": 238, "api_chang": 238, "test_imwarp": 238, "seed_from_mask": [238, 247], "incompat": [238, 245, 254, 255], "inconsist": [238, 245, 250, 251], "1215": 238, "tracking_quick_start": [238, 239, 245], "swallow": [238, 249], "rework": [238, 243, 245], "test_peaksfrommodelparallel": 238, "np1": 238, "streamlines_format": 238, "ivim_linear": 238, "1145": 238, "983": 238, "anaconda": [238, 239, 241, 250], "1121": 238, "nipyp": [238, 253], "bufferediobas": 238, "1104": 238, "workaround": [238, 244], "slowadcopdfmodel": 238, "1054": 238, "footer": 238, "charm": 238, "make_fetch": 238, "stabilis": 238, "pip3": [238, 249], "975": 238, "961": 238, "880": [238, 239], "866": 238, "test_metr": 238, "test_parzenhist": 238, "868": 238, "test_transform": 238, "test_crosscorr": 238, "weird": 238, "indent": 238, "unus": [238, 245, 247, 248, 253, 255], "bennet": [239, 240], "fauber": [239, 240], "saber": 239, "sheybani": 239, "1351": 239, "1353": 239, "epilogu": 239, "gpl": [239, 245, 251], "test_csdeconv": 239, "eigh": 239, "textactor2d": 239, "reciproc": [239, 258], "viz_ui": 239, "clinicalgraph": 239, "coveral": 239, "baggi": 239, "activeax": [239, 240], "vtkcommoncor": 239, "func_mul": 239, "1167": 239, "directiion": 239, "ppc": [239, 245, 250], "1306": 239, "step_help": 239, "conor": 240, "corbin": 240, "jiri": [240, 241], "borovec": [240, 241, 249], "mendoza": 240, "karandeep": [240, 241], "kumar": 240, "ashutosh": 240, "pradeep": 240, "reddi": 240, "raamana": 240, "ricci": [240, 241, 248], "woo": [240, 241, 248], "aman": 240, "arya": 240, "test_whole_brain_slr": 240, "1502": 240, "vtk8": 240, "sfm_reconst": 240, "punctuat": 240, "_iter": 240, "test_mapmri": 240, "diskslid": 240, "logo": [240, 245], "banner": [240, 245], "1465": 240, "progit": 240, "1451": 240, "delimit": 240, "hyperlink": [240, 242], "mdfmetric": 240, "qbx": [240, 255], "textblock": 240, "getargspec": 240, "1393": 240, "1294": 240, "rcond": [240, 250], "eddy_rotated_bvec": 240, "1408": 240, "1406": 240, "assert_tru": 240, "assert_equ": [240, 243, 249], "1322": 240, "1300": 240, "ravel_multi_index": [240, 245], "whatnot": 240, "affili": [240, 241], "1370": 240, "parallel_voxel_fit": [240, 241, 254], "1485": 240, "1481": 240, "globalimmediatemoderenderingon": 240, "1467": 240, "1438": 240, "1473": 240, "pyautogui": 240, "monitor": [240, 256], "1453": 240, "1449": 240, "1395": 240, "1436": 240, "memview": 240, "struct": [240, 253], "1380": 240, "syntaxerror": 240, "xe2": [240, 244], "596": [240, 246], "coding_style_guidelin": 240, "faq": [240, 243, 249], "1410": 240, "jet": 240, "1387": 240, "rint": 240, "misc": [240, 241, 253], "chrome": 240, "1383": 240, "mmriflow": 240, "test_rmi": [240, 245], "filo": 241, "albai": 241, "parichit": [241, 242], "chandan": 241, "gangwar": 241, "enrico": 241, "cahal": 241, "hunt": 241, "1669": 241, "honor": 241, "neurostar": [241, 257], "1655": 241, "codecov": [241, 252, 255], "1645": 241, "1647": 241, "starter": 241, "evenly_distributed_sphere_642": 241, "1564": 241, "listbox2d": 241, "1554": 241, "1528": 241, "imread": 241, "1526": 241, "checkbox": 241, "radiobutton": 241, "nosetest": [241, 255], "1570": 241, "out_strategi": 241, "major_vers": 241, "button2d": 241, "1355": 241, "listbox": 241, "1548": 241, "mistakenli": 241, "pep8speak": [241, 248], "appeas": 241, "1397": 241, "ana": 241, "mini": 241, "preload": 241, "noddix": 241, "filemenu2d": 241, "listboxitem2d": 241, "sierra": 241, "ananoda": 241, "disappear": 241, "vtk6": [241, 244, 245], "voxsz": 241, "1135": 241, "1389": 241, "gsoc": [241, 242], "noddix_pr": 241, "1108": 241, "tortois": 241, "mess": 241, "test_ui_listbox_2d": 241, "1562": 241, "1550": 241, "1534": 241, "check_scratch": 241, "exaampl": 241, "1509": 241, "cl\u00e9ment": 242, "zotti": 242, "katrin": 242, "leinweb": 242, "yijun": 242, "liu": [242, 252], "1714": 242, "sponsor": 242, "1738": 242, "1732": 242, "maiincrement": 242, "bullet": 242, "liner": 242, "random_integ": 242, "1704": 242, "pendingdeprec": 242, "blank": [242, 245], "1710": 242, "1702": 242, "1696": 242, "1690": 242, "sensor": 242, "acsept": 242, "deprecationwarn": 242, "usersranjianaconda3libsit": 242, "packagesipykernel_launch": 242, "imsav": 242, "imageio": 242, "imwrit": 242, "n4": 242, "1692": 242, "mdesco": 243, "sf2sh": 243, "dsi_deconv": 243, "result_typ": 243, "getitem": [243, 255], "_squash": 243, "einsum": 243, "xp": 243, "sty": 243, "multivoxel": 243, "ip": 243, "yai": 243, "l2norm": 243, "suit": [243, 245], "e1381s6_edcor": 243, "optional_trait": 243, "brought": 243, "_filter": 243, "reduce_antipod": 243, "preview": 243, "_filter_peak": 243, "optionalimporterror": 243, "trait": 243, "gitwash": 243, "frontpag": 243, "longest_track_len": 243, "mayavi": 243, "refacotor": 243, "tb": 243, "hap": 243, "triangle_subdivid": 243, "badrequest": 243, "erik": 244, "autopep8": 244, "shmfit": 244, "peaks_from_model_parallel": 244, "sdeconv": 244, "brainextract": 244, "setinput": 244, "vtk5": 244, "setinputdata": 244, "mask_voxel_s": 244, "promote_dtyp": 244, "wi": 244, "tensor_": 244, "testfail": 244, "probabilisticodfweightedtrack": 244, "soureforg": 244, "py3": 244, "supersed": 244, "stamp": 244, "plot_2d": 245, "536": 245, "npymath": 245, "ugli": 245, "msvc": 245, "christma": 245, "reinstat": 245, "mergsort": 245, "importlib": 245, "__import__": 245, "traco": 245, "redesign": 245, "virtualenv": 245, "npy_math": 245, "checker": 245, "pxi": 245, "memory_leak": 245, "test_strealin": 245, "pipe": 245, "omarocegueda": 245, "ae": 245, "test_peak_directions_thorough": 245, "skiptest": 245, "odf_sh_sharpen": 245, "bumpi": 245, "fopenmp": 245, "crossplatform": 245, "tone": 245, "sent": 245, "vec2vec": 245, "pep": 245, "stuf": 245, "538": 245, "wheezi": [245, 246], "argsort": 245, "mergesort": 245, "dpy_math": 245, "hyp2f1": 245, "travis": 245, "tmp_file": 245, "matrix44": 245, "mkl": 245, "pow": 245, "16gb": 245, "wasn": 245, "demianw": 245, "quicki": 245, "peaksfrommodel": 245, "incomprehens": 245, "dipy_fit_tensor": 245, "brittl": 245, "create_half_unit_spher": 245, "dpy_rint": 246, "test_center_of_mass": 246, "undetect": 246, "588": 246, "typograph": 246, "584": 246, "quickbundles2": 246, "586": 246, "francopestilli": 246, "test_feature_center_of_mass": 246, "amico": 246, "three_shells_voxel": 246, "chatroom": 246, "532": 246, "sparc": 246, "antoin": 247, "theberg": 247, "clint": 247, "1942": 247, "endian": 247, "s390x": 247, "stateful": 247, "python_requir": 247, "1902": 247, "1904": 247, "1899": 247, "1897": 247, "test_refine_rb": 247, "test_bundl": 247, "1879": 247, "numpy_less_0": 247, "scipy_less_0": 247, "oversight": 247, "1843": 247, "1855": 247, "statsmodel": 247, "tput": 247, "1819": 247, "diffeormorph": 247, "1815": 247, "1789": 247, "1759": 247, "1817": 247, "peaks_direct": 247, "1722": 247, "1920": 247, "bedpostx": 247, "1779": 247, "1839": 247, "1694": 247, "test_streamlin": 247, "1724": [247, 249], "844": 247, "shouldn": [247, 253], "nodirect": 247, "1831": 247, "1857": 247, "1863": 247, "1845": 247, "1829": 247, "reco": 247, "1606": 247, "1837": 247, "infeas": 247, "b0slice": 247, "implicit": 247, "dii": 247, "1797": 247, "dettrackpamflow": 247, "1801": 247, "1803": 247, "1809": 247, "nifiti": 247, "operand": 247, "1240": 247, "flesh": 247, "behnel": 247, "1126": 247, "2029": 248, "proxi": 248, "dead": [248, 253], "stateful_tractogram_post_1": 248, "0_fix": 248, "reloc": 248, "sim_respons": 248, "1777": 248, "read_": 248, "1634": 248, "1859": 248, "statefulltractogram": 248, "ioerror": 248, "1968": 248, "1867": 248, "circleci": 248, "intersphinx": 248, "inventori": 248, "1791": 248, "aryansh": 249, "omrai": 249, "charl": [249, 250, 255], "poirier": [249, 250, 255], "fabio": 249, "neri": 249, "jirka": 249, "leevi": [249, 253], "kerkela": [249, 253], "leon": [249, 253], "wening": [249, 253], "martijn": 249, "nagtega": 249, "sarath": 249, "chandra": 249, "shrishti": 249, "hore": 249, "shubham": 249, "shaswat": 249, "taki": 249, "panagopoulo": 249, "tashrif": 249, "billah": 249, "kunal": 249, "mehta": 249, "svabhishek29": 249, "areesha": [249, 250, 251], "tariq": [249, 250, 251], "karan": [249, 250, 251], "shader": [200, 249], "uniniti": 249, "2204": 249, "_streamlines_in_mask": 249, "2174": 249, "buan_flow": 249, "2196": 249, "2188": 249, "ssl": 249, "certif": 249, "2154": 249, "assert_": 249, "2158": 249, "2148": 249, "2152": 249, "2134": 249, "2141": 249, "2139": 249, "initialis": 249, "grammar": [249, 254], "cigar_tensor": 249, "grammat": 249, "2102": 249, "2055": 249, "sform": 249, "get_best_affin": 249, "2093": 249, "kunakl07": 249, "2063": 249, "2045": 249, "_gibbs_removal_2d": 249, "fw": 249, "2114": 249, "wf": 249, "2061": 249, "colab": 249, "kaggl": 249, "2194": 249, "tp_print": 249, "2190": [249, 250], "elementwis": 249, "2128": 249, "2096": 249, "winter": 249, "friendli": 249, "regn": 249, "polici": 249, "old_highlight": 249, "maintainer_workflow": 249, "2082": 249, "1871": 249, "gifti": 249, "1728": 249, "1373": 249, "troubleshoot": 249, "hub": 249, "backlog": 249, "basil": 250, "pinsard": 250, "jaewon": 250, "siddharth": 250, "kapoor": 250, "2265": 250, "2206": 250, "part2": 250, "2259": 250, "2261": 250, "2253": 250, "btensor": 250, "backtick": 250, "2239": 250, "2241": 250, "2235": 250, "robustifi": 250, "solvererror": 250, "rackspac": 250, "nightli": [250, 253], "xfail": 250, "assert_rais": 250, "2220": 250, "lstsq": 250, "unr": 250, "test_mapmri_isotropic_static_scale_factor": 250, "2202": 250, "somesuch": 250, "verbatim": 250, "spring": [250, 253], "2216": 250, "test_multi_shell_fiber_respons": 250, "p2": [251, 252], "weekli": 251, "2277": 251, "2292": 251, "2296": 251, "doctstr": 251, "2286": 251, "2284": 251, "doctsr": 251, "2210": 251, "arclength": 251, "2323": 251, "2098": 251, "2303": 251, "felix": 252, "kruper": 252, "2372": 252, "size_t": 252, "2346": 252, "mnt": [252, 253], "wherev": [252, 253], "reactiv": 252, "2337": 252, "2333": 252, "2341": 252, "fault": 252, "vr": 252, "aphys": 252, "1873": 252, "2343": 252, "1675": 252, "2331": 252, "dan": 253, "franci": 253, "jerom": 253, "giulia": 253, "bert\u00f2": 253, "joshua": 253, "kenji": 253, "marshal": 253, "luca": 253, "costa": 253, "sam": [253, 254, 255], "covenei": [253, 254, 255], "errant": 253, "2539": 253, "embarrassingli": 253, "concurr": 253, "gha": 253, "2533": 253, "underlin": 253, "2529": 253, "2527": 253, "2521": 253, "2423": 253, "2515": 253, "reboot": 253, "2466": 253, "bitwis": 253, "misplac": 253, "2374": 253, "2406": 253, "c_compress_streamlin": 253, "2415": 253, "2392": 253, "2368": 253, "_local_track": 253, "2509": 253, "2543": 253, "2541": 253, "2456": 253, "nonsens": 253, "2492": 253, "reusabl": 253, "footprint": 253, "fwdwi": 253, "2402": 253, "dipy_to_nipype_interfac": 253, "2460": 253, "2429": 253, "homepag": 253, "2446": [71, 253], "bitwise_or": 253, "2441": 253, "_pytest": 253, "pathlib": 253, "importpathmismatcherror": 253, "dcperror": 253, "probtrackx2": 253, "fmrib": 253, "toolbox": 253, "deneb": 254, "jacob": 254, "malinda": 254, "dilhara": 254, "2710": 254, "2704": 254, "progbar": 254, "2692": 254, "2688": 254, "2664": 254, "diffeormorphicmap": 254, "multi_dot": 254, "intemporarydirectori": 254, "tmpfile": 254, "mutabl": 254, "2566": 254, "2576": 254, "2568": 254, "noreg": 254, "redux": 254, "2696": 254, "pyafq": 254, "2679": 254, "2673": 254, "2662": 254, "cmd_line": 254, "2658": 254, "chanc": 254, "arm64": 254, "wholebrain": 254, "tvis_hdr": 254, "nii_aff": 254, "2564": 254, "2572": 254, "dear": 254, "expert": 254, "2603": 254, "dti_peak": 254, "2587": 254, "safeti": 254, "concern": 254, "relianc": 254, "tmpdir": 254, "broader": 257, "respond": 257, "b_matrix": [258, 259], "privat": [258, 259], "req": [258, 259], "g_x": [258, 259], "g_y": [258, 259], "g_z": [258, 259], "supposedli": [258, 259], "envelop": 258, "int_0": 258, "matiello": 258, "onset": 258, "g_i": 258, "g_j": 258, "direcrt": 258, "trse": [258, 259], "ramp": [258, 259], "2b_": [258, 259], "_2": [258, 259], "_3": [258, 259], "dft": [258, 259], "callaghan": 258, "eccl": 258, "xia": 258, "narrow": [258, 260], "mysteri": 258, "exposit": 259, "clearer": 259, "frank": 260, "calaghan": 260, "transit": 260, "orthonorm": 262, "p_l": 262, "legendr": 262, "overlin": 262, "a_l": 262, "m_l": 262, "formal": 262, "leq": 262, "Their": 262, "foral": 262, "omiss": 262, "motiv": 262, "jorg": 263, "stolfi": 263, "atan2": 263, "cart2sph": 263, "060": 41, "477558": 56, "044": [71, 74], "9475257396698": 130, "12185287475586": 130, "7403678977731135": 130, "025": [130, 132], "040395975112915": 131, "461403846740723": 131, "4004392488814326": 131, "004": 144, "remove_cluster_actor": [200, 202], "hz": 200, "apply_shad": 202, "dogu": 255, "baran": 255, "jong": 255, "sung": 255, "martino": 255, "pilia": 255, "mitesh": 255, "gulecha": 255, "rahul": 255, "ubal": 255, "shilpi": 255, "karp2601": 255, "ujjwal": 255, "shekhar": 255, "2768": 255, "2744": 255, "2740": 255, "test_roi_imag": 255, "mtn": 255, "2778": 255, "fast_numpi": 255, "2722": 255, "codespel": 255, "2648": 255, "trx": 255, "extras_requir": 255, "2716": 255, "2537": 255, "1990": 255, "2756": 255, "attributeerror": 255, "fixdenois": 255, "2599": 255}, "objects": {"": [[185, 0, 0, "-", "dipy"]], "dipy": [[186, 0, 0, "-", "__config__"], [187, 0, 0, "-", "align"], [188, 0, 0, "-", "boots"], [189, 0, 0, "-", "core"], [190, 0, 0, "-", "data"], [191, 0, 0, "-", "denoise"], [192, 0, 0, "-", "direction"], [185, 3, 1, "", "get_info"], [193, 0, 0, "-", "io"], [194, 0, 0, "-", "nn"], [195, 0, 0, "-", "reconst"], [196, 0, 0, "-", "segment"], [197, 0, 0, "-", "sims"], [198, 0, 0, "-", "stats"], [199, 0, 0, "-", "tracking"], [200, 0, 0, "-", "viz"], [201, 0, 0, "-", "workflows"]], "dipy.align": [[187, 1, 1, "", "Bunch"], [187, 3, 1, "", "VerbosityLevels"], [187, 0, 0, "-", "_public"], [187, 0, 0, "-", "cpd"], [187, 0, 0, "-", "imaffine"], [187, 0, 0, "-", "imwarp"], [187, 0, 0, "-", "metrics"], [187, 0, 0, "-", "reslice"], [187, 0, 0, "-", "scalespace"], [187, 0, 0, "-", "streamlinear"], [187, 0, 0, "-", "streamwarp"]], "dipy.align.Bunch": [[187, 2, 1, "", "__init__"]], "dipy.align._public": [[187, 3, 1, "", "_METHOD_DICT"], [187, 3, 1, "", "affine"], [187, 3, 1, "", "affine_registration"], [187, 3, 1, "", "center_of_mass"], [187, 3, 1, "", "motion_correction"], [187, 3, 1, "", "read_mapping"], [187, 3, 1, "", "register_dwi_series"], [187, 3, 1, "", "register_dwi_to_template"], [187, 3, 1, "", "register_series"], [187, 3, 1, "", "resample"], [187, 3, 1, "", "rigid"], [187, 3, 1, "", "rigid_isoscaling"], [187, 3, 1, "", "rigid_scaling"], [187, 3, 1, "", "streamline_registration"], [187, 3, 1, "", "syn_registration"], [187, 3, 1, "", "translation"], [187, 3, 1, "", "write_mapping"]], "dipy.align.cpd": [[187, 1, 1, "", "DeformableRegistration"], [187, 3, 1, "", "gaussian_kernel"], [187, 3, 1, "", "initialize_sigma2"], [187, 3, 1, "", "low_rank_eigen"], [187, 3, 1, "", "lowrankQS"]], "dipy.align.cpd.DeformableRegistration": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "expectation"], [187, 2, 1, "", "get_registration_parameters"], [187, 2, 1, "", "iterate"], [187, 2, 1, "", "maximization"], [187, 2, 1, "", "register"], [187, 2, 1, "", "transform_point_cloud"], [187, 2, 1, "", "update_transform"], [187, 2, 1, "", "update_variance"]], "dipy.align.imaffine": [[187, 1, 1, "", "AffineInvalidValuesError"], [187, 1, 1, "", "AffineInversionError"], [187, 1, 1, "", "AffineMap"], [187, 1, 1, "", "AffineRegistration"], [187, 1, 1, "", "MutualInformationMetric"], [187, 3, 1, "", "_transform_method"], [187, 3, 1, "", "transform_centers_of_mass"], [187, 3, 1, "", "transform_geometric_centers"], [187, 3, 1, "", "transform_origins"]], "dipy.align.imaffine.AffineInvalidValuesError": [[187, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineInversionError": [[187, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineMap": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "get_affine"], [187, 2, 1, "", "set_affine"], [187, 2, 1, "", "transform"], [187, 2, 1, "", "transform_inverse"]], "dipy.align.imaffine.AffineRegistration": [[187, 2, 1, "", "__init__"], [187, 4, 1, "", "docstring_addendum"], [187, 2, 1, "", "optimize"]], "dipy.align.imaffine.MutualInformationMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "distance"], [187, 2, 1, "", "distance_and_gradient"], [187, 2, 1, "", "gradient"], [187, 2, 1, "", "setup"]], "dipy.align.imwarp": [[187, 1, 1, "", "DiffeomorphicMap"], [187, 1, 1, "", "DiffeomorphicRegistration"], [187, 3, 1, "", "RegistrationStages"], [187, 1, 1, "", "SymmetricDiffeomorphicRegistration"], [187, 3, 1, "", "get_direction_and_spacings"], [187, 3, 1, "", "logger"], [187, 3, 1, "", "mult_aff"]], "dipy.align.imwarp.DiffeomorphicMap": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "allocate"], [187, 2, 1, "", "compute_inversion_error"], [187, 2, 1, "", "expand_fields"], [187, 2, 1, "", "get_backward_field"], [187, 2, 1, "", "get_forward_field"], [187, 2, 1, "", "get_simplified_transform"], [187, 2, 1, "", "interpret_matrix"], [187, 2, 1, "", "inverse"], [187, 2, 1, "", "shallow_copy"], [187, 2, 1, "", "transform"], [187, 2, 1, "", "transform_inverse"], [187, 2, 1, "", "transform_points"], [187, 2, 1, "", "transform_points_inverse"], [187, 2, 1, "", "warp_endomorphism"]], "dipy.align.imwarp.DiffeomorphicRegistration": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "get_map"], [187, 2, 1, "", "optimize"], [187, 2, 1, "", "set_level_iters"]], "dipy.align.imwarp.SymmetricDiffeomorphicRegistration": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "get_map"], [187, 2, 1, "", "optimize"], [187, 2, 1, "", "update"]], "dipy.align.metrics": [[187, 1, 1, "", "CCMetric"], [187, 1, 1, "", "EMMetric"], [187, 1, 1, "", "SSDMetric"], [187, 1, 1, "", "SimilarityMetric"], [187, 3, 1, "", "v_cycle_2d"], [187, 3, 1, "", "v_cycle_3d"]], "dipy.align.metrics.CCMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "compute_backward"], [187, 2, 1, "", "compute_forward"], [187, 2, 1, "", "free_iteration"], [187, 2, 1, "", "get_energy"], [187, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.EMMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "compute_backward"], [187, 2, 1, "", "compute_demons_step"], [187, 2, 1, "", "compute_forward"], [187, 2, 1, "", "compute_gauss_newton_step"], [187, 2, 1, "", "free_iteration"], [187, 2, 1, "", "get_energy"], [187, 2, 1, "", "initialize_iteration"], [187, 2, 1, "", "use_moving_image_dynamics"], [187, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.metrics.SSDMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "compute_backward"], [187, 2, 1, "", "compute_demons_step"], [187, 2, 1, "", "compute_forward"], [187, 2, 1, "", "compute_gauss_newton_step"], [187, 2, 1, "", "free_iteration"], [187, 2, 1, "", "get_energy"], [187, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.SimilarityMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "compute_backward"], [187, 2, 1, "", "compute_forward"], [187, 2, 1, "", "free_iteration"], [187, 2, 1, "", "get_energy"], [187, 2, 1, "", "initialize_iteration"], [187, 2, 1, "", "set_levels_above"], [187, 2, 1, "", "set_levels_below"], [187, 2, 1, "", "set_moving_image"], [187, 2, 1, "", "set_static_image"], [187, 2, 1, "", "use_moving_image_dynamics"], [187, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.reslice": [[187, 3, 1, "", "reslice"]], "dipy.align.scalespace": [[187, 1, 1, "", "IsotropicScaleSpace"], [187, 1, 1, "", "ScaleSpace"], [187, 3, 1, "", "logger"]], "dipy.align.scalespace.IsotropicScaleSpace": [[187, 2, 1, "", "__init__"]], "dipy.align.scalespace.ScaleSpace": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "get_affine"], [187, 2, 1, "", "get_affine_inv"], [187, 2, 1, "", "get_domain_shape"], [187, 2, 1, "", "get_expand_factors"], [187, 2, 1, "", "get_image"], [187, 2, 1, "", "get_scaling"], [187, 2, 1, "", "get_sigmas"], [187, 2, 1, "", "get_spacing"], [187, 2, 1, "", "print_level"]], "dipy.align.streamlinear": [[187, 1, 1, "", "BundleMinDistanceAsymmetricMetric"], [187, 1, 1, "", "BundleMinDistanceMatrixMetric"], [187, 1, 1, "", "BundleMinDistanceMetric"], [187, 1, 1, "", "BundleSumDistanceMatrixMetric"], [187, 1, 1, "", "JointBundleMinDistanceMetric"], [187, 1, 1, "", "JointStreamlineRegistrationMap"], [187, 1, 1, "", "StreamlineDistanceMetric"], [187, 1, 1, "", "StreamlineLinearRegistration"], [187, 1, 1, "", "StreamlineRegistrationMap"], [187, 3, 1, "", "bundle_min_distance"], [187, 3, 1, "", "bundle_min_distance_asymmetric_fast"], [187, 3, 1, "", "bundle_min_distance_fast"], [187, 3, 1, "", "bundle_sum_distance"], [187, 3, 1, "", "compose_matrix44"], [187, 3, 1, "", "decompose_matrix44"], [187, 3, 1, "", "get_unique_pairs"], [187, 3, 1, "", "groupwise_slr"], [187, 3, 1, "", "logger"], [187, 3, 1, "", "progressive_slr"], [187, 3, 1, "", "remove_clusters_by_size"], [187, 3, 1, "", "slr_with_qbx"]], "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "distance"]], "dipy.align.streamlinear.BundleMinDistanceMatrixMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "distance"], [187, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleMinDistanceMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "distance"], [187, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleSumDistanceMatrixMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "distance"]], "dipy.align.streamlinear.JointBundleMinDistanceMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "distance"], [187, 2, 1, "", "setup"]], "dipy.align.streamlinear.JointStreamlineRegistrationMap": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "transform"]], "dipy.align.streamlinear.StreamlineDistanceMetric": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "distance"], [187, 2, 1, "", "setup"]], "dipy.align.streamlinear.StreamlineLinearRegistration": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "optimize"]], "dipy.align.streamlinear.StreamlineRegistrationMap": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "transform"]], "dipy.align.streamwarp": [[187, 3, 1, "", "average_bundle_length"], [187, 3, 1, "", "bundlewarp"], [187, 3, 1, "", "bundlewarp_shape_analysis"], [187, 3, 1, "", "bundlewarp_vector_filed"], [187, 3, 1, "", "find_missing"]], "dipy.core": [[189, 0, 0, "-", "geometry"], [189, 0, 0, "-", "gradients"], [189, 0, 0, "-", "graph"], [189, 0, 0, "-", "histeq"], [189, 0, 0, "-", "ndindex"], [189, 0, 0, "-", "onetime"], [189, 0, 0, "-", "optimize"], [189, 0, 0, "-", "profile"], [189, 0, 0, "-", "rng"], [189, 0, 0, "-", "sphere"], [189, 0, 0, "-", "sphere_stats"], [189, 0, 0, "-", "subdivide_octahedron"], [189, 0, 0, "-", "wavelet"]], "dipy.core.geometry": [[189, 3, 1, "", "_TUPLE2AXES"], [189, 3, 1, "", "cart2sphere"], [189, 3, 1, "", "cart_distance"], [189, 3, 1, "", "circumradius"], [189, 3, 1, "", "compose_matrix"], [189, 3, 1, "", "compose_transformations"], [189, 3, 1, "", "decompose_matrix"], [189, 3, 1, "", "dist_to_corner"], [189, 3, 1, "", "euler_matrix"], [189, 3, 1, "", "is_hemispherical"], [189, 3, 1, "", "lambert_equal_area_projection_cart"], [189, 3, 1, "", "lambert_equal_area_projection_polar"], [189, 3, 1, "", "nearest_pos_semi_def"], [189, 3, 1, "", "normalized_vector"], [189, 3, 1, "", "perpendicular_directions"], [189, 3, 1, "", "rodrigues_axis_rotation"], [189, 3, 1, "", "sph2latlon"], [189, 3, 1, "", "sphere2cart"], [189, 3, 1, "", "sphere_distance"], [189, 3, 1, "", "vec2vec_rotmat"], [189, 3, 1, "", "vector_cosine"], [189, 3, 1, "", "vector_norm"]], "dipy.core.gradients": [[189, 1, 1, "", "GradientTable"], [189, 3, 1, "", "btens_to_params"], [189, 3, 1, "", "check_multi_b"], [189, 3, 1, "", "generate_bvecs"], [189, 3, 1, "", "get_bval_indices"], [189, 3, 1, "", "gradient_table"], [189, 3, 1, "", "gradient_table_from_bvals_bvecs"], [189, 3, 1, "", "gradient_table_from_gradient_strength_bvecs"], [189, 3, 1, "", "gradient_table_from_qvals_bvecs"], [189, 3, 1, "", "logger"], [189, 3, 1, "", "orientation_from_string"], [189, 3, 1, "", "orientation_to_string"], [189, 3, 1, "", "ornt_mapping"], [189, 3, 1, "", "params_to_btens"], [189, 3, 1, "", "reorient_bvecs"], [189, 3, 1, "", "reorient_on_axis"], [189, 3, 1, "", "reorient_vectors"], [189, 3, 1, "", "round_bvals"], [189, 3, 1, "", "unique_bvals"], [189, 3, 1, "", "unique_bvals_magnitude"], [189, 3, 1, "", "unique_bvals_tolerance"]], "dipy.core.gradients.GradientTable": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "b0s_mask"], [189, 2, 1, "", "bvals"], [189, 2, 1, "", "bvecs"], [189, 2, 1, "", "gradient_strength"], [189, 5, 1, "", "info"], [189, 2, 1, "", "qvals"], [189, 2, 1, "", "tau"]], "dipy.core.graph": [[189, 1, 1, "", "Graph"]], "dipy.core.graph.Graph": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "add_edge"], [189, 2, 1, "", "add_node"], [189, 2, 1, "", "all_paths"], [189, 2, 1, "", "children"], [189, 2, 1, "", "del_node"], [189, 2, 1, "", "del_node_and_edges"], [189, 2, 1, "", "down"], [189, 2, 1, "", "down_short"], [189, 2, 1, "", "parents"], [189, 2, 1, "", "shortest_path"], [189, 2, 1, "", "up"], [189, 2, 1, "", "up_short"]], "dipy.core.histeq": [[189, 3, 1, "", "histeq"]], "dipy.core.ndindex": [[189, 3, 1, "", "ndindex"]], "dipy.core.onetime": [[189, 1, 1, "", "OneTimeProperty"], [189, 1, 1, "", "ResetMixin"], [189, 3, 1, "", "auto_attr"]], "dipy.core.onetime.OneTimeProperty": [[189, 2, 1, "", "__init__"]], "dipy.core.onetime.ResetMixin": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "reset"]], "dipy.core.optimize": [[189, 1, 1, "", "NonNegativeLeastSquares"], [189, 1, 1, "", "Optimizer"], [189, 1, 1, "", "PositiveDefiniteLeastSquares"], [189, 1, 1, "", "SKLearnLinearSolver"], [189, 3, 1, "", "sparse_nnls"], [189, 3, 1, "", "spdot"]], "dipy.core.optimize.NonNegativeLeastSquares": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "fit"]], "dipy.core.optimize.Optimizer": [[189, 2, 1, "", "__init__"], [189, 5, 1, "", "evolution"], [189, 5, 1, "", "fopt"], [189, 5, 1, "", "message"], [189, 5, 1, "", "nfev"], [189, 5, 1, "", "nit"], [189, 2, 1, "", "print_summary"], [189, 5, 1, "", "xopt"]], "dipy.core.optimize.PositiveDefiniteLeastSquares": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "solve"]], "dipy.core.optimize.SKLearnLinearSolver": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "fit"], [189, 2, 1, "", "predict"]], "dipy.core.profile": [[189, 1, 1, "", "Profiler"]], "dipy.core.profile.Profiler": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "print_stats"]], "dipy.core.rng": [[189, 3, 1, "", "LEcuyer"], [189, 3, 1, "", "WichmannHill1982"], [189, 3, 1, "", "WichmannHill2006"]], "dipy.core.sphere": [[189, 1, 1, "", "HemiSphere"], [189, 1, 1, "", "Sphere"], [189, 3, 1, "", "disperse_charges"], [189, 3, 1, "", "disperse_charges_alt"], [189, 3, 1, "", "euler_characteristic_check"], [189, 3, 1, "", "faces_from_sphere_vertices"], [189, 3, 1, "", "hemi_icosahedron"], [189, 3, 1, "", "icosahedron_faces"], [189, 3, 1, "", "icosahedron_vertices"], [189, 3, 1, "", "octahedron_faces"], [189, 3, 1, "", "octahedron_vertices"], [189, 3, 1, "", "unique_edges"], [189, 3, 1, "", "unique_sets"], [189, 3, 1, "", "unit_icosahedron"], [189, 3, 1, "", "unit_octahedron"]], "dipy.core.sphere.HemiSphere": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "faces"], [189, 2, 1, "", "find_closest"], [189, 2, 1, "", "from_sphere"], [189, 2, 1, "", "mirror"], [189, 2, 1, "", "subdivide"]], "dipy.core.sphere.Sphere": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "edges"], [189, 2, 1, "", "faces"], [189, 2, 1, "", "find_closest"], [189, 2, 1, "", "subdivide"], [189, 2, 1, "", "vertices"], [189, 5, 1, "", "x"], [189, 5, 1, "", "y"], [189, 5, 1, "", "z"]], "dipy.core.sphere_stats": [[189, 3, 1, "", "angular_similarity"], [189, 3, 1, "", "compare_orientation_sets"], [189, 3, 1, "", "eigenstats"], [189, 3, 1, "", "random_uniform_on_sphere"]], "dipy.core.subdivide_octahedron": [[189, 3, 1, "", "create_unit_hemisphere"], [189, 3, 1, "", "create_unit_sphere"]], "dipy.core.wavelet": [[189, 3, 1, "", "afb3D"], [189, 3, 1, "", "afb3D_A"], [189, 3, 1, "", "cshift3D"], [189, 3, 1, "", "dwt3D"], [189, 3, 1, "", "idwt3D"], [189, 3, 1, "", "permutationinverse"], [189, 3, 1, "", "sfb3D"], [189, 3, 1, "", "sfb3D_A"]], "dipy.data": [[190, 3, 1, "", "DATA_DIR"], [190, 1, 1, "", "DataError"], [190, 3, 1, "", "default_sphere"], [190, 3, 1, "", "dsi_deconv_voxels"], [190, 3, 1, "", "dsi_voxels"], [190, 0, 0, "-", "fetcher"], [190, 3, 1, "", "get_3shell_gtab"], [190, 3, 1, "", "get_cmap"], [190, 3, 1, "", "get_gtab_taiwan_dsi"], [190, 3, 1, "", "get_isbi2013_2shell_gtab"], [190, 3, 1, "", "get_sim_voxels"], [190, 3, 1, "", "get_skeleton"], [190, 3, 1, "", "get_sphere"], [190, 3, 1, "", "load_sdp_constraints"], [190, 3, 1, "", "loads_compat"], [190, 3, 1, "", "matlab_life_results"], [190, 3, 1, "", "mrtrix_spherical_functions"], [190, 3, 1, "", "small_sphere"], [190, 3, 1, "", "two_cingulum_bundles"]], "dipy.data.DataError": [[190, 2, 1, "", "__init__"]], "dipy.data.fetcher": [[190, 3, 1, "", "check_md5"], [190, 3, 1, "", "copyfileobj_withprogress"], [190, 3, 1, "", "extract_example_tracts"], [190, 3, 1, "", "fetch_DiB_217_lte_pte_ste"], [190, 3, 1, "", "fetch_DiB_70_lte_pte_ste"], [190, 3, 1, "", "fetch_bundle_atlas_hcp842"], [190, 3, 1, "", "fetch_bundle_fa_hcp"], [190, 3, 1, "", "fetch_bundle_warp_dataset"], [190, 3, 1, "", "fetch_bundles_2_subjects"], [190, 3, 1, "", "fetch_cenir_multib"], [190, 3, 1, "", "fetch_cfin_multib"], [190, 3, 1, "", "fetch_data"], [190, 3, 1, "", "fetch_evac_test"], [190, 3, 1, "", "fetch_evac_weights"], [190, 3, 1, "", "fetch_file_formats"], [190, 3, 1, "", "fetch_fury_surface"], [190, 3, 1, "", "fetch_gold_standard_io"], [190, 3, 1, "", "fetch_hbn"], [190, 3, 1, "", "fetch_hcp"], [190, 3, 1, "", "fetch_isbi2013_2shell"], [190, 3, 1, "", "fetch_ivim"], [190, 3, 1, "", "fetch_mni_template"], [190, 3, 1, "", "fetch_ptt_minimal_dataset"], [190, 3, 1, "", "fetch_qtdMRI_test_retest_2subjects"], [190, 3, 1, "", "fetch_qte_lte_pte"], [190, 3, 1, "", "fetch_resdnn_weights"], [190, 3, 1, "", "fetch_scil_b0"], [190, 3, 1, "", "fetch_sherbrooke_3shell"], [190, 3, 1, "", "fetch_stanford_hardi"], [190, 3, 1, "", "fetch_stanford_labels"], [190, 3, 1, "", "fetch_stanford_pve_maps"], [190, 3, 1, "", "fetch_stanford_t1"], [190, 3, 1, "", "fetch_stanford_tracks"], [190, 3, 1, "", "fetch_syn_data"], [190, 3, 1, "", "fetch_synb0_test"], [190, 3, 1, "", "fetch_synb0_weights"], [190, 3, 1, "", "fetch_taiwan_ntu_dsi"], [190, 3, 1, "", "fetch_target_tractogram_hcp"], [190, 3, 1, "", "fetch_tissue_data"], [190, 3, 1, "", "get_bundle_atlas_hcp842"], [190, 3, 1, "", "get_file_formats"], [190, 3, 1, "", "get_fnames"], [190, 3, 1, "", "get_target_tractogram_hcp"], [190, 3, 1, "", "get_two_hcp842_bundles"], [190, 3, 1, "", "read_DiB_217_lte_pte_ste"], [190, 3, 1, "", "read_DiB_70_lte_pte_ste"], [190, 3, 1, "", "read_bundles_2_subjects"], [190, 3, 1, "", "read_cenir_multib"], [190, 3, 1, "", "read_cfin_dwi"], [190, 3, 1, "", "read_cfin_t1"], [190, 3, 1, "", "read_five_af_bundles"], [190, 3, 1, "", "read_isbi2013_2shell"], [190, 3, 1, "", "read_ivim"], [190, 3, 1, "", "read_mni_template"], [190, 3, 1, "", "read_qtdMRI_test_retest_2subjects"], [190, 3, 1, "", "read_qte_lte_pte"], [190, 3, 1, "", "read_scil_b0"], [190, 3, 1, "", "read_sherbrooke_3shell"], [190, 3, 1, "", "read_siemens_scil_b0"], [190, 3, 1, "", "read_stanford_hardi"], [190, 3, 1, "", "read_stanford_labels"], [190, 3, 1, "", "read_stanford_pve_maps"], [190, 3, 1, "", "read_stanford_t1"], [190, 3, 1, "", "read_syn_data"], [190, 3, 1, "", "read_taiwan_ntu_dsi"], [190, 3, 1, "", "read_tissue_data"], [190, 3, 1, "", "to_bids_description"]], "dipy.denoise": [[191, 0, 0, "-", "adaptive_soft_matching"], [191, 0, 0, "-", "gibbs"], [191, 0, 0, "-", "localpca"], [191, 0, 0, "-", "nlmeans"], [191, 0, 0, "-", "noise_estimate"], [191, 0, 0, "-", "non_local_means"], [191, 0, 0, "-", "patch2self"]], "dipy.denoise.adaptive_soft_matching": [[191, 3, 1, "", "adaptive_soft_matching"]], "dipy.denoise.gibbs": [[191, 3, 1, "", "gibbs_removal"]], "dipy.denoise.localpca": [[191, 3, 1, "", "genpca"], [191, 3, 1, "", "localpca"], [191, 3, 1, "", "mppca"]], "dipy.denoise.nlmeans": [[191, 3, 1, "", "nlmeans"]], "dipy.denoise.noise_estimate": [[191, 3, 1, "", "estimate_sigma"], [191, 3, 1, "", "piesno"]], "dipy.denoise.non_local_means": [[191, 3, 1, "", "non_local_means"]], "dipy.denoise.patch2self": [[191, 3, 1, "", "patch2self"]], "dipy.direction": [[192, 0, 0, "-", "peaks"]], "dipy.direction.peaks": [[192, 1, 1, "", "PeaksAndMetrics"], [192, 3, 1, "", "peak_directions"], [192, 3, 1, "", "peak_directions_nl"], [192, 3, 1, "", "peaks_from_model"], [192, 3, 1, "", "reshape_peaks_for_visualization"]], "dipy.direction.peaks.PeaksAndMetrics": [[192, 2, 1, "", "__init__"]], "dipy.io": [[193, 0, 0, "-", "bvectxt"], [193, 0, 0, "-", "dpy"], [193, 0, 0, "-", "gradients"], [193, 0, 0, "-", "image"], [193, 0, 0, "-", "peaks"], [193, 0, 0, "-", "pickles"], [193, 0, 0, "-", "stateful_tractogram"], [193, 0, 0, "-", "streamline"], [193, 0, 0, "-", "utils"], [193, 0, 0, "-", "vtk"]], "dipy.io.bvectxt": [[193, 3, 1, "", "orientation_from_string"], [193, 3, 1, "", "orientation_to_string"], [193, 3, 1, "", "ornt_mapping"], [193, 3, 1, "", "read_bvec_file"], [193, 3, 1, "", "reorient_on_axis"], [193, 3, 1, "", "reorient_vectors"]], "dipy.io.dpy": [[193, 1, 1, "", "Dpy"]], "dipy.io.dpy.Dpy": [[193, 2, 1, "", "__init__"], [193, 2, 1, "", "close"], [193, 2, 1, "", "read_track"], [193, 2, 1, "", "read_tracks"], [193, 2, 1, "", "read_tracksi"], [193, 2, 1, "", "version"], [193, 2, 1, "", "write_track"], [193, 2, 1, "", "write_tracks"]], "dipy.io.gradients": [[193, 3, 1, "", "read_bvals_bvecs"]], "dipy.io.image": [[193, 3, 1, "", "load_nifti"], [193, 3, 1, "", "load_nifti_data"], [193, 3, 1, "", "save_nifti"], [193, 3, 1, "", "save_qa_metric"]], "dipy.io.peaks": [[193, 3, 1, "", "load_peaks"], [193, 3, 1, "", "peaks_to_niftis"], [193, 3, 1, "", "save_peaks"]], "dipy.io.pickles": [[193, 3, 1, "", "load_pickle"], [193, 3, 1, "", "save_pickle"]], "dipy.io.stateful_tractogram": [[193, 1, 1, "", "Origin"], [193, 1, 1, "", "Space"], [193, 1, 1, "", "StatefulTractogram"], [193, 3, 1, "", "logger"], [193, 3, 1, "", "set_sft_logger_level"]], "dipy.io.stateful_tractogram.Origin": [[193, 4, 1, "", "NIFTI"], [193, 4, 1, "", "TRACKVIS"], [193, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.Space": [[193, 4, 1, "", "RASMM"], [193, 4, 1, "", "VOX"], [193, 4, 1, "", "VOXMM"], [193, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.StatefulTractogram": [[193, 2, 1, "", "__init__"], [193, 5, 1, "", "affine"], [193, 2, 1, "", "are_compatible"], [193, 2, 1, "", "compute_bounding_box"], [193, 5, 1, "", "data_per_point"], [193, 5, 1, "", "data_per_streamline"], [193, 5, 1, "", "dimensions"], [193, 5, 1, "", "dtype_dict"], [193, 2, 1, "", "from_sft"], [193, 2, 1, "", "get_data_per_point_keys"], [193, 2, 1, "", "get_data_per_streamline_keys"], [193, 2, 1, "", "get_streamlines_copy"], [193, 2, 1, "", "is_bbox_in_vox_valid"], [193, 5, 1, "", "origin"], [193, 2, 1, "", "remove_invalid_streamlines"], [193, 5, 1, "", "space"], [193, 5, 1, "", "space_attributes"], [193, 5, 1, "", "streamlines"], [193, 2, 1, "", "to_center"], [193, 2, 1, "", "to_corner"], [193, 2, 1, "", "to_origin"], [193, 2, 1, "", "to_rasmm"], [193, 2, 1, "", "to_space"], [193, 2, 1, "", "to_vox"], [193, 2, 1, "", "to_voxmm"], [193, 5, 1, "", "voxel_order"], [193, 5, 1, "", "voxel_sizes"]], "dipy.io.streamline": [[193, 3, 1, "", "load_dpy"], [193, 3, 1, "", "load_fib"], [193, 3, 1, "", "load_generator"], [193, 3, 1, "", "load_tck"], [193, 3, 1, "", "load_tractogram"], [193, 3, 1, "", "load_trk"], [193, 3, 1, "", "load_vtk"], [193, 3, 1, "", "load_vtp"], [193, 3, 1, "", "save_dpy"], [193, 3, 1, "", "save_fib"], [193, 3, 1, "", "save_generator"], [193, 3, 1, "", "save_tck"], [193, 3, 1, "", "save_tractogram"], [193, 3, 1, "", "save_trk"], [193, 3, 1, "", "save_vtk"], [193, 3, 1, "", "save_vtp"]], "dipy.io.utils": [[193, 3, 1, "", "create_nifti_header"], [193, 3, 1, "", "create_tractogram_header"], [193, 3, 1, "", "decfa"], [193, 3, 1, "", "decfa_to_float"], [193, 3, 1, "", "get_reference_info"], [193, 3, 1, "", "is_header_compatible"], [193, 3, 1, "", "is_reference_info_valid"], [193, 3, 1, "", "make5d"], [193, 3, 1, "", "nifti1_symmat"], [193, 3, 1, "", "read_img_arr_or_path"], [193, 3, 1, "", "save_buan_profiles_hdf5"]], "dipy.io.vtk": [[193, 3, 1, "", "load_polydata"], [193, 3, 1, "", "load_vtk_streamlines"], [193, 3, 1, "", "save_polydata"], [193, 3, 1, "", "save_vtk_streamlines"]], "dipy.nn": [[194, 0, 0, "-", "cnn_1d_denoising"], [194, 0, 0, "-", "evac"], [194, 0, 0, "-", "histo_resdnn"], [194, 0, 0, "-", "model"], [194, 0, 0, "-", "synb0"], [194, 0, 0, "-", "utils"]], "dipy.nn.cnn_1d_denoising": [[194, 1, 1, "", "Cnn1DDenoiser"]], "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "compile"], [194, 2, 1, "", "evaluate"], [194, 2, 1, "", "fit"], [194, 2, 1, "", "load_weights"], [194, 2, 1, "", "predict"], [194, 2, 1, "", "save_weights"], [194, 2, 1, "", "summary"], [194, 2, 1, "", "train_test_split"]], "dipy.nn.evac": [[194, 1, 1, "", "Block"], [194, 1, 1, "", "ChannelSum"], [194, 1, 1, "", "EVACPlus"], [194, 3, 1, "", "init_model"], [194, 3, 1, "", "logger"], [194, 3, 1, "", "prepare_img"]], "dipy.nn.evac.Block": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "call"]], "dipy.nn.evac.ChannelSum": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "call"]], "dipy.nn.evac.EVACPlus": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "fetch_default_weights"], [194, 2, 1, "", "load_model_weights"], [194, 2, 1, "", "predict"]], "dipy.nn.histo_resdnn": [[194, 1, 1, "", "HistoResDNN"], [194, 3, 1, "", "logger"]], "dipy.nn.histo_resdnn.HistoResDNN": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "fetch_default_weights"], [194, 2, 1, "", "load_model_weights"], [194, 2, 1, "", "predict"]], "dipy.nn.model": [[194, 1, 1, "", "MultipleLayerPercepton"], [194, 1, 1, "", "SingleLayerPerceptron"]], "dipy.nn.model.MultipleLayerPercepton": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "evaluate"], [194, 2, 1, "", "fit"], [194, 2, 1, "", "predict"], [194, 2, 1, "", "summary"]], "dipy.nn.model.SingleLayerPerceptron": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "evaluate"], [194, 2, 1, "", "fit"], [194, 2, 1, "", "predict"], [194, 2, 1, "", "summary"]], "dipy.nn.synb0": [[194, 1, 1, "id69", "DecoderBlock"], [194, 1, 1, "id0", "EncoderBlock"], [194, 1, 1, "", "Synb0"], [194, 3, 1, "id90", "UNet3D"], [194, 3, 1, "", "logger"], [194, 3, 1, "", "normalize"], [194, 3, 1, "", "unnormalize"]], "dipy.nn.synb0.DecoderBlock": [[194, 2, 1, "id70", "__init__"], [194, 2, 1, "id71", "call"]], "dipy.nn.synb0.EncoderBlock": [[194, 2, 1, "id62", "__init__"], [194, 2, 1, "id63", "call"]], "dipy.nn.synb0.Synb0": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "fetch_default_weights"], [194, 2, 1, "", "load_model_weights"], [194, 2, 1, "", "predict"]], "dipy.nn.utils": [[194, 3, 1, "", "normalize"], [194, 3, 1, "", "recover_img"], [194, 3, 1, "", "set_logger_level"], [194, 3, 1, "", "transform_img"], [194, 3, 1, "", "unnormalize"]], "dipy.reconst": [[195, 0, 0, "-", "base"], [195, 0, 0, "-", "benchmarks"], [195, 0, 0, "-", "cache"], [195, 0, 0, "-", "cross_validation"], [195, 0, 0, "-", "csdeconv"], [195, 0, 0, "-", "dki"], [195, 0, 0, "-", "dki_micro"], [195, 0, 0, "-", "dsi"], [195, 0, 0, "-", "dti"], [195, 0, 0, "-", "forecast"], [195, 0, 0, "-", "fwdti"], [195, 0, 0, "-", "gqi"], [195, 0, 0, "-", "ivim"], [195, 0, 0, "-", "mapmri"], [195, 0, 0, "-", "mcsd"], [195, 0, 0, "-", "msdki"], [195, 0, 0, "-", "multi_voxel"], [195, 0, 0, "-", "odf"], [195, 0, 0, "-", "qtdmri"], [195, 0, 0, "-", "qti"], [195, 0, 0, "-", "rumba"], [195, 0, 0, "-", "sfm"], [195, 0, 0, "-", "shm"], [195, 0, 0, "-", "shore"], [195, 0, 0, "-", "utils"]], "dipy.reconst.base": [[195, 1, 1, "", "ReconstFit"], [195, 1, 1, "", "ReconstModel"]], "dipy.reconst.base.ReconstFit": [[195, 2, 1, "", "__init__"]], "dipy.reconst.base.ReconstModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.benchmarks": [[195, 0, 0, "-", "bench_bounding_box"], [195, 0, 0, "-", "bench_csd"], [195, 0, 0, "-", "bench_peaks"], [195, 0, 0, "-", "bench_squash"], [195, 0, 0, "-", "bench_vec_val_sum"]], "dipy.reconst.benchmarks.bench_bounding_box": [[195, 3, 1, "", "bench_bounding_box"]], "dipy.reconst.benchmarks.bench_csd": [[195, 3, 1, "", "bench_csdeconv"], [195, 3, 1, "", "num_grad"]], "dipy.reconst.benchmarks.bench_peaks": [[195, 3, 1, "", "bench_local_maxima"]], "dipy.reconst.benchmarks.bench_squash": [[195, 3, 1, "", "bench_quick_squash"], [195, 3, 1, "", "old_squash"]], "dipy.reconst.benchmarks.bench_vec_val_sum": [[195, 3, 1, "", "bench_vec_val_vect"]], "dipy.reconst.cache": [[195, 1, 1, "", "Cache"]], "dipy.reconst.cache.Cache": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "cache_clear"], [195, 2, 1, "", "cache_get"], [195, 2, 1, "", "cache_set"]], "dipy.reconst.cross_validation": [[195, 3, 1, "", "coeff_of_determination"], [195, 3, 1, "", "kfold_xval"]], "dipy.reconst.csdeconv": [[195, 1, 1, "", "AxSymShResponse"], [195, 1, 1, "", "ConstrainedSDTModel"], [195, 1, 1, "", "ConstrainedSphericalDeconvModel"], [195, 3, 1, "", "auto_response"], [195, 3, 1, "", "auto_response_ssst"], [195, 3, 1, "", "csdeconv"], [195, 3, 1, "", "estimate_response"], [195, 3, 1, "", "fa_trace_to_lambdas"], [195, 3, 1, "", "forward_sdt_deconv_mat"], [195, 3, 1, "", "mask_for_response_ssst"], [195, 3, 1, "", "odf_deconv"], [195, 3, 1, "", "odf_sh_to_sharp"], [195, 3, 1, "", "recursive_response"], [195, 3, 1, "", "response_from_mask"], [195, 3, 1, "", "response_from_mask_ssst"]], "dipy.reconst.csdeconv.AxSymShResponse": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "basis"], [195, 2, 1, "", "on_sphere"]], "dipy.reconst.csdeconv.ConstrainedSDTModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "predict"]], "dipy.reconst.dki": [[195, 1, 1, "", "DiffusionKurtosisFit"], [195, 1, 1, "", "DiffusionKurtosisModel"], [195, 3, 1, "", "Wcons"], [195, 3, 1, "", "Wrotate"], [195, 3, 1, "", "Wrotate_element"], [195, 3, 1, "", "apparent_kurtosis_coef"], [195, 3, 1, "", "axial_kurtosis"], [195, 3, 1, "", "carlson_rd"], [195, 3, 1, "", "carlson_rf"], [195, 3, 1, "", "cls_fit_dki"], [195, 3, 1, "", "directional_diffusion"], [195, 3, 1, "", "directional_diffusion_variance"], [195, 3, 1, "", "directional_kurtosis"], [195, 3, 1, "", "dki_prediction"], [195, 3, 1, "", "kurtosis_fractional_anisotropy"], [195, 3, 1, "", "kurtosis_maximum"], [195, 3, 1, "", "ls_fit_dki"], [195, 3, 1, "", "mean_kurtosis"], [195, 3, 1, "", "mean_kurtosis_tensor"], [195, 3, 1, "", "params_to_dki_params"], [195, 3, 1, "", "radial_kurtosis"], [195, 3, 1, "", "split_dki_param"]], "dipy.reconst.dki.DiffusionKurtosisFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "ak"], [195, 2, 1, "", "akc"], [195, 5, 1, "", "kfa"], [195, 2, 1, "", "kmax"], [195, 5, 1, "", "kt"], [195, 2, 1, "", "mk"], [195, 2, 1, "", "mkt"], [195, 2, 1, "", "predict"], [195, 2, 1, "", "rk"]], "dipy.reconst.dki.DiffusionKurtosisModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "multi_fit"], [195, 2, 1, "", "predict"]], "dipy.reconst.dki_micro": [[195, 1, 1, "", "KurtosisMicrostructuralFit"], [195, 1, 1, "", "KurtosisMicrostructureModel"], [195, 3, 1, "", "axonal_water_fraction"], [195, 3, 1, "", "diffusion_components"], [195, 3, 1, "", "dkimicro_prediction"], [195, 3, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructuralFit": [[195, 2, 1, "", "__init__"], [195, 5, 1, "", "awf"], [195, 5, 1, "", "axonal_diffusivity"], [195, 5, 1, "", "hindered_ad"], [195, 5, 1, "", "hindered_evals"], [195, 5, 1, "", "hindered_rd"], [195, 2, 1, "", "predict"], [195, 5, 1, "", "restricted_evals"], [195, 5, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructureModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "predict"]], "dipy.reconst.dsi": [[195, 1, 1, "", "DiffusionSpectrumDeconvFit"], [195, 1, 1, "", "DiffusionSpectrumDeconvModel"], [195, 1, 1, "", "DiffusionSpectrumFit"], [195, 1, 1, "", "DiffusionSpectrumModel"], [195, 3, 1, "", "LR_deconv"], [195, 3, 1, "", "create_qspace"], [195, 3, 1, "", "create_qtable"], [195, 3, 1, "", "gen_PSF"], [195, 3, 1, "", "half_to_full_qspace"], [195, 3, 1, "", "hanning_filter"], [195, 3, 1, "", "pdf_interp_coords"], [195, 3, 1, "", "pdf_odf"], [195, 3, 1, "", "project_hemisph_bvecs"], [195, 3, 1, "", "threshold_propagator"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "pdf"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.dsi.DiffusionSpectrumFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "msd_discrete"], [195, 2, 1, "", "odf"], [195, 2, 1, "", "pdf"], [195, 2, 1, "", "rtop_pdf"], [195, 2, 1, "", "rtop_signal"]], "dipy.reconst.dsi.DiffusionSpectrumModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.dti": [[195, 1, 1, "", "TensorFit"], [195, 1, 1, "", "TensorModel"], [195, 3, 1, "", "_lt_cols"], [195, 3, 1, "", "_lt_indices"], [195, 3, 1, "", "_lt_rows"], [195, 3, 1, "", "apparent_diffusion_coef"], [195, 3, 1, "", "axial_diffusivity"], [195, 3, 1, "", "color_fa"], [195, 3, 1, "", "decompose_tensor"], [195, 3, 1, "", "design_matrix"], [195, 3, 1, "", "determinant"], [195, 3, 1, "", "deviatoric"], [195, 3, 1, "", "eig_from_lo_tri"], [195, 3, 1, "", "fractional_anisotropy"], [195, 3, 1, "", "from_lower_triangular"], [195, 3, 1, "", "geodesic_anisotropy"], [195, 3, 1, "", "isotropic"], [195, 3, 1, "", "iter_fit_tensor"], [195, 3, 1, "", "linearity"], [195, 3, 1, "", "lower_triangular"], [195, 3, 1, "", "mean_diffusivity"], [195, 3, 1, "", "mode"], [195, 3, 1, "", "nlls_fit_tensor"], [195, 3, 1, "", "norm"], [195, 3, 1, "", "ols_fit_tensor"], [195, 3, 1, "", "planarity"], [195, 3, 1, "", "quantize_evecs"], [195, 3, 1, "", "radial_diffusivity"], [195, 3, 1, "", "restore_fit_tensor"], [195, 3, 1, "", "sphericity"], [195, 3, 1, "", "tensor_prediction"], [195, 3, 1, "", "trace"], [195, 3, 1, "", "wls_fit_tensor"]], "dipy.reconst.dti.TensorFit": [[195, 5, 1, "", "S0_hat"], [195, 2, 1, "", "__init__"], [195, 2, 1, "", "ad"], [195, 2, 1, "", "adc"], [195, 2, 1, "", "color_fa"], [195, 5, 1, "", "directions"], [195, 5, 1, "", "evals"], [195, 5, 1, "", "evecs"], [195, 2, 1, "", "fa"], [195, 2, 1, "", "ga"], [195, 2, 1, "", "linearity"], [195, 2, 1, "", "lower_triangular"], [195, 2, 1, "", "md"], [195, 2, 1, "", "mode"], [195, 2, 1, "", "odf"], [195, 2, 1, "", "planarity"], [195, 2, 1, "", "predict"], [195, 5, 1, "", "quadratic_form"], [195, 2, 1, "", "rd"], [195, 5, 1, "", "shape"], [195, 2, 1, "", "sphericity"], [195, 2, 1, "", "trace"]], "dipy.reconst.dti.TensorModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "predict"]], "dipy.reconst.forecast": [[195, 1, 1, "", "ForecastFit"], [195, 1, 1, "", "ForecastModel"], [195, 3, 1, "", "find_signal_means"], [195, 3, 1, "", "forecast_error_func"], [195, 3, 1, "", "forecast_matrix"], [195, 3, 1, "", "lb_forecast"], [195, 3, 1, "", "psi_l"], [195, 3, 1, "", "rho_matrix"]], "dipy.reconst.forecast.ForecastFit": [[195, 2, 1, "", "__init__"], [195, 5, 1, "", "dpar"], [195, 5, 1, "", "dperp"], [195, 2, 1, "", "fractional_anisotropy"], [195, 2, 1, "", "mean_diffusivity"], [195, 2, 1, "", "odf"], [195, 2, 1, "", "predict"], [195, 5, 1, "", "sh_coeff"]], "dipy.reconst.forecast.ForecastModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.fwdti": [[195, 1, 1, "", "FreeWaterTensorFit"], [195, 1, 1, "", "FreeWaterTensorModel"], [195, 3, 1, "", "cholesky_to_lower_triangular"], [195, 3, 1, "", "fwdti_prediction"], [195, 3, 1, "", "lower_triangular_to_cholesky"], [195, 3, 1, "", "nls_fit_tensor"], [195, 3, 1, "", "nls_iter"], [195, 3, 1, "", "wls_fit_tensor"], [195, 3, 1, "", "wls_iter"]], "dipy.reconst.fwdti.FreeWaterTensorFit": [[195, 2, 1, "", "__init__"], [195, 5, 1, "", "f"], [195, 2, 1, "", "predict"]], "dipy.reconst.fwdti.FreeWaterTensorModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "predict"]], "dipy.reconst.gqi": [[195, 1, 1, "", "GeneralizedQSamplingFit"], [195, 1, 1, "", "GeneralizedQSamplingModel"], [195, 3, 1, "", "equatorial_maximum"], [195, 3, 1, "", "equatorial_zone_vertices"], [195, 3, 1, "", "normalize_qa"], [195, 3, 1, "", "npa"], [195, 3, 1, "", "odf_sum"], [195, 3, 1, "", "patch_maximum"], [195, 3, 1, "", "patch_sum"], [195, 3, 1, "", "patch_vertices"], [195, 3, 1, "", "polar_zone_vertices"], [195, 3, 1, "", "squared_radial_component"], [195, 3, 1, "", "triple_odf_maxima"], [195, 3, 1, "", "upper_hemi_map"]], "dipy.reconst.gqi.GeneralizedQSamplingFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "odf"]], "dipy.reconst.gqi.GeneralizedQSamplingModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.ivim": [[195, 1, 1, "", "IvimFit"], [195, 1, 1, "", "IvimModelTRR"], [195, 1, 1, "", "IvimModelVP"], [195, 3, 1, "", "f_D_star_error"], [195, 3, 1, "", "f_D_star_prediction"], [195, 3, 1, "", "ivim_model_selector"], [195, 3, 1, "", "ivim_prediction"]], "dipy.reconst.ivim.IvimFit": [[195, 5, 1, "", "D"], [195, 5, 1, "", "D_star"], [195, 5, 1, "", "S0_predicted"], [195, 2, 1, "", "__init__"], [195, 5, 1, "", "perfusion_fraction"], [195, 2, 1, "", "predict"], [195, 5, 1, "", "shape"]], "dipy.reconst.ivim.IvimModelTRR": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "estimate_f_D_star"], [195, 2, 1, "", "estimate_linear_fit"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "predict"]], "dipy.reconst.ivim.IvimModelVP": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "cvx_fit"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "ivim_mix_cost_one"], [195, 2, 1, "", "nlls_cost"], [195, 2, 1, "", "phi"], [195, 2, 1, "", "stoc_search_cost"], [195, 2, 1, "", "x_and_f_to_x_f"], [195, 2, 1, "", "x_f_to_x_and_f"]], "dipy.reconst.mapmri": [[195, 1, 1, "", "MapmriFit"], [195, 1, 1, "", "MapmriModel"], [195, 3, 1, "", "b_mat"], [195, 3, 1, "", "b_mat_isotropic"], [195, 3, 1, "", "binomialfloat"], [195, 3, 1, "", "create_rspace"], [195, 3, 1, "", "delta"], [195, 3, 1, "", "gcv_cost_function"], [195, 3, 1, "", "generalized_crossvalidation"], [195, 3, 1, "", "generalized_crossvalidation_array"], [195, 3, 1, "", "isotropic_scale_factor"], [195, 3, 1, "", "map_laplace_s"], [195, 3, 1, "", "map_laplace_t"], [195, 3, 1, "", "map_laplace_u"], [195, 3, 1, "", "mapmri_STU_reg_matrices"], [195, 3, 1, "", "mapmri_index_matrix"], [195, 3, 1, "", "mapmri_isotropic_K_mu_dependent"], [195, 3, 1, "", "mapmri_isotropic_K_mu_independent"], [195, 3, 1, "", "mapmri_isotropic_M_mu_dependent"], [195, 3, 1, "", "mapmri_isotropic_M_mu_independent"], [195, 3, 1, "", "mapmri_isotropic_index_matrix"], [195, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix"], [195, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"], [195, 3, 1, "", "mapmri_isotropic_odf_matrix"], [195, 3, 1, "", "mapmri_isotropic_odf_sh_matrix"], [195, 3, 1, "", "mapmri_isotropic_phi_matrix"], [195, 3, 1, "", "mapmri_isotropic_psi_matrix"], [195, 3, 1, "", "mapmri_isotropic_radial_pdf_basis"], [195, 3, 1, "", "mapmri_isotropic_radial_signal_basis"], [195, 3, 1, "", "mapmri_laplacian_reg_matrix"], [195, 3, 1, "", "mapmri_odf_matrix"], [195, 3, 1, "", "mapmri_phi_1d"], [195, 3, 1, "", "mapmri_phi_matrix"], [195, 3, 1, "", "mapmri_psi_1d"], [195, 3, 1, "", "mapmri_psi_matrix"]], "dipy.reconst.mapmri.MapmriFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fitted_signal"], [195, 5, 1, "", "mapmri_R"], [195, 5, 1, "", "mapmri_coeff"], [195, 5, 1, "", "mapmri_mu"], [195, 2, 1, "", "msd"], [195, 2, 1, "", "ng"], [195, 2, 1, "", "ng_parallel"], [195, 2, 1, "", "ng_perpendicular"], [195, 2, 1, "", "norm_of_laplacian_signal"], [195, 2, 1, "", "odf"], [195, 2, 1, "", "odf_sh"], [195, 2, 1, "", "pdf"], [195, 2, 1, "", "predict"], [195, 2, 1, "", "qiv"], [195, 2, 1, "", "rtap"], [195, 2, 1, "", "rtop"], [195, 2, 1, "", "rtpp"]], "dipy.reconst.mapmri.MapmriModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.mcsd": [[195, 1, 1, "", "MSDeconvFit"], [195, 1, 1, "", "MultiShellDeconvModel"], [195, 1, 1, "", "MultiShellResponse"], [195, 1, 1, "", "QpFitter"], [195, 3, 1, "", "auto_response_msmt"], [195, 3, 1, "", "mask_for_response_msmt"], [195, 3, 1, "", "multi_shell_fiber_response"], [195, 3, 1, "", "multi_tissue_basis"], [195, 3, 1, "", "response_from_mask_msmt"], [195, 3, 1, "", "solve_qp"]], "dipy.reconst.mcsd.MSDeconvFit": [[195, 2, 1, "", "__init__"], [195, 5, 1, "", "all_shm_coeff"], [195, 5, 1, "", "shm_coeff"], [195, 5, 1, "", "volume_fractions"]], "dipy.reconst.mcsd.MultiShellDeconvModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "predict"]], "dipy.reconst.mcsd.MultiShellResponse": [[195, 2, 1, "", "__init__"], [195, 5, 1, "", "iso"]], "dipy.reconst.mcsd.QpFitter": [[195, 2, 1, "", "__init__"]], "dipy.reconst.msdki": [[195, 1, 1, "", "MeanDiffusionKurtosisFit"], [195, 1, 1, "", "MeanDiffusionKurtosisModel"], [195, 3, 1, "", "awf_from_msk"], [195, 3, 1, "", "design_matrix"], [195, 3, 1, "", "mean_signal_bvalue"], [195, 3, 1, "", "msdki_prediction"], [195, 3, 1, "", "msk_from_awf"], [195, 3, 1, "", "wls_fit_msdki"]], "dipy.reconst.msdki.MeanDiffusionKurtosisFit": [[195, 5, 1, "", "S0_hat"], [195, 2, 1, "", "__init__"], [195, 2, 1, "", "msd"], [195, 2, 1, "", "msk"], [195, 2, 1, "", "predict"], [195, 2, 1, "", "smt2di"], [195, 2, 1, "", "smt2f"], [195, 2, 1, "", "smt2uFA"]], "dipy.reconst.msdki.MeanDiffusionKurtosisModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "predict"]], "dipy.reconst.multi_voxel": [[195, 1, 1, "", "CallableArray"], [195, 1, 1, "", "MultiVoxelFit"], [195, 3, 1, "", "multi_voxel_fit"]], "dipy.reconst.multi_voxel.CallableArray": [[195, 2, 1, "", "__init__"]], "dipy.reconst.multi_voxel.MultiVoxelFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "predict"], [195, 5, 1, "", "shape"]], "dipy.reconst.odf": [[195, 1, 1, "", "OdfFit"], [195, 1, 1, "", "OdfModel"], [195, 3, 1, "", "gfa"], [195, 3, 1, "", "minmax_normalize"]], "dipy.reconst.odf.OdfFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "odf"]], "dipy.reconst.odf.OdfModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.qtdmri": [[195, 3, 1, "", "GCV_cost_function"], [195, 3, 1, "", "H"], [195, 1, 1, "", "QtdmriFit"], [195, 1, 1, "", "QtdmriModel"], [195, 3, 1, "", "angular_basis_EAP_opt"], [195, 3, 1, "", "angular_basis_opt"], [195, 3, 1, "", "create_rt_space_grid"], [195, 3, 1, "", "design_matrix_spatial"], [195, 3, 1, "", "elastic_crossvalidation"], [195, 3, 1, "", "generalized_crossvalidation"], [195, 3, 1, "", "l1_crossvalidation"], [195, 3, 1, "", "part1_reg_matrix_tau"], [195, 3, 1, "", "part23_iso_reg_matrix_q"], [195, 3, 1, "", "part23_reg_matrix_q"], [195, 3, 1, "", "part23_reg_matrix_tau"], [195, 3, 1, "", "part4_iso_reg_matrix_q"], [195, 3, 1, "", "part4_reg_matrix_q"], [195, 3, 1, "", "part4_reg_matrix_tau"], [195, 3, 1, "", "qtdmri_anisotropic_scaling"], [195, 3, 1, "", "qtdmri_eap_matrix"], [195, 3, 1, "", "qtdmri_eap_matrix_"], [195, 3, 1, "", "qtdmri_index_matrix"], [195, 3, 1, "", "qtdmri_isotropic_eap_matrix"], [195, 3, 1, "", "qtdmri_isotropic_eap_matrix_"], [195, 3, 1, "", "qtdmri_isotropic_index_matrix"], [195, 3, 1, "", "qtdmri_isotropic_laplacian_reg_matrix"], [195, 3, 1, "", "qtdmri_isotropic_scaling"], [195, 3, 1, "", "qtdmri_isotropic_signal_matrix"], [195, 3, 1, "", "qtdmri_isotropic_signal_matrix_"], [195, 3, 1, "", "qtdmri_isotropic_to_mapmri_matrix"], [195, 3, 1, "", "qtdmri_laplacian_reg_matrix"], [195, 3, 1, "", "qtdmri_mapmri_isotropic_normalization"], [195, 3, 1, "", "qtdmri_mapmri_normalization"], [195, 3, 1, "", "qtdmri_number_of_coefficients"], [195, 3, 1, "", "qtdmri_signal_matrix"], [195, 3, 1, "", "qtdmri_signal_matrix_"], [195, 3, 1, "", "qtdmri_temporal_normalization"], [195, 3, 1, "", "qtdmri_to_mapmri_matrix"], [195, 3, 1, "", "radial_basis_EAP_opt"], [195, 3, 1, "", "radial_basis_opt"], [195, 3, 1, "", "temporal_basis"], [195, 3, 1, "", "visualise_gradient_table_G_Delta_rainbow"]], "dipy.reconst.qtdmri.QtdmriFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fitted_signal"], [195, 2, 1, "", "msd"], [195, 2, 1, "", "norm_of_laplacian_signal"], [195, 2, 1, "", "odf"], [195, 2, 1, "", "odf_sh"], [195, 2, 1, "", "pdf"], [195, 2, 1, "", "predict"], [195, 2, 1, "", "qiv"], [195, 2, 1, "", "qtdmri_to_mapmri_coef"], [195, 2, 1, "", "rtap"], [195, 2, 1, "", "rtop"], [195, 2, 1, "", "rtpp"], [195, 2, 1, "", "sparsity_abs"], [195, 2, 1, "", "sparsity_density"]], "dipy.reconst.qtdmri.QtdmriModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.qti": [[195, 1, 1, "", "QtiFit"], [195, 1, 1, "", "QtiModel"], [195, 3, 1, "", "cvxpy_1x21_to_6x6"], [195, 3, 1, "", "cvxpy_1x6_to_3x3"], [195, 3, 1, "", "design_matrix"], [195, 3, 1, "", "dtd_covariance"], [195, 3, 1, "", "from_21x1_to_6x6"], [195, 3, 1, "", "from_3x3_to_6x1"], [195, 3, 1, "", "from_6x1_to_3x3"], [195, 3, 1, "", "from_6x6_to_21x1"], [195, 3, 1, "", "qti_signal"]], "dipy.reconst.qti.QtiFit": [[195, 2, 1, "", "S0_hat"], [195, 2, 1, "", "__init__"], [195, 2, 1, "", "c_c"], [195, 2, 1, "", "c_m"], [195, 2, 1, "", "c_md"], [195, 2, 1, "", "c_mu"], [195, 2, 1, "", "d_sq"], [195, 2, 1, "", "fa"], [195, 2, 1, "", "k_bulk"], [195, 2, 1, "", "k_mu"], [195, 2, 1, "", "k_shear"], [195, 2, 1, "", "md"], [195, 2, 1, "", "mean_d_sq"], [195, 2, 1, "", "mk"], [195, 2, 1, "", "predict"], [195, 2, 1, "", "ufa"], [195, 2, 1, "", "v_iso"], [195, 2, 1, "", "v_md"], [195, 2, 1, "", "v_shear"]], "dipy.reconst.qti.QtiModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"], [195, 2, 1, "", "predict"]], "dipy.reconst.rumba": [[195, 1, 1, "", "RumbaFit"], [195, 1, 1, "", "RumbaSDModel"], [195, 3, 1, "", "generate_kernel"], [195, 3, 1, "", "logger"], [195, 3, 1, "", "mbessel_ratio"], [195, 3, 1, "", "rumba_deconv"], [195, 3, 1, "", "rumba_deconv_global"]], "dipy.reconst.rumba.RumbaFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "combined_odf_iso"], [195, 2, 1, "", "f_csf"], [195, 2, 1, "", "f_gm"], [195, 2, 1, "", "f_iso"], [195, 2, 1, "", "f_wm"], [195, 2, 1, "", "odf"], [195, 2, 1, "", "predict"]], "dipy.reconst.rumba.RumbaSDModel": [[195, 2, 1, "", "__init__"]], "dipy.reconst.sfm": [[195, 1, 1, "", "ExponentialIsotropicFit"], [195, 1, 1, "", "ExponentialIsotropicModel"], [195, 1, 1, "", "IsotropicFit"], [195, 1, 1, "", "IsotropicModel"], [195, 1, 1, "", "SparseFascicleFit"], [195, 1, 1, "", "SparseFascicleModel"], [195, 3, 1, "", "sfm_design_matrix"]], "dipy.reconst.sfm.ExponentialIsotropicFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "predict"]], "dipy.reconst.sfm.ExponentialIsotropicModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.sfm.IsotropicFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "predict"]], "dipy.reconst.sfm.IsotropicModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.sfm.SparseFascicleFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "odf"], [195, 2, 1, "", "predict"]], "dipy.reconst.sfm.SparseFascicleModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "design_matrix"], [195, 2, 1, "", "fit"]], "dipy.reconst.shm": [[195, 1, 1, "", "CsaOdfModel"], [195, 1, 1, "", "OpdtModel"], [195, 1, 1, "", "QballBaseModel"], [195, 1, 1, "", "QballModel"], [195, 1, 1, "", "ResidualBootstrapWrapper"], [195, 1, 1, "", "SphHarmFit"], [195, 1, 1, "", "SphHarmModel"], [195, 3, 1, "", "anisotropic_power"], [195, 3, 1, "", "bootstrap_data_array"], [195, 3, 1, "", "bootstrap_data_voxel"], [195, 3, 1, "", "calculate_max_order"], [195, 3, 1, "", "convert_sh_from_legacy"], [195, 3, 1, "", "convert_sh_to_full_basis"], [195, 3, 1, "", "convert_sh_to_legacy"], [195, 3, 1, "", "forward_sdeconv_mat"], [195, 3, 1, "", "gen_dirac"], [195, 3, 1, "", "hat"], [195, 3, 1, "", "lazy_index"], [195, 3, 1, "", "lcr_matrix"], [195, 3, 1, "", "normalize_data"], [195, 3, 1, "", "order_from_ncoef"], [195, 3, 1, "", "real_sh_descoteaux"], [195, 3, 1, "", "real_sh_descoteaux_from_index"], [195, 3, 1, "", "real_sh_tournier"], [195, 3, 1, "", "real_sh_tournier_from_index"], [195, 3, 1, "", "real_sph_harm"], [195, 3, 1, "", "real_sym_sh_basis"], [195, 3, 1, "", "real_sym_sh_mrtrix"], [195, 3, 1, "", "sf_to_sh"], [195, 3, 1, "", "sh_to_rh"], [195, 3, 1, "", "sh_to_sf"], [195, 3, 1, "", "sh_to_sf_matrix"], [195, 3, 1, "", "smooth_pinv"], [195, 3, 1, "", "sph_harm_ind_list"], [195, 3, 1, "", "spherical_harmonics"]], "dipy.reconst.shm.CsaOdfModel": [[195, 2, 1, "", "__init__"], [195, 4, 1, "", "max"], [195, 4, 1, "", "min"]], "dipy.reconst.shm.OpdtModel": [[195, 2, 1, "", "__init__"]], "dipy.reconst.shm.QballBaseModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.shm.QballModel": [[195, 2, 1, "", "__init__"]], "dipy.reconst.shm.ResidualBootstrapWrapper": [[195, 2, 1, "", "__init__"]], "dipy.reconst.shm.SphHarmFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "gfa"], [195, 2, 1, "", "odf"], [195, 2, 1, "", "predict"], [195, 5, 1, "", "shape"], [195, 5, 1, "", "shm_coeff"]], "dipy.reconst.shm.SphHarmModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "sampling_matrix"]], "dipy.reconst.shore": [[195, 1, 1, "", "ShoreFit"], [195, 1, 1, "", "ShoreModel"], [195, 3, 1, "", "create_rspace"], [195, 3, 1, "", "l_shore"], [195, 3, 1, "", "n_shore"], [195, 3, 1, "", "shore_indices"], [195, 3, 1, "", "shore_matrix"], [195, 3, 1, "", "shore_matrix_odf"], [195, 3, 1, "", "shore_matrix_pdf"], [195, 3, 1, "", "shore_order"]], "dipy.reconst.shore.ShoreFit": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fitted_signal"], [195, 2, 1, "", "msd"], [195, 2, 1, "", "odf"], [195, 2, 1, "", "odf_sh"], [195, 2, 1, "", "pdf"], [195, 2, 1, "", "pdf_grid"], [195, 2, 1, "", "rtop_pdf"], [195, 2, 1, "", "rtop_signal"], [195, 5, 1, "", "shore_coeff"]], "dipy.reconst.shore.ShoreModel": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "fit"]], "dipy.reconst.utils": [[195, 3, 1, "", "dki_design_matrix"]], "dipy.segment": [[196, 0, 0, "-", "benchmarks"], [196, 0, 0, "-", "bundles"], [196, 0, 0, "-", "clustering"], [196, 0, 0, "-", "fss"], [196, 0, 0, "-", "mask"], [196, 0, 0, "-", "metric"], [196, 0, 0, "-", "threshold"], [196, 0, 0, "-", "tissue"]], "dipy.segment.benchmarks": [[196, 0, 0, "-", "bench_quickbundles"]], "dipy.segment.benchmarks.bench_quickbundles": [[196, 1, 1, "", "MDFpy"], [196, 3, 1, "", "bench_quickbundles"]], "dipy.segment.benchmarks.bench_quickbundles.MDFpy": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "are_compatible"], [196, 2, 1, "", "dist"]], "dipy.segment.bundles": [[196, 1, 1, "", "RecoBundles"], [196, 3, 1, "", "ba_analysis"], [196, 3, 1, "", "bundle_adjacency"], [196, 3, 1, "", "bundle_shape_similarity"], [196, 3, 1, "", "check_range"], [196, 3, 1, "", "cluster_bundle"], [196, 3, 1, "", "logger"]], "dipy.segment.bundles.RecoBundles": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "evaluate_results"], [196, 2, 1, "", "recognize"], [196, 2, 1, "", "refine"]], "dipy.segment.clustering": [[196, 1, 1, "", "Cluster"], [196, 1, 1, "", "ClusterCentroid"], [196, 1, 1, "", "ClusterMap"], [196, 1, 1, "", "ClusterMapCentroid"], [196, 1, 1, "", "Clustering"], [196, 1, 1, "", "Identity"], [196, 1, 1, "", "QuickBundles"], [196, 1, 1, "", "QuickBundlesX"], [196, 1, 1, "", "TreeCluster"], [196, 1, 1, "", "TreeClusterMap"], [196, 3, 1, "", "logger"], [196, 3, 1, "", "qbx_and_merge"]], "dipy.segment.clustering.Cluster": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "assign"]], "dipy.segment.clustering.ClusterCentroid": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "assign"], [196, 2, 1, "", "update"]], "dipy.segment.clustering.ClusterMap": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "add_cluster"], [196, 2, 1, "", "clear"], [196, 5, 1, "", "clusters"], [196, 2, 1, "", "clusters_sizes"], [196, 2, 1, "", "get_large_clusters"], [196, 2, 1, "", "get_small_clusters"], [196, 5, 1, "", "refdata"], [196, 2, 1, "", "remove_cluster"], [196, 2, 1, "", "size"]], "dipy.segment.clustering.ClusterMapCentroid": [[196, 2, 1, "", "__init__"], [196, 5, 1, "", "centroids"]], "dipy.segment.clustering.Clustering": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "cluster"]], "dipy.segment.clustering.Identity": [[196, 2, 1, "", "__init__"]], "dipy.segment.clustering.QuickBundles": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "cluster"]], "dipy.segment.clustering.QuickBundlesX": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "cluster"]], "dipy.segment.clustering.TreeCluster": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "add"], [196, 5, 1, "", "is_leaf"], [196, 2, 1, "", "return_indices"]], "dipy.segment.clustering.TreeClusterMap": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "get_clusters"], [196, 2, 1, "", "iter_preorder"], [196, 5, 1, "", "refdata"], [196, 2, 1, "", "traverse_postorder"]], "dipy.segment.fss": [[196, 1, 1, "", "FastStreamlineSearch"], [196, 3, 1, "", "nearest_from_matrix_col"], [196, 3, 1, "", "nearest_from_matrix_row"]], "dipy.segment.fss.FastStreamlineSearch": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "radius_search"]], "dipy.segment.mask": [[196, 3, 1, "", "applymask"], [196, 3, 1, "", "bounding_box"], [196, 3, 1, "", "clean_cc_mask"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "median_otsu"], [196, 3, 1, "", "multi_median"], [196, 3, 1, "", "segment_from_cfa"]], "dipy.segment.metric": [[196, 3, 1, "", "mdf"], [196, 3, 1, "", "mean_euclidean_distance"], [196, 3, 1, "", "mean_manhattan_distance"]], "dipy.segment.threshold": [[196, 3, 1, "", "otsu"], [196, 3, 1, "", "upper_bound_by_percent"], [196, 3, 1, "", "upper_bound_by_rate"]], "dipy.segment.tissue": [[196, 1, 1, "", "TissueClassifierHMRF"]], "dipy.segment.tissue.TissueClassifierHMRF": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "classify"]], "dipy.sims": [[197, 0, 0, "-", "phantom"], [197, 0, 0, "-", "voxel"]], "dipy.sims.phantom": [[197, 3, 1, "", "add_noise"], [197, 3, 1, "", "diff2eigenvectors"], [197, 3, 1, "", "orbital_phantom"]], "dipy.sims.voxel": [[197, 3, 1, "", "add_noise"], [197, 3, 1, "", "all_tensor_evecs"], [197, 3, 1, "", "callaghan_perpendicular"], [197, 3, 1, "", "cylinders_and_ball_soderman"], [197, 3, 1, "", "diffusion_evals"], [197, 3, 1, "", "dki_signal"], [197, 3, 1, "", "gaussian_parallel"], [197, 3, 1, "", "kurtosis_element"], [197, 3, 1, "", "multi_tensor"], [197, 3, 1, "", "multi_tensor_dki"], [197, 3, 1, "", "multi_tensor_msd"], [197, 3, 1, "", "multi_tensor_odf"], [197, 3, 1, "", "multi_tensor_pdf"], [197, 3, 1, "", "multi_tensor_rtop"], [197, 3, 1, "", "single_tensor"], [197, 3, 1, "", "single_tensor_msd"], [197, 3, 1, "", "single_tensor_odf"], [197, 3, 1, "", "single_tensor_pdf"], [197, 3, 1, "", "single_tensor_rtop"], [197, 3, 1, "", "sticks_and_ball"]], "dipy.stats": [[198, 0, 0, "-", "analysis"]], "dipy.stats.analysis": [[198, 3, 1, "", "afq_profile"], [198, 3, 1, "", "anatomical_measures"], [198, 3, 1, "", "assignment_map"], [198, 3, 1, "", "gaussian_weights"], [198, 3, 1, "", "peak_values"]], "dipy.tracking": [[199, 0, 0, "-", "_utils"], [199, 0, 0, "-", "benchmarks"], [199, 0, 0, "-", "learning"], [199, 0, 0, "-", "life"], [199, 0, 0, "-", "local_tracking"], [199, 0, 0, "-", "mesh"], [199, 0, 0, "-", "metrics"], [199, 0, 0, "-", "streamline"], [199, 0, 0, "-", "utils"]], "dipy.tracking.benchmarks": [[199, 0, 0, "-", "bench_streamline"]], "dipy.tracking.benchmarks.bench_streamline": [[199, 3, 1, "", "bench_compress_streamlines"], [199, 3, 1, "", "bench_length"], [199, 3, 1, "", "bench_set_number_of_points"], [199, 3, 1, "", "generate_streamlines"], [199, 3, 1, "", "setup"]], "dipy.tracking.learning": [[199, 3, 1, "", "detect_corresponding_tracks"], [199, 3, 1, "", "detect_corresponding_tracks_plus"]], "dipy.tracking.life": [[199, 1, 1, "", "FiberFit"], [199, 1, 1, "", "FiberModel"], [199, 1, 1, "", "LifeSignalMaker"], [199, 3, 1, "", "grad_tensor"], [199, 3, 1, "", "gradient"], [199, 3, 1, "", "streamline_gradients"], [199, 3, 1, "", "streamline_signal"], [199, 3, 1, "", "streamline_tensors"], [199, 3, 1, "", "voxel2streamline"]], "dipy.tracking.life.FiberFit": [[199, 2, 1, "", "__init__"], [199, 2, 1, "", "predict"]], "dipy.tracking.life.FiberModel": [[199, 2, 1, "", "__init__"], [199, 2, 1, "", "fit"], [199, 2, 1, "", "setup"]], "dipy.tracking.life.LifeSignalMaker": [[199, 2, 1, "", "__init__"], [199, 2, 1, "", "calc_signal"], [199, 2, 1, "", "streamline_signal"]], "dipy.tracking.local_tracking": [[199, 1, 1, "", "LocalTracking"], [199, 1, 1, "", "ParticleFilteringTracking"]], "dipy.tracking.local_tracking.LocalTracking": [[199, 2, 1, "", "__init__"]], "dipy.tracking.local_tracking.ParticleFilteringTracking": [[199, 2, 1, "", "__init__"]], "dipy.tracking.mesh": [[199, 3, 1, "", "random_coordinates_from_surface"], [199, 3, 1, "", "seeds_from_surface_coordinates"], [199, 3, 1, "", "triangles_area"], [199, 3, 1, "", "vertices_to_triangles_values"]], "dipy.tracking.metrics": [[199, 3, 1, "", "arbitrarypoint"], [199, 3, 1, "", "bytes"], [199, 3, 1, "", "center_of_mass"], [199, 3, 1, "", "downsample"], [199, 3, 1, "", "endpoint"], [199, 3, 1, "", "frenet_serret"], [199, 3, 1, "", "generate_combinations"], [199, 3, 1, "", "inside_sphere"], [199, 3, 1, "", "inside_sphere_points"], [199, 3, 1, "", "intersect_sphere"], [199, 3, 1, "", "length"], [199, 3, 1, "", "longest_track_bundle"], [199, 3, 1, "", "magn"], [199, 3, 1, "", "mean_curvature"], [199, 3, 1, "", "mean_orientation"], [199, 3, 1, "", "midpoint"], [199, 3, 1, "", "midpoint2point"], [199, 3, 1, "", "principal_components"], [199, 3, 1, "", "spline"], [199, 3, 1, "", "startpoint"], [199, 3, 1, "", "winding"]], "dipy.tracking.streamline": [[199, 3, 1, "", "center_streamlines"], [199, 3, 1, "", "cluster_confidence"], [199, 3, 1, "", "deform_streamlines"], [199, 3, 1, "", "nbytes"], [199, 3, 1, "", "orient_by_rois"], [199, 3, 1, "", "orient_by_streamline"], [199, 3, 1, "", "relist_streamlines"], [199, 3, 1, "", "select_by_rois"], [199, 3, 1, "", "select_random_set_of_streamlines"], [199, 3, 1, "", "transform_streamlines"], [199, 3, 1, "", "unlist_streamlines"], [199, 3, 1, "", "values_from_volume"]], "dipy.tracking.utils": [[199, 3, 1, "", "connectivity_matrix"], [199, 3, 1, "", "density_map"], [199, 3, 1, "", "length"], [199, 3, 1, "", "max_angle_from_curvature"], [199, 3, 1, "", "min_radius_curvature_from_angle"], [199, 3, 1, "", "ndbincount"], [199, 3, 1, "", "near_roi"], [199, 3, 1, "", "path_length"], [199, 3, 1, "", "random_seeds_from_mask"], [199, 3, 1, "", "reduce_labels"], [199, 3, 1, "", "reduce_rois"], [199, 3, 1, "", "seeds_from_mask"], [199, 3, 1, "", "streamline_near_roi"], [199, 3, 1, "", "subsegment"], [199, 3, 1, "", "target"], [199, 3, 1, "", "target_line_based"], [199, 3, 1, "", "transform_tracking_output"], [199, 3, 1, "", "unique_rows"]], "dipy.viz": [[200, 0, 0, "-", "app"], [200, 0, 0, "-", "gmem"], [200, 0, 0, "-", "horizon"], [200, 0, 0, "-", "panel"], [200, 0, 0, "-", "plotting"], [200, 0, 0, "-", "projections"], [200, 0, 0, "-", "regtools"], [200, 0, 0, "-", "streamline"]], "dipy.viz.app": [[200, 1, 1, "", "Horizon"], [200, 3, 1, "", "apply_shader"], [200, 3, 1, "", "horizon"]], "dipy.viz.app.Horizon": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "add_cluster_actors"], [200, 2, 1, "", "build_scene"], [200, 2, 1, "", "build_show"], [200, 2, 1, "", "remove_cluster_actors"]], "dipy.viz.gmem": [[200, 1, 1, "", "GlobalHorizon"]], "dipy.viz.gmem.GlobalHorizon": [[200, 2, 1, "", "__init__"]], "dipy.viz.horizon": [[200, 0, 0, "-", "app"], [200, 0, 0, "-", "tab"], [200, 0, 0, "-", "visualizer"]], "dipy.viz.horizon.app": [[200, 1, 1, "", "Horizon"], [200, 3, 1, "", "horizon"]], "dipy.viz.horizon.app.Horizon": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "build_scene"], [200, 2, 1, "", "build_show"]], "dipy.viz.horizon.tab": [[200, 0, 0, "-", "base"], [200, 0, 0, "-", "cluster"], [200, 0, 0, "-", "peak"], [200, 0, 0, "-", "roi"], [200, 0, 0, "-", "slice"]], "dipy.viz.horizon.tab.base": [[200, 1, 1, "", "HorizonTab"], [200, 1, 1, "", "TabManager"], [200, 3, 1, "", "build_label"], [200, 3, 1, "", "color_double_slider"], [200, 3, 1, "", "color_single_slider"]], "dipy.viz.horizon.tab.base.HorizonTab": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "build"], [200, 5, 1, "", "name"]], "dipy.viz.horizon.tab.base.TabManager": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "reposition"], [200, 5, 1, "", "tab_ui"]], "dipy.viz.horizon.tab.cluster": [[200, 1, 1, "", "ClustersTab"]], "dipy.viz.horizon.tab.cluster.ClustersTab": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "build"], [200, 5, 1, "", "name"]], "dipy.viz.horizon.tab.peak": [[200, 1, 1, "", "PeaksTab"]], "dipy.viz.horizon.tab.peak.PeaksTab": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "build"], [200, 5, 1, "", "name"]], "dipy.viz.horizon.tab.roi": [[200, 1, 1, "", "ROIsTab"]], "dipy.viz.horizon.tab.roi.ROIsTab": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "build"], [200, 5, 1, "", "name"]], "dipy.viz.horizon.tab.slice": [[200, 1, 1, "", "SlicesTab"]], "dipy.viz.horizon.tab.slice.SlicesTab": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "build"], [200, 5, 1, "", "name"]], "dipy.viz.horizon.visualizer": [[200, 0, 0, "-", "cluster"], [200, 0, 0, "-", "slice"]], "dipy.viz.horizon.visualizer.cluster": [[200, 1, 1, "", "ClustersVisualizer"]], "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "add_cluster_actors"], [200, 5, 1, "", "centroid_actors"], [200, 5, 1, "", "cluster_actors"], [200, 5, 1, "", "lengths"], [200, 2, 1, "", "recluster_tractograms"], [200, 5, 1, "", "sizes"], [200, 5, 1, "", "tractogram_clusters"]], "dipy.viz.horizon.visualizer.slice": [[200, 1, 1, "", "SlicesVisualizer"]], "dipy.viz.horizon.visualizer.slice.SlicesVisualizer": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "change_volume"], [200, 5, 1, "", "data_shape"], [200, 5, 1, "", "intensities_range"], [200, 2, 1, "", "register_picker_callback"], [200, 5, 1, "", "selected_slices"], [200, 5, 1, "", "slice_actors"], [200, 5, 1, "", "volume_max"], [200, 5, 1, "", "volume_min"]], "dipy.viz.panel": [[200, 3, 1, "", "build_label"], [200, 3, 1, "", "slicer_panel"]], "dipy.viz.plotting": [[200, 3, 1, "", "bundle_shape_profile"], [200, 3, 1, "", "compare_maps"], [200, 3, 1, "", "compare_qti_maps"]], "dipy.viz.projections": [[200, 3, 1, "", "sph_project"]], "dipy.viz.regtools": [[200, 3, 1, "", "draw_lattice_2d"], [200, 3, 1, "", "overlay_images"], [200, 3, 1, "", "overlay_slices"], [200, 3, 1, "", "plot_2d_diffeomorphic_map"], [200, 3, 1, "", "plot_slices"], [200, 3, 1, "", "simple_plot"]], "dipy.viz.streamline": [[200, 3, 1, "", "show_bundles"], [200, 3, 1, "", "viz_displacement_mag"], [200, 3, 1, "", "viz_two_bundles"], [200, 3, 1, "", "viz_vector_field"]], "dipy.workflows": [[201, 0, 0, "-", "align"], [201, 0, 0, "-", "base"], [201, 0, 0, "-", "combined_workflow"], [201, 0, 0, "-", "denoise"], [201, 0, 0, "-", "docstring_parser"], [201, 0, 0, "-", "flow_runner"], [201, 0, 0, "-", "io"], [201, 0, 0, "-", "mask"], [201, 0, 0, "-", "multi_io"], [201, 0, 0, "-", "reconst"], [201, 0, 0, "-", "segment"], [201, 0, 0, "-", "stats"], [201, 0, 0, "-", "tracking"], [201, 0, 0, "-", "viz"], [201, 0, 0, "-", "workflow"]], "dipy.workflows.align": [[201, 1, 1, "", "ApplyTransformFlow"], [201, 1, 1, "", "BundleWarpFlow"], [201, 1, 1, "", "ImageRegistrationFlow"], [201, 1, 1, "", "MotionCorrectionFlow"], [201, 1, 1, "", "ResliceFlow"], [201, 1, 1, "", "SlrWithQbxFlow"], [201, 1, 1, "", "SynRegistrationFlow"], [201, 3, 1, "", "check_dimensions"]], "dipy.workflows.align.ApplyTransformFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "run"]], "dipy.workflows.align.BundleWarpFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.align.ImageRegistrationFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "run"]], "dipy.workflows.align.MotionCorrectionFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "run"]], "dipy.workflows.align.ResliceFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.align.SlrWithQbxFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.align.SynRegistrationFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "run"]], "dipy.workflows.base": [[201, 1, 1, "", "IntrospectiveArgumentParser"], [201, 3, 1, "", "get_args_default"], [201, 3, 1, "", "none_or_dtype"]], "dipy.workflows.base.IntrospectiveArgumentParser": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "add_description"], [201, 2, 1, "", "add_epilogue"], [201, 2, 1, "", "add_sub_flow_args"], [201, 2, 1, "", "add_workflow"], [201, 2, 1, "", "get_flow_args"], [201, 5, 1, "", "optional_parameters"], [201, 5, 1, "", "output_parameters"], [201, 5, 1, "", "positional_parameters"], [201, 2, 1, "", "show_argument"], [201, 2, 1, "", "update_argument"]], "dipy.workflows.combined_workflow": [[201, 1, 1, "", "CombinedWorkflow"]], "dipy.workflows.combined_workflow.CombinedWorkflow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_optionals"], [201, 2, 1, "", "get_sub_runs"], [201, 2, 1, "", "run_sub_flow"], [201, 2, 1, "", "set_sub_flows_optionals"]], "dipy.workflows.denoise": [[201, 1, 1, "", "GibbsRingingFlow"], [201, 1, 1, "", "LPCAFlow"], [201, 1, 1, "", "MPPCAFlow"], [201, 1, 1, "", "NLMeansFlow"], [201, 1, 1, "", "Patch2SelfFlow"]], "dipy.workflows.denoise.GibbsRingingFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.denoise.LPCAFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.denoise.MPPCAFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.denoise.NLMeansFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.denoise.Patch2SelfFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.docstring_parser": [[201, 1, 1, "", "NumpyDocString"], [201, 1, 1, "", "Reader"], [201, 3, 1, "", "dedent_lines"]], "dipy.workflows.docstring_parser.NumpyDocString": [[201, 2, 1, "", "__init__"]], "dipy.workflows.docstring_parser.Reader": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "eof"], [201, 2, 1, "", "is_empty"], [201, 2, 1, "", "peek"], [201, 2, 1, "", "read"], [201, 2, 1, "", "read_to_condition"], [201, 2, 1, "", "read_to_next_empty_line"], [201, 2, 1, "", "read_to_next_unindented_line"], [201, 2, 1, "", "reset"], [201, 2, 1, "", "seek_next_non_empty_line"]], "dipy.workflows.flow_runner": [[201, 3, 1, "", "get_level"], [201, 3, 1, "", "run_flow"]], "dipy.workflows.io": [[201, 1, 1, "", "FetchFlow"], [201, 1, 1, "", "IoInfoFlow"], [201, 1, 1, "", "SplitFlow"]], "dipy.workflows.io.FetchFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_fetcher_datanames"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "load_module"], [201, 2, 1, "", "run"]], "dipy.workflows.io.IoInfoFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.io.SplitFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.mask": [[201, 1, 1, "", "MaskFlow"]], "dipy.workflows.mask.MaskFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.multi_io": [[201, 1, 1, "", "IOIterator"], [201, 3, 1, "", "basename_without_extension"], [201, 3, 1, "", "common_start"], [201, 3, 1, "", "concatenate_inputs"], [201, 3, 1, "", "connect_output_paths"], [201, 3, 1, "", "io_iterator"], [201, 3, 1, "", "io_iterator_"], [201, 3, 1, "", "slash_to_under"]], "dipy.workflows.multi_io.IOIterator": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "create_directories"], [201, 2, 1, "", "create_outputs"], [201, 2, 1, "", "file_existence_check"], [201, 2, 1, "", "set_inputs"], [201, 2, 1, "", "set_out_dir"], [201, 2, 1, "", "set_out_fnames"], [201, 2, 1, "", "set_output_keys"]], "dipy.workflows.reconst": [[201, 1, 1, "", "ReconstCSAFlow"], [201, 1, 1, "", "ReconstCSDFlow"], [201, 1, 1, "", "ReconstDkiFlow"], [201, 1, 1, "", "ReconstDtiFlow"], [201, 1, 1, "", "ReconstIvimFlow"], [201, 1, 1, "", "ReconstMAPMRIFlow"], [201, 1, 1, "", "ReconstRUMBAFlow"]], "dipy.workflows.reconst.ReconstCSAFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstCSDFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDkiFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_fitted_tensor"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDtiFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_fitted_tensor"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstIvimFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_fitted_ivim"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstMAPMRIFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstRUMBAFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.segment": [[201, 1, 1, "", "EVACPlusFlow"], [201, 1, 1, "", "LabelsBundlesFlow"], [201, 1, 1, "", "MedianOtsuFlow"], [201, 1, 1, "", "RecoBundlesFlow"]], "dipy.workflows.segment.EVACPlusFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.segment.LabelsBundlesFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.segment.MedianOtsuFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.segment.RecoBundlesFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.stats": [[201, 1, 1, "", "BundleAnalysisTractometryFlow"], [201, 1, 1, "", "BundleShapeAnalysis"], [201, 1, 1, "", "LinearMixedModelsFlow"], [201, 1, 1, "", "SNRinCCFlow"], [201, 3, 1, "", "buan_bundle_profiles"]], "dipy.workflows.stats.BundleAnalysisTractometryFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.stats.BundleShapeAnalysis": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.stats.LinearMixedModelsFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_metric_name"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"], [201, 2, 1, "", "save_lmm_plot"]], "dipy.workflows.stats.SNRinCCFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.tracking": [[201, 1, 1, "", "LocalFiberTrackingPAMFlow"], [201, 1, 1, "", "PFTrackingPAMFlow"]], "dipy.workflows.tracking.LocalFiberTrackingPAMFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.tracking.PFTrackingPAMFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.viz": [[201, 1, 1, "", "HorizonFlow"]], "dipy.workflows.viz.HorizonFlow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "run"]], "dipy.workflows.workflow": [[201, 1, 1, "", "Workflow"]], "dipy.workflows.workflow.Workflow": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "get_io_iterator"], [201, 2, 1, "", "get_short_name"], [201, 2, 1, "", "get_sub_runs"], [201, 2, 1, "", "manage_output_overwrite"], [201, 2, 1, "", "run"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 202], "chang": [0, 8, 17], "dipi": [0, 5, 11, 16, 20, 22, 27, 171, 174, 179, 185, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "1": [0, 47, 64, 79, 247, 248, 249, 250, 251, 252, 253, 254, 255], "7": [0, 244, 255], "0": [0, 43, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "6": [0, 243, 254], "5": [0, 253], "4": [0, 251, 252], "3": [0, 23, 250], "2": [0, 23, 47, 64, 79, 249], "16": [0, 242], "15": [0, 241], "14": [0, 240], "13": [0, 239], "12": [0, 238], "10": [0, 236], "9": [0, 246], "8": [0, 245], "between": [0, 39, 60, 116, 175], "public": 1, "A": [1, 17, 22, 181, 256], "note": [1, 89, 166, 181, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "cite": 1, "our": 1, "work": [1, 16, 101], "data": [2, 60, 190, 194], "content": [2, 146, 147, 161], "dataset": [2, 39, 41, 168, 171], "depend": [4, 61, 147], "code": [5, 6, 10, 16, 23], "style": 5, "guidelin": 5, "import": [5, 23, 199], "cython": 5, "variabl": 5, "declar": 5, "us": [5, 31, 33, 34, 35, 40, 55, 60, 61, 66, 69, 89, 130, 131, 147, 166, 172, 194], "c": 5, "librari": 5, "error": 5, "return": [5, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "valu": [5, 139, 141], "pointer": 5, "refer": [5, 29, 31, 32, 34, 35, 36, 37, 39, 40, 43, 45, 46, 47, 48, 49, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 101, 102, 103, 107, 108, 109, 113, 114, 117, 118, 119, 127, 138, 167, 169, 170, 172, 173, 175, 176, 177, 178, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 262], "cast": 5, "loop": 5, "document": [5, 25, 166], "commit": [6, 8, 17], "messag": 6, "configur": [7, 11], "git": [7, 12, 13, 15], "overview": [7, 8, 13, 18, 19, 39, 41, 135, 172, 178, 256], "In": [7, 8, 13, 18, 19, 165], "detail": [7, 8, 13, 18, 19], "user": 7, "name": 7, "email": 7, "alias": 7, "editor": 7, "merg": [7, 8], "fanci": 7, "log": 7, "output": [7, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "develop": [8, 12, 18, 20, 24], "workflow": [8, 15, 17, 142, 143, 145, 146, 147, 160, 174, 201], "summari": [8, 15], "consid": 8, "delet": 8, "your": [8, 11, 19, 139, 141], "master": 8, "branch": 8, "updat": [8, 10], "mirror": 8, "trunk": [8, 17], "make": [8, 11, 18, 22], "new": [8, 142, 145], "featur": [8, 116, 118, 256], "The": [8, 258, 259, 263], "edit": 8, "more": 8, "ask": [8, 162], "review": 8, "some": 8, "other": [8, 22, 189], "thing": 8, "you": 8, "might": 8, "want": 8, "do": [8, 22], "github": [8, 11], "sever": 8, "peopl": 8, "share": 8, "singl": 8, "repositori": [8, 19], "explor": 8, "rebas": 8, "recov": 8, "from": [8, 18, 90, 139, 141, 166], "mess": 8, "up": [8, 11, 19], "rewrit": 8, "histori": [8, 17], "two": 9, "three": 9, "dot": 9, "differ": [9, 118, 139], "spec": 9, "follow": 10, "latest": 10, "sourc": [10, 16, 166], "get": [10, 27, 165, 166], "local": [10, 33, 35, 172, 178], "copi": [10, 11], "own": 11, "fork": [11, 19], "set": [11, 19], "account": 11, "creat": [11, 141, 142, 145], "instal": [13, 63, 166], "introduct": [14, 21, 29, 80, 81, 82, 83, 85, 167], "resourc": 15, "tutori": 15, "advanc": [15, 138], "manual": 15, "page": 15, "onlin": 15, "maintain": 17, "integr": [17, 147], "few": 17, "long": 17, "seri": 17, "check": 17, "push": 17, "patch": 18, "move": [18, 23], "clone": 19, "link": 19, "upstream": 19, "repo": 19, "guid": 22, "releas": [22, 166, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "tool": 22, "checklist": 22, "upload": 22, "binari": [22, 89, 105], "build": [22, 166], "stuff": [22, 258], "need": 22, "keep": 23, "compat": 23, "python": [23, 165, 166, 185], "futur": 23, "print": 23, "divis": 23, "modul": [23, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "rang": [23, 141], "xrang": 23, "reduc": 23, "string": 23, "next": [23, 165], "function": [23, 33, 47, 54, 64], "except": 23, "dictionari": 23, "quick": [26, 146, 147, 148, 256], "start": [26, 27, 146, 147, 148, 165], "comput": [28, 42, 70, 74, 77, 96, 106, 120, 126, 132, 134, 137, 144], "time": [28, 42, 61, 70, 74, 77, 96, 106, 120, 126, 132, 134, 137, 144, 147], "basic": [29, 81, 82, 83, 147], "track": [29, 75, 81, 82, 83, 87, 88, 146, 147, 152, 178, 199, 201], "brain": [30, 110, 111, 112, 147], "segment": [30, 90, 110, 111, 112, 115, 146, 147, 155, 169, 196, 201], "median_otsu": [30, 110, 111, 112, 196], "denois": [31, 33, 34, 35, 36, 147, 172, 191, 194, 201], "imag": [31, 33, 34, 35, 43, 50, 56, 60, 62, 63, 105, 107, 121, 147, 165, 176, 177, 185, 193, 194, 260], "adapt": 31, "soft": 31, "coeffici": 31, "match": 31, "ascm": 31, "suppress": [32, 173], "gibb": [32, 173, 191], "oscil": [32, 147, 173], "pca": [33, 34, 172], "via": [33, 36], "empir": 33, "threshold": [33, 89, 196], "estim": [33, 34, 40, 43, 47, 61, 64, 147], "nois": [33, 34, 40], "standard": [33, 34], "deviat": [33, 34], "perform": 33, "localpca": [33, 191], "marcenko": [34, 172], "pastur": [34, 172], "algorithm": [34, 69], "non": 35, "mean": [35, 48, 60, 147, 176], "nlmean": [35, 172, 191], "patch2self": [36, 191], "self": 36, "supervis": 36, "statist": [36, 147], "independ": 36, "gradient": [37, 147, 189, 193, 199], "sphere": [37, 147, 189], "preprocess": [38, 146, 147, 149], "volum": [39, 139, 141, 175], "motion": [39, 57, 147, 175, 176], "correct": [39, 147, 175], "dwi": 39, "piesno": [40, 191], "reslic": [41, 147, 187], "diffus": [41, 43, 48, 49, 50, 53, 58, 60, 61, 67, 147, 165, 172, 176, 185, 194], "snr": [43, 147], "weight": [43, 121, 194], "b": [43, 258, 259], "i": [43, 179], "42": 43, "0695455758": 43, "direct": [43, 79, 80, 85, 102, 192], "57": 43, "05039": 43, "99871": 43, "0054406": 43, "23": 43, "9329492871": 43, "reconstruct": [44, 46, 47, 48, 49, 50, 53, 56, 59, 60, 62, 64, 65, 66, 130, 131, 146, 147, 150, 176], "k": 45, "fold": 45, "cross": [45, 54, 71], "valid": 45, "model": [45, 48, 49, 53, 54, 55, 58, 64, 65, 67, 79, 87, 88, 147, 194], "comparison": [45, 168], "constant": [46, 147, 176], "solid": [46, 147, 176], "angl": [46, 147, 176], "q": [46, 56, 61, 62, 63, 130, 147, 258, 260], "ball": [46, 130, 147], "constrain": [47, 48, 147, 176], "spheric": [47, 64, 66, 87, 147, 176, 195, 262, 263], "deconvolut": [47, 52, 64, 87, 123, 124, 125, 147, 176], "step": [47, 64, 165], "fiber": [47, 54, 64, 72, 75, 113, 146, 147, 152, 178], "respons": [47, 54, 64], "fodf": [47, 64], "signal": [48, 49, 53, 58, 60, 66, 67, 147], "kurtosi": [48, 60, 147, 176], "tensor": [48, 53, 69, 147, 176], "optim": [48, 189], "dki": [48, 127, 176, 195], "fraction": 48, "anisotropi": 48, "wmti": 49, "spectrum": [50, 147], "calcul": [51, 68, 93, 95], "dsi": [51, 52, 123, 124, 125, 147, 195], "base": [51, 64, 87, 107, 147, 169, 177, 195, 200, 201, 262], "scalar": [51, 68], "map": [51, 58, 68, 91, 95, 98, 147, 176], "v": [52, 123, 124, 125], "invari": 54, "forecast": [54, 195], "free": [55, 147], "water": [55, 147], "elimin": 55, "remov": 55, "dti": [55, 176, 195], "contamin": 55, "gener": [56, 78, 147], "sampl": [56, 147, 260], "intravoxel": [57, 147, 176], "incoher": [57, 147, 176], "continu": [58, 67, 147], "analyt": [58, 67, 168], "mri": [58, 147, 176], "multi": 59, "shell": 59, "tissu": [59, 121, 147, 196], "csd": [59, 79, 131, 176], "msdki": [60, 195], "test": [60, 166], "synthet": 60, "relationship": 60, "smt2": 60, "space": [61, 62, 63, 147, 193], "indic": 61, "qt": [61, 147], "dmri": [61, 147], "trajectori": [62, 63, 147], "qti": [62, 63, 195], "theori": [62, 63, 261], "usag": [62, 63, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "exampl": [62, 63, 79, 101, 146, 147, 161, 181, 187, 189, 190, 193, 195, 197, 199, 200], "appli": [63, 107, 177], "posit": [63, 78, 147, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "constraint": [63, 147], "robust": [64, 69, 87, 147], "unbias": [64, 87, 147], "spars": [65, 88, 147], "fascicl": [65, 76, 88, 147], "harmon": [66, 147, 262], "3d": [67, 99, 109], "shore": [67, 68, 195], "restor": 69, "fit": 69, "preserv": 71, "contextu": [71, 73, 146, 147, 151], "enhanc": [71, 73, 118, 146, 147, 151], "bundl": [72, 90, 91, 92, 101, 102, 103, 113, 139, 147, 168, 169, 170, 196], "coher": 72, "measur": 72, "acknowledg": 72, "linear": [76, 169, 195], "evalu": [76, 147], "life": [76, 199], "surfac": [78, 140], "seed": 78, "tractographi": [78, 84, 86, 89, 116, 117, 119], "displai": 78, "list": 78, "bootstrap": 79, "closest": [79, 178], "peak": [79, 178, 192, 193, 200], "getter": [79, 80, 85], "an": [80, 85, 139], "determinist": [80, 178], "maximum": 80, "particl": [84, 178], "filter": [84, 178], "cmc": 84, "act": [84, 89], "stop": [84, 89], "criterion": [84, 89], "probabilist": [85, 178], "parallel": [86, 130, 131], "transport": 86, "rumba": [87, 147, 195], "sd": [87, 147], "variou": 89, "extract": [90, 113, 147], "afq": 90, "tract": [90, 147], "profil": [90, 168, 189], "buan": [91, 92, 168], "assign": 91, "creation": 91, "shape": [92, 168], "similar": [92, 168], "score": 92, "outlier": 93, "cluster": [93, 116, 117, 118, 119, 147, 196, 200], "confid": 93, "index": 93, "streamlin": [94, 97, 107, 114, 135, 139, 140, 146, 147, 153, 169, 177, 193, 199, 200], "analysi": [94, 146, 147, 153, 198], "connect": [94, 98, 146, 147, 153], "path": 95, "length": [95, 97, 199], "size": 97, "reduct": 97, "matric": 98, "roi": [98, 140, 200], "intersect": 98, "densiti": 98, "affin": [99, 100, 187], "registr": [99, 100, 101, 102, 103, 104, 105, 108, 109, 146, 147, 154, 169, 170, 177], "mask": [100, 196, 201], "groupwis": 101, "how": 101, "extend": [101, 118], "capabl": 101, "nonrigid": [103, 170], "bundlewarp": [103, 170, 187], "diffeomorph": [105, 108, 109, 177], "fuzzi": 105, "deform": [107, 170], "symmetr": [108, 109, 147, 177], "2d": 108, "automat": 113, "recobundl": [113, 169, 196], "fast": 114, "search": 114, "avail": [116, 117], "ident": [116, 196], "resampl": [116, 187], "center": 116, "mass": 116, "midpoint": [116, 199], "arclength": 116, "vector": 116, "endpoint": [116, 199], "metric": [117, 118, 139, 187, 196, 199], "averag": 117, "pointwis": 117, "euclidean": 117, "sum": 117, "cosin": 117, "quickbundl": [118, 119, 196], "framework": [118, 168], "classif": [121, 147], "t1": [121, 141], "structur": [121, 172], "simul": [122, 127, 128, 146, 147, 156], "multitensor": [127, 128], "multiprocess": [129, 146, 147, 157], "file": [133, 135, 146, 147, 158], "format": [133, 146, 147, 158], "read": 135, "write": 135, "visual": [136, 138, 139, 140, 146, 147, 159, 200], "interact": 138, "show": 139, "everi": 139, "orient": [139, 147], "color": 139, "point": 139, "default": 139, "colormap": [139, 141], "specif": [139, 141, 168], "render": [140, 141], "simpl": [141, 147], "slice": [141, 200], "fa": 141, "mosaic": 141, "combin": 142, "axial": 147, "appar": [147, 176], "propag": [147, 176], "studi": 147, "white": [147, 169, 170], "matter": [147, 169, 170], "ivim": [147, 176, 195], "intra": 147, "voxel": [147, 197], "frequent": 162, "question": 162, "theoret": 162, "practic": 162, "gimbal": 163, "lock": 163, "mathemat": [163, 263], "glossari": 164, "highlight": [165, 182], "announc": [165, 183], "support": [165, 166, 256], "anaconda": 166, "packag": 166, "window": 166, "osx": 166, "linux": 166, "pip": 166, "contact": 166, "u": 166, "common": 166, "problem": 166, "multipl": 166, "altern": 166, "memori": 166, "issu": 166, "version": [166, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "all": 166, "oper": 166, "system": [166, 256], "unix": 166, "e": 166, "g": 166, "ubuntu": 166, "debian": 166, "fedora": 166, "mandriva": 166, "mayb": 166, "redhat": 166, "openmp": 166, "under": 166, "homebrew": 166, "org": 166, "onli": 166, "tip": 166, "troubleshoot": 166, "command": [167, 235], "line": [167, 235], "interfac": [167, 174], "group": 168, "across": 168, "popul": 168, "reproduc": 168, "result": 168, "larger": 168, "partial": 170, "fulli": 170, "download": 171, "overcomplet": 172, "method": [172, 178, 187], "unring": 173, "csa": 176, "transform": 177, "eudx": 178, "pft": 178, "what": [179, 258], "mission": 180, "statement": 180, "about": [181, 258], "older": 182, "past": 183, "subpackag": 185, "util": [185, 193, 194, 195, 199, 235], "get_info": 185, "__config__": 186, "align": [187, 201], "_public": 187, "bundlemin": [], "cpd": 187, "crosscorr": [], "expectmax": [], "imaffin": 187, "imwarp": 187, "parzenhist": [], "scalespac": 187, "streamlinear": 187, "streamwarp": 187, "sumsqdiff": [], "vector_field": [], "bunch": 187, "verbositylevel": 187, "syn_registr": 187, "paramet": [187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "register_dwi_to_templ": 187, "write_map": 187, "read_map": 187, "affine_registr": 187, "center_of_mass": [187, 199], "translat": 187, "rigid": 187, "rigid_isosc": 187, "rigid_sc": 187, "_method_dict": 187, "register_seri": 187, "register_dwi_seri": 187, "motion_correct": 187, "streamline_registr": 187, "determine_num_thread": [], "distance_matrix_mdf": [], "deformableregistr": 187, "attribut": [187, 189, 195, 197], "gaussian_kernel": 187, "low_rank_eigen": 187, "initialize_sigma2": 187, "lowrankq": 187, "compute_cc_backward_step_2d": [], "compute_cc_backward_step_3d": [], "compute_cc_forward_step_2d": [], "compute_cc_forward_step_3d": [], "precompute_cc_factors_2d": [], "precompute_cc_factors_2d_test": [], "precompute_cc_factors_3d": [], "precompute_cc_factors_3d_test": [], "compute_em_demons_step_2d": [], "compute_em_demons_step_3d": [], "compute_masked_class_stats_2d": [], "compute_masked_class_stats_3d": [], "quantize_positive_2d": [], "quantize_positive_3d": [], "affineinversionerror": 187, "affineinvalidvalueserror": 187, "affinemap": 187, "mutualinformationmetr": 187, "affineregistr": 187, "_transform_method": 187, "transform_centers_of_mass": 187, "transform_geometric_cent": 187, "transform_origin": 187, "diffeomorphicmap": 187, "diffeomorphicregistr": 187, "symmetricdiffeomorphicregistr": 187, "registrationstag": 187, "logger": [187, 189, 193, 194, 195, 196], "mult_aff": 187, "get_direction_and_spac": 187, "similaritymetr": 187, "ccmetric": 187, "emmetr": 187, "ssdmetric": 187, "v_cycle_2d": 187, "v_cycle_3d": 187, "parzenjointhistogram": [], "compute_parzen_mi": [], "cubic_splin": [], "cubic_spline_deriv": [], "sample_domain_regular": [], "isotropicscalespac": 187, "streamlinedistancemetr": 187, "bundlemindistancemetr": 187, "bundlemindistancematrixmetr": 187, "bundlemindistanceasymmetricmetr": 187, "bundlesumdistancematrixmetr": 187, "jointbundlemindistancemetr": 187, "streamlinelinearregistr": 187, "streamlineregistrationmap": 187, "jointstreamlineregistrationmap": 187, "bundle_sum_dist": 187, "bundle_min_dist": 187, "bundle_min_distance_fast": 187, "bundle_min_distance_asymmetric_fast": 187, "remove_clusters_by_s": 187, "progressive_slr": 187, "slr_with_qbx": 187, "groupwise_slr": 187, "get_unique_pair": 187, "compose_matrix44": 187, "decompose_matrix44": 187, "average_bundle_length": 187, "find_miss": 187, "bundlewarp_vector_fil": 187, "bundlewarp_shape_analysi": 187, "compute_energy_ssd_2d": [], "compute_energy_ssd_3d": [], "compute_residual_displacement_field_ssd_2d": [], "compute_residual_displacement_field_ssd_3d": [], "compute_ssd_demons_step_2d": [], "compute_ssd_demons_step_3d": [], "iterate_residual_displacement_field_ssd_2d": [], "iterate_residual_displacement_field_ssd_3d": [], "solve_2d_symmetric_positive_definit": [], "solve_3d_symmetric_positive_definit": [], "affinetransform2d": [], "affinetransform3d": [], "rigidisoscalingtransform2d": [], "rigidisoscalingtransform3d": [], "rigidscalingtransform2d": [], "rigidscalingtransform3d": [], "rigidtransform2d": [], "rigidtransform3d": [], "rotationtransform2d": [], "rotationtransform3d": [], "scalingtransform2d": [], "scalingtransform3d": [], "translationtransform2d": [], "translationtransform3d": [], "compose_vector_fields_2d": [], "compose_vector_fields_3d": [], "create_circl": [], "create_harmonic_fields_2d": [], "create_harmonic_fields_3d": [], "create_random_displacement_2d": [], "create_random_displacement_3d": [], "create_spher": [], "downsample_displacement_field_2d": [], "downsample_displacement_field_3d": [], "downsample_scalar_field_2d": [], "downsample_scalar_field_3d": [], "invert_vector_field_fixed_point_2d": [], "invert_vector_field_fixed_point_3d": [], "is_valid_affin": [], "reorient_vector_field_2d": [], "reorient_vector_field_3d": [], "resample_displacement_field_2d": [], "resample_displacement_field_3d": [], "simplify_warp_function_2d": [], "simplify_warp_function_3d": [], "sparse_gradi": [], "transform_2d_affin": [], "transform_2d_affine_nn": [], "transform_3d_affin": [], "transform_3d_affine_nn": [], "warp_2d": [], "warp_2d_nn": [], "warp_3d": [], "warp_3d_nn": [], "warp_coordinates_2d": [], "warp_coordinates_3d": [], "boot": 188, "core": 189, "benchmark": [195, 196, 199], "bench_spher": [], "geometri": 189, "graph": 189, "histeq": 189, "interpol": [], "ndindex": 189, "onetim": 189, "rng": 189, "sphere_stat": 189, "subdivide_octahedron": 189, "wavelet": 189, "timer": [], "func_minimize_adhoc": [], "func_minimize_scipi": [], "bench_disperse_charges_alt": [], "_tuple2ax": 189, "sphere2cart": 189, "cart2spher": 189, "sph2latlon": 189, "normalized_vector": 189, "vector_norm": 189, "rodrigues_axis_rot": 189, "nearest_pos_semi_def": 189, "sphere_dist": 189, "see": [189, 190, 193, 195, 197, 199], "also": [189, 190, 193, 195, 197, 199], "cart_dist": 189, "vector_cosin": 189, "lambert_equal_area_projection_polar": 189, "lambert_equal_area_projection_cart": 189, "euler_matrix": 189, "compose_matrix": 189, "decompose_matrix": 189, "rais": [189, 190, 199], "circumradiu": 189, "vec2vec_rotmat": 189, "compose_transform": 189, "perpendicular_direct": 189, "dist_to_corn": 189, "is_hemispher": 189, "gradientt": 189, "unique_bv": 189, "gradient_table_from_bvals_bvec": 189, "gradient_table_from_qvals_bvec": 189, "gradient_table_from_gradient_strength_bvec": 189, "gradient_t": 189, "reorient_bvec": 189, "generate_bvec": 189, "round_bval": 189, "unique_bvals_toler": 189, "get_bval_indic": 189, "unique_bvals_magnitud": 189, "check_multi_b": 189, "btens_to_param": 189, "params_to_bten": 189, "ornt_map": [189, 193], "reorient_vector": [189, 193], "reorient_on_axi": [189, 193], "orientation_from_str": [189, 193], "orientation_to_str": [189, 193], "nearestneighborinterpol": [], "outsideimag": [], "trilinearinterpol": [], "interp_rbf": [], "interpolate_scalar_2d": [], "interpolate_scalar_3d": [], "interpolate_scalar_nn_2d": [], "interpolate_scalar_nn_3d": [], "interpolate_vector_2d": [], "interpolate_vector_3d": [], "map_coordinates_trilinear_iso": [], "nearestneighbor_interpol": [], "trilinear_interp": [], "trilinear_interpolate4d": [], "resetmixin": 189, "onetimeproperti": 189, "auto_attr": 189, "sklearnlinearsolv": 189, "nonnegativeleastsquar": 189, "positivedefiniteleastsquar": 189, "spdot": 189, "sparse_nnl": 189, "wichmannhill2006": 189, "wichmannhill1982": 189, "lecuy": 189, "hemispher": 189, "faces_from_sphere_vertic": 189, "unique_edg": 189, "unique_set": 189, "disperse_charg": 189, "disperse_charges_alt": 189, "euler_characteristic_check": 189, "octahedron_vertic": 189, "octahedron_fac": 189, "icosahedron_vertic": 189, "icosahedron_fac": 189, "unit_octahedron": 189, "unit_icosahedron": 189, "hemi_icosahedron": 189, "random_uniform_on_spher": 189, "eigenstat": 189, "compare_orientation_set": 189, "angular_similar": 189, "create_unit_spher": 189, "create_unit_hemispher": 189, "cshift3d": 189, "permutationinvers": 189, "afb3d_a": 189, "sfb3d_a": 189, "sfb3d": 189, "afb3d": 189, "dwt3d": 189, "idwt3d": 189, "fetcher": 190, "dataerror": 190, "loads_compat": 190, "data_dir": 190, "get_sim_voxel": 190, "get_skeleton": 190, "get_spher": 190, "default_spher": 190, "small_spher": 190, "get_3shell_gtab": 190, "get_isbi2013_2shell_gtab": 190, "get_gtab_taiwan_dsi": 190, "dsi_voxel": 190, "dsi_deconv_voxel": 190, "mrtrix_spherical_funct": 190, "get_cmap": 190, "two_cingulum_bundl": 190, "matlab_life_result": 190, "load_sdp_constraint": 190, "copyfileobj_withprogress": 190, "check_md5": 190, "fetch_data": 190, "fetch_isbi2013_2shel": 190, "fetch_stanford_label": 190, "fetch_sherbrooke_3shel": 190, "fetch_stanford_hardi": 190, "fetch_resdnn_weight": 190, "fetch_synb0_weight": 190, "fetch_synb0_test": 190, "fetch_evac_weight": 190, "fetch_evac_test": 190, "fetch_stanford_t1": 190, "fetch_stanford_pve_map": 190, "fetch_stanford_track": 190, "fetch_taiwan_ntu_dsi": 190, "fetch_syn_data": 190, "fetch_mni_templ": 190, "fetch_scil_b0": 190, "fetch_bundles_2_subject": 190, "fetch_ivim": 190, "fetch_cfin_multib": 190, "fetch_file_format": 190, "fetch_bundle_atlas_hcp842": 190, "fetch_target_tractogram_hcp": 190, "fetch_bundle_fa_hcp": 190, "fetch_qtdmri_test_retest_2subject": 190, "fetch_gold_standard_io": 190, "fetch_qte_lte_pt": 190, "fetch_fury_surfac": 190, "fetch_dib_70_lte_pte_st": 190, "fetch_dib_217_lte_pte_st": 190, "fetch_ptt_minimal_dataset": 190, "fetch_bundle_warp_dataset": 190, "get_fnam": 190, "read_qtdmri_test_retest_2subject": 190, "read_scil_b0": 190, "read_siemens_scil_b0": 190, "read_isbi2013_2shel": 190, "read_sherbrooke_3shel": 190, "read_stanford_label": 190, "read_stanford_hardi": 190, "read_stanford_t1": 190, "read_stanford_pve_map": 190, "read_taiwan_ntu_dsi": 190, "read_syn_data": 190, "fetch_tissue_data": 190, "read_tissue_data": 190, "read_mni_templ": 190, "fetch_cenir_multib": 190, "read_cenir_multib": 190, "read_bundles_2_subject": 190, "read_ivim": 190, "read_cfin_dwi": 190, "read_cfin_t1": 190, "get_file_format": 190, "get_bundle_atlas_hcp842": 190, "get_two_hcp842_bundl": 190, "get_target_tractogram_hcp": 190, "read_qte_lte_pt": 190, "read_dib_70_lte_pte_st": 190, "read_dib_217_lte_pte_st": 190, "extract_example_tract": 190, "read_five_af_bundl": 190, "to_bids_descript": 190, "fetch_hcp": 190, "fetch_hbn": 190, "adaptive_soft_match": 191, "denspe": [], "enhancement_kernel": [], "nlmeans_block": [], "noise_estim": 191, "non_local_mean": 191, "pca_noise_estim": [], "shift_twist_convolut": [], "add_padding_reflect": [], "correspond_indic": [], "nlmeans_3d": [], "remove_pad": [], "enhancementkernel": [], "ceil": [], "gettempdir": [], "gibbs_remov": 191, "genpca": 191, "mppca": 191, "firdn": [], "upfir": [], "estimate_sigma": 191, "warn": [], "convolv": [], "convolve_sf": [], "sf_to_sh": 195, "sh_to_sf": 195, "bootstrap_direction_gett": [], "closest_peak_direction_gett": [], "pmf": [], "probabilistic_direction_gett": [], "ptt_direction_gett": [], "bootdirectiongett": [], "bootpmfgen": [], "basedirectiongett": [], "basepmfdirectiongett": [], "closestpeakdirectiongett": [], "pmfgendirectiongett": [], "peak_direct": 192, "peaksandmetr": 192, "peak_directions_nl": 192, "peaks_from_model": 192, "reshape_peaks_for_visu": 192, "pmfgen": [], "shcoeffpmfgen": [], "simplepmfgen": [], "deterministicmaximumdirectiongett": [], "probabilisticdirectiongett": [], "random": [], "pttdirectiongett": [], "min_radius_curvature_from_angl": 199, "io": [193, 201], "bvectxt": 193, "dpy": 193, "pickl": 193, "stateful_tractogram": 193, "vtk": 193, "read_bvec_fil": 193, "read_bvals_bvec": 193, "load_nifti_data": 193, "load_nifti": 193, "save_nifti": 193, "save_qa_metr": 193, "load_peak": 193, "save_peak": 193, "peaks_to_nifti": 193, "save_pickl": 193, "load_pickl": 193, "origin": 193, "statefultractogram": 193, "set_sft_logger_level": 193, "save_tractogram": 193, "load_tractogram": 193, "load_gener": 193, "save_gener": 193, "load_trk": 193, "load_tck": 193, "load_vtk": 193, "load_vtp": 193, "load_fib": 193, "load_dpi": 193, "save_trk": 193, "save_tck": 193, "save_vtk": 193, "save_vtp": 193, "save_fib": 193, "save_dpi": 193, "nifti1_symmat": 193, "make5d": 193, "decfa": 193, "decfa_to_float": 193, "is_reference_info_valid": 193, "get_reference_info": 193, "is_header_compat": 193, "create_tractogram_head": 193, "create_nifti_head": 193, "save_buan_profiles_hdf5": 193, "read_img_arr_or_path": 193, "load_polydata": 193, "save_polydata": 193, "save_vtk_streamlin": 193, "load_vtk_streamlin": 193, "nn": 194, "cnn_1d_denois": 194, "titl": 194, "cnn": 194, "evac": 194, "histo_resdnn": 194, "synb0": 194, "cnn1ddenois": 194, "block": 194, "channelsum": 194, "evacplu": 194, "prepare_img": 194, "init_model": 194, "historesdnn": 194, "singlelayerperceptron": 194, "multiplelayerpercepton": 194, "encoderblock": 194, "decoderblock": 194, "unet3d": 194, "normal": 194, "unnorm": 194, "set_logger_level": 194, "transform_img": 194, "recover_img": 194, "reconst": [195, 201], "bench_bounding_box": 195, "bench_csd": 195, "bench_peak": 195, "bench_squash": 195, "bench_vec_val_sum": 195, "cach": 195, "cross_valid": 195, "csdeconv": 195, "dki_micro": 195, "eudx_direction_gett": [], "fwdti": 195, "gqi": 195, "mapmri": 195, "mcsd": 195, "multi_voxel": 195, "odf": 195, "qtdmri": 195, "quick_squash": [], "recspe": [], "sfm": 195, "shm": 195, "vec_val_sum": [], "reconstmodel": 195, "reconstfit": 195, "num_grad": 195, "bench_csdeconv": 195, "bench_local_maxima": 195, "old_squash": 195, "bench_quick_squash": 195, "bench_vec_val_vect": 195, "coeff_of_determin": 195, "kfold_xval": 195, "axsymshrespons": 195, "constrainedsphericaldeconvmodel": 195, "constrainedsdtmodel": 195, "auto_respons": 195, "response_from_mask": 195, "estimate_respons": 195, "forward_sdt_deconv_mat": 195, "odf_deconv": 195, "odf_sh_to_sharp": 195, "mask_for_response_ssst": 195, "response_from_mask_ssst": 195, "auto_response_ssst": 195, "recursive_respons": 195, "fa_trace_to_lambda": 195, "diffusionkurtosismodel": 195, "diffusionkurtosisfit": 195, "carlson_rf": 195, "carlson_rd": 195, "directional_diffus": 195, "directional_diffusion_vari": 195, "directional_kurtosi": 195, "apparent_kurtosis_coef": 195, "mean_kurtosi": 195, "radial_kurtosi": 195, "axial_kurtosi": 195, "kurtosis_maximum": 195, "mean_kurtosis_tensor": 195, "kurtosis_fractional_anisotropi": 195, "dki_predict": 195, "params_to_dki_param": 195, "ls_fit_dki": 195, "cls_fit_dki": 195, "wrotat": 195, "wrotate_el": 195, "wcon": 195, "split_dki_param": 195, "kurtosismicrostructuremodel": 195, "kurtosismicrostructuralfit": 195, "axonal_water_fract": 195, "diffusion_compon": 195, "dkimicro_predict": 195, "tortuos": 195, "diffusionspectrummodel": 195, "diffusionspectrumfit": 195, "diffusionspectrumdeconvmodel": 195, "diffusionspectrumdeconvfit": 195, "create_qspac": 195, "create_qt": 195, "hanning_filt": 195, "pdf_interp_coord": 195, "pdf_odf": 195, "half_to_full_qspac": 195, "project_hemisph_bvec": 195, "threshold_propag": 195, "gen_psf": 195, "lr_deconv": 195, "tensormodel": 195, "tensorfit": 195, "fractional_anisotropi": 195, "geodesic_anisotropi": 195, "mean_diffus": 195, "axial_diffus": 195, "radial_diffus": 195, "trace": 195, "color_fa": 195, "determin": 195, "isotrop": 195, "deviator": 195, "norm": 195, "mode": 195, "planar": 195, "apparent_diffusion_coef": 195, "tensor_predict": 195, "iter_fit_tensor": 195, "wls_fit_tensor": 195, "ols_fit_tensor": 195, "nlls_fit_tensor": 195, "restore_fit_tensor": 195, "_lt_indic": 195, "from_lower_triangular": 195, "_lt_row": 195, "_lt_col": 195, "lower_triangular": 195, "decompose_tensor": 195, "design_matrix": 195, "quantize_evec": 195, "eig_from_lo_tri": 195, "eudxdirectiongett": [], "forecastmodel": 195, "forecastfit": 195, "find_signal_mean": 195, "forecast_error_func": 195, "psi_l": 195, "forecast_matrix": 195, "rho_matrix": 195, "lb_forecast": 195, "freewatertensormodel": 195, "freewatertensorfit": 195, "fwdti_predict": 195, "wls_iter": 195, "nls_iter": 195, "nls_fit_tensor": 195, "lower_triangular_to_choleski": 195, "cholesky_to_lower_triangular": 195, "generalizedqsamplingmodel": 195, "generalizedqsamplingfit": 195, "normalize_qa": 195, "squared_radial_compon": 195, "npa": 195, "equatorial_zone_vertic": 195, "polar_zone_vertic": 195, "upper_hemi_map": 195, "equatorial_maximum": 195, "patch_vertic": 195, "patch_maximum": 195, "odf_sum": 195, "patch_sum": 195, "triple_odf_maxima": 195, "ivimmodeltrr": 195, "ivimmodelvp": 195, "ivimfit": 195, "ivim_predict": 195, "f_d_star_predict": 195, "f_d_star_error": 195, "ivim_model_selector": 195, "mapmrimodel": 195, "mapmrifit": 195, "isotropic_scale_factor": 195, "mapmri_index_matrix": 195, "b_mat": 195, "b_mat_isotrop": 195, "mapmri_phi_1d": 195, "mapmri_phi_matrix": 195, "mapmri_psi_1d": 195, "mapmri_psi_matrix": 195, "mapmri_odf_matrix": 195, "mapmri_isotropic_phi_matrix": 195, "mapmri_isotropic_radial_signal_basi": 195, "mapmri_isotropic_m_mu_independ": 195, "mapmri_isotropic_m_mu_depend": 195, "mapmri_isotropic_psi_matrix": 195, "mapmri_isotropic_radial_pdf_basi": 195, "mapmri_isotropic_k_mu_independ": 195, "mapmri_isotropic_k_mu_depend": 195, "binomialfloat": 195, "mapmri_isotropic_odf_matrix": 195, "mapmri_isotropic_odf_sh_matrix": 195, "mapmri_isotropic_laplacian_reg_matrix": 195, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 195, "mapmri_isotropic_index_matrix": 195, "create_rspac": 195, "delta": 195, "map_laplace_u": 195, "map_laplace_t": 195, "map_laplace_": 195, "mapmri_stu_reg_matric": 195, "mapmri_laplacian_reg_matrix": 195, "generalized_crossvalidation_arrai": 195, "generalized_crossvalid": 195, "gcv_cost_funct": 195, "multishellrespons": 195, "multishelldeconvmodel": 195, "msdeconvfit": 195, "qpfitter": 195, "multi_tissue_basi": 195, "solve_qp": 195, "multi_shell_fiber_respons": 195, "mask_for_response_msmt": 195, "response_from_mask_msmt": 195, "auto_response_msmt": 195, "meandiffusionkurtosismodel": 195, "meandiffusionkurtosisfit": 195, "mean_signal_bvalu": 195, "msk_from_awf": 195, "awf_from_msk": 195, "msdki_predict": 195, "wls_fit_msdki": 195, "multivoxelfit": 195, "callablearrai": 195, "multi_voxel_fit": 195, "odfmodel": 195, "odffit": 195, "gfa": 195, "minmax_norm": 195, "qtdmrimodel": 195, "qtdmrifit": 195, "qtdmri_to_mapmri_matrix": 195, "qtdmri_isotropic_to_mapmri_matrix": 195, "qtdmri_temporal_norm": 195, "qtdmri_mapmri_norm": 195, "qtdmri_mapmri_isotropic_norm": 195, "qtdmri_signal_matrix_": 195, "qtdmri_signal_matrix": 195, "qtdmri_eap_matrix": 195, "qtdmri_isotropic_signal_matrix_": 195, "qtdmri_isotropic_signal_matrix": 195, "qtdmri_eap_matrix_": 195, "qtdmri_isotropic_eap_matrix_": 195, "qtdmri_isotropic_eap_matrix": 195, "radial_basis_opt": 195, "angular_basis_opt": 195, "radial_basis_eap_opt": 195, "angular_basis_eap_opt": 195, "temporal_basi": 195, "qtdmri_index_matrix": 195, "qtdmri_isotropic_index_matrix": 195, "qtdmri_laplacian_reg_matrix": 195, "qtdmri_isotropic_laplacian_reg_matrix": 195, "part23_reg_matrix_q": 195, "part23_iso_reg_matrix_q": 195, "part4_reg_matrix_q": 195, "part4_iso_reg_matrix_q": 195, "part1_reg_matrix_tau": 195, "part23_reg_matrix_tau": 195, "part4_reg_matrix_tau": 195, "h": 195, "qtdmri_isotropic_sc": 195, "qtdmri_anisotropic_sc": 195, "design_matrix_spati": 195, "create_rt_space_grid": 195, "qtdmri_number_of_coeffici": 195, "l1_crossvalid": 195, "elastic_crossvalid": 195, "visualise_gradient_table_g_delta_rainbow": 195, "qtimodel": 195, "qtifit": 195, "from_3x3_to_6x1": 195, "from_6x1_to_3x3": 195, "from_6x6_to_21x1": 195, "from_21x1_to_6x6": 195, "cvxpy_1x6_to_3x3": 195, "cvxpy_1x21_to_6x6": 195, "dtd_covari": 195, "qti_sign": 195, "adj_to_countarr": [], "argmax_from_adj": [], "argmax_from_countarr": [], "le_to_odf": [], "local_maxima": [], "proc_reco_arg": [], "remove_similar_vertic": [], "search_descend": [], "sum_on_blocks_1d": [], "rumbasdmodel": 195, "rumbafit": 195, "rumba_deconv": 195, "mbessel_ratio": 195, "generate_kernel": 195, "rumba_deconv_glob": 195, "isotropicmodel": 195, "isotropicfit": 195, "exponentialisotropicmodel": 195, "exponentialisotropicfit": 195, "sparsefasciclemodel": 195, "sparsefasciclefit": 195, "sfm_design_matrix": 195, "sphharmmodel": 195, "qballbasemodel": 195, "sphharmfit": 195, "csaodfmodel": 195, "opdtmodel": 195, "qballmodel": 195, "residualbootstrapwrapp": 195, "forward_sdeconv_mat": 195, "sh_to_rh": 195, "gen_dirac": 195, "spherical_harmon": 195, "real_sph_harm": 195, "real_sh_tournier_from_index": 195, "real_sh_descoteaux_from_index": 195, "real_sh_tourni": 195, "real_sh_descoteaux": 195, "real_sym_sh_mrtrix": 195, "real_sym_sh_basi": 195, "sph_harm_ind_list": 195, "order_from_ncoef": 195, "smooth_pinv": 195, "lazy_index": 195, "normalize_data": 195, "hat": 195, "lcr_matrix": 195, "bootstrap_data_arrai": 195, "bootstrap_data_voxel": 195, "sh_to_sf_matrix": 195, "calculate_max_ord": 195, "anisotropic_pow": 195, "convert_sh_to_full_basi": 195, "convert_sh_from_legaci": 195, "convert_sh_to_legaci": 195, "shoremodel": 195, "shorefit": 195, "shore_matrix": 195, "shore_matrix_pdf": 195, "shore_matrix_odf": 195, "l_shore": 195, "n_shore": 195, "shore_indic": 195, "shore_ord": 195, "dki_design_matrix": 195, "vec_val_vect": [], "bench_quickbundl": 196, "clustering_algorithm": [], "clusteringspe": [], "cythonutil": [], "featurespe": [], "fss": 196, "metricspe": [], "mrf": [], "mdfpy": 196, "check_rang": 196, "bundle_adjac": 196, "ba_analysi": 196, "cluster_bundl": 196, "bundle_shape_similar": 196, "clustercentroid": 196, "clustermap": 196, "clustermapcentroid": 196, "quickbundlesx": 196, "treeclust": 196, "treeclustermap": 196, "qbx_and_merg": 196, "dtype": [], "clusters_centroid2clustermap_centroid": [], "peek": [], "clusterscentroid": [], "evaluate_aabb_check": [], "arclengthfeatur": [], "centerofmassfeatur": [], "cythonfeatur": [], "identityfeatur": [], "midpointfeatur": [], "resamplefeatur": [], "vectorofendpointsfeatur": [], "infer_shap": [], "faststreamlinesearch": 196, "nearest_from_matrix_row": 196, "nearest_from_matrix_col": 196, "multi_median": 196, "applymask": 196, "bounding_box": 196, "crop": 196, "segment_from_cfa": 196, "clean_cc_mask": 196, "mdf": 196, "mean_manhattan_dist": 196, "mean_euclidean_dist": 196, "averagepointwiseeuclideanmetr": [], "cosinemetr": [], "cythonmetr": [], "minimumaveragedirectflipmetr": [], "sumpointwiseeuclideanmetr": [], "dist": [], "distance_matrix": [], "constantobservationmodel": [], "iteratedconditionalmod": [], "otsu": 196, "upper_bound_by_r": 196, "upper_bound_by_perc": 196, "tissueclassifierhmrf": 196, "sim": 197, "phantom": 197, "add_nois": 197, "diff2eigenvector": 197, "orbital_phantom": 197, "diffusion_ev": 197, "sticks_and_bal": 197, "callaghan_perpendicular": 197, "gaussian_parallel": 197, "cylinders_and_ball_soderman": 197, "single_tensor": 197, "multi_tensor": 197, "multi_tensor_dki": 197, "kurtosis_el": 197, "dki_sign": 197, "single_tensor_odf": 197, "all_tensor_evec": 197, "multi_tensor_odf": 197, "single_tensor_rtop": 197, "multi_tensor_rtop": 197, "single_tensor_pdf": 197, "multi_tensor_pdf": 197, "single_tensor_msd": 197, "multi_tensor_msd": 197, "stat": [198, 201], "peak_valu": 198, "anatomical_measur": 198, "assignment_map": 198, "gaussian_weight": 198, "afq_profil": 198, "_util": 199, "bench_streamlin": 199, "direction_gett": [], "distanc": [], "fbcmeasur": [], "learn": 199, "local_track": 199, "localtrack": 199, "mesh": 199, "propspe": [], "stopping_criterion": [], "streamlinespe": [], "vox2track": [], "setup": 199, "generate_streamlin": 199, "bench_set_number_of_point": 199, "bench_length": 199, "bench_compress_streamlin": 199, "directiongett": [], "add_3vec": [], "approx_polygon_track": [], "approximate_mdl_trajectori": [], "bundles_distances_mam": [], "bundles_distances_mdf": [], "cut_plan": [], "inner_3vec": [], "intersect_segment_cylind": [], "larch_3merg": [], "larch_3split": [], "lee_angle_dist": [], "lee_perpendicular_dist": [], "local_skeleton_clust": [], "local_skeleton_clustering_3pt": [], "mam_dist": [], "minimum_closest_dist": [], "most_similar_track_mam": [], "mul_3vec": [], "norm_3vec": [], "normalized_3vec": [], "point_segment_sq_dist": [], "point_track_sq_distance_check": [], "sub_3vec": [], "track_dist_3pt": [], "track_roi_intersection_check": [], "kdtree": [], "interp1d": [], "compute_rfbc": [], "min_moving_averag": [], "detect_corresponding_track": 199, "detect_corresponding_tracks_plu": 199, "lifesignalmak": 199, "fibermodel": 199, "fiberfit": 199, "streamline_gradi": 199, "grad_tensor": 199, "streamline_tensor": 199, "streamline_sign": 199, "voxel2streamlin": 199, "particlefilteringtrack": 199, "pft_tracker": [], "random_coordinates_from_surfac": 199, "seeds_from_surface_coordin": 199, "triangles_area": 199, "vertices_to_triangles_valu": 199, "wind": 199, "byte": 199, "downsampl": 199, "magn": 199, "frenet_serret": 199, "mean_curvatur": 199, "mean_orient": 199, "generate_combin": 199, "longest_track_bundl": 199, "intersect_spher": 199, "inside_spher": 199, "inside_sphere_point": 199, "spline": 199, "startpoint": 199, "arbitrarypoint": 199, "principal_compon": 199, "midpoint2point": 199, "eudx_both_direct": [], "ndarray_offset": [], "actstoppingcriterion": [], "anatomicalstoppingcriterion": [], "binarystoppingcriterion": [], "cmcstoppingcriterion": [], "stoppingcriterion": [], "streamlinestatu": [], "thresholdstoppingcriterion": [], "unlist_streamlin": 199, "relist_streamlin": 199, "center_streamlin": 199, "deform_streamlin": 199, "transform_streamlin": 199, "select_random_set_of_streamlin": 199, "select_by_roi": 199, "cluster_confid": 199, "orient_by_roi": 199, "orient_by_streamlin": 199, "values_from_volum": 199, "nbyte": 199, "compress_streamlin": [], "set_number_of_point": [], "density_map": 199, "connectivity_matrix": 199, "ndbincount": 199, "reduce_label": 199, "subseg": 199, "seeds_from_mask": 199, "random_seeds_from_mask": 199, "target": 199, "target_line_bas": 199, "streamline_near_roi": 199, "near_roi": 199, "unique_row": 199, "transform_tracking_output": 199, "reduce_roi": 199, "path_length": 199, "max_angle_from_curvatur": 199, "streamline_map": [], "track_count": [], "viz": [200, 201], "gmem": 200, "horizon": 200, "app": 200, "tab": 200, "panel": 200, "plot": 200, "project": 200, "regtool": 200, "globalhorizon": 200, "horizontab": 200, "tabmanag": 200, "build_label": 200, "color_single_slid": 200, "color_double_slid": 200, "clusterstab": 200, "peakstab": 200, "roistab": 200, "slicestab": 200, "clustersvisu": 200, "slicesvisu": 200, "slicer_panel": 200, "compare_map": 200, "compare_qti_map": 200, "bundle_shape_profil": 200, "sph_project": 200, "simple_plot": 200, "overlay_imag": 200, "draw_lattice_2d": 200, "plot_2d_diffeomorphic_map": 200, "plot_slic": 200, "overlay_slic": 200, "show_bundl": 200, "viz_two_bundl": 200, "viz_vector_field": 200, "viz_displacement_mag": 200, "combined_workflow": 201, "docstring_pars": 201, "flow_runn": 201, "multi_io": 201, "resliceflow": 201, "slrwithqbxflow": 201, "imageregistrationflow": 201, "applytransformflow": 201, "synregistrationflow": 201, "motioncorrectionflow": 201, "bundlewarpflow": 201, "check_dimens": 201, "introspectiveargumentpars": 201, "get_args_default": 201, "none_or_dtyp": 201, "combinedworkflow": 201, "patch2selfflow": 201, "nlmeansflow": 201, "lpcaflow": 201, "mppcaflow": 201, "gibbsringingflow": 201, "reader": 201, "numpydocstr": 201, "dedent_lin": 201, "get_level": 201, "run_flow": 201, "ioinfoflow": 201, "fetchflow": 201, "splitflow": 201, "maskflow": 201, "ioiter": 201, "common_start": 201, "slash_to_und": 201, "connect_output_path": 201, "concatenate_input": 201, "basename_without_extens": 201, "io_iter": 201, "io_iterator_": 201, "reconstmapmriflow": 201, "reconstdtiflow": 201, "reconstcsdflow": 201, "reconstcsaflow": 201, "reconstdkiflow": 201, "reconstivimflow": 201, "reconstrumbaflow": 201, "medianotsuflow": 201, "recobundlesflow": 201, "labelsbundlesflow": 201, "evacplusflow": 201, "snrinccflow": 201, "bundleanalysistractometryflow": 201, "linearmixedmodelsflow": 201, "bundleshapeanalysi": 201, "buan_bundle_profil": 201, "localfibertrackingpamflow": 201, "pftrackingpamflow": 201, "horizonflow": 201, "dipy_align_affin": 203, "argument": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "option": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "dipy_align_syn": 204, "dipy_apply_transform": 205, "dipy_buan_lmm": 206, "dipy_buan_profil": 207, "dipy_bundlewarp": 208, "dipy_correct_mot": 209, "dipy_denoise_lpca": 210, "dipy_denoise_mppca": 211, "dipy_denoise_nlmean": 212, "dipy_denoise_patch2self": 213, "dipy_evac_plu": 214, "dipy_fetch": 215, "dipy_fit_csa": 216, "dipy_fit_csd": 217, "dipy_fit_dki": 218, "dipy_fit_dti": 219, "dipy_fit_ivim": 220, "dipy_fit_mapmri": 221, "dipy_gibbs_ring": 222, "dipy_horizon": 223, "dipy_info": 224, "dipy_labelsbundl": 225, "dipy_mask": 226, "dipy_median_otsu": 227, "dipy_recobundl": 228, "dipy_reslic": 229, "dipy_slr": 230, "dipy_snr_in_cc": 231, "dipy_split": 232, "dipy_track": 233, "dipy_track_pft": 234, "11": 237, "subscrib": 257, "dii": 258, "matrix": [258, 259], "siemen": [258, 259], "dicom": [258, 259], "generalis": 260, "concept": 261, "coordin": 263, "term": 263, "physic": 263, "convent": 263, "matlab": 263, "apply_shad": 200}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"API changes": [[0, "api-changes"]], "DIPY 1.7.0 changes": [[0, "dipy-1-7-0-changes"]], "DIPY 1.6.0 changes": [[0, "dipy-1-6-0-changes"]], "DIPY 1.5.0 changes": [[0, "dipy-1-5-0-changes"]], "DIPY 1.4.1 changes": [[0, "dipy-1-4-1-changes"]], "DIPY 1.4.0 changes": [[0, "dipy-1-4-0-changes"]], "DIPY 1.3.0 changes": [[0, "dipy-1-3-0-changes"]], "DIPY 1.2.0 changes": [[0, "dipy-1-2-0-changes"]], "DIPY 1.1.1 changes": [[0, "dipy-1-1-1-changes"]], "DIPY 1.0.0 changes": [[0, "dipy-1-0-0-changes"]], "DIPY 0.16 Changes": [[0, "dipy-0-16-changes"]], "DIPY 0.15 Changes": [[0, "dipy-0-15-changes"]], "DIPY 0.14 Changes": [[0, "dipy-0-14-changes"]], "DIPY 0.13 Changes": [[0, "dipy-0-13-changes"]], "DIPY 0.12 Changes": [[0, "dipy-0-12-changes"]], "DIPY 0.10 Changes": [[0, "dipy-0-10-changes"]], "DIPY 0.9 Changes": [[0, "dipy-0-9-changes"]], "DIPY 0.8 Changes": [[0, "dipy-0-8-changes"]], "Changes between 0.7.1 and 0.6": [[0, "changes-between-0-7-1-and-0-6"]], "Publications": [[1, "publications"]], "A note on citing our work": [[1, "a-note-on-citing-our-work"]], "Data": [[2, "data"]], "Contents": [[2, "contents"], [146, "contents"], [147, "contents"], [161, "contents"]], "Datasets": [[2, "datasets"]], "Dependencies": [[4, "dependencies"]], "DIPY Coding Style Guideline": [[5, "dipy-coding-style-guideline"]], "Coding style": [[5, "coding-style"]], "Imports": [[5, "imports"], [5, "id1"]], "Cython coding style": [[5, "cython-coding-style"]], "Variable declaration": [[5, "variable-declaration"]], "Using C libraries": [[5, "using-c-libraries"]], "Error return values": [[5, "error-return-values"]], "Pointers and references": [[5, "pointers-and-references"]], "Casting": [[5, "casting"]], "Loops": [[5, "loops"]], "Documentation": [[5, "documentation"], [25, "documentation"]], "References": [[5, "references"], [39, "references"], [62, "references"], [63, "references"], [103, "references"], [167, "references"], [169, "references"], [170, "references"], [172, "references"], [173, "references"], [175, "references"], [176, "references"], [177, "references"], [178, "references"], [187, "references"], [187, "id102"], [187, "id108"], [187, "id113"], [187, "id138"], [187, "id163"], [187, "id186"], [187, "id191"], [187, "id195"], [187, "id209"], [189, "references"], [189, "id17"], [189, "id52"], [189, "id76"], [189, "id90"], [189, "id114"], [190, "references"], [191, "references"], [191, "id5"], [191, "id11"], [191, "id23"], [191, "id30"], [191, "id35"], [191, "id39"], [191, "id47"], [191, "id52"], [191, "id56"], [192, "references"], [193, "references"], [194, "references"], [194, "id30"], [194, "id77"], [195, "references"], [195, "id94"], [195, "id105"], [195, "id117"], [195, "id125"], [195, "id148"], [195, "id153"], [195, "id161"], [195, "id168"], [195, "id181"], [195, "id199"], [195, "id210"], [195, "id217"], [195, "id225"], [195, "id231"], [195, "id237"], [195, "id255"], [195, "id268"], [195, "id280"], [195, "id289"], [195, "id293"], [195, "id298"], [195, "id302"], [195, "id313"], [195, "id319"], [195, "id324"], [195, "id328"], [195, "id331"], [195, "id335"], [195, "id339"], [195, "id343"], [195, "id347"], [195, "id352"], [195, "id357"], [195, "id364"], [195, "id380"], [195, "id403"], [195, "id414"], [195, "id425"], [195, "id434"], [195, "id441"], [195, "id478"], [195, "id491"], [195, "id497"], [195, "id503"], [195, "id513"], [195, "id520"], [195, "id529"], [195, "id558"], [195, "id577"], [195, "id582"], [195, "id594"], [195, "id599"], [195, "id605"], [195, "id618"], [195, "id627"], [195, "id639"], [195, "id667"], [195, "id688"], [195, "id699"], [195, "id704"], [195, "id709"], [195, "id714"], [195, "id718"], [195, "id722"], [195, "id726"], [195, "id731"], [195, "id736"], [195, "id741"], [195, "id746"], [195, "id751"], [195, "id756"], [195, "id761"], [195, "id766"], [195, "id770"], [195, "id774"], [195, "id778"], [195, "id782"], [195, "id786"], [195, "id790"], [195, "id794"], [195, "id798"], [195, "id802"], [195, "id809"], [195, "id817"], [195, "id823"], [195, "id828"], [195, "id833"], [195, "id840"], [195, "id845"], [195, "id850"], [195, "id855"], [195, "id860"], [195, "id867"], [195, "id875"], [195, "id900"], [195, "id903"], [195, "id910"], [195, "id918"], [195, "id926"], [195, "id933"], [195, "id941"], [195, "id947"], [195, "id960"], [195, "id964"], [195, "id968"], [195, "id974"], [195, "id980"], [195, "id985"], [195, "id990"], [195, "id996"], [195, "id1002"], [195, "id1006"], [195, "id1009"], [195, "id1015"], [195, "id1017"], [195, "id1019"], [195, "id1021"], [195, "id1023"], [195, "id1025"], [195, "id1027"], [195, "id1029"], [195, "id1031"], [195, "id1034"], [195, "id1037"], [195, "id1041"], [195, "id1047"], [195, "id1095"], [195, "id1157"], [195, "id1161"], [195, "id1166"], [195, "id1176"], [195, "id1196"], [195, "id1203"], [195, "id1210"], [195, "id1217"], [195, "id1229"], [195, "id1237"], [195, "id1248"], [195, "id1251"], [195, "id1256"], [195, "id1260"], [196, "references"], [196, "id13"], [196, "id19"], [196, "id23"], [196, "id26"], [196, "id30"], [196, "id34"], [196, "id67"], [196, "id74"], [196, "id80"], [196, "id85"], [196, "id109"], [197, "references"], [197, "id20"], [197, "id26"], [197, "id31"], [197, "id39"], [197, "id44"], [197, "id54"], [197, "id60"], [197, "id64"], [197, "id68"], [197, "id77"], [197, "id81"], [197, "id85"], [197, "id89"], [197, "id93"], [197, "id97"], [198, "references"], [198, "id7"], [199, "references"], [199, "id113"], [199, "id147"], [199, "id167"], [199, "id170"], [200, "references"], [200, "id5"], [200, "id9"], [200, "id13"], [201, "references"], [201, "id12"], [201, "id19"], [201, "id21"], [201, "id25"], [201, "id31"], [201, "id35"], [201, "id55"], [201, "id62"], [201, "id65"], [201, "id69"], [201, "id74"], [201, "id77"], [201, "id81"], [201, "id84"], [201, "id87"], [201, "id90"], [201, "id96"], [201, "id99"], [201, "id102"], [201, "id104"], [201, "id106"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [209, "references"], [210, "references"], [211, "references"], [212, "references"], [213, "references"], [214, "references"], [215, "references"], [216, "references"], [217, "references"], [218, "references"], [219, "references"], [220, "references"], [221, "references"], [222, "references"], [223, "references"], [224, "references"], [225, "references"], [226, "references"], [227, "references"], [228, "references"], [229, "references"], [230, "references"], [231, "references"], [232, "references"], [233, "references"], [234, "references"], [262, "references"], [29, "references"], [31, "references"], [32, "references"], [34, "references"], [35, "references"], [36, "references"], [37, "references"], [40, "references"], [43, "references"], [45, "references"], [46, "references"], [47, "references"], [48, "references"], [49, "references"], [53, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [60, "references"], [64, "references"], [65, "references"], [67, "references"], [68, "references"], [69, "references"], [71, "references"], [72, "references"], [76, "references"], [78, "references"], [79, "references"], [81, "references"], [82, "references"], [83, "references"], [84, "references"], [86, "references"], [87, "references"], [88, "references"], [89, "references"], [90, "references"], [91, "references"], [92, "references"], [93, "references"], [95, "references"], [101, "references"], [102, "references"], [107, "references"], [108, "references"], [109, "references"], [113, "references"], [114, "references"], [117, "references"], [118, "references"], [119, "references"], [127, "references"], [138, "references"]], "Commit message codes": [[6, "commit-message-codes"]], "Configure git": [[7, "configure-git"]], "Overview": [[7, "overview"], [8, "overview"], [13, "overview"], [18, "overview"], [19, "overview"], [39, "overview"], [41, "overview"], [135, "overview"]], "In detail": [[7, "in-detail"], [13, "in-detail"], [18, "in-detail"], [19, "in-detail"]], "user.name and user.email": [[7, "user-name-and-user-email"]], "Aliases": [[7, "aliases"]], "Editor": [[7, "editor"]], "Merging": [[7, "merging"]], "Fancy log output": [[7, "fancy-log-output"]], "Development workflow": [[8, "development-workflow"]], "Workflow summary": [[8, "workflow-summary"]], "Consider deleting your master branch": [[8, "consider-deleting-your-master-branch"]], "Update the mirror of trunk": [[8, "update-the-mirror-of-trunk"]], "Make a new feature branch": [[8, "make-a-new-feature-branch"]], "The editing workflow": [[8, "the-editing-workflow"]], "In more detail": [[8, "in-more-detail"]], "Ask for your changes to be reviewed or merged": [[8, "ask-for-your-changes-to-be-reviewed-or-merged"]], "Some other things you might want to do": [[8, "some-other-things-you-might-want-to-do"]], "Delete a branch on github": [[8, "delete-a-branch-on-github"]], "Several people sharing a single repository": [[8, "several-people-sharing-a-single-repository"]], "Explore your repository": [[8, "explore-your-repository"]], "Rebasing on trunk": [[8, "rebasing-on-trunk"]], "Recovering from mess-ups": [[8, "recovering-from-mess-ups"]], "Rewriting commit history": [[8, "rewriting-commit-history"]], "Two and three dots in difference specs": [[9, "two-and-three-dots-in-difference-specs"]], "Following the latest source": [[10, "following-the-latest-source"]], "Get the local copy of the code": [[10, "get-the-local-copy-of-the-code"]], "Updating the code": [[10, "updating-the-code"]], "Making your own copy (fork) of DIPY": [[11, "making-your-own-copy-fork-of-dipy"]], "Set up and configure a github account": [[11, "set-up-and-configure-a-github-account"]], "Create your own forked copy of DIPY": [[11, "create-your-own-forked-copy-of-dipy"]], "Git for development": [[12, "git-for-development"]], "Install git": [[13, "install-git"]], "Introduction": [[14, "introduction"], [21, "introduction"]], "git resources": [[15, "git-resources"]], "Tutorials and summaries": [[15, "tutorials-and-summaries"]], "Advanced git workflow": [[15, "advanced-git-workflow"]], "Manual pages online": [[15, "manual-pages-online"]], "Working with DIPY source code": [[16, "working-with-dipy-source-code"]], "Maintainer workflow": [[17, "maintainer-workflow"]], "Integrating changes": [[17, "integrating-changes"]], "A few commits": [[17, "a-few-commits"]], "A long series of commits": [[17, "a-long-series-of-commits"]], "Check the history": [[17, "check-the-history"]], "Push to trunk": [[17, "push-to-trunk"]], "Making a patch": [[18, "making-a-patch"]], "Making patches": [[18, "making-patches"]], "Moving from patching to development": [[18, "moving-from-patching-to-development"]], "Set up your fork": [[19, "set-up-your-fork"]], "Clone your fork": [[19, "clone-your-fork"]], "Linking your repository to the upstream repo": [[19, "linking-your-repository-to-the-upstream-repo"]], "DIPY development": [[20, "dipy-development"]], "A guide to making a DIPY release": [[22, "a-guide-to-making-a-dipy-release"]], "Release tools": [[22, "release-tools"]], "Release checklist": [[22, "release-checklist"]], "Doing the release": [[22, "doing-the-release"]], "Uploading binary builds for the release": [[22, "uploading-binary-builds-for-the-release"]], "Other stuff that needs doing for the release": [[22, "other-stuff-that-needs-doing-for-the-release"]], "Keeping code compatible with Pythons 2 and 3": [[23, "keeping-code-compatible-with-pythons-2-and-3"]], "Future imports": [[23, "future-imports"]], "Print": [[23, "print"]], "Division": [[23, "division"]], "Moved modules": [[23, "moved-modules"]], "Range, xrange": [[23, "range-xrange"]], "Reduce": [[23, "reduce"]], "Strings": [[23, "strings"]], "Next function": [[23, "next-function"]], "Except": [[23, "except"]], "Dictionaries": [[23, "dictionaries"]], "Developers": [[24, "developers"]], "Quick Start": [[26, "quick-start"], [146, "quick-start"], [147, "quick-start"], [148, "quick-start"]], "Computation times": [[28, "computation-times"], [42, "computation-times"], [70, "computation-times"], [74, "computation-times"], [77, "computation-times"], [96, "computation-times"], [106, "computation-times"], [120, "computation-times"], [126, "computation-times"], [132, "computation-times"], [134, "computation-times"], [137, "computation-times"], [144, "computation-times"]], "Preprocessing": [[38, "preprocessing"], [146, "preprocessing"], [147, "preprocessing"], [149, "preprocessing"]], "Between-volumes Motion Correction on DWI datasets": [[39, "between-volumes-motion-correction-on-dwi-datasets"]], "Reslice diffusion datasets": [[41, "reslice-diffusion-datasets"]], "Reconstruction": [[44, "reconstruction"], [176, "reconstruction"], [146, "reconstruction"], [147, "reconstruction"], [150, "reconstruction"]], "Reconstruct with Generalized Q-Sampling Imaging": [[56, "reconstruct-with-generalized-q-sampling-imaging"]], "Reconstruct with Q-space Trajectory Imaging (QTI)": [[62, "reconstruct-with-q-space-trajectory-imaging-qti"]], "Theory": [[62, "theory"], [63, "theory"]], "Usage example": [[62, "usage-example"], [63, "usage-example"]], "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)": [[63, "applying-positivity-constraints-to-q-space-trajectory-imaging-qti"]], "Installation": [[63, "installation"], [166, "installation"]], "Contextual Enhancement": [[73, "contextual-enhancement"], [146, "contextual-enhancement"], [151, "contextual-enhancement"]], "Fiber Tracking": [[75, "fiber-tracking"], [146, "fiber-tracking"], [152, "fiber-tracking"]], "Streamlines Analysis and Connectivity": [[94, "streamlines-analysis-and-connectivity"], [146, "streamlines-analysis-and-connectivity"], [153, "streamlines-analysis-and-connectivity"]], "Nonrigid Bundle Registration with BundleWarp": [[103, "nonrigid-bundle-registration-with-bundlewarp"]], "Registration": [[104, "registration"], [177, "registration"], [146, "registration"], [147, "registration"], [154, "registration"]], "Segmentation": [[115, "segmentation"], [146, "segmentation"], [147, "segmentation"], [155, "segmentation"]], "Simulation": [[122, "simulation"], [146, "simulation"], [156, "simulation"]], "Multiprocessing": [[129, "multiprocessing"], [146, "multiprocessing"], [147, "multiprocessing"], [157, "multiprocessing"]], "Parallel reconstruction using Q-Ball": [[130, "parallel-reconstruction-using-q-ball"]], "Parallel reconstruction using CSD": [[131, "parallel-reconstruction-using-csd"]], "File Formats": [[133, "file-formats"], [146, "file-formats"], [147, "file-formats"], [158, "file-formats"]], "Read/Write streamline files": [[135, "read-write-streamline-files"]], "Visualization": [[136, "visualization"], [146, "visualization"], [147, "visualization"], [159, "visualization"]], "Creating a new combined workflow": [[142, "creating-a-new-combined-workflow"]], "Workflows": [[143, "workflows"], [146, "workflows"], [147, "workflows"], [160, "workflows"]], "Creating a new workflow.": [[145, "creating-a-new-workflow"]], "Frequently Asked Questions": [[162, "frequently-asked-questions"]], "Theoretical": [[162, "theoretical"]], "Practical": [[162, "practical"]], "Glossary": [[164, "glossary"]], "Diffusion Imaging In Python": [[165, "diffusion-imaging-in-python"]], "Highlights": [[165, "highlights"]], "Announcements": [[165, "announcements"]], "Getting Started": [[165, "getting-started"]], "Next Steps": [[165, "next-steps"]], "Support": [[165, "support"], [166, "support"]], "Installing a release": [[166, "installing-a-release"]], "Using Anaconda:": [[166, "using-anaconda"]], "Using packages:": [[166, "using-packages"]], "Windows": [[166, "windows"], [166, "id2"]], "OSX": [[166, "osx"], [166, "id3"]], "Linux": [[166, "linux"]], "Using pip:": [[166, "using-pip"]], "Contact us:": [[166, "contact-us"]], "Common problems:": [[166, "common-problems"]], "Multiple installations": [[166, "multiple-installations"]], "Alternatives to Anaconda": [[166, "alternatives-to-anaconda"]], "Memory issues": [[166, "memory-issues"]], "Note on python versions": [[166, "note-on-python-versions"]], "Installing from source": [[166, "installing-from-source"]], "Getting the source": [[166, "getting-the-source"]], "Building and installing": [[166, "building-and-installing"], [166, "id4"]], "Install from source (all operating systems)": [[166, "install-from-source-all-operating-systems"]], "Install from source for Unix (e.g Linux, OSX)": [[166, "install-from-source-for-unix-e-g-linux-osx"]], "Ubuntu/Debian": [[166, "ubuntu-debian"]], "Fedora / Mandriva maybe Redhat": [[166, "fedora-mandriva-maybe-redhat"]], "OpenMP with OSX": [[166, "openmp-with-osx"]], "Under Anaconda": [[166, "under-anaconda"]], "Under Homebrew Python or python.org Python": [[166, "under-homebrew-python-or-python-org-python"]], "Testing": [[166, "testing"]], "Documentation (Unix only)": [[166, "documentation-unix-only"]], "Tip": [[166, "tip"]], "Troubleshooting": [[166, "troubleshooting"]], "Introduction to command line interfaces": [[167, "introduction-to-command-line-interfaces"]], "BUndle ANalytics (BUAN) framework": [[168, "bundle-analytics-buan-framework"]], "Group Comparison of Bundle Profiles": [[168, "group-comparison-of-bundle-profiles"]], "Shape similarity of specific bundles across the populations": [[168, "shape-similarity-of-specific-bundles-across-the-populations"]], "Reproducing results on larger dataset:": [[168, "reproducing-results-on-larger-dataset"]], "White Matter Bundle Segmentation with RecoBundles": [[169, "white-matter-bundle-segmentation-with-recobundles"]], "Streamline-Based Linear Registration": [[169, "streamline-based-linear-registration"]], "RecoBundles": [[169, "recobundles"], [196, "recobundles"]], "Nonrigid White Matter Bundle Registration with BundleWarp": [[170, "nonrigid-white-matter-bundle-registration-with-bundlewarp"]], "Partially Deformable BundleWarp Registration": [[170, "partially-deformable-bundlewarp-registration"]], "Fully Deformable BundleWarp Registration": [[170, "fully-deformable-bundlewarp-registration"]], "Downloading DIPY datasets": [[171, "downloading-dipy-datasets"]], "Denoising": [[172, "denoising"], [147, "denoising"]], "Denoising using Overcomplete Local PCA": [[172, "denoising-using-overcomplete-local-pca"]], "Denoising using Marcenko-Pastur PCA": [[172, "denoising-using-marcenko-pastur-pca"]], "Denoising using NLMEANS": [[172, "denoising-using-nlmeans"]], "Overview of Denoising Methods": [[172, "overview-of-denoising-methods"]], "Diffusion": [[172, "diffusion"]], "Structural": [[172, "structural"]], "Gibbs Unringing": [[173, "gibbs-unringing"]], "Suppress Gibbs Oscillations": [[173, "suppress-gibbs-oscillations"]], "DIPY Workflows Interfaces": [[174, "dipy-workflows-interfaces"]], "Between-Volumes Motion Correction": [[175, "between-volumes-motion-correction"]], "Motion Correction": [[175, "motion-correction"]], "Constrained Spherical Deconvolution (CSD)": [[176, "constrained-spherical-deconvolution-csd"]], "Mean Apparent Propagator (MAP)-MRI": [[176, "mean-apparent-propagator-map-mri"], [147, "mean-apparent-propagator-map-mri"]], "Diffusion Tensor Imaging (DTI)": [[176, "diffusion-tensor-imaging-dti"]], "Diffusion Kurtosis Imaging (DKI)": [[176, "diffusion-kurtosis-imaging-dki"]], "Constant Solid Angle (CSA)": [[176, "constant-solid-angle-csa"]], "Intravoxel Incoherent Motion (IVIM)": [[176, "intravoxel-incoherent-motion-ivim"]], "Image Registration": [[177, "image-registration"]], "Symmetric Diffeomorphic Registration": [[177, "symmetric-diffeomorphic-registration"]], "Apply a Transformation": [[177, "apply-a-transformation"]], "Streamline-based Registration": [[177, "streamline-based-registration"], [147, "streamline-based-registration"]], "Tracking": [[178, "tracking"]], "Local Fiber Tracking": [[178, "local-fiber-tracking"]], "EuDX Tracking": [[178, "eudx-tracking"]], "Deterministic Tracking": [[178, "deterministic-tracking"]], "Probabilistic Tracking": [[178, "probabilistic-tracking"]], "Closest Peaks Tracking": [[178, "closest-peaks-tracking"]], "Particle Filtering Tracking (PFT)": [[178, "particle-filtering-tracking-pft"]], "Overview of Fiber Tracking Methods": [[178, "overview-of-fiber-tracking-methods"]], "What is DIPY?": [[179, "what-is-dipy"]], "Mission statement": [[180, "mission-statement"]], "A note about the examples": [[181, "a-note-about-the-examples"]], "Older Highlights": [[182, "older-highlights"]], "Past Announcements": [[183, "past-announcements"]], "dipy": [[185, "module-dipy"]], "Diffusion Imaging in Python": [[185, "diffusion-imaging-in-python"]], "Subpackages": [[185, "subpackages"]], "Utilities": [[185, "utilities"]], "get_info": [[185, "get-info"]], "__config__": [[186, "module-dipy.__config__"]], "align": [[187, "module-dipy.align"]], "Module: align._public": [[187, "module-dipy.align._public"]], "Module: align.cpd": [[187, "module-dipy.align.cpd"]], "Note": [[187, "note"]], "Module: align.imaffine": [[187, "module-dipy.align.imaffine"]], "Module: align.imwarp": [[187, "module-dipy.align.imwarp"]], "Module: align.metrics": [[187, "module-dipy.align.metrics"]], "Module: align.reslice": [[187, "module-dipy.align.reslice"]], "Module: align.scalespace": [[187, "module-dipy.align.scalespace"]], "Module: align.streamlinear": [[187, "module-dipy.align.streamlinear"]], "Module: align.streamwarp": [[187, "module-dipy.align.streamwarp"]], "Bunch": [[187, "bunch"]], "VerbosityLevels": [[187, "verbositylevels"]], "syn_registration": [[187, "syn-registration"]], "Parameters": [[187, "parameters"], [187, "id5"], [187, "id7"], [187, "id9"], [187, "id12"], [187, "id14"], [187, "id19"], [187, "id21"], [187, "id23"], [187, "id25"], [187, "id28"], [187, "id30"], [187, "id32"], [187, "id34"], [187, "id35"], [187, "id37"], [187, "id38"], [187, "id40"], [187, "id42"], [187, "id44"], [187, "id46"], [187, "id48"], [187, "id50"], [187, "id51"], [187, "id55"], [187, "id57"], [187, "id59"], [187, "id61"], [187, "id64"], [187, "id65"], [187, "id69"], [187, "id72"], [187, "id75"], [187, "id78"], [187, "id79"], [187, "id80"], [187, "id81"], [187, "id83"], [187, "id85"], [187, "id87"], [187, "id89"], [187, "id90"], [187, "id91"], [187, "id92"], [187, "id93"], [187, "id94"], [187, "id95"], [187, "id96"], [187, "id97"], [187, "id98"], [187, "id100"], [187, "id103"], [187, "id104"], [187, "id105"], [187, "id106"], [187, "id109"], [187, "id111"], [187, "id114"], [187, "id116"], [187, "id118"], [187, "id120"], [187, "id122"], [187, "id124"], [187, "id126"], [187, "id128"], [187, "id130"], [187, "id132"], [187, "id134"], [187, "id135"], [187, "id137"], [187, "id139"], [187, "id140"], [187, "id141"], [187, "id145"], [187, "id146"], [187, "id147"], [187, "id149"], [187, "id150"], [187, "id153"], [187, "id154"], [187, "id157"], [187, "id158"], [187, "id159"], [187, "id162"], [187, "id165"], [187, "id167"], [187, "id168"], [187, "id171"], [187, "id172"], [187, "id175"], [187, "id177"], [187, "id179"], [187, "id182"], [187, "id185"], [187, "id188"], [187, "id194"], [187, "id198"], [187, "id199"], [187, "id201"], [187, "id203"], [187, "id205"], [187, "id207"], [187, "id210"], [187, "id212"], [189, "parameters"], [189, "id6"], [189, "id8"], [189, "id11"], [189, "id14"], [189, "id19"], [189, "id22"], [189, "id26"], [189, "id29"], [189, "id32"], [189, "id35"], [189, "id38"], [189, "id40"], [189, "id43"], [189, "id45"], [189, "id48"], [189, "id50"], [189, "id53"], [189, "id56"], [189, "id61"], [189, "id65"], [189, "id69"], [189, "id74"], [189, "id77"], [189, "id79"], [189, "id81"], [189, "id83"], [189, "id87"], [189, "id93"], [189, "id95"], [189, "id98"], [189, "id99"], [189, "id101"], [189, "id103"], [189, "id105"], [189, "id107"], [189, "id109"], [189, "id111"], [189, "id115"], [189, "id116"], [189, "id119"], [189, "id122"], [189, "id125"], [189, "id126"], [189, "id128"], [189, "id130"], [189, "id132"], [189, "id134"], [189, "id136"], [189, "id138"], [189, "id140"], [189, "id143"], [189, "id145"], [189, "id150"], [189, "id155"], [189, "id160"], [189, "id165"], [189, "id166"], [189, "id167"], [189, "id169"], [189, "id172"], [189, "id175"], [189, "id177"], [189, "id179"], [189, "id181"], [189, "id183"], [189, "id185"], [189, "id187"], [189, "id189"], [190, "parameters"], [190, "id5"], [190, "id8"], [190, "id11"], [190, "id12"], [190, "id17"], [190, "id21"], [190, "id22"], [190, "id26"], [190, "id38"], [190, "id40"], [190, "id47"], [190, "id49"], [190, "id62"], [190, "id65"], [190, "id69"], [191, "parameters"], [191, "id3"], [191, "id7"], [191, "id16"], [191, "id27"], [191, "id33"], [191, "id36"], [191, "id42"], [191, "id50"], [191, "id54"], [192, "parameters"], [192, "id1"], [192, "id3"], [192, "id9"], [193, "parameters"], [193, "id3"], [193, "id4"], [193, "id5"], [193, "id7"], [193, "id10"], [193, "id12"], [193, "id13"], [193, "id15"], [193, "id16"], [193, "id19"], [193, "id22"], [193, "id25"], [193, "id27"], [193, "id29"], [193, "id30"], [193, "id32"], [193, "id34"], [193, "id36"], [193, "id38"], [193, "id40"], [193, "id42"], [193, "id44"], [193, "id46"], [193, "id48"], [193, "id50"], [193, "id52"], [193, "id54"], [193, "id56"], [193, "id58"], [193, "id60"], [193, "id62"], [193, "id64"], [193, "id67"], [193, "id70"], [193, "id72"], [193, "id74"], [193, "id76"], [193, "id77"], [193, "id79"], [193, "id81"], [193, "id82"], [193, "id83"], [194, "parameters"], [194, "id1"], [194, "id2"], [194, "id3"], [194, "id5"], [194, "id6"], [194, "id8"], [194, "id10"], [194, "id20"], [194, "id22"], [194, "id23"], [194, "id25"], [194, "id27"], [194, "id29"], [194, "id33"], [194, "id34"], [194, "id37"], [194, "id38"], [194, "id40"], [194, "id42"], [194, "id45"], [194, "id46"], [194, "id48"], [194, "id50"], [194, "id76"], [194, "id80"], [194, "id81"], [194, "id82"], [194, "id85"], [194, "id87"], [194, "id92"], [194, "id95"], [194, "id97"], [194, "id98"], [194, "id100"], [195, "parameters"], [195, "id87"], [195, "id88"], [195, "id90"], [195, "id92"], [195, "id96"], [195, "id101"], [195, "id110"], [195, "id114"], [195, "id119"], [195, "id122"], [195, "id127"], [195, "id144"], [195, "id150"], [195, "id155"], [195, "id158"], [195, "id163"], [195, "id171"], [195, "id172"], [195, "id174"], [195, "id188"], [195, "id194"], [195, "id203"], [195, "id214"], [195, "id219"], [195, "id223"], [195, "id228"], [195, "id234"], [195, "id248"], [195, "id261"], [195, "id272"], [195, "id275"], [195, "id287"], [195, "id291"], [195, "id295"], [195, "id299"], [195, "id303"], [195, "id305"], [195, "id308"], [195, "id315"], [195, "id316"], [195, "id321"], [195, "id355"], [195, "id360"], [195, "id369"], [195, "id373"], [195, "id378"], [195, "id384"], [195, "id387"], [195, "id388"], [195, "id390"], [195, "id392"], [195, "id394"], [195, "id395"], [195, "id396"], [195, "id399"], [195, "id401"], [195, "id407"], [195, "id418"], [195, "id419"], [195, "id445"], [195, "id456"], [195, "id459"], [195, "id462"], [195, "id465"], [195, "id468"], [195, "id471"], [195, "id474"], [195, "id482"], [195, "id488"], [195, "id494"], [195, "id500"], [195, "id505"], [195, "id507"], [195, "id509"], [195, "id516"], [195, "id522"], [195, "id526"], [195, "id531"], [195, "id535"], [195, "id537"], [195, "id542"], [195, "id547"], [195, "id549"], [195, "id551"], [195, "id553"], [195, "id555"], [195, "id564"], [195, "id565"], [195, "id566"], [195, "id567"], [195, "id570"], [195, "id579"], [195, "id581"], [195, "id584"], [195, "id591"], [195, "id596"], [195, "id604"], [195, "id613"], [195, "id614"], [195, "id617"], [195, "id621"], [195, "id623"], [195, "id625"], [195, "id631"], [195, "id636"], [195, "id642"], [195, "id645"], [195, "id647"], [195, "id649"], [195, "id651"], [195, "id653"], [195, "id654"], [195, "id656"], [195, "id658"], [195, "id660"], [195, "id662"], [195, "id686"], [195, "id696"], [195, "id721"], [195, "id749"], [195, "id754"], [195, "id759"], [195, "id764"], [195, "id769"], [195, "id773"], [195, "id777"], [195, "id781"], [195, "id785"], [195, "id789"], [195, "id793"], [195, "id797"], [195, "id801"], [195, "id807"], [195, "id815"], [195, "id821"], [195, "id826"], [195, "id831"], [195, "id835"], [195, "id838"], [195, "id843"], [195, "id848"], [195, "id853"], [195, "id858"], [195, "id863"], [195, "id865"], [195, "id869"], [195, "id874"], [195, "id879"], [195, "id880"], [195, "id881"], [195, "id882"], [195, "id884"], [195, "id886"], [195, "id888"], [195, "id891"], [195, "id894"], [195, "id898"], [195, "id929"], [195, "id937"], [195, "id945"], [195, "id950"], [195, "id952"], [195, "id954"], [195, "id956"], [195, "id959"], [195, "id967"], [195, "id973"], [195, "id979"], [195, "id984"], [195, "id989"], [195, "id995"], [195, "id1001"], [195, "id1005"], [195, "id1008"], [195, "id1039"], [195, "id1043"], [195, "id1045"], [195, "id1050"], [195, "id1052"], [195, "id1054"], [195, "id1061"], [195, "id1071"], [195, "id1074"], [195, "id1077"], [195, "id1080"], [195, "id1083"], [195, "id1086"], [195, "id1094"], [195, "id1098"], [195, "id1104"], [195, "id1106"], [195, "id1112"], [195, "id1117"], [195, "id1118"], [195, "id1120"], [195, "id1121"], [195, "id1122"], [195, "id1123"], [195, "id1125"], [195, "id1126"], [195, "id1127"], [195, "id1134"], [195, "id1136"], [195, "id1137"], [195, "id1139"], [195, "id1141"], [195, "id1149"], [195, "id1150"], [195, "id1152"], [195, "id1154"], [195, "id1156"], [195, "id1159"], [195, "id1164"], [195, "id1168"], [195, "id1170"], [195, "id1171"], [195, "id1173"], [195, "id1178"], [195, "id1191"], [195, "id1194"], [195, "id1200"], [195, "id1207"], [195, "id1214"], [195, "id1223"], [195, "id1226"], [195, "id1234"], [195, "id1244"], [195, "id1255"], [195, "id1259"], [195, "id1263"], [195, "id1265"], [195, "id1267"], [196, "parameters"], [196, "id3"], [196, "id6"], [196, "id7"], [196, "id9"], [196, "id15"], [196, "id21"], [196, "id24"], [196, "id28"], [196, "id32"], [196, "id37"], [196, "id39"], [196, "id42"], [196, "id44"], [196, "id46"], [196, "id47"], [196, "id51"], [196, "id53"], [196, "id55"], [196, "id58"], [196, "id59"], [196, "id63"], [196, "id65"], [196, "id69"], [196, "id72"], [196, "id78"], [196, "id82"], [196, "id87"], [196, "id89"], [196, "id91"], [196, "id93"], [196, "id95"], [196, "id97"], [196, "id102"], [196, "id104"], [196, "id107"], [196, "id111"], [196, "id113"], [196, "id115"], [196, "id117"], [196, "id119"], [196, "id121"], [197, "parameters"], [197, "id7"], [197, "id10"], [197, "id15"], [197, "id24"], [197, "id29"], [197, "id33"], [197, "id37"], [197, "id42"], [197, "id47"], [197, "id50"], [197, "id56"], [197, "id62"], [197, "id66"], [197, "id70"], [197, "id72"], [197, "id75"], [197, "id79"], [197, "id83"], [197, "id87"], [197, "id91"], [197, "id95"], [198, "parameters"], [198, "id1"], [198, "id2"], [198, "id3"], [198, "id5"], [199, "parameters"], [199, "id2"], [199, "id6"], [199, "id9"], [199, "id10"], [199, "id12"], [199, "id13"], [199, "id14"], [199, "id16"], [199, "id20"], [199, "id22"], [199, "id23"], [199, "id26"], [199, "id27"], [199, "id29"], [199, "id31"], [199, "id33"], [199, "id36"], [199, "id39"], [199, "id42"], [199, "id45"], [199, "id47"], [199, "id50"], [199, "id52"], [199, "id55"], [199, "id57"], [199, "id60"], [199, "id63"], [199, "id65"], [199, "id68"], [199, "id71"], [199, "id74"], [199, "id78"], [199, "id81"], [199, "id84"], [199, "id87"], [199, "id90"], [199, "id93"], [199, "id95"], [199, "id97"], [199, "id99"], [199, "id101"], [199, "id103"], [199, "id106"], [199, "id111"], [199, "id114"], [199, "id117"], [199, "id119"], [199, "id122"], [199, "id125"], [199, "id127"], [199, "id129"], [199, "id133"], [199, "id137"], [199, "id141"], [199, "id145"], [199, "id149"], [199, "id151"], [199, "id154"], [199, "id156"], [199, "id158"], [199, "id160"], [199, "id163"], [199, "id165"], [199, "id168"], [200, "parameters"], [200, "id1"], [200, "id2"], [200, "id4"], [200, "id8"], [200, "id12"], [200, "id15"], [200, "id17"], [200, "id19"], [200, "id21"], [200, "id22"], [200, "id23"], [200, "id24"], [200, "id26"], [200, "id27"], [200, "id28"], [200, "id30"], [200, "id32"], [200, "id33"], [200, "id34"], [200, "id35"], [200, "id36"], [200, "id37"], [201, "parameters"], [201, "id3"], [201, "id5"], [201, "id6"], [201, "id9"], [201, "id10"], [201, "id11"], [201, "id13"], [201, "id14"], [201, "id15"], [201, "id16"], [201, "id18"], [201, "id20"], [201, "id22"], [201, "id29"], [201, "id34"], [201, "id38"], [201, "id40"], [201, "id42"], [201, "id43"], [201, "id44"], [201, "id45"], [201, "id47"], [201, "id50"], [201, "id52"], [201, "id53"], [201, "id61"], [201, "id64"], [201, "id67"], [201, "id73"], [201, "id76"], [201, "id79"], [201, "id80"], [201, "id83"], [201, "id86"], [201, "id88"], [201, "id89"], [201, "id92"], [201, "id93"], [201, "id94"], [201, "id95"], [201, "id98"], [201, "id101"], [201, "id103"], [201, "id105"]], "Returns": [[187, "returns"], [187, "id6"], [187, "id10"], [187, "id13"], [187, "id15"], [187, "id20"], [187, "id22"], [187, "id24"], [187, "id26"], [187, "id27"], [187, "id29"], [187, "id31"], [187, "id33"], [187, "id36"], [187, "id39"], [187, "id41"], [187, "id45"], [187, "id47"], [187, "id49"], [187, "id52"], [187, "id56"], [187, "id58"], [187, "id60"], [187, "id62"], [187, "id66"], [187, "id67"], [187, "id68"], [187, "id70"], [187, "id73"], [187, "id76"], [187, "id82"], [187, "id84"], [187, "id86"], [187, "id88"], [187, "id99"], [187, "id101"], [187, "id107"], [187, "id110"], [187, "id112"], [187, "id115"], [187, "id117"], [187, "id119"], [187, "id121"], [187, "id123"], [187, "id125"], [187, "id127"], [187, "id129"], [187, "id131"], [187, "id133"], [187, "id166"], [187, "id169"], [187, "id173"], [187, "id176"], [187, "id178"], [187, "id180"], [187, "id183"], [187, "id200"], [187, "id202"], [187, "id204"], [187, "id206"], [187, "id208"], [187, "id211"], [187, "id213"], [189, "returns"], [189, "id5"], [189, "id7"], [189, "id9"], [189, "id12"], [189, "id15"], [189, "id20"], [189, "id23"], [189, "id27"], [189, "id30"], [189, "id33"], [189, "id36"], [189, "id39"], [189, "id41"], [189, "id44"], [189, "id46"], [189, "id49"], [189, "id51"], [189, "id59"], [189, "id62"], [189, "id66"], [189, "id70"], [189, "id75"], [189, "id78"], [189, "id80"], [189, "id82"], [189, "id84"], [189, "id88"], [189, "id94"], [189, "id104"], [189, "id108"], [189, "id110"], [189, "id117"], [189, "id120"], [189, "id123"], [189, "id127"], [189, "id129"], [189, "id133"], [189, "id135"], [189, "id137"], [189, "id139"], [189, "id141"], [189, "id144"], [189, "id170"], [189, "id173"], [189, "id176"], [189, "id178"], [189, "id180"], [189, "id182"], [189, "id184"], [189, "id186"], [189, "id188"], [189, "id190"], [190, "returns"], [190, "id6"], [190, "id9"], [190, "id14"], [190, "id18"], [190, "id27"], [190, "id31"], [190, "id32"], [190, "id33"], [190, "id34"], [190, "id35"], [190, "id36"], [190, "id37"], [190, "id39"], [190, "id41"], [190, "id50"], [190, "id52"], [190, "id53"], [190, "id54"], [190, "id55"], [190, "id56"], [190, "id57"], [190, "id58"], [190, "id59"], [190, "id60"], [190, "id61"], [190, "id63"], [190, "id66"], [190, "id70"], [191, "returns"], [191, "id4"], [191, "id10"], [191, "id22"], [191, "id29"], [191, "id34"], [191, "id37"], [191, "id43"], [191, "id51"], [191, "id55"], [192, "returns"], [192, "id2"], [192, "id6"], [192, "id10"], [193, "returns"], [193, "id6"], [193, "id8"], [193, "id11"], [193, "id14"], [193, "id20"], [193, "id24"], [193, "id26"], [193, "id28"], [193, "id31"], [193, "id33"], [193, "id35"], [193, "id37"], [193, "id39"], [193, "id41"], [193, "id43"], [193, "id45"], [193, "id47"], [193, "id49"], [193, "id51"], [193, "id53"], [193, "id55"], [193, "id57"], [193, "id59"], [193, "id61"], [193, "id63"], [193, "id65"], [193, "id68"], [193, "id71"], [193, "id73"], [193, "id75"], [193, "id78"], [193, "id80"], [193, "id84"], [194, "returns"], [194, "id4"], [194, "id7"], [194, "id9"], [194, "id11"], [194, "id24"], [194, "id26"], [194, "id28"], [194, "id35"], [194, "id39"], [194, "id41"], [194, "id43"], [194, "id44"], [194, "id47"], [194, "id49"], [194, "id51"], [194, "id52"], [194, "id83"], [194, "id86"], [194, "id88"], [194, "id93"], [194, "id96"], [194, "id99"], [194, "id101"], [195, "returns"], [195, "id89"], [195, "id111"], [195, "id120"], [195, "id123"], [195, "id128"], [195, "id145"], [195, "id151"], [195, "id156"], [195, "id159"], [195, "id176"], [195, "id189"], [195, "id196"], [195, "id205"], [195, "id215"], [195, "id220"], [195, "id224"], [195, "id230"], [195, "id236"], [195, "id250"], [195, "id263"], [195, "id273"], [195, "id277"], [195, "id288"], [195, "id292"], [195, "id296"], [195, "id300"], [195, "id304"], [195, "id306"], [195, "id356"], [195, "id361"], [195, "id370"], [195, "id379"], [195, "id385"], [195, "id389"], [195, "id391"], [195, "id393"], [195, "id397"], [195, "id420"], [195, "id422"], [195, "id427"], [195, "id431"], [195, "id436"], [195, "id438"], [195, "id443"], [195, "id446"], [195, "id457"], [195, "id460"], [195, "id463"], [195, "id466"], [195, "id469"], [195, "id472"], [195, "id475"], [195, "id483"], [195, "id489"], [195, "id495"], [195, "id501"], [195, "id510"], [195, "id517"], [195, "id524"], [195, "id528"], [195, "id536"], [195, "id548"], [195, "id550"], [195, "id552"], [195, "id554"], [195, "id556"], [195, "id568"], [195, "id580"], [195, "id585"], [195, "id592"], [195, "id598"], [195, "id615"], [195, "id622"], [195, "id624"], [195, "id626"], [195, "id632"], [195, "id637"], [195, "id643"], [195, "id646"], [195, "id648"], [195, "id650"], [195, "id652"], [195, "id655"], [195, "id657"], [195, "id659"], [195, "id661"], [195, "id750"], [195, "id755"], [195, "id760"], [195, "id765"], [195, "id808"], [195, "id816"], [195, "id822"], [195, "id827"], [195, "id832"], [195, "id836"], [195, "id839"], [195, "id844"], [195, "id849"], [195, "id854"], [195, "id859"], [195, "id866"], [195, "id883"], [195, "id885"], [195, "id887"], [195, "id889"], [195, "id892"], [195, "id895"], [195, "id899"], [195, "id902"], [195, "id907"], [195, "id915"], [195, "id923"], [195, "id930"], [195, "id938"], [195, "id946"], [195, "id951"], [195, "id955"], [195, "id1040"], [195, "id1051"], [195, "id1053"], [195, "id1055"], [195, "id1056"], [195, "id1057"], [195, "id1059"], [195, "id1062"], [195, "id1063"], [195, "id1065"], [195, "id1067"], [195, "id1069"], [195, "id1072"], [195, "id1075"], [195, "id1078"], [195, "id1081"], [195, "id1084"], [195, "id1087"], [195, "id1099"], [195, "id1100"], [195, "id1101"], [195, "id1102"], [195, "id1103"], [195, "id1105"], [195, "id1107"], [195, "id1113"], [195, "id1119"], [195, "id1124"], [195, "id1133"], [195, "id1135"], [195, "id1138"], [195, "id1140"], [195, "id1142"], [195, "id1151"], [195, "id1155"], [195, "id1172"], [195, "id1174"], [195, "id1180"], [195, "id1192"], [195, "id1195"], [195, "id1202"], [195, "id1209"], [195, "id1216"], [195, "id1224"], [195, "id1228"], [195, "id1236"], [195, "id1264"], [195, "id1266"], [195, "id1268"], [196, "returns"], [196, "id4"], [196, "id8"], [196, "id12"], [196, "id18"], [196, "id22"], [196, "id25"], [196, "id29"], [196, "id33"], [196, "id45"], [196, "id50"], [196, "id52"], [196, "id54"], [196, "id60"], [196, "id64"], [196, "id70"], [196, "id73"], [196, "id83"], [196, "id88"], [196, "id90"], [196, "id92"], [196, "id94"], [196, "id96"], [196, "id98"], [196, "id103"], [196, "id105"], [196, "id108"], [196, "id112"], [196, "id114"], [196, "id116"], [196, "id118"], [196, "id120"], [196, "id122"], [197, "returns"], [197, "id8"], [197, "id16"], [197, "id25"], [197, "id30"], [197, "id34"], [197, "id38"], [197, "id43"], [197, "id48"], [197, "id51"], [197, "id57"], [197, "id63"], [197, "id67"], [197, "id71"], [197, "id73"], [197, "id76"], [197, "id80"], [197, "id84"], [197, "id88"], [197, "id92"], [197, "id96"], [198, "returns"], [198, "id6"], [199, "returns"], [199, "id3"], [199, "id11"], [199, "id15"], [199, "id17"], [199, "id21"], [199, "id24"], [199, "id28"], [199, "id34"], [199, "id37"], [199, "id40"], [199, "id43"], [199, "id46"], [199, "id48"], [199, "id51"], [199, "id53"], [199, "id56"], [199, "id58"], [199, "id61"], [199, "id64"], [199, "id66"], [199, "id69"], [199, "id72"], [199, "id75"], [199, "id79"], [199, "id82"], [199, "id85"], [199, "id88"], [199, "id91"], [199, "id94"], [199, "id96"], [199, "id98"], [199, "id100"], [199, "id102"], [199, "id104"], [199, "id108"], [199, "id112"], [199, "id115"], [199, "id118"], [199, "id120"], [199, "id123"], [199, "id126"], [199, "id130"], [199, "id142"], [199, "id146"], [199, "id150"], [199, "id152"], [199, "id155"], [199, "id157"], [199, "id159"], [199, "id161"], [199, "id164"], [199, "id166"], [199, "id169"], [200, "returns"], [200, "id18"], [200, "id20"], [200, "id25"], [200, "id29"], [200, "id31"], [201, "returns"], [201, "id17"], [201, "id39"], [201, "id41"], [201, "id46"], [201, "id48"], [201, "id51"]], "register_dwi_to_template": [[187, "register-dwi-to-template"]], "Notes": [[187, "notes"], [187, "id8"], [187, "id11"], [187, "id16"], [187, "id43"], [187, "id63"], [187, "id71"], [187, "id74"], [187, "id77"], [187, "id142"], [187, "id144"], [187, "id148"], [187, "id152"], [187, "id156"], [187, "id160"], [187, "id170"], [187, "id181"], [187, "id189"], [189, "notes"], [189, "id28"], [189, "id47"], [189, "id55"], [189, "id64"], [189, "id68"], [189, "id72"], [189, "id85"], [189, "id89"], [189, "id142"], [189, "id148"], [189, "id153"], [189, "id158"], [189, "id163"], [190, "notes"], [190, "id15"], [190, "id19"], [190, "id43"], [190, "id48"], [190, "id51"], [190, "id67"], [190, "id71"], [191, "notes"], [191, "id38"], [191, "id44"], [192, "notes"], [193, "notes"], [193, "id23"], [193, "id66"], [193, "id69"], [195, "notes"], [195, "id93"], [195, "id121"], [195, "id124"], [195, "id146"], [195, "id152"], [195, "id157"], [195, "id160"], [195, "id177"], [195, "id197"], [195, "id206"], [195, "id216"], [195, "id221"], [195, "id251"], [195, "id264"], [195, "id278"], [195, "id297"], [195, "id301"], [195, "id317"], [195, "id322"], [195, "id326"], [195, "id333"], [195, "id337"], [195, "id341"], [195, "id345"], [195, "id350"], [195, "id362"], [195, "id398"], [195, "id400"], [195, "id413"], [195, "id421"], [195, "id424"], [195, "id428"], [195, "id433"], [195, "id437"], [195, "id440"], [195, "id444"], [195, "id447"], [195, "id458"], [195, "id461"], [195, "id464"], [195, "id467"], [195, "id470"], [195, "id476"], [195, "id484"], [195, "id490"], [195, "id496"], [195, "id502"], [195, "id506"], [195, "id512"], [195, "id519"], [195, "id533"], [195, "id540"], [195, "id545"], [195, "id562"], [195, "id608"], [195, "id616"], [195, "id633"], [195, "id638"], [195, "id644"], [195, "id890"], [195, "id893"], [195, "id896"], [195, "id908"], [195, "id916"], [195, "id924"], [195, "id931"], [195, "id939"], [195, "id1058"], [195, "id1060"], [195, "id1064"], [195, "id1066"], [195, "id1068"], [195, "id1070"], [195, "id1073"], [195, "id1076"], [195, "id1079"], [195, "id1082"], [195, "id1085"], [195, "id1088"], [195, "id1130"], [195, "id1146"], [196, "notes"], [196, "id38"], [196, "id43"], [196, "id79"], [196, "id84"], [196, "id99"], [197, "notes"], [197, "id12"], [197, "id17"], [197, "id52"], [197, "id58"], [198, "notes"], [199, "notes"], [199, "id5"], [199, "id7"], [199, "id19"], [199, "id25"], [199, "id73"], [199, "id105"], [199, "id107"], [199, "id121"], [199, "id124"], [199, "id131"], [199, "id162"], [200, "notes"], [201, "notes"], [89, "notes"]], "write_mapping": [[187, "write-mapping"]], "read_mapping": [[187, "read-mapping"]], "resample": [[187, "resample"]], "affine_registration": [[187, "affine-registration"]], "center_of_mass": [[187, "center-of-mass"], [199, "center-of-mass"]], "translation": [[187, "translation"]], "rigid": [[187, "rigid"]], "rigid_isoscaling": [[187, "rigid-isoscaling"]], "rigid_scaling": [[187, "rigid-scaling"]], "affine": [[187, "affine"]], "_METHOD_DICT": [[187, "method-dict"]], "register_series": [[187, "register-series"]], "register_dwi_series": [[187, "register-dwi-series"]], "motion_correction": [[187, "motion-correction"]], "streamline_registration": [[187, "streamline-registration"]], "DeformableRegistration": [[187, "deformableregistration"]], "Attributes": [[187, "attributes"], [189, "attributes"], [189, "id112"], [189, "id146"], [189, "id151"], [189, "id156"], [189, "id161"], [195, "attributes"], [195, "id538"], [195, "id543"], [197, "attributes"]], "gaussian_kernel": [[187, "gaussian-kernel"]], "low_rank_eigen": [[187, "low-rank-eigen"]], "initialize_sigma2": [[187, "initialize-sigma2"]], "lowrankQS": [[187, "lowrankqs"]], "AffineInversionError": [[187, "affineinversionerror"]], "AffineInvalidValuesError": [[187, "affineinvalidvalueserror"]], "AffineMap": [[187, "affinemap"]], "MutualInformationMetric": [[187, "mutualinformationmetric"]], "AffineRegistration": [[187, "affineregistration"]], "_transform_method": [[187, "transform-method"]], "transform_centers_of_mass": [[187, "transform-centers-of-mass"]], "transform_geometric_centers": [[187, "transform-geometric-centers"]], "transform_origins": [[187, "transform-origins"]], "DiffeomorphicMap": [[187, "diffeomorphicmap"]], "DiffeomorphicRegistration": [[187, "diffeomorphicregistration"]], "SymmetricDiffeomorphicRegistration": [[187, "symmetricdiffeomorphicregistration"]], "RegistrationStages": [[187, "registrationstages"]], "logger": [[187, "logger"], [187, "id136"], [187, "id174"], [189, "logger"], [193, "logger"], [194, "logger"], [194, "id36"], [194, "id84"], [195, "logger"], [196, "logger"], [196, "id71"]], "mult_aff": [[187, "mult-aff"]], "get_direction_and_spacings": [[187, "get-direction-and-spacings"]], "SimilarityMetric": [[187, "similaritymetric"]], "CCMetric": [[187, "ccmetric"]], "EMMetric": [[187, "emmetric"]], "SSDMetric": [[187, "ssdmetric"]], "v_cycle_2d": [[187, "v-cycle-2d"]], "v_cycle_3d": [[187, "v-cycle-3d"]], "reslice": [[187, "reslice"]], "Examples": [[187, "examples"], [189, "examples"], [189, "id10"], [189, "id13"], [189, "id16"], [189, "id21"], [189, "id25"], [189, "id31"], [189, "id34"], [189, "id37"], [189, "id42"], [189, "id63"], [189, "id67"], [189, "id71"], [189, "id86"], [189, "id92"], [189, "id96"], [189, "id97"], [189, "id100"], [189, "id113"], [189, "id118"], [189, "id121"], [189, "id124"], [189, "id149"], [189, "id154"], [189, "id159"], [189, "id164"], [189, "id171"], [189, "id174"], [190, "examples"], [190, "id7"], [190, "id10"], [190, "id28"], [190, "id42"], [193, "examples"], [193, "id17"], [193, "id21"], [195, "examples"], [195, "id91"], [195, "id534"], [195, "id541"], [195, "id546"], [195, "id611"], [195, "id695"], [195, "id1143"], [197, "examples"], [197, "id9"], [197, "id13"], [197, "id23"], [197, "id49"], [197, "id53"], [197, "id74"], [199, "examples"], [199, "id4"], [199, "id18"], [199, "id49"], [199, "id54"], [199, "id59"], [199, "id62"], [199, "id67"], [199, "id70"], [199, "id76"], [199, "id80"], [199, "id83"], [199, "id86"], [199, "id89"], [199, "id92"], [199, "id110"], [199, "id116"], [199, "id128"], [199, "id132"], [199, "id136"], [199, "id140"], [200, "examples"], [146, "examples"], [147, "examples"], [161, "examples"]], "ScaleSpace": [[187, "scalespace"]], "IsotropicScaleSpace": [[187, "isotropicscalespace"]], "StreamlineDistanceMetric": [[187, "streamlinedistancemetric"]], "BundleMinDistanceMetric": [[187, "bundlemindistancemetric"]], "Methods": [[187, "methods"], [187, "id143"], [187, "id151"], [187, "id155"]], "BundleMinDistanceMatrixMetric": [[187, "bundlemindistancematrixmetric"]], "BundleMinDistanceAsymmetricMetric": [[187, "bundlemindistanceasymmetricmetric"]], "BundleSumDistanceMatrixMetric": [[187, "bundlesumdistancematrixmetric"]], "JointBundleMinDistanceMetric": [[187, "jointbundlemindistancemetric"]], "StreamlineLinearRegistration": [[187, "streamlinelinearregistration"]], "StreamlineRegistrationMap": [[187, "streamlineregistrationmap"]], "JointStreamlineRegistrationMap": [[187, "jointstreamlineregistrationmap"]], "bundle_sum_distance": [[187, "bundle-sum-distance"]], "bundle_min_distance": [[187, "bundle-min-distance"]], "bundle_min_distance_fast": [[187, "bundle-min-distance-fast"]], "bundle_min_distance_asymmetric_fast": [[187, "bundle-min-distance-asymmetric-fast"]], "remove_clusters_by_size": [[187, "remove-clusters-by-size"]], "progressive_slr": [[187, "progressive-slr"]], "slr_with_qbx": [[187, "slr-with-qbx"]], "groupwise_slr": [[187, "groupwise-slr"]], "get_unique_pairs": [[187, "get-unique-pairs"]], "compose_matrix44": [[187, "compose-matrix44"]], "decompose_matrix44": [[187, "decompose-matrix44"]], "average_bundle_length": [[187, "average-bundle-length"]], "find_missing": [[187, "find-missing"]], "bundlewarp": [[187, "bundlewarp"]], "bundlewarp_vector_filed": [[187, "bundlewarp-vector-filed"]], "bundlewarp_shape_analysis": [[187, "bundlewarp-shape-analysis"]], "boots": [[188, "module-dipy.boots"]], "core": [[189, "module-dipy.core"]], "Module: core.geometry": [[189, "module-dipy.core.geometry"]], "Module: core.gradients": [[189, "module-dipy.core.gradients"]], "Module: core.graph": [[189, "module-dipy.core.graph"]], "Module: core.histeq": [[189, "module-dipy.core.histeq"]], "Module: core.ndindex": [[189, "module-dipy.core.ndindex"]], "Module: core.onetime": [[189, "module-dipy.core.onetime"]], "Module: core.optimize": [[189, "module-dipy.core.optimize"]], "Module: core.profile": [[189, "module-dipy.core.profile"]], "Module: core.rng": [[189, "module-dipy.core.rng"]], "Module: core.sphere": [[189, "module-dipy.core.sphere"]], "Module: core.sphere_stats": [[189, "module-dipy.core.sphere_stats"]], "Module: core.subdivide_octahedron": [[189, "module-dipy.core.subdivide_octahedron"]], "Module: core.wavelet": [[189, "module-dipy.core.wavelet"]], "_TUPLE2AXES": [[189, "tuple2axes"]], "sphere2cart": [[189, "sphere2cart"]], "cart2sphere": [[189, "cart2sphere"]], "sph2latlon": [[189, "sph2latlon"]], "normalized_vector": [[189, "normalized-vector"]], "vector_norm": [[189, "vector-norm"]], "rodrigues_axis_rotation": [[189, "rodrigues-axis-rotation"]], "nearest_pos_semi_def": [[189, "nearest-pos-semi-def"]], "sphere_distance": [[189, "sphere-distance"]], "See Also": [[189, "see-also"], [189, "id24"], [189, "id54"], [189, "id60"], [189, "id102"], [189, "id131"], [189, "id147"], [189, "id152"], [189, "id157"], [189, "id162"], [189, "id168"], [190, "see-also"], [190, "id13"], [193, "see-also"], [193, "id9"], [193, "id18"], [195, "see-also"], [195, "id511"], [195, "id518"], [195, "id532"], [195, "id539"], [195, "id544"], [195, "id612"], [195, "id1153"], [195, "id1160"], [195, "id1165"], [195, "id1169"], [195, "id1175"], [195, "id1179"], [195, "id1193"], [197, "see-also"], [197, "id11"], [199, "see-also"], [199, "id35"], [199, "id38"], [199, "id41"], [199, "id44"], [199, "id77"], [199, "id134"], [199, "id138"], [199, "id144"], [199, "id148"]], "cart_distance": [[189, "cart-distance"]], "vector_cosine": [[189, "vector-cosine"]], "lambert_equal_area_projection_polar": [[189, "lambert-equal-area-projection-polar"]], "lambert_equal_area_projection_cart": [[189, "lambert-equal-area-projection-cart"]], "euler_matrix": [[189, "euler-matrix"]], "compose_matrix": [[189, "compose-matrix"]], "decompose_matrix": [[189, "decompose-matrix"]], "Raises": [[189, "raises"], [190, "raises"], [199, "raises"], [199, "id135"], [199, "id139"], [199, "id143"]], "circumradius": [[189, "circumradius"]], "vec2vec_rotmat": [[189, "vec2vec-rotmat"]], "compose_transformations": [[189, "compose-transformations"]], "perpendicular_directions": [[189, "perpendicular-directions"]], "dist_to_corner": [[189, "dist-to-corner"]], "is_hemispherical": [[189, "is-hemispherical"]], "GradientTable": [[189, "gradienttable"]], "unique_bvals": [[189, "unique-bvals"]], "gradient_table_from_bvals_bvecs": [[189, "gradient-table-from-bvals-bvecs"]], "Other Parameters": [[189, "other-parameters"]], "gradient_table_from_qvals_bvecs": [[189, "gradient-table-from-qvals-bvecs"]], "gradient_table_from_gradient_strength_bvecs": [[189, "gradient-table-from-gradient-strength-bvecs"]], "gradient_table": [[189, "gradient-table"]], "reorient_bvecs": [[189, "reorient-bvecs"]], "generate_bvecs": [[189, "generate-bvecs"]], "round_bvals": [[189, "round-bvals"]], "unique_bvals_tolerance": [[189, "unique-bvals-tolerance"]], "get_bval_indices": [[189, "get-bval-indices"]], "unique_bvals_magnitude": [[189, "unique-bvals-magnitude"]], "check_multi_b": [[189, "check-multi-b"]], "btens_to_params": [[189, "btens-to-params"]], "params_to_btens": [[189, "params-to-btens"]], "ornt_mapping": [[189, "ornt-mapping"], [193, "ornt-mapping"]], "reorient_vectors": [[189, "reorient-vectors"], [193, "reorient-vectors"]], "reorient_on_axis": [[189, "reorient-on-axis"], [193, "reorient-on-axis"]], "orientation_from_string": [[189, "orientation-from-string"], [193, "orientation-from-string"]], "orientation_to_string": [[189, "orientation-to-string"], [193, "orientation-to-string"]], "Graph": [[189, "graph"]], "histeq": [[189, "histeq"]], "ndindex": [[189, "ndindex"]], "ResetMixin": [[189, "resetmixin"]], "OneTimeProperty": [[189, "onetimeproperty"]], "auto_attr": [[189, "auto-attr"]], "Optimizer": [[189, "optimizer"]], "SKLearnLinearSolver": [[189, "sklearnlinearsolver"]], "NonNegativeLeastSquares": [[189, "nonnegativeleastsquares"]], "PositiveDefiniteLeastSquares": [[189, "positivedefiniteleastsquares"]], "spdot": [[189, "spdot"]], "sparse_nnls": [[189, "sparse-nnls"]], "Profiler": [[189, "profiler"]], "WichmannHill2006": [[189, "wichmannhill2006"]], "WichmannHill1982": [[189, "wichmannhill1982"]], "LEcuyer": [[189, "lecuyer"]], "Sphere": [[189, "sphere"]], "HemiSphere": [[189, "hemisphere"]], "faces_from_sphere_vertices": [[189, "faces-from-sphere-vertices"]], "unique_edges": [[189, "unique-edges"]], "unique_sets": [[189, "unique-sets"]], "disperse_charges": [[189, "disperse-charges"]], "disperse_charges_alt": [[189, "disperse-charges-alt"]], "euler_characteristic_check": [[189, "euler-characteristic-check"]], "octahedron_vertices": [[189, "octahedron-vertices"]], "octahedron_faces": [[189, "octahedron-faces"]], "icosahedron_vertices": [[189, "icosahedron-vertices"]], "icosahedron_faces": [[189, "icosahedron-faces"]], "unit_octahedron": [[189, "unit-octahedron"]], "unit_icosahedron": [[189, "unit-icosahedron"]], "hemi_icosahedron": [[189, "hemi-icosahedron"]], "random_uniform_on_sphere": [[189, "random-uniform-on-sphere"]], "eigenstats": [[189, "eigenstats"]], "compare_orientation_sets": [[189, "compare-orientation-sets"]], "angular_similarity": [[189, "angular-similarity"]], "create_unit_sphere": [[189, "create-unit-sphere"]], "create_unit_hemisphere": [[189, "create-unit-hemisphere"]], "cshift3D": [[189, "cshift3d"]], "permutationinverse": [[189, "permutationinverse"]], "afb3D_A": [[189, "afb3d-a"]], "sfb3D_A": [[189, "sfb3d-a"]], "sfb3D": [[189, "sfb3d"]], "afb3D": [[189, "afb3d"]], "dwt3D": [[189, "dwt3d"]], "idwt3D": [[189, "idwt3d"]], "data": [[190, "module-dipy.data"]], "Module: data.fetcher": [[190, "module-dipy.data.fetcher"]], "DataError": [[190, "dataerror"]], "loads_compat": [[190, "loads-compat"]], "DATA_DIR": [[190, "data-dir"]], "get_sim_voxels": [[190, "get-sim-voxels"]], "get_skeleton": [[190, "get-skeleton"]], "get_sphere": [[190, "get-sphere"]], "default_sphere": [[190, "default-sphere"]], "small_sphere": [[190, "small-sphere"]], "get_3shell_gtab": [[190, "get-3shell-gtab"]], "get_isbi2013_2shell_gtab": [[190, "get-isbi2013-2shell-gtab"]], "get_gtab_taiwan_dsi": [[190, "get-gtab-taiwan-dsi"]], "dsi_voxels": [[190, "dsi-voxels"]], "dsi_deconv_voxels": [[190, "dsi-deconv-voxels"]], "mrtrix_spherical_functions": [[190, "mrtrix-spherical-functions"]], "get_cmap": [[190, "get-cmap"]], "two_cingulum_bundles": [[190, "two-cingulum-bundles"]], "matlab_life_results": [[190, "matlab-life-results"]], "load_sdp_constraints": [[190, "load-sdp-constraints"]], "copyfileobj_withprogress": [[190, "copyfileobj-withprogress"]], "check_md5": [[190, "check-md5"]], "fetch_data": [[190, "fetch-data"]], "fetch_isbi2013_2shell": [[190, "fetch-isbi2013-2shell"]], "fetch_stanford_labels": [[190, "fetch-stanford-labels"]], "fetch_sherbrooke_3shell": [[190, "fetch-sherbrooke-3shell"]], "fetch_stanford_hardi": [[190, "fetch-stanford-hardi"]], "fetch_resdnn_weights": [[190, "fetch-resdnn-weights"]], "fetch_synb0_weights": [[190, "fetch-synb0-weights"]], "fetch_synb0_test": [[190, "fetch-synb0-test"]], "fetch_evac_weights": [[190, "fetch-evac-weights"]], "fetch_evac_test": [[190, "fetch-evac-test"]], "fetch_stanford_t1": [[190, "fetch-stanford-t1"]], "fetch_stanford_pve_maps": [[190, "fetch-stanford-pve-maps"]], "fetch_stanford_tracks": [[190, "fetch-stanford-tracks"]], "fetch_taiwan_ntu_dsi": [[190, "fetch-taiwan-ntu-dsi"]], "fetch_syn_data": [[190, "fetch-syn-data"]], "fetch_mni_template": [[190, "fetch-mni-template"]], "fetch_scil_b0": [[190, "fetch-scil-b0"]], "fetch_bundles_2_subjects": [[190, "fetch-bundles-2-subjects"]], "fetch_ivim": [[190, "fetch-ivim"]], "fetch_cfin_multib": [[190, "fetch-cfin-multib"]], "fetch_file_formats": [[190, "fetch-file-formats"]], "fetch_bundle_atlas_hcp842": [[190, "fetch-bundle-atlas-hcp842"]], "fetch_target_tractogram_hcp": [[190, "fetch-target-tractogram-hcp"]], "fetch_bundle_fa_hcp": [[190, "fetch-bundle-fa-hcp"]], "fetch_qtdMRI_test_retest_2subjects": [[190, "fetch-qtdmri-test-retest-2subjects"]], "fetch_gold_standard_io": [[190, "fetch-gold-standard-io"]], "fetch_qte_lte_pte": [[190, "fetch-qte-lte-pte"]], "fetch_fury_surface": [[190, "fetch-fury-surface"]], "fetch_DiB_70_lte_pte_ste": [[190, "fetch-dib-70-lte-pte-ste"]], "fetch_DiB_217_lte_pte_ste": [[190, "fetch-dib-217-lte-pte-ste"]], "fetch_ptt_minimal_dataset": [[190, "fetch-ptt-minimal-dataset"]], "fetch_bundle_warp_dataset": [[190, "fetch-bundle-warp-dataset"]], "get_fnames": [[190, "get-fnames"]], "read_qtdMRI_test_retest_2subjects": [[190, "read-qtdmri-test-retest-2subjects"]], "read_scil_b0": [[190, "read-scil-b0"]], "read_siemens_scil_b0": [[190, "read-siemens-scil-b0"]], "read_isbi2013_2shell": [[190, "read-isbi2013-2shell"]], "read_sherbrooke_3shell": [[190, "read-sherbrooke-3shell"]], "read_stanford_labels": [[190, "read-stanford-labels"]], "read_stanford_hardi": [[190, "read-stanford-hardi"]], "read_stanford_t1": [[190, "read-stanford-t1"]], "read_stanford_pve_maps": [[190, "read-stanford-pve-maps"]], "read_taiwan_ntu_dsi": [[190, "read-taiwan-ntu-dsi"]], "read_syn_data": [[190, "read-syn-data"]], "fetch_tissue_data": [[190, "fetch-tissue-data"]], "read_tissue_data": [[190, "read-tissue-data"]], "read_mni_template": [[190, "read-mni-template"]], "fetch_cenir_multib": [[190, "fetch-cenir-multib"]], "read_cenir_multib": [[190, "read-cenir-multib"]], "read_bundles_2_subjects": [[190, "read-bundles-2-subjects"]], "read_ivim": [[190, "read-ivim"]], "read_cfin_dwi": [[190, "read-cfin-dwi"]], "read_cfin_t1": [[190, "read-cfin-t1"]], "get_file_formats": [[190, "get-file-formats"]], "get_bundle_atlas_hcp842": [[190, "get-bundle-atlas-hcp842"]], "get_two_hcp842_bundles": [[190, "get-two-hcp842-bundles"]], "get_target_tractogram_hcp": [[190, "get-target-tractogram-hcp"]], "read_qte_lte_pte": [[190, "read-qte-lte-pte"]], "read_DiB_70_lte_pte_ste": [[190, "read-dib-70-lte-pte-ste"]], "read_DiB_217_lte_pte_ste": [[190, "read-dib-217-lte-pte-ste"]], "extract_example_tracts": [[190, "extract-example-tracts"]], "read_five_af_bundles": [[190, "read-five-af-bundles"]], "to_bids_description": [[190, "to-bids-description"]], "fetch_hcp": [[190, "fetch-hcp"]], "fetch_hbn": [[190, "fetch-hbn"]], "denoise": [[191, "module-dipy.denoise"]], "Module: denoise.adaptive_soft_matching": [[191, "module-dipy.denoise.adaptive_soft_matching"]], "Module: denoise.gibbs": [[191, "module-dipy.denoise.gibbs"]], "Module: denoise.localpca": [[191, "module-dipy.denoise.localpca"]], "Module: denoise.nlmeans": [[191, "module-dipy.denoise.nlmeans"]], "Module: denoise.noise_estimate": [[191, "module-dipy.denoise.noise_estimate"]], "Module: denoise.non_local_means": [[191, "module-dipy.denoise.non_local_means"]], "Module: denoise.patch2self": [[191, "module-dipy.denoise.patch2self"]], "adaptive_soft_matching": [[191, "adaptive-soft-matching"]], "gibbs_removal": [[191, "gibbs-removal"]], "genpca": [[191, "genpca"]], "localpca": [[191, "localpca"]], "mppca": [[191, "mppca"]], "nlmeans": [[191, "nlmeans"]], "piesno": [[191, "piesno"]], "estimate_sigma": [[191, "estimate-sigma"]], "non_local_means": [[191, "non-local-means"]], "patch2self": [[191, "patch2self"]], "direction": [[192, "module-dipy.direction"]], "Module: direction.peaks": [[192, "module-dipy.direction.peaks"]], "PeaksAndMetrics": [[192, "peaksandmetrics"]], "peak_directions_nl": [[192, "peak-directions-nl"]], "peak_directions": [[192, "peak-directions"]], "peaks_from_model": [[192, "peaks-from-model"]], "reshape_peaks_for_visualization": [[192, "reshape-peaks-for-visualization"]], "io": [[193, "module-dipy.io"]], "Module: io.bvectxt": [[193, "module-dipy.io.bvectxt"]], "Module: io.dpy": [[193, "module-dipy.io.dpy"]], "Module: io.gradients": [[193, "module-dipy.io.gradients"]], "Module: io.image": [[193, "module-dipy.io.image"]], "Module: io.peaks": [[193, "module-dipy.io.peaks"]], "Module: io.pickles": [[193, "module-dipy.io.pickles"]], "Module: io.stateful_tractogram": [[193, "module-dipy.io.stateful_tractogram"]], "Module: io.streamline": [[193, "module-dipy.io.streamline"]], "Module: io.utils": [[193, "module-dipy.io.utils"]], "Module: io.vtk": [[193, "module-dipy.io.vtk"]], "read_bvec_file": [[193, "read-bvec-file"]], "Dpy": [[193, "dpy"]], "read_bvals_bvecs": [[193, "read-bvals-bvecs"]], "load_nifti_data": [[193, "load-nifti-data"]], "load_nifti": [[193, "load-nifti"]], "save_nifti": [[193, "save-nifti"]], "save_qa_metric": [[193, "save-qa-metric"]], "load_peaks": [[193, "load-peaks"]], "save_peaks": [[193, "save-peaks"]], "peaks_to_niftis": [[193, "peaks-to-niftis"]], "save_pickle": [[193, "save-pickle"]], "load_pickle": [[193, "load-pickle"]], "Space": [[193, "space"]], "Origin": [[193, "origin"]], "StatefulTractogram": [[193, "statefultractogram"]], "set_sft_logger_level": [[193, "set-sft-logger-level"]], "save_tractogram": [[193, "save-tractogram"]], "load_tractogram": [[193, "load-tractogram"]], "load_generator": [[193, "load-generator"]], "save_generator": [[193, "save-generator"]], "load_trk": [[193, "load-trk"]], "load_tck": [[193, "load-tck"]], "load_vtk": [[193, "load-vtk"]], "load_vtp": [[193, "load-vtp"]], "load_fib": [[193, "load-fib"]], "load_dpy": [[193, "load-dpy"]], "save_trk": [[193, "save-trk"]], "save_tck": [[193, "save-tck"]], "save_vtk": [[193, "save-vtk"]], "save_vtp": [[193, "save-vtp"]], "save_fib": [[193, "save-fib"]], "save_dpy": [[193, "save-dpy"]], "nifti1_symmat": [[193, "nifti1-symmat"]], "make5d": [[193, "make5d"]], "decfa": [[193, "decfa"]], "decfa_to_float": [[193, "decfa-to-float"]], "is_reference_info_valid": [[193, "is-reference-info-valid"]], "get_reference_info": [[193, "get-reference-info"]], "is_header_compatible": [[193, "is-header-compatible"]], "create_tractogram_header": [[193, "create-tractogram-header"]], "create_nifti_header": [[193, "create-nifti-header"]], "save_buan_profiles_hdf5": [[193, "save-buan-profiles-hdf5"]], "read_img_arr_or_path": [[193, "read-img-arr-or-path"]], "load_polydata": [[193, "load-polydata"]], "save_polydata": [[193, "save-polydata"]], "save_vtk_streamlines": [[193, "save-vtk-streamlines"]], "load_vtk_streamlines": [[193, "load-vtk-streamlines"]], "nn": [[194, "module-dipy.nn"]], "Module: nn.cnn_1d_denoising": [[194, "module-dipy.nn.cnn_1d_denoising"]], "Title : Denoising diffusion weighted imaging data using CNN": [[194, "title-denoising-diffusion-weighted-imaging-data-using-cnn"]], "Reference": [[194, "reference"]], "Module: nn.evac": [[194, "module-dipy.nn.evac"]], "Module: nn.histo_resdnn": [[194, "module-dipy.nn.histo_resdnn"]], "Module: nn.model": [[194, "module-dipy.nn.model"]], "Module: nn.synb0": [[194, "module-dipy.nn.synb0"]], "Module: nn.utils": [[194, "module-dipy.nn.utils"]], "Cnn1DDenoiser": [[194, "cnn1ddenoiser"]], "Block": [[194, "block"]], "ChannelSum": [[194, "channelsum"]], "EVACPlus": [[194, "evacplus"]], "prepare_img": [[194, "prepare-img"]], "init_model": [[194, "init-model"]], "HistoResDNN": [[194, "historesdnn"]], "SingleLayerPerceptron": [[194, "singlelayerperceptron"]], "MultipleLayerPercepton": [[194, "multiplelayerpercepton"]], "EncoderBlock": [[194, "encoderblock"], [194, "id61"]], "DecoderBlock": [[194, "decoderblock"], [194, "id68"]], "Synb0": [[194, "synb0"]], "UNet3D": [[194, "unet3d"], [194, "id89"]], "normalize": [[194, "normalize"], [194, "id91"]], "unnormalize": [[194, "unnormalize"], [194, "id94"]], "set_logger_level": [[194, "set-logger-level"]], "transform_img": [[194, "transform-img"]], "recover_img": [[194, "recover-img"]], "reconst": [[195, "module-dipy.reconst"]], "Module: reconst.base": [[195, "module-dipy.reconst.base"]], "Module: reconst.benchmarks": [[195, "module-dipy.reconst.benchmarks"]], "Module: reconst.benchmarks.bench_bounding_box": [[195, "module-dipy.reconst.benchmarks.bench_bounding_box"]], "Module: reconst.benchmarks.bench_csd": [[195, "module-dipy.reconst.benchmarks.bench_csd"]], "Module: reconst.benchmarks.bench_peaks": [[195, "module-dipy.reconst.benchmarks.bench_peaks"]], "Module: reconst.benchmarks.bench_squash": [[195, "module-dipy.reconst.benchmarks.bench_squash"]], "Module: reconst.benchmarks.bench_vec_val_sum": [[195, "module-dipy.reconst.benchmarks.bench_vec_val_sum"]], "Module: reconst.cache": [[195, "module-dipy.reconst.cache"]], "Module: reconst.cross_validation": [[195, "module-dipy.reconst.cross_validation"]], "Module: reconst.csdeconv": [[195, "module-dipy.reconst.csdeconv"]], "Module: reconst.dki": [[195, "module-dipy.reconst.dki"]], "Module: reconst.dki_micro": [[195, "module-dipy.reconst.dki_micro"]], "Module: reconst.dsi": [[195, "module-dipy.reconst.dsi"]], "Module: reconst.dti": [[195, "module-dipy.reconst.dti"]], "Module: reconst.forecast": [[195, "module-dipy.reconst.forecast"]], "Module: reconst.fwdti": [[195, "module-dipy.reconst.fwdti"]], "Module: reconst.gqi": [[195, "module-dipy.reconst.gqi"]], "Module: reconst.ivim": [[195, "module-dipy.reconst.ivim"]], "Module: reconst.mapmri": [[195, "module-dipy.reconst.mapmri"]], "Module: reconst.mcsd": [[195, "module-dipy.reconst.mcsd"]], "Module: reconst.msdki": [[195, "module-dipy.reconst.msdki"]], "Module: reconst.multi_voxel": [[195, "module-dipy.reconst.multi_voxel"]], "Module: reconst.odf": [[195, "module-dipy.reconst.odf"]], "Module: reconst.qtdmri": [[195, "module-dipy.reconst.qtdmri"]], "Module: reconst.qti": [[195, "module-dipy.reconst.qti"]], "Module: reconst.rumba": [[195, "module-dipy.reconst.rumba"]], "Module: reconst.sfm": [[195, "module-dipy.reconst.sfm"]], "Module: reconst.shm": [[195, "module-dipy.reconst.shm"]], "Module: reconst.shore": [[195, "module-dipy.reconst.shore"]], "Module: reconst.utils": [[195, "module-dipy.reconst.utils"]], "ReconstModel": [[195, "reconstmodel"]], "ReconstFit": [[195, "reconstfit"]], "bench_bounding_box": [[195, "bench-bounding-box"]], "num_grad": [[195, "num-grad"]], "bench_csdeconv": [[195, "bench-csdeconv"]], "bench_local_maxima": [[195, "bench-local-maxima"]], "old_squash": [[195, "old-squash"]], "bench_quick_squash": [[195, "bench-quick-squash"]], "bench_vec_val_vect": [[195, "bench-vec-val-vect"]], "Cache": [[195, "cache"]], "coeff_of_determination": [[195, "coeff-of-determination"]], "kfold_xval": [[195, "kfold-xval"]], "AxSymShResponse": [[195, "axsymshresponse"]], "ConstrainedSphericalDeconvModel": [[195, "constrainedsphericaldeconvmodel"]], "ConstrainedSDTModel": [[195, "constrainedsdtmodel"]], "auto_response": [[195, "auto-response"]], "response_from_mask": [[195, "response-from-mask"]], "estimate_response": [[195, "estimate-response"]], "forward_sdt_deconv_mat": [[195, "forward-sdt-deconv-mat"]], "csdeconv": [[195, "csdeconv"]], "odf_deconv": [[195, "odf-deconv"]], "odf_sh_to_sharp": [[195, "odf-sh-to-sharp"]], "mask_for_response_ssst": [[195, "mask-for-response-ssst"]], "response_from_mask_ssst": [[195, "response-from-mask-ssst"]], "auto_response_ssst": [[195, "auto-response-ssst"]], "recursive_response": [[195, "recursive-response"]], "fa_trace_to_lambdas": [[195, "fa-trace-to-lambdas"]], "DiffusionKurtosisModel": [[195, "diffusionkurtosismodel"]], "DiffusionKurtosisFit": [[195, "diffusionkurtosisfit"]], "carlson_rf": [[195, "carlson-rf"]], "carlson_rd": [[195, "carlson-rd"]], "directional_diffusion": [[195, "directional-diffusion"]], "directional_diffusion_variance": [[195, "directional-diffusion-variance"]], "directional_kurtosis": [[195, "directional-kurtosis"]], "apparent_kurtosis_coef": [[195, "apparent-kurtosis-coef"]], "mean_kurtosis": [[195, "mean-kurtosis"]], "radial_kurtosis": [[195, "radial-kurtosis"]], "axial_kurtosis": [[195, "axial-kurtosis"]], "kurtosis_maximum": [[195, "kurtosis-maximum"]], "mean_kurtosis_tensor": [[195, "mean-kurtosis-tensor"]], "kurtosis_fractional_anisotropy": [[195, "kurtosis-fractional-anisotropy"]], "dki_prediction": [[195, "dki-prediction"]], "params_to_dki_params": [[195, "params-to-dki-params"]], "ls_fit_dki": [[195, "ls-fit-dki"]], "cls_fit_dki": [[195, "cls-fit-dki"]], "Wrotate": [[195, "wrotate"]], "Wrotate_element": [[195, "wrotate-element"]], "Wcons": [[195, "wcons"]], "split_dki_param": [[195, "split-dki-param"]], "KurtosisMicrostructureModel": [[195, "kurtosismicrostructuremodel"]], "KurtosisMicrostructuralFit": [[195, "kurtosismicrostructuralfit"]], "axonal_water_fraction": [[195, "axonal-water-fraction"]], "diffusion_components": [[195, "diffusion-components"]], "dkimicro_prediction": [[195, "dkimicro-prediction"]], "tortuosity": [[195, "tortuosity"]], "DiffusionSpectrumModel": [[195, "diffusionspectrummodel"]], "DiffusionSpectrumFit": [[195, "diffusionspectrumfit"]], "DiffusionSpectrumDeconvModel": [[195, "diffusionspectrumdeconvmodel"]], "DiffusionSpectrumDeconvFit": [[195, "diffusionspectrumdeconvfit"]], "create_qspace": [[195, "create-qspace"]], "create_qtable": [[195, "create-qtable"]], "hanning_filter": [[195, "hanning-filter"]], "pdf_interp_coords": [[195, "pdf-interp-coords"]], "pdf_odf": [[195, "pdf-odf"]], "half_to_full_qspace": [[195, "half-to-full-qspace"]], "project_hemisph_bvecs": [[195, "project-hemisph-bvecs"]], "threshold_propagator": [[195, "threshold-propagator"]], "gen_PSF": [[195, "gen-psf"]], "LR_deconv": [[195, "lr-deconv"]], "TensorModel": [[195, "tensormodel"]], "TensorFit": [[195, "tensorfit"]], "fractional_anisotropy": [[195, "fractional-anisotropy"]], "geodesic_anisotropy": [[195, "geodesic-anisotropy"]], "mean_diffusivity": [[195, "mean-diffusivity"]], "axial_diffusivity": [[195, "axial-diffusivity"]], "radial_diffusivity": [[195, "radial-diffusivity"]], "trace": [[195, "trace"]], "color_fa": [[195, "color-fa"]], "determinant": [[195, "determinant"]], "isotropic": [[195, "isotropic"]], "deviatoric": [[195, "deviatoric"]], "norm": [[195, "norm"]], "mode": [[195, "mode"]], "linearity": [[195, "linearity"]], "planarity": [[195, "planarity"]], "sphericity": [[195, "sphericity"]], "apparent_diffusion_coef": [[195, "apparent-diffusion-coef"]], "tensor_prediction": [[195, "tensor-prediction"]], "iter_fit_tensor": [[195, "iter-fit-tensor"]], "wls_fit_tensor": [[195, "wls-fit-tensor"], [195, "id587"]], "ols_fit_tensor": [[195, "ols-fit-tensor"]], "nlls_fit_tensor": [[195, "nlls-fit-tensor"]], "restore_fit_tensor": [[195, "restore-fit-tensor"]], "_lt_indices": [[195, "lt-indices"]], "from_lower_triangular": [[195, "from-lower-triangular"]], "_lt_rows": [[195, "lt-rows"]], "_lt_cols": [[195, "lt-cols"]], "lower_triangular": [[195, "lower-triangular"]], "decompose_tensor": [[195, "decompose-tensor"]], "design_matrix": [[195, "design-matrix"], [195, "id949"], [195, "id1091"]], "quantize_evecs": [[195, "quantize-evecs"]], "eig_from_lo_tri": [[195, "eig-from-lo-tri"]], "ForecastModel": [[195, "forecastmodel"]], "ForecastFit": [[195, "forecastfit"]], "find_signal_means": [[195, "find-signal-means"]], "forecast_error_func": [[195, "forecast-error-func"]], "psi_l": [[195, "psi-l"]], "forecast_matrix": [[195, "forecast-matrix"]], "rho_matrix": [[195, "rho-matrix"]], "lb_forecast": [[195, "lb-forecast"]], "FreeWaterTensorModel": [[195, "freewatertensormodel"]], "FreeWaterTensorFit": [[195, "freewatertensorfit"]], "fwdti_prediction": [[195, "fwdti-prediction"]], "wls_iter": [[195, "wls-iter"]], "nls_iter": [[195, "nls-iter"]], "nls_fit_tensor": [[195, "nls-fit-tensor"]], "lower_triangular_to_cholesky": [[195, "lower-triangular-to-cholesky"]], "cholesky_to_lower_triangular": [[195, "cholesky-to-lower-triangular"]], "GeneralizedQSamplingModel": [[195, "generalizedqsamplingmodel"]], "GeneralizedQSamplingFit": [[195, "generalizedqsamplingfit"]], "normalize_qa": [[195, "normalize-qa"]], "squared_radial_component": [[195, "squared-radial-component"]], "npa": [[195, "npa"]], "equatorial_zone_vertices": [[195, "equatorial-zone-vertices"]], "polar_zone_vertices": [[195, "polar-zone-vertices"]], "upper_hemi_map": [[195, "upper-hemi-map"]], "equatorial_maximum": [[195, "equatorial-maximum"]], "patch_vertices": [[195, "patch-vertices"]], "patch_maximum": [[195, "patch-maximum"]], "odf_sum": [[195, "odf-sum"]], "patch_sum": [[195, "patch-sum"]], "triple_odf_maxima": [[195, "triple-odf-maxima"]], "IvimModelTRR": [[195, "ivimmodeltrr"]], "IvimModelVP": [[195, "ivimmodelvp"]], "IvimFit": [[195, "ivimfit"]], "ivim_prediction": [[195, "ivim-prediction"]], "f_D_star_prediction": [[195, "f-d-star-prediction"]], "f_D_star_error": [[195, "f-d-star-error"]], "ivim_model_selector": [[195, "ivim-model-selector"]], "MapmriModel": [[195, "mapmrimodel"]], "MapmriFit": [[195, "mapmrifit"]], "isotropic_scale_factor": [[195, "isotropic-scale-factor"]], "mapmri_index_matrix": [[195, "mapmri-index-matrix"]], "b_mat": [[195, "b-mat"]], "b_mat_isotropic": [[195, "b-mat-isotropic"]], "mapmri_phi_1d": [[195, "mapmri-phi-1d"]], "mapmri_phi_matrix": [[195, "mapmri-phi-matrix"]], "mapmri_psi_1d": [[195, "mapmri-psi-1d"]], "mapmri_psi_matrix": [[195, "mapmri-psi-matrix"]], "mapmri_odf_matrix": [[195, "mapmri-odf-matrix"]], "mapmri_isotropic_phi_matrix": [[195, "mapmri-isotropic-phi-matrix"]], "mapmri_isotropic_radial_signal_basis": [[195, "mapmri-isotropic-radial-signal-basis"]], "mapmri_isotropic_M_mu_independent": [[195, "mapmri-isotropic-m-mu-independent"]], "mapmri_isotropic_M_mu_dependent": [[195, "mapmri-isotropic-m-mu-dependent"]], "mapmri_isotropic_psi_matrix": [[195, "mapmri-isotropic-psi-matrix"]], "mapmri_isotropic_radial_pdf_basis": [[195, "mapmri-isotropic-radial-pdf-basis"]], "mapmri_isotropic_K_mu_independent": [[195, "mapmri-isotropic-k-mu-independent"]], "mapmri_isotropic_K_mu_dependent": [[195, "mapmri-isotropic-k-mu-dependent"]], "binomialfloat": [[195, "binomialfloat"]], "mapmri_isotropic_odf_matrix": [[195, "mapmri-isotropic-odf-matrix"]], "mapmri_isotropic_odf_sh_matrix": [[195, "mapmri-isotropic-odf-sh-matrix"]], "mapmri_isotropic_laplacian_reg_matrix": [[195, "mapmri-isotropic-laplacian-reg-matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": [[195, "mapmri-isotropic-laplacian-reg-matrix-from-index-matrix"]], "mapmri_isotropic_index_matrix": [[195, "mapmri-isotropic-index-matrix"]], "create_rspace": [[195, "create-rspace"], [195, "id1262"]], "delta": [[195, "delta"]], "map_laplace_u": [[195, "map-laplace-u"]], "map_laplace_t": [[195, "map-laplace-t"]], "map_laplace_s": [[195, "map-laplace-s"]], "mapmri_STU_reg_matrices": [[195, "mapmri-stu-reg-matrices"]], "mapmri_laplacian_reg_matrix": [[195, "mapmri-laplacian-reg-matrix"]], "generalized_crossvalidation_array": [[195, "generalized-crossvalidation-array"]], "generalized_crossvalidation": [[195, "generalized-crossvalidation"], [195, "id1033"]], "gcv_cost_function": [[195, "gcv-cost-function"]], "MultiShellResponse": [[195, "multishellresponse"]], "MultiShellDeconvModel": [[195, "multishelldeconvmodel"]], "MSDeconvFit": [[195, "msdeconvfit"]], "QpFitter": [[195, "qpfitter"]], "multi_tissue_basis": [[195, "multi-tissue-basis"]], "solve_qp": [[195, "solve-qp"]], "multi_shell_fiber_response": [[195, "multi-shell-fiber-response"]], "mask_for_response_msmt": [[195, "mask-for-response-msmt"]], "response_from_mask_msmt": [[195, "response-from-mask-msmt"]], "auto_response_msmt": [[195, "auto-response-msmt"]], "MeanDiffusionKurtosisModel": [[195, "meandiffusionkurtosismodel"]], "MeanDiffusionKurtosisFit": [[195, "meandiffusionkurtosisfit"]], "mean_signal_bvalue": [[195, "mean-signal-bvalue"]], "msk_from_awf": [[195, "msk-from-awf"]], "awf_from_msk": [[195, "awf-from-msk"]], "msdki_prediction": [[195, "msdki-prediction"]], "wls_fit_msdki": [[195, "wls-fit-msdki"]], "MultiVoxelFit": [[195, "multivoxelfit"]], "CallableArray": [[195, "callablearray"]], "multi_voxel_fit": [[195, "multi-voxel-fit"]], "OdfModel": [[195, "odfmodel"]], "OdfFit": [[195, "odffit"]], "gfa": [[195, "gfa"]], "minmax_normalize": [[195, "minmax-normalize"]], "QtdmriModel": [[195, "qtdmrimodel"]], "QtdmriFit": [[195, "qtdmrifit"]], "qtdmri_to_mapmri_matrix": [[195, "qtdmri-to-mapmri-matrix"]], "qtdmri_isotropic_to_mapmri_matrix": [[195, "qtdmri-isotropic-to-mapmri-matrix"]], "qtdmri_temporal_normalization": [[195, "qtdmri-temporal-normalization"]], "qtdmri_mapmri_normalization": [[195, "qtdmri-mapmri-normalization"]], "qtdmri_mapmri_isotropic_normalization": [[195, "qtdmri-mapmri-isotropic-normalization"]], "qtdmri_signal_matrix_": [[195, "qtdmri-signal-matrix"]], "qtdmri_signal_matrix": [[195, "id1011"]], "qtdmri_eap_matrix": [[195, "qtdmri-eap-matrix"]], "qtdmri_isotropic_signal_matrix_": [[195, "qtdmri-isotropic-signal-matrix"]], "qtdmri_isotropic_signal_matrix": [[195, "id1012"]], "qtdmri_eap_matrix_": [[195, "id1013"]], "qtdmri_isotropic_eap_matrix_": [[195, "qtdmri-isotropic-eap-matrix"]], "qtdmri_isotropic_eap_matrix": [[195, "id1014"]], "radial_basis_opt": [[195, "radial-basis-opt"]], "angular_basis_opt": [[195, "angular-basis-opt"]], "radial_basis_EAP_opt": [[195, "radial-basis-eap-opt"]], "angular_basis_EAP_opt": [[195, "angular-basis-eap-opt"]], "temporal_basis": [[195, "temporal-basis"]], "qtdmri_index_matrix": [[195, "qtdmri-index-matrix"]], "qtdmri_isotropic_index_matrix": [[195, "qtdmri-isotropic-index-matrix"]], "qtdmri_laplacian_reg_matrix": [[195, "qtdmri-laplacian-reg-matrix"]], "qtdmri_isotropic_laplacian_reg_matrix": [[195, "qtdmri-isotropic-laplacian-reg-matrix"]], "part23_reg_matrix_q": [[195, "part23-reg-matrix-q"]], "part23_iso_reg_matrix_q": [[195, "part23-iso-reg-matrix-q"]], "part4_reg_matrix_q": [[195, "part4-reg-matrix-q"]], "part4_iso_reg_matrix_q": [[195, "part4-iso-reg-matrix-q"]], "part1_reg_matrix_tau": [[195, "part1-reg-matrix-tau"]], "part23_reg_matrix_tau": [[195, "part23-reg-matrix-tau"]], "part4_reg_matrix_tau": [[195, "part4-reg-matrix-tau"]], "H": [[195, "h"]], "GCV_cost_function": [[195, "id1036"]], "qtdmri_isotropic_scaling": [[195, "qtdmri-isotropic-scaling"]], "qtdmri_anisotropic_scaling": [[195, "qtdmri-anisotropic-scaling"]], "design_matrix_spatial": [[195, "design-matrix-spatial"]], "create_rt_space_grid": [[195, "create-rt-space-grid"]], "qtdmri_number_of_coefficients": [[195, "qtdmri-number-of-coefficients"]], "l1_crossvalidation": [[195, "l1-crossvalidation"]], "elastic_crossvalidation": [[195, "elastic-crossvalidation"]], "visualise_gradient_table_G_Delta_rainbow": [[195, "visualise-gradient-table-g-delta-rainbow"]], "QtiModel": [[195, "qtimodel"]], "QtiFit": [[195, "qtifit"]], "from_3x3_to_6x1": [[195, "from-3x3-to-6x1"]], "from_6x1_to_3x3": [[195, "from-6x1-to-3x3"]], "from_6x6_to_21x1": [[195, "from-6x6-to-21x1"]], "from_21x1_to_6x6": [[195, "from-21x1-to-6x6"]], "cvxpy_1x6_to_3x3": [[195, "cvxpy-1x6-to-3x3"]], "cvxpy_1x21_to_6x6": [[195, "cvxpy-1x21-to-6x6"]], "dtd_covariance": [[195, "dtd-covariance"]], "qti_signal": [[195, "qti-signal"]], "RumbaSDModel": [[195, "rumbasdmodel"]], "RumbaFit": [[195, "rumbafit"]], "rumba_deconv": [[195, "rumba-deconv"]], "mbessel_ratio": [[195, "mbessel-ratio"]], "generate_kernel": [[195, "generate-kernel"]], "rumba_deconv_global": [[195, "rumba-deconv-global"]], "IsotropicModel": [[195, "isotropicmodel"]], "IsotropicFit": [[195, "isotropicfit"]], "ExponentialIsotropicModel": [[195, "exponentialisotropicmodel"]], "ExponentialIsotropicFit": [[195, "exponentialisotropicfit"]], "SparseFascicleModel": [[195, "sparsefasciclemodel"]], "SparseFascicleFit": [[195, "sparsefasciclefit"]], "sfm_design_matrix": [[195, "sfm-design-matrix"]], "SphHarmModel": [[195, "sphharmmodel"]], "QballBaseModel": [[195, "qballbasemodel"]], "SphHarmFit": [[195, "sphharmfit"]], "CsaOdfModel": [[195, "csaodfmodel"]], "OpdtModel": [[195, "opdtmodel"]], "QballModel": [[195, "qballmodel"]], "ResidualBootstrapWrapper": [[195, "residualbootstrapwrapper"]], "forward_sdeconv_mat": [[195, "forward-sdeconv-mat"]], "sh_to_rh": [[195, "sh-to-rh"]], "gen_dirac": [[195, "gen-dirac"]], "spherical_harmonics": [[195, "spherical-harmonics"]], "real_sph_harm": [[195, "real-sph-harm"]], "real_sh_tournier_from_index": [[195, "real-sh-tournier-from-index"]], "real_sh_descoteaux_from_index": [[195, "real-sh-descoteaux-from-index"]], "real_sh_tournier": [[195, "real-sh-tournier"]], "real_sh_descoteaux": [[195, "real-sh-descoteaux"]], "real_sym_sh_mrtrix": [[195, "real-sym-sh-mrtrix"]], "real_sym_sh_basis": [[195, "real-sym-sh-basis"]], "sph_harm_ind_list": [[195, "sph-harm-ind-list"]], "order_from_ncoef": [[195, "order-from-ncoef"]], "smooth_pinv": [[195, "smooth-pinv"]], "lazy_index": [[195, "lazy-index"]], "normalize_data": [[195, "normalize-data"]], "hat": [[195, "hat"]], "lcr_matrix": [[195, "lcr-matrix"]], "bootstrap_data_array": [[195, "bootstrap-data-array"]], "bootstrap_data_voxel": [[195, "bootstrap-data-voxel"]], "sf_to_sh": [[195, "sf-to-sh"]], "sh_to_sf": [[195, "sh-to-sf"]], "sh_to_sf_matrix": [[195, "sh-to-sf-matrix"]], "calculate_max_order": [[195, "calculate-max-order"]], "anisotropic_power": [[195, "anisotropic-power"]], "convert_sh_to_full_basis": [[195, "convert-sh-to-full-basis"]], "convert_sh_from_legacy": [[195, "convert-sh-from-legacy"]], "convert_sh_to_legacy": [[195, "convert-sh-to-legacy"]], "ShoreModel": [[195, "shoremodel"]], "ShoreFit": [[195, "shorefit"]], "shore_matrix": [[195, "shore-matrix"]], "shore_matrix_pdf": [[195, "shore-matrix-pdf"]], "shore_matrix_odf": [[195, "shore-matrix-odf"]], "l_shore": [[195, "l-shore"]], "n_shore": [[195, "n-shore"]], "shore_indices": [[195, "shore-indices"]], "shore_order": [[195, "shore-order"]], "dki_design_matrix": [[195, "dki-design-matrix"]], "segment": [[196, "module-dipy.segment"]], "Module: segment.benchmarks": [[196, "module-dipy.segment.benchmarks"]], "Module: segment.benchmarks.bench_quickbundles": [[196, "module-dipy.segment.benchmarks.bench_quickbundles"]], "Module: segment.bundles": [[196, "module-dipy.segment.bundles"]], "Module: segment.clustering": [[196, "module-dipy.segment.clustering"]], "Module: segment.fss": [[196, "module-dipy.segment.fss"]], "Module: segment.mask": [[196, "module-dipy.segment.mask"]], "Module: segment.metric": [[196, "module-dipy.segment.metric"]], "Module: segment.threshold": [[196, "module-dipy.segment.threshold"]], "Module: segment.tissue": [[196, "module-dipy.segment.tissue"]], "MDFpy": [[196, "mdfpy"]], "bench_quickbundles": [[196, "bench-quickbundles"]], "check_range": [[196, "check-range"]], "bundle_adjacency": [[196, "bundle-adjacency"]], "ba_analysis": [[196, "ba-analysis"]], "cluster_bundle": [[196, "cluster-bundle"]], "bundle_shape_similarity": [[196, "bundle-shape-similarity"]], "Identity": [[196, "identity"]], "Cluster": [[196, "cluster"]], "ClusterCentroid": [[196, "clustercentroid"]], "ClusterMap": [[196, "clustermap"]], "ClusterMapCentroid": [[196, "clustermapcentroid"]], "Clustering": [[196, "clustering"]], "QuickBundles": [[196, "quickbundles"]], "QuickBundlesX": [[196, "quickbundlesx"]], "TreeCluster": [[196, "treecluster"]], "TreeClusterMap": [[196, "treeclustermap"]], "qbx_and_merge": [[196, "qbx-and-merge"]], "FastStreamlineSearch": [[196, "faststreamlinesearch"]], "nearest_from_matrix_row": [[196, "nearest-from-matrix-row"]], "nearest_from_matrix_col": [[196, "nearest-from-matrix-col"]], "multi_median": [[196, "multi-median"]], "applymask": [[196, "applymask"]], "bounding_box": [[196, "bounding-box"]], "crop": [[196, "crop"]], "median_otsu": [[196, "median-otsu"]], "segment_from_cfa": [[196, "segment-from-cfa"]], "clean_cc_mask": [[196, "clean-cc-mask"]], "mdf": [[196, "mdf"]], "mean_manhattan_distance": [[196, "mean-manhattan-distance"]], "mean_euclidean_distance": [[196, "mean-euclidean-distance"]], "otsu": [[196, "otsu"]], "upper_bound_by_rate": [[196, "upper-bound-by-rate"]], "upper_bound_by_percent": [[196, "upper-bound-by-percent"]], "TissueClassifierHMRF": [[196, "tissueclassifierhmrf"]], "sims": [[197, "module-dipy.sims"]], "Module: sims.phantom": [[197, "module-dipy.sims.phantom"]], "Module: sims.voxel": [[197, "module-dipy.sims.voxel"]], "add_noise": [[197, "add-noise"], [197, "id14"]], "diff2eigenvectors": [[197, "diff2eigenvectors"]], "orbital_phantom": [[197, "orbital-phantom"]], "diffusion_evals": [[197, "diffusion-evals"]], "sticks_and_ball": [[197, "sticks-and-ball"]], "callaghan_perpendicular": [[197, "callaghan-perpendicular"]], "gaussian_parallel": [[197, "gaussian-parallel"]], "cylinders_and_ball_soderman": [[197, "cylinders-and-ball-soderman"]], "single_tensor": [[197, "single-tensor"]], "multi_tensor": [[197, "multi-tensor"]], "multi_tensor_dki": [[197, "multi-tensor-dki"]], "kurtosis_element": [[197, "kurtosis-element"]], "dki_signal": [[197, "dki-signal"]], "single_tensor_odf": [[197, "single-tensor-odf"]], "all_tensor_evecs": [[197, "all-tensor-evecs"]], "multi_tensor_odf": [[197, "multi-tensor-odf"]], "single_tensor_rtop": [[197, "single-tensor-rtop"]], "multi_tensor_rtop": [[197, "multi-tensor-rtop"]], "single_tensor_pdf": [[197, "single-tensor-pdf"]], "multi_tensor_pdf": [[197, "multi-tensor-pdf"]], "single_tensor_msd": [[197, "single-tensor-msd"]], "multi_tensor_msd": [[197, "multi-tensor-msd"]], "stats": [[198, "module-dipy.stats"]], "Module: stats.analysis": [[198, "module-dipy.stats.analysis"]], "peak_values": [[198, "peak-values"]], "anatomical_measures": [[198, "anatomical-measures"]], "assignment_map": [[198, "assignment-map"]], "gaussian_weights": [[198, "gaussian-weights"]], "afq_profile": [[198, "afq-profile"]], "tracking": [[199, "module-dipy.tracking"]], "Module: tracking._utils": [[199, "module-dipy.tracking._utils"]], "Module: tracking.benchmarks": [[199, "module-dipy.tracking.benchmarks"]], "Module: tracking.benchmarks.bench_streamline": [[199, "module-dipy.tracking.benchmarks.bench_streamline"]], "Module: tracking.learning": [[199, "module-dipy.tracking.learning"]], "Module: tracking.life": [[199, "module-dipy.tracking.life"]], "Module: tracking.local_tracking": [[199, "module-dipy.tracking.local_tracking"]], "Module: tracking.mesh": [[199, "module-dipy.tracking.mesh"]], "Module: tracking.metrics": [[199, "module-dipy.tracking.metrics"]], "Module: tracking.streamline": [[199, "module-dipy.tracking.streamline"]], "Module: tracking.utils": [[199, "module-dipy.tracking.utils"]], "Important Notes": [[199, "important-notes"]], "setup": [[199, "setup"]], "generate_streamlines": [[199, "generate-streamlines"]], "bench_set_number_of_points": [[199, "bench-set-number-of-points"]], "bench_length": [[199, "bench-length"]], "bench_compress_streamlines": [[199, "bench-compress-streamlines"]], "detect_corresponding_tracks": [[199, "detect-corresponding-tracks"]], "detect_corresponding_tracks_plus": [[199, "detect-corresponding-tracks-plus"]], "LifeSignalMaker": [[199, "lifesignalmaker"]], "FiberModel": [[199, "fibermodel"]], "FiberFit": [[199, "fiberfit"]], "gradient": [[199, "gradient"]], "streamline_gradients": [[199, "streamline-gradients"]], "grad_tensor": [[199, "grad-tensor"]], "streamline_tensors": [[199, "streamline-tensors"]], "streamline_signal": [[199, "streamline-signal"]], "voxel2streamline": [[199, "voxel2streamline"]], "LocalTracking": [[199, "localtracking"]], "ParticleFilteringTracking": [[199, "particlefilteringtracking"]], "random_coordinates_from_surface": [[199, "random-coordinates-from-surface"]], "seeds_from_surface_coordinates": [[199, "seeds-from-surface-coordinates"]], "triangles_area": [[199, "triangles-area"]], "vertices_to_triangles_values": [[199, "vertices-to-triangles-values"]], "winding": [[199, "winding"]], "length": [[199, "length"], [199, "id153"]], "bytes": [[199, "bytes"]], "midpoint": [[199, "midpoint"]], "downsample": [[199, "downsample"]], "magn": [[199, "magn"]], "frenet_serret": [[199, "frenet-serret"]], "mean_curvature": [[199, "mean-curvature"]], "mean_orientation": [[199, "mean-orientation"]], "generate_combinations": [[199, "generate-combinations"]], "longest_track_bundle": [[199, "longest-track-bundle"]], "intersect_sphere": [[199, "intersect-sphere"]], "inside_sphere": [[199, "inside-sphere"]], "inside_sphere_points": [[199, "inside-sphere-points"]], "spline": [[199, "spline"]], "startpoint": [[199, "startpoint"]], "endpoint": [[199, "endpoint"]], "arbitrarypoint": [[199, "arbitrarypoint"]], "principal_components": [[199, "principal-components"]], "midpoint2point": [[199, "midpoint2point"]], "unlist_streamlines": [[199, "unlist-streamlines"]], "relist_streamlines": [[199, "relist-streamlines"]], "center_streamlines": [[199, "center-streamlines"]], "deform_streamlines": [[199, "deform-streamlines"]], "transform_streamlines": [[199, "transform-streamlines"]], "select_random_set_of_streamlines": [[199, "select-random-set-of-streamlines"]], "select_by_rois": [[199, "select-by-rois"]], "See also": [[199, "id109"]], "cluster_confidence": [[199, "cluster-confidence"]], "orient_by_rois": [[199, "orient-by-rois"]], "orient_by_streamline": [[199, "orient-by-streamline"]], "values_from_volume": [[199, "values-from-volume"]], "nbytes": [[199, "nbytes"]], "density_map": [[199, "density-map"]], "connectivity_matrix": [[199, "connectivity-matrix"]], "ndbincount": [[199, "ndbincount"]], "reduce_labels": [[199, "reduce-labels"]], "subsegment": [[199, "subsegment"]], "seeds_from_mask": [[199, "seeds-from-mask"]], "random_seeds_from_mask": [[199, "random-seeds-from-mask"]], "target": [[199, "target"]], "target_line_based": [[199, "target-line-based"]], "streamline_near_roi": [[199, "streamline-near-roi"]], "near_roi": [[199, "near-roi"]], "unique_rows": [[199, "unique-rows"]], "transform_tracking_output": [[199, "transform-tracking-output"]], "reduce_rois": [[199, "reduce-rois"]], "path_length": [[199, "path-length"]], "max_angle_from_curvature": [[199, "max-angle-from-curvature"]], "min_radius_curvature_from_angle": [[199, "min-radius-curvature-from-angle"]], "viz": [[200, "module-dipy.viz"]], "Module: viz.app": [[200, "module-dipy.viz.app"]], "Module: viz.gmem": [[200, "module-dipy.viz.gmem"]], "Module: viz.horizon": [[200, "module-dipy.viz.horizon"]], "Module: viz.horizon.app": [[200, "module-dipy.viz.horizon.app"]], "Module: viz.horizon.tab": [[200, "module-dipy.viz.horizon.tab"]], "Module: viz.horizon.tab.base": [[200, "module-dipy.viz.horizon.tab.base"]], "Module: viz.horizon.tab.cluster": [[200, "module-dipy.viz.horizon.tab.cluster"]], "Module: viz.horizon.tab.peak": [[200, "module-dipy.viz.horizon.tab.peak"]], "Module: viz.horizon.tab.roi": [[200, "module-dipy.viz.horizon.tab.roi"]], "Module: viz.horizon.tab.slice": [[200, "module-dipy.viz.horizon.tab.slice"]], "Module: viz.horizon.visualizer": [[200, "module-dipy.viz.horizon.visualizer"]], "Module: viz.horizon.visualizer.cluster": [[200, "module-dipy.viz.horizon.visualizer.cluster"]], "Module: viz.horizon.visualizer.slice": [[200, "module-dipy.viz.horizon.visualizer.slice"]], "Module: viz.panel": [[200, "module-dipy.viz.panel"]], "Module: viz.plotting": [[200, "module-dipy.viz.plotting"]], "Module: viz.projections": [[200, "module-dipy.viz.projections"]], "Module: viz.regtools": [[200, "module-dipy.viz.regtools"]], "Module: viz.streamline": [[200, "module-dipy.viz.streamline"]], "Horizon": [[200, "horizon"], [200, "id7"]], "apply_shader": [[200, "apply-shader"]], "horizon": [[200, "id3"], [200, "id11"]], "GlobalHorizon": [[200, "globalhorizon"]], "HorizonTab": [[200, "horizontab"]], "TabManager": [[200, "tabmanager"]], "build_label": [[200, "build-label"], [200, "id16"]], "color_single_slider": [[200, "color-single-slider"]], "color_double_slider": [[200, "color-double-slider"]], "ClustersTab": [[200, "clusterstab"]], "PeaksTab": [[200, "peakstab"]], "ROIsTab": [[200, "roistab"]], "SlicesTab": [[200, "slicestab"]], "ClustersVisualizer": [[200, "clustersvisualizer"]], "SlicesVisualizer": [[200, "slicesvisualizer"]], "slicer_panel": [[200, "slicer-panel"]], "compare_maps": [[200, "compare-maps"]], "compare_qti_maps": [[200, "compare-qti-maps"]], "bundle_shape_profile": [[200, "bundle-shape-profile"]], "sph_project": [[200, "sph-project"]], "simple_plot": [[200, "simple-plot"]], "overlay_images": [[200, "overlay-images"]], "draw_lattice_2d": [[200, "draw-lattice-2d"]], "plot_2d_diffeomorphic_map": [[200, "plot-2d-diffeomorphic-map"]], "plot_slices": [[200, "plot-slices"]], "overlay_slices": [[200, "overlay-slices"]], "show_bundles": [[200, "show-bundles"]], "viz_two_bundles": [[200, "viz-two-bundles"]], "viz_vector_field": [[200, "viz-vector-field"]], "viz_displacement_mag": [[200, "viz-displacement-mag"]], "workflows": [[201, "module-dipy.workflows"]], "Module: workflows.align": [[201, "module-dipy.workflows.align"]], "Module: workflows.base": [[201, "module-dipy.workflows.base"]], "Module: workflows.combined_workflow": [[201, "module-dipy.workflows.combined_workflow"]], "Module: workflows.denoise": [[201, "module-dipy.workflows.denoise"]], "Module: workflows.docstring_parser": [[201, "module-dipy.workflows.docstring_parser"]], "Module: workflows.flow_runner": [[201, "module-dipy.workflows.flow_runner"]], "Module: workflows.io": [[201, "module-dipy.workflows.io"]], "Module: workflows.mask": [[201, "module-dipy.workflows.mask"]], "Module: workflows.multi_io": [[201, "module-dipy.workflows.multi_io"]], "Module: workflows.reconst": [[201, "module-dipy.workflows.reconst"]], "Module: workflows.segment": [[201, "module-dipy.workflows.segment"]], "Module: workflows.stats": [[201, "module-dipy.workflows.stats"]], "Module: workflows.tracking": [[201, "module-dipy.workflows.tracking"]], "Module: workflows.viz": [[201, "module-dipy.workflows.viz"]], "Module: workflows.workflow": [[201, "module-dipy.workflows.workflow"]], "ResliceFlow": [[201, "resliceflow"]], "SlrWithQbxFlow": [[201, "slrwithqbxflow"]], "ImageRegistrationFlow": [[201, "imageregistrationflow"]], "ApplyTransformFlow": [[201, "applytransformflow"]], "SynRegistrationFlow": [[201, "synregistrationflow"]], "MotionCorrectionFlow": [[201, "motioncorrectionflow"]], "BundleWarpFlow": [[201, "bundlewarpflow"]], "check_dimensions": [[201, "check-dimensions"]], "IntrospectiveArgumentParser": [[201, "introspectiveargumentparser"]], "get_args_default": [[201, "get-args-default"]], "none_or_dtype": [[201, "none-or-dtype"]], "CombinedWorkflow": [[201, "combinedworkflow"]], "Patch2SelfFlow": [[201, "patch2selfflow"]], "NLMeansFlow": [[201, "nlmeansflow"]], "LPCAFlow": [[201, "lpcaflow"]], "MPPCAFlow": [[201, "mppcaflow"]], "GibbsRingingFlow": [[201, "gibbsringingflow"]], "Reader": [[201, "reader"]], "NumpyDocString": [[201, "numpydocstring"]], "dedent_lines": [[201, "dedent-lines"]], "get_level": [[201, "get-level"]], "run_flow": [[201, "run-flow"]], "IoInfoFlow": [[201, "ioinfoflow"]], "FetchFlow": [[201, "fetchflow"]], "SplitFlow": [[201, "splitflow"]], "MaskFlow": [[201, "maskflow"]], "IOIterator": [[201, "ioiterator"]], "common_start": [[201, "common-start"]], "slash_to_under": [[201, "slash-to-under"]], "connect_output_paths": [[201, "connect-output-paths"]], "concatenate_inputs": [[201, "concatenate-inputs"]], "basename_without_extension": [[201, "basename-without-extension"]], "io_iterator": [[201, "io-iterator"]], "io_iterator_": [[201, "id49"]], "ReconstMAPMRIFlow": [[201, "reconstmapmriflow"]], "ReconstDtiFlow": [[201, "reconstdtiflow"]], "ReconstCSDFlow": [[201, "reconstcsdflow"]], "ReconstCSAFlow": [[201, "reconstcsaflow"]], "ReconstDkiFlow": [[201, "reconstdkiflow"]], "ReconstIvimFlow": [[201, "reconstivimflow"]], "ReconstRUMBAFlow": [[201, "reconstrumbaflow"]], "MedianOtsuFlow": [[201, "medianotsuflow"]], "RecoBundlesFlow": [[201, "recobundlesflow"]], "LabelsBundlesFlow": [[201, "labelsbundlesflow"]], "EVACPlusFlow": [[201, "evacplusflow"]], "SNRinCCFlow": [[201, "snrinccflow"]], "BundleAnalysisTractometryFlow": [[201, "bundleanalysistractometryflow"]], "LinearMixedModelsFlow": [[201, "linearmixedmodelsflow"]], "BundleShapeAnalysis": [[201, "bundleshapeanalysis"]], "buan_bundle_profiles": [[201, "buan-bundle-profiles"]], "LocalFiberTrackingPAMFlow": [[201, "localfibertrackingpamflow"]], "PFTrackingPAMFlow": [[201, "pftrackingpamflow"]], "HorizonFlow": [[201, "horizonflow"]], "Workflow": [[201, "workflow"]], "API Reference": [[202, "api-reference"]], "dipy_align_affine": [[203, "dipy-align-affine"]], "Usage": [[203, "usage"], [204, "usage"], [205, "usage"], [206, "usage"], [207, "usage"], [208, "usage"], [209, "usage"], [210, "usage"], [211, "usage"], [212, "usage"], [213, "usage"], [214, "usage"], [215, "usage"], [216, "usage"], [217, "usage"], [218, "usage"], [219, "usage"], [220, "usage"], [221, "usage"], [222, "usage"], [223, "usage"], [224, "usage"], [225, "usage"], [226, "usage"], [227, "usage"], [228, "usage"], [229, "usage"], [230, "usage"], [231, "usage"], [232, "usage"], [233, "usage"], [234, "usage"]], "Positional Arguments": [[203, "positional-arguments"], [204, "positional-arguments"], [205, "positional-arguments"], [206, "positional-arguments"], [207, "positional-arguments"], [208, "positional-arguments"], [209, "positional-arguments"], [210, "positional-arguments"], [211, "positional-arguments"], [212, "positional-arguments"], [213, "positional-arguments"], [214, "positional-arguments"], [215, "positional-arguments"], [216, "positional-arguments"], [217, "positional-arguments"], [218, "positional-arguments"], [219, "positional-arguments"], [220, "positional-arguments"], [221, "positional-arguments"], [222, "positional-arguments"], [223, "positional-arguments"], [224, "positional-arguments"], [225, "positional-arguments"], [226, "positional-arguments"], [227, "positional-arguments"], [228, "positional-arguments"], [229, "positional-arguments"], [230, "positional-arguments"], [231, "positional-arguments"], [232, "positional-arguments"], [233, "positional-arguments"], [234, "positional-arguments"]], "Optional Arguments": [[203, "optional-arguments"], [204, "optional-arguments"], [205, "optional-arguments"], [206, "optional-arguments"], [207, "optional-arguments"], [208, "optional-arguments"], [209, "optional-arguments"], [210, "optional-arguments"], [211, "optional-arguments"], [212, "optional-arguments"], [213, "optional-arguments"], [214, "optional-arguments"], [215, "optional-arguments"], [216, "optional-arguments"], [217, "optional-arguments"], [218, "optional-arguments"], [219, "optional-arguments"], [220, "optional-arguments"], [221, "optional-arguments"], [222, "optional-arguments"], [223, "optional-arguments"], [224, "optional-arguments"], [225, "optional-arguments"], [226, "optional-arguments"], [227, "optional-arguments"], [228, "optional-arguments"], [229, "optional-arguments"], [230, "optional-arguments"], [231, "optional-arguments"], [232, "optional-arguments"], [233, "optional-arguments"], [234, "optional-arguments"]], "Output Arguments(Optional)": [[203, "output-arguments-optional"], [204, "output-arguments-optional"], [205, "output-arguments-optional"], [206, "output-arguments-optional"], [207, "output-arguments-optional"], [208, "output-arguments-optional"], [209, "output-arguments-optional"], [210, "output-arguments-optional"], [211, "output-arguments-optional"], [212, "output-arguments-optional"], [213, "output-arguments-optional"], [214, "output-arguments-optional"], [215, "output-arguments-optional"], [216, "output-arguments-optional"], [217, "output-arguments-optional"], [218, "output-arguments-optional"], [219, "output-arguments-optional"], [220, "output-arguments-optional"], [221, "output-arguments-optional"], [222, "output-arguments-optional"], [223, "output-arguments-optional"], [225, "output-arguments-optional"], [226, "output-arguments-optional"], [227, "output-arguments-optional"], [228, "output-arguments-optional"], [229, "output-arguments-optional"], [230, "output-arguments-optional"], [231, "output-arguments-optional"], [232, "output-arguments-optional"], [233, "output-arguments-optional"], [234, "output-arguments-optional"]], "dipy_align_syn": [[204, "dipy-align-syn"]], "dipy_apply_transform": [[205, "dipy-apply-transform"]], "dipy_buan_lmm": [[206, "dipy-buan-lmm"]], "dipy_buan_profiles": [[207, "dipy-buan-profiles"]], "dipy_bundlewarp": [[208, "dipy-bundlewarp"]], "dipy_correct_motion": [[209, "dipy-correct-motion"]], "dipy_denoise_lpca": [[210, "dipy-denoise-lpca"]], "dipy_denoise_mppca": [[211, "dipy-denoise-mppca"]], "dipy_denoise_nlmeans": [[212, "dipy-denoise-nlmeans"]], "dipy_denoise_patch2self": [[213, "dipy-denoise-patch2self"]], "dipy_evac_plus": [[214, "dipy-evac-plus"]], "dipy_fetch": [[215, "dipy-fetch"]], "dipy_fit_csa": [[216, "dipy-fit-csa"]], "dipy_fit_csd": [[217, "dipy-fit-csd"]], "dipy_fit_dki": [[218, "dipy-fit-dki"]], "dipy_fit_dti": [[219, "dipy-fit-dti"]], "dipy_fit_ivim": [[220, "dipy-fit-ivim"]], "dipy_fit_mapmri": [[221, "dipy-fit-mapmri"]], "dipy_gibbs_ringing": [[222, "dipy-gibbs-ringing"]], "dipy_horizon": [[223, "dipy-horizon"]], "dipy_info": [[224, "dipy-info"]], "dipy_labelsbundles": [[225, "dipy-labelsbundles"]], "dipy_mask": [[226, "dipy-mask"]], "dipy_median_otsu": [[227, "dipy-median-otsu"]], "dipy_recobundles": [[228, "dipy-recobundles"]], "dipy_reslice": [[229, "dipy-reslice"]], "dipy_slr": [[230, "dipy-slr"]], "dipy_snr_in_cc": [[231, "dipy-snr-in-cc"]], "dipy_split": [[232, "dipy-split"]], "dipy_track": [[233, "dipy-track"]], "dipy_track_pft": [[234, "dipy-track-pft"]], "Command Line Utilities Reference": [[235, "command-line-utilities-reference"]], "Release notes for DIPY version 0.10": [[236, "release-notes-for-dipy-version-0-10"]], "Release notes for DIPY version 0.11": [[237, "release-notes-for-dipy-version-0-11"]], "Release notes for DIPY version 0.12": [[238, "release-notes-for-dipy-version-0-12"]], "Release notes for DIPY version 0.13": [[239, "release-notes-for-dipy-version-0-13"]], "Release notes for DIPY version 0.14": [[240, "release-notes-for-dipy-version-0-14"]], "Release notes for DIPY version 0.15": [[241, "release-notes-for-dipy-version-0-15"]], "Release notes for DIPY version 0.16": [[242, "release-notes-for-dipy-version-0-16"]], "Release notes for DIPY version 0.6": [[243, "release-notes-for-dipy-version-0-6"]], "Release notes for DIPY version 0.7": [[244, "release-notes-for-dipy-version-0-7"]], "Release notes for DIPY version 0.8": [[245, "release-notes-for-dipy-version-0-8"]], "Release notes for DIPY version 0.9": [[246, "release-notes-for-dipy-version-0-9"]], "Release notes for DIPY version 1.0": [[247, "release-notes-for-dipy-version-1-0"]], "Release notes for DIPY version 1.1": [[248, "release-notes-for-dipy-version-1-1"]], "Release notes for DIPY version 1.2": [[249, "release-notes-for-dipy-version-1-2"]], "Release notes for DIPY version 1.3": [[250, "release-notes-for-dipy-version-1-3"]], "Release notes for DIPY version 1.4": [[251, "release-notes-for-dipy-version-1-4"]], "Release notes for DIPY version 1.4.1": [[252, "release-notes-for-dipy-version-1-4-1"]], "Release notes for DIPY version 1.5": [[253, "release-notes-for-dipy-version-1-5"]], "Release notes for DIPY version 1.6": [[254, "release-notes-for-dipy-version-1-6"]], "Release notes for DIPY version 1.7": [[255, "release-notes-for-dipy-version-1-7"]], "A quick overview of features": [[256, "a-quick-overview-of-features"]], "Systems supported": [[256, "systems-supported"]], "Subscribe": [[257, "subscribe"]], "DIY Stuff about b and q": [[258, "diy-stuff-about-b-and-q"]], "The B matrix and Siemens DICOM": [[258, "the-b-matrix-and-siemens-dicom"], [259, "the-b-matrix-and-siemens-dicom"]], "\u2026 and what about \u2018q\u2019?": [[258, "and-what-about-q"]], "Generalised Q-Sampling Imaging": [[260, "generalised-q-sampling-imaging"]], "Theory and concepts": [[261, "theory-and-concepts"]], "Spherical Harmonic bases": [[262, "spherical-harmonic-bases"]], "Spherical coordinates": [[263, "spherical-coordinates"]], "Terms": [[263, "terms"]], "The physics convention": [[263, "the-physics-convention"]], "The mathematics convention": [[263, "the-mathematics-convention"]], "Matlab convention": [[263, "matlab-convention"]], "Getting started with DIPY": [[27, "getting-started-with-dipy"]], "Introduction to Basic Tracking": [[29, "introduction-to-basic-tracking"], [81, "introduction-to-basic-tracking"], [82, "introduction-to-basic-tracking"], [83, "introduction-to-basic-tracking"]], "Brain segmentation with median_otsu": [[30, "brain-segmentation-with-median-otsu"], [110, "brain-segmentation-with-median-otsu"], [111, "brain-segmentation-with-median-otsu"], [112, "brain-segmentation-with-median-otsu"]], "Denoise images using Adaptive Soft Coefficient Matching (ASCM)": [[31, "denoise-images-using-adaptive-soft-coefficient-matching-ascm"]], "Suppress Gibbs oscillations": [[32, "suppress-gibbs-oscillations"]], "Denoise images using Local PCA via empirical thresholds": [[33, "denoise-images-using-local-pca-via-empirical-thresholds"]], "Estimate the noise standard deviation": [[33, "estimate-the-noise-standard-deviation"]], "Perform the localPCA using the function localpca": [[33, "perform-the-localpca-using-the-function-localpca"]], "Denoise images using the Marcenko-Pastur PCA algorithm": [[34, "denoise-images-using-the-marcenko-pastur-pca-algorithm"]], "Noise standard deviation estimation using the Marcenko-Pastur PCA algorithm": [[34, "noise-standard-deviation-estimation-using-the-marcenko-pastur-pca-algorithm"]], "Denoise images using Non-Local Means (NLMEANS)": [[35, "denoise-images-using-non-local-means-nlmeans"]], "Patch2Self: Self-Supervised Denoising via Statistical Independence": [[36, "patch2self-self-supervised-denoising-via-statistical-independence"]], "Gradients and Spheres": [[37, "gradients-and-spheres"]], "Noise estimation using PIESNO": [[40, "noise-estimation-using-piesno"]], "SNR estimation for Diffusion-Weighted Images": [[43, "snr-estimation-for-diffusion-weighted-images"]], "SNR for the b=0 image is : \u2018\u201942.0695455758\u2019\u2019": [[43, "snr-for-the-b-0-image-is-42-0695455758"]], "SNR for direction 57  [-0.05039  0.99871  0.0054406] is : \u2018\u201923.9329492871\u2019\u2019": [[43, "snr-for-direction-57-0-05039-0-99871-0-0054406-is-23-9329492871"]], "K-fold cross-validation for model comparison": [[45, "k-fold-cross-validation-for-model-comparison"]], "Reconstruct with Constant Solid Angle (Q-Ball)": [[46, "reconstruct-with-constant-solid-angle-q-ball"]], "Reconstruction with Constrained Spherical Deconvolution": [[47, "reconstruction-with-constrained-spherical-deconvolution"]], "Step 1. Estimation of the fiber response function": [[47, "step-1-estimation-of-the-fiber-response-function"], [64, "step-1-estimation-of-the-fiber-response-function"]], "Step 2. fODF reconstruction": [[47, "step-2-fodf-reconstruction"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[48, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Constrained optimization for DKI": [[48, "constrained-optimization-for-dki"]], "Mean kurtosis tensor and kurtosis fractional anisotropy": [[48, "mean-kurtosis-tensor-and-kurtosis-fractional-anisotropy"]], "Reconstruction of the diffusion signal with the WMTI model": [[49, "reconstruction-of-the-diffusion-signal-with-the-wmti-model"]], "Reconstruct with Diffusion Spectrum Imaging": [[50, "reconstruct-with-diffusion-spectrum-imaging"]], "Calculate DSI-based scalar maps": [[51, "calculate-dsi-based-scalar-maps"]], "DSI Deconvolution vs DSI": [[52, "dsi-deconvolution-vs-dsi"], [123, "dsi-deconvolution-vs-dsi"], [124, "dsi-deconvolution-vs-dsi"], [125, "dsi-deconvolution-vs-dsi"]], "Reconstruction of the diffusion signal with the Tensor model": [[53, "reconstruction-of-the-diffusion-signal-with-the-tensor-model"]], "Crossing invariant fiber response function with FORECAST model": [[54, "crossing-invariant-fiber-response-function-with-forecast-model"]], "Using the free water elimination model to remove DTI free water contamination": [[55, "using-the-free-water-elimination-model-to-remove-dti-free-water-contamination"]], "Intravoxel incoherent motion": [[57, "intravoxel-incoherent-motion"]], "Continuous and analytical diffusion signal modelling with MAP-MRI": [[58, "continuous-and-analytical-diffusion-signal-modelling-with-map-mri"]], "Reconstruction with Multi-Shell Multi-Tissue CSD": [[59, "reconstruction-with-multi-shell-multi-tissue-csd"]], "Mean signal diffusion kurtosis imaging (MSDKI)": [[60, "mean-signal-diffusion-kurtosis-imaging-msdki"]], "Testing MSDKI in synthetic data": [[60, "testing-msdki-in-synthetic-data"]], "Reconstructing diffusion data using MSDKI": [[60, "reconstructing-diffusion-data-using-msdki"]], "Relationship between MSDKI and SMT2": [[60, "relationship-between-msdki-and-smt2"]], "Estimating diffusion time dependent q-space indices using qt-dMRI": [[61, "estimating-diffusion-time-dependent-q-space-indices-using-qt-dmri"]], "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution": [[64, "reconstruction-with-robust-and-unbiased-model-based-spherical-deconvolution"]], "Step 2. fODF Reconstruction": [[64, "step-2-fodf-reconstruction"]], "Reconstruction with the Sparse Fascicle Model": [[65, "reconstruction-with-the-sparse-fascicle-model"]], "Signal Reconstruction Using Spherical Harmonics": [[66, "signal-reconstruction-using-spherical-harmonics"]], "Continuous and analytical diffusion signal modelling with 3D-SHORE": [[67, "continuous-and-analytical-diffusion-signal-modelling-with-3d-shore"]], "Calculate SHORE scalar maps": [[68, "calculate-shore-scalar-maps"]], "Using the RESTORE algorithm for robust tensor fitting": [[69, "using-the-restore-algorithm-for-robust-tensor-fitting"]], "Crossing-preserving contextual enhancement": [[71, "crossing-preserving-contextual-enhancement"]], "Fiber to bundle coherence measures": [[72, "fiber-to-bundle-coherence-measures"]], "Acknowledgments": [[72, "acknowledgments"]], "Linear fascicle evaluation (LiFE)": [[76, "linear-fascicle-evaluation-life"]], "Surface seeding for tractography": [[78, "surface-seeding-for-tractography"]], "Display the surface": [[78, "display-the-surface"]], "Generate a list of seeding positions": [[78, "generate-a-list-of-seeding-positions"]], "Bootstrap and Closest Peak Direction Getters Example": [[79, "bootstrap-and-closest-peak-direction-getters-example"]], "Example #1: Bootstrap direction getter with CSD Model": [[79, "example-1-bootstrap-direction-getter-with-csd-model"]], "Example #2: Closest peak direction getter with CSD Model": [[79, "example-2-closest-peak-direction-getter-with-csd-model"]], "An introduction to the Deterministic Maximum Direction Getter": [[80, "an-introduction-to-the-deterministic-maximum-direction-getter"]], "Particle Filtering Tractography": [[84, "particle-filtering-tractography"]], "CMC/ACT Stopping Criterion": [[84, "cmc-act-stopping-criterion"]], "An introduction to the Probabilistic Direction Getter": [[85, "an-introduction-to-the-probabilistic-direction-getter"]], "Parallel Transport Tractography": [[86, "parallel-transport-tractography"]], "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)": [[87, "tracking-with-robust-unbiased-model-based-spherical-deconvolution-rumba-sd"]], "Tracking with the Sparse Fascicle Model": [[88, "tracking-with-the-sparse-fascicle-model"]], "Using Various Stopping Criterion for Tractography": [[89, "using-various-stopping-criterion-for-tractography"]], "Threshold Stopping Criterion": [[89, "threshold-stopping-criterion"]], "Binary Stopping Criterion": [[89, "binary-stopping-criterion"]], "ACT Stopping Criterion": [[89, "act-stopping-criterion"]], "Extracting AFQ tract profiles from segmented bundles": [[90, "extracting-afq-tract-profiles-from-segmented-bundles"]], "BUAN Bundle Assignment Maps Creation": [[91, "buan-bundle-assignment-maps-creation"]], "BUAN Bundle Shape Similarity Score": [[92, "buan-bundle-shape-similarity-score"]], "Calculation of Outliers with Cluster Confidence Index": [[93, "calculation-of-outliers-with-cluster-confidence-index"]], "Calculate Path Length Map": [[95, "calculate-path-length-map"]], "Streamline length and size reduction": [[97, "streamline-length-and-size-reduction"]], "Connectivity Matrices, ROI Intersections and Density Maps": [[98, "connectivity-matrices-roi-intersections-and-density-maps"]], "Affine Registration in 3D": [[99, "affine-registration-in-3d"]], "Affine Registration with Masks": [[100, "affine-registration-with-masks"]], "Groupwise Bundle Registration": [[101, "groupwise-bundle-registration"]], "How it works": [[101, "how-it-works"]], "Example": [[101, "example"]], "Extended capabilities": [[101, "extended-capabilities"]], "Direct Bundle Registration": [[102, "direct-bundle-registration"]], "Diffeomorphic Registration with binary and fuzzy images": [[105, "diffeomorphic-registration-with-binary-and-fuzzy-images"]], "Applying image-based deformations to streamlines": [[107, "applying-image-based-deformations-to-streamlines"]], "Symmetric Diffeomorphic Registration in 2D": [[108, "symmetric-diffeomorphic-registration-in-2d"]], "Symmetric Diffeomorphic Registration in 3D": [[109, "symmetric-diffeomorphic-registration-in-3d"]], "Automatic Fiber Bundle Extraction with RecoBundles": [[113, "automatic-fiber-bundle-extraction-with-recobundles"]], "Fast Streamline Search": [[114, "fast-streamline-search"]], "Tractography Clustering - Available Features": [[116, "tractography-clustering-available-features"]], "Available Features": [[116, "available-features"]], "Identity Feature": [[116, "clustering-examples-identityfeature"]], "Resample Feature": [[116, "resample-feature"]], "Center of Mass Feature": [[116, "center-of-mass-feature"]], "Midpoint Feature": [[116, "midpoint-feature"]], "ArcLength Feature": [[116, "arclength-feature"]], "Vector Between Endpoints Feature": [[116, "vector-between-endpoints-feature"]], "Tractography Clustering - Available Metrics": [[117, "tractography-clustering-available-metrics"]], "Available Metrics": [[117, "available-metrics"]], "Average of Pointwise Euclidean Metric": [[117, "average-of-pointwise-euclidean-metric"]], "Sum of Pointwise Euclidean Metric": [[117, "sum-of-pointwise-euclidean-metric"]], "Cosine Metric": [[117, "cosine-metric"]], "Enhancing QuickBundles with different metrics and features": [[118, "enhancing-quickbundles-with-different-metrics-and-features"]], "Clustering framework": [[118, "clustering-framework"]], "Extending Feature": [[118, "extending-feature"]], "Extending Metric": [[118, "extending-metric"]], "Tractography Clustering with QuickBundles": [[119, "tractography-clustering-with-quickbundles"]], "Tissue Classification of a T1-weighted Structural Image": [[121, "tissue-classification-of-a-t1-weighted-structural-image"]], "DKI MultiTensor Simulation": [[127, "dki-multitensor-simulation"]], "MultiTensor Simulation": [[128, "multitensor-simulation"]], "Advanced interactive visualization": [[138, "advanced-interactive-visualization"]], "Visualize bundles and metrics on bundles": [[139, "visualize-bundles-and-metrics-on-bundles"]], "Show every streamline with an orientation color": [[139, "show-every-streamline-with-an-orientation-color"]], "Show every point with a value from a volume with default colormap": [[139, "show-every-point-with-a-value-from-a-volume-with-default-colormap"]], "Show every point with a value from a volume with your colormap": [[139, "show-every-point-with-a-value-from-a-volume-with-your-colormap"]], "Show every bundle with a specific color": [[139, "show-every-bundle-with-a-specific-color"]], "Show every streamline of a bundle with a different color": [[139, "show-every-streamline-of-a-bundle-with-a-different-color"]], "Show every point of every streamline with a different color": [[139, "show-every-point-of-every-streamline-with-a-different-color"]], "Visualization of ROI Surface Rendered with Streamlines": [[140, "visualization-of-roi-surface-rendered-with-streamlines"]], "Simple volume slicing": [[141, "simple-volume-slicing"]], "Render slices from T1 with a specific value range": [[141, "render-slices-from-t1-with-a-specific-value-range"]], "Render slices from FA with your colormap": [[141, "render-slices-from-fa-with-your-colormap"]], "Create a mosaic": [[141, "create-a-mosaic"]], "Gradients & Spheres": [[147, "gradients-spheres"]], "Brain Extraction": [[147, "brain-extraction"]], "Basic SNR estimation": [[147, "basic-snr-estimation"]], "Reslice & Motion Correction": [[147, "reslice-motion-correction"]], "Constrained Spherical Deconvolution": [[147, "constrained-spherical-deconvolution"]], "Fiber Orientation Estimated using Continuous Axially Symmetric Tensors": [[147, "fiber-orientation-estimated-using-continuous-axially-symmetric-tensors"]], "Simple Harmonic Oscillator based Reconstruction and Estimation": [[147, "simple-harmonic-oscillator-based-reconstruction-and-estimation"]], "Studying diffusion time-dependence using qt-dMRI": [[147, "studying-diffusion-time-dependence-using-qt-dmri"]], "Diffusion Tensor Imaging": [[147, "diffusion-tensor-imaging"]], "Free-water Diffusion Tensor Imaging": [[147, "free-water-diffusion-tensor-imaging"]], "Diffusion Kurtosis Imaging": [[147, "diffusion-kurtosis-imaging"]], "White Matter Tract Integrity Model": [[147, "white-matter-tract-integrity-model"]], "Q-Ball Constant Solid Angle": [[147, "q-ball-constant-solid-angle"]], "Diffusion Spectrum Imaging": [[147, "diffusion-spectrum-imaging"]], "Generalized Q-Sampling Imaging": [[147, "generalized-q-sampling-imaging"]], "DSI with Deconvolution": [[147, "dsi-with-deconvolution"]], "Sparse Fascicle Model": [[147, "sparse-fascicle-model"]], "Intravoxel incoherent motion (IVIM)": [[147, "intravoxel-incoherent-motion-ivim"]], "Statistical evaluation": [[147, "statistical-evaluation"]], "Intra-Voxel Signal Reconstruction": [[147, "intra-voxel-signal-reconstruction"]], "Q-space Trajectory Imaging": [[147, "q-space-trajectory-imaging"]], "Q-space Trajectory Imaging with positivity constraints": [[147, "q-space-trajectory-imaging-with-positivity-constraints"]], "Robust and Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)": [[147, "robust-and-unbiased-model-based-spherical-deconvolution-rumba-sd"]], "Contextual enhancement": [[147, "contextual-enhancement"]], "Fiber tracking": [[147, "fiber-tracking"]], "Streamline analysis and connectivity": [[147, "streamline-analysis-and-connectivity"]], "Image-based Registration": [[147, "image-based-registration"]], "Streamline Clustering": [[147, "streamline-clustering"]], "Brain Segmentation": [[147, "brain-segmentation"]], "Tissue Classification": [[147, "tissue-classification"]], "Bundle Extraction": [[147, "bundle-extraction"]], "Simulations": [[147, "simulations"]], "Gimbal lock": [[163, "gimbal-lock"]], "Mathematics of gimbal lock": [[163, "mathematics-of-gimbal-lock"]]}, "indexentries": {"affine matrix": [[164, "term-Affine-matrix"]], "affine transformation": [[164, "term-Affine-transformation"]], "axis angle": [[164, "term-Axis-angle"]], "euclidean norm": [[164, "term-Euclidean-norm"]], "euler angles": [[164, "term-Euler-angles"]], "gimbal lock": [[164, "term-Gimbal-lock"]], "homogeneous coordinates": [[164, "term-Homogeneous-coordinates"]], "linear transformation": [[164, "term-Linear-transformation"]], "quaternion": [[164, "term-Quaternion"]], "reflection": [[164, "term-Reflection"]], "rotation matrix": [[164, "term-Rotation-matrix"]], "rotation vector": [[164, "term-Rotation-vector"]], "shear matrix": [[164, "term-Shear-matrix"]], "unit vector": [[164, "term-Unit-vector"]], "dipy": [[185, "module-dipy"]], "get_info() (in module dipy)": [[185, "dipy.get_info"]], "module": [[185, "module-dipy"], [186, "module-dipy.__config__"], [187, "module-dipy.align"], [187, "module-dipy.align._public"], [187, "module-dipy.align.cpd"], [187, "module-dipy.align.imaffine"], [187, "module-dipy.align.imwarp"], [187, "module-dipy.align.metrics"], [187, "module-dipy.align.reslice"], [187, "module-dipy.align.scalespace"], [187, "module-dipy.align.streamlinear"], [187, "module-dipy.align.streamwarp"], [188, "module-dipy.boots"], [189, "module-dipy.core"], [189, "module-dipy.core.geometry"], [189, "module-dipy.core.gradients"], [189, "module-dipy.core.graph"], [189, "module-dipy.core.histeq"], [189, "module-dipy.core.ndindex"], [189, "module-dipy.core.onetime"], [189, "module-dipy.core.optimize"], [189, "module-dipy.core.profile"], [189, "module-dipy.core.rng"], [189, "module-dipy.core.sphere"], [189, "module-dipy.core.sphere_stats"], [189, "module-dipy.core.subdivide_octahedron"], [189, "module-dipy.core.wavelet"], [190, "module-dipy.data"], [190, "module-dipy.data.fetcher"], [191, "module-dipy.denoise"], [191, "module-dipy.denoise.adaptive_soft_matching"], [191, "module-dipy.denoise.gibbs"], [191, "module-dipy.denoise.localpca"], [191, "module-dipy.denoise.nlmeans"], [191, "module-dipy.denoise.noise_estimate"], [191, "module-dipy.denoise.non_local_means"], [191, "module-dipy.denoise.patch2self"], [192, "module-dipy.direction"], [192, "module-dipy.direction.peaks"], [193, "module-dipy.io"], [193, "module-dipy.io.bvectxt"], [193, "module-dipy.io.dpy"], [193, "module-dipy.io.gradients"], [193, "module-dipy.io.image"], [193, "module-dipy.io.peaks"], [193, "module-dipy.io.pickles"], [193, "module-dipy.io.stateful_tractogram"], [193, "module-dipy.io.streamline"], [193, "module-dipy.io.utils"], [193, "module-dipy.io.vtk"], [194, "module-dipy.nn"], [194, "module-dipy.nn.cnn_1d_denoising"], [194, "module-dipy.nn.evac"], [194, "module-dipy.nn.histo_resdnn"], [194, "module-dipy.nn.model"], [194, "module-dipy.nn.synb0"], [194, "module-dipy.nn.utils"], [195, "module-dipy.reconst"], [195, "module-dipy.reconst.base"], [195, "module-dipy.reconst.benchmarks"], [195, "module-dipy.reconst.benchmarks.bench_bounding_box"], [195, "module-dipy.reconst.benchmarks.bench_csd"], [195, "module-dipy.reconst.benchmarks.bench_peaks"], [195, "module-dipy.reconst.benchmarks.bench_squash"], [195, "module-dipy.reconst.benchmarks.bench_vec_val_sum"], [195, "module-dipy.reconst.cache"], [195, "module-dipy.reconst.cross_validation"], [195, "module-dipy.reconst.csdeconv"], [195, "module-dipy.reconst.dki"], [195, "module-dipy.reconst.dki_micro"], [195, "module-dipy.reconst.dsi"], [195, "module-dipy.reconst.dti"], [195, "module-dipy.reconst.forecast"], [195, "module-dipy.reconst.fwdti"], [195, "module-dipy.reconst.gqi"], [195, "module-dipy.reconst.ivim"], [195, "module-dipy.reconst.mapmri"], [195, "module-dipy.reconst.mcsd"], [195, "module-dipy.reconst.msdki"], [195, "module-dipy.reconst.multi_voxel"], [195, "module-dipy.reconst.odf"], [195, "module-dipy.reconst.qtdmri"], [195, "module-dipy.reconst.qti"], [195, "module-dipy.reconst.rumba"], [195, "module-dipy.reconst.sfm"], [195, "module-dipy.reconst.shm"], [195, "module-dipy.reconst.shore"], [195, "module-dipy.reconst.utils"], [196, "module-dipy.segment"], [196, "module-dipy.segment.benchmarks"], [196, "module-dipy.segment.benchmarks.bench_quickbundles"], [196, "module-dipy.segment.bundles"], [196, "module-dipy.segment.clustering"], [196, "module-dipy.segment.fss"], [196, "module-dipy.segment.mask"], [196, "module-dipy.segment.metric"], [196, "module-dipy.segment.threshold"], [196, "module-dipy.segment.tissue"], [197, "module-dipy.sims"], [197, "module-dipy.sims.phantom"], [197, "module-dipy.sims.voxel"], [198, "module-dipy.stats"], [198, "module-dipy.stats.analysis"], [199, "module-dipy.tracking"], [199, "module-dipy.tracking._utils"], [199, "module-dipy.tracking.benchmarks"], [199, "module-dipy.tracking.benchmarks.bench_streamline"], [199, "module-dipy.tracking.learning"], [199, "module-dipy.tracking.life"], [199, "module-dipy.tracking.local_tracking"], [199, "module-dipy.tracking.mesh"], [199, "module-dipy.tracking.metrics"], [199, "module-dipy.tracking.streamline"], [199, "module-dipy.tracking.utils"], [200, "module-dipy.viz"], [200, "module-dipy.viz.app"], [200, "module-dipy.viz.gmem"], [200, "module-dipy.viz.horizon"], [200, "module-dipy.viz.horizon.app"], [200, "module-dipy.viz.horizon.tab"], [200, "module-dipy.viz.horizon.tab.base"], [200, "module-dipy.viz.horizon.tab.cluster"], [200, "module-dipy.viz.horizon.tab.peak"], [200, "module-dipy.viz.horizon.tab.roi"], [200, "module-dipy.viz.horizon.tab.slice"], [200, "module-dipy.viz.horizon.visualizer"], [200, "module-dipy.viz.horizon.visualizer.cluster"], [200, "module-dipy.viz.horizon.visualizer.slice"], [200, "module-dipy.viz.panel"], [200, "module-dipy.viz.plotting"], [200, "module-dipy.viz.projections"], [200, "module-dipy.viz.regtools"], [200, "module-dipy.viz.streamline"], [201, "module-dipy.workflows"], [201, "module-dipy.workflows.align"], [201, "module-dipy.workflows.base"], [201, "module-dipy.workflows.combined_workflow"], [201, "module-dipy.workflows.denoise"], [201, "module-dipy.workflows.docstring_parser"], [201, "module-dipy.workflows.flow_runner"], [201, "module-dipy.workflows.io"], [201, "module-dipy.workflows.mask"], [201, "module-dipy.workflows.multi_io"], [201, "module-dipy.workflows.reconst"], [201, "module-dipy.workflows.segment"], [201, "module-dipy.workflows.stats"], [201, "module-dipy.workflows.tracking"], [201, "module-dipy.workflows.viz"], [201, "module-dipy.workflows.workflow"]], "dipy.__config__": [[186, "module-dipy.__config__"]], "affineinvalidvalueserror (class in dipy.align.imaffine)": [[187, "dipy.align.imaffine.AffineInvalidValuesError"]], "affineinversionerror (class in dipy.align.imaffine)": [[187, "dipy.align.imaffine.AffineInversionError"]], "affinemap (class in dipy.align.imaffine)": [[187, "dipy.align.imaffine.AffineMap"]], "affineregistration (class in dipy.align.imaffine)": [[187, "dipy.align.imaffine.AffineRegistration"]], "bunch (class in dipy.align)": [[187, "dipy.align.Bunch"]], "bundlemindistanceasymmetricmetric (class in dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric"]], "bundlemindistancematrixmetric (class in dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric"]], "bundlemindistancemetric (class in dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.BundleMinDistanceMetric"]], "bundlesumdistancematrixmetric (class in dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric"]], "ccmetric (class in dipy.align.metrics)": [[187, "dipy.align.metrics.CCMetric"]], "deformableregistration (class in dipy.align.cpd)": [[187, "dipy.align.cpd.DeformableRegistration"]], "diffeomorphicmap (class in dipy.align.imwarp)": [[187, "dipy.align.imwarp.DiffeomorphicMap"]], "diffeomorphicregistration (class in dipy.align.imwarp)": [[187, "dipy.align.imwarp.DiffeomorphicRegistration"]], "emmetric (class in dipy.align.metrics)": [[187, "dipy.align.metrics.EMMetric"]], "isotropicscalespace (class in dipy.align.scalespace)": [[187, "dipy.align.scalespace.IsotropicScaleSpace"]], "jointbundlemindistancemetric (class in dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.JointBundleMinDistanceMetric"]], "jointstreamlineregistrationmap (class in dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.JointStreamlineRegistrationMap"]], "mutualinformationmetric (class in dipy.align.imaffine)": [[187, "dipy.align.imaffine.MutualInformationMetric"]], "registrationstages() (in module dipy.align.imwarp)": [[187, "dipy.align.imwarp.RegistrationStages"]], "ssdmetric (class in dipy.align.metrics)": [[187, "dipy.align.metrics.SSDMetric"]], "scalespace (class in dipy.align.scalespace)": [[187, "dipy.align.scalespace.ScaleSpace"]], "similaritymetric (class in dipy.align.metrics)": [[187, "dipy.align.metrics.SimilarityMetric"]], "streamlinedistancemetric (class in dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.StreamlineDistanceMetric"]], "streamlinelinearregistration (class in dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.StreamlineLinearRegistration"]], "streamlineregistrationmap (class in dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.StreamlineRegistrationMap"]], "symmetricdiffeomorphicregistration (class in dipy.align.imwarp)": [[187, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration"]], "verbositylevels() (in module dipy.align)": [[187, "dipy.align.VerbosityLevels"]], "_method_dict() (in module dipy.align._public)": [[187, "dipy.align._public._METHOD_DICT"]], "__init__() (dipy.align.bunch method)": [[187, "dipy.align.Bunch.__init__"]], "__init__() (dipy.align.cpd.deformableregistration method)": [[187, "dipy.align.cpd.DeformableRegistration.__init__"]], "__init__() (dipy.align.imaffine.affineinvalidvalueserror method)": [[187, "dipy.align.imaffine.AffineInvalidValuesError.__init__"]], "__init__() (dipy.align.imaffine.affineinversionerror method)": [[187, "dipy.align.imaffine.AffineInversionError.__init__"]], "__init__() (dipy.align.imaffine.affinemap method)": [[187, "dipy.align.imaffine.AffineMap.__init__"]], "__init__() (dipy.align.imaffine.affineregistration method)": [[187, "dipy.align.imaffine.AffineRegistration.__init__"]], "__init__() (dipy.align.imaffine.mutualinformationmetric method)": [[187, "dipy.align.imaffine.MutualInformationMetric.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicregistration method)": [[187, "dipy.align.imwarp.DiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[187, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.metrics.ccmetric method)": [[187, "dipy.align.metrics.CCMetric.__init__"]], "__init__() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.__init__"]], "__init__() (dipy.align.metrics.ssdmetric method)": [[187, "dipy.align.metrics.SSDMetric.__init__"]], "__init__() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.__init__"]], "__init__() (dipy.align.scalespace.isotropicscalespace method)": [[187, "dipy.align.scalespace.IsotropicScaleSpace.__init__"]], "__init__() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[187, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[187, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancemetric method)": [[187, "dipy.align.streamlinear.BundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[187, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[187, "dipy.align.streamlinear.JointBundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[187, "dipy.align.streamlinear.JointStreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.streamlinear.streamlinedistancemetric method)": [[187, "dipy.align.streamlinear.StreamlineDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.streamlinelinearregistration method)": [[187, "dipy.align.streamlinear.StreamlineLinearRegistration.__init__"]], "__init__() (dipy.align.streamlinear.streamlineregistrationmap method)": [[187, "dipy.align.streamlinear.StreamlineRegistrationMap.__init__"]], "_transform_method() (in module dipy.align.imaffine)": [[187, "dipy.align.imaffine._transform_method"]], "affine() (in module dipy.align._public)": [[187, "dipy.align._public.affine"]], "affine_registration() (in module dipy.align._public)": [[187, "dipy.align._public.affine_registration"]], "allocate() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.allocate"]], "average_bundle_length() (in module dipy.align.streamwarp)": [[187, "dipy.align.streamwarp.average_bundle_length"]], "bundle_min_distance() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.bundle_min_distance"]], "bundle_min_distance_asymmetric_fast() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.bundle_min_distance_asymmetric_fast"]], "bundle_min_distance_fast() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.bundle_min_distance_fast"]], "bundle_sum_distance() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.bundle_sum_distance"]], "bundlewarp() (in module dipy.align.streamwarp)": [[187, "dipy.align.streamwarp.bundlewarp"]], "bundlewarp_shape_analysis() (in module dipy.align.streamwarp)": [[187, "dipy.align.streamwarp.bundlewarp_shape_analysis"]], "bundlewarp_vector_filed() (in module dipy.align.streamwarp)": [[187, "dipy.align.streamwarp.bundlewarp_vector_filed"]], "center_of_mass() (in module dipy.align._public)": [[187, "dipy.align._public.center_of_mass"]], "compose_matrix44() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.compose_matrix44"]], "compute_backward() (dipy.align.metrics.ccmetric method)": [[187, "dipy.align.metrics.CCMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.ssdmetric method)": [[187, "dipy.align.metrics.SSDMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.compute_backward"]], "compute_demons_step() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.compute_demons_step"]], "compute_demons_step() (dipy.align.metrics.ssdmetric method)": [[187, "dipy.align.metrics.SSDMetric.compute_demons_step"]], "compute_forward() (dipy.align.metrics.ccmetric method)": [[187, "dipy.align.metrics.CCMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.ssdmetric method)": [[187, "dipy.align.metrics.SSDMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.compute_forward"]], "compute_gauss_newton_step() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.align.metrics.ssdmetric method)": [[187, "dipy.align.metrics.SSDMetric.compute_gauss_newton_step"]], "compute_inversion_error() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.compute_inversion_error"]], "decompose_matrix44() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.decompose_matrix44"]], "dipy.align": [[187, "module-dipy.align"]], "dipy.align._public": [[187, "module-dipy.align._public"]], "dipy.align.cpd": [[187, "module-dipy.align.cpd"]], "dipy.align.imaffine": [[187, "module-dipy.align.imaffine"]], "dipy.align.imwarp": [[187, "module-dipy.align.imwarp"]], "dipy.align.metrics": [[187, "module-dipy.align.metrics"]], "dipy.align.reslice": [[187, "module-dipy.align.reslice"]], "dipy.align.scalespace": [[187, "module-dipy.align.scalespace"]], "dipy.align.streamlinear": [[187, "module-dipy.align.streamlinear"]], "dipy.align.streamwarp": [[187, "module-dipy.align.streamwarp"]], "distance() (dipy.align.imaffine.mutualinformationmetric method)": [[187, "dipy.align.imaffine.MutualInformationMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[187, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[187, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancemetric method)": [[187, "dipy.align.streamlinear.BundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[187, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[187, "dipy.align.streamlinear.JointBundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.streamlinedistancemetric method)": [[187, "dipy.align.streamlinear.StreamlineDistanceMetric.distance"]], "distance_and_gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[187, "dipy.align.imaffine.MutualInformationMetric.distance_and_gradient"]], "docstring_addendum (dipy.align.imaffine.affineregistration attribute)": [[187, "dipy.align.imaffine.AffineRegistration.docstring_addendum"]], "expand_fields() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.expand_fields"]], "expectation() (dipy.align.cpd.deformableregistration method)": [[187, "dipy.align.cpd.DeformableRegistration.expectation"]], "find_missing() (in module dipy.align.streamwarp)": [[187, "dipy.align.streamwarp.find_missing"]], "free_iteration() (dipy.align.metrics.ccmetric method)": [[187, "dipy.align.metrics.CCMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.ssdmetric method)": [[187, "dipy.align.metrics.SSDMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.free_iteration"]], "gaussian_kernel() (in module dipy.align.cpd)": [[187, "dipy.align.cpd.gaussian_kernel"]], "get_affine() (dipy.align.imaffine.affinemap method)": [[187, "dipy.align.imaffine.AffineMap.get_affine"]], "get_affine() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.get_affine"]], "get_affine_inv() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.get_affine_inv"]], "get_backward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.get_backward_field"]], "get_direction_and_spacings() (in module dipy.align.imwarp)": [[187, "dipy.align.imwarp.get_direction_and_spacings"]], "get_domain_shape() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.get_domain_shape"]], "get_energy() (dipy.align.metrics.ccmetric method)": [[187, "dipy.align.metrics.CCMetric.get_energy"]], "get_energy() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.get_energy"]], "get_energy() (dipy.align.metrics.ssdmetric method)": [[187, "dipy.align.metrics.SSDMetric.get_energy"]], "get_energy() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.get_energy"]], "get_expand_factors() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.get_expand_factors"]], "get_forward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.get_forward_field"]], "get_image() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.get_image"]], "get_map() (dipy.align.imwarp.diffeomorphicregistration method)": [[187, "dipy.align.imwarp.DiffeomorphicRegistration.get_map"]], "get_map() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[187, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.get_map"]], "get_registration_parameters() (dipy.align.cpd.deformableregistration method)": [[187, "dipy.align.cpd.DeformableRegistration.get_registration_parameters"]], "get_scaling() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.get_scaling"]], "get_sigmas() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.get_sigmas"]], "get_simplified_transform() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.get_simplified_transform"]], "get_spacing() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.get_spacing"]], "get_unique_pairs() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.get_unique_pairs"]], "gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[187, "dipy.align.imaffine.MutualInformationMetric.gradient"]], "groupwise_slr() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.groupwise_slr"]], "initialize_iteration() (dipy.align.metrics.ccmetric method)": [[187, "dipy.align.metrics.CCMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.ssdmetric method)": [[187, "dipy.align.metrics.SSDMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.initialize_iteration"]], "initialize_sigma2() (in module dipy.align.cpd)": [[187, "dipy.align.cpd.initialize_sigma2"]], "interpret_matrix() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.interpret_matrix"]], "inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.inverse"]], "iterate() (dipy.align.cpd.deformableregistration method)": [[187, "dipy.align.cpd.DeformableRegistration.iterate"]], "logger() (in module dipy.align.imwarp)": [[187, "dipy.align.imwarp.logger"]], "logger() (in module dipy.align.scalespace)": [[187, "dipy.align.scalespace.logger"]], "logger() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.logger"]], "low_rank_eigen() (in module dipy.align.cpd)": [[187, "dipy.align.cpd.low_rank_eigen"]], "lowrankqs() (in module dipy.align.cpd)": [[187, "dipy.align.cpd.lowrankQS"]], "maximization() (dipy.align.cpd.deformableregistration method)": [[187, "dipy.align.cpd.DeformableRegistration.maximization"]], "motion_correction() (in module dipy.align._public)": [[187, "dipy.align._public.motion_correction"]], "mult_aff() (in module dipy.align.imwarp)": [[187, "dipy.align.imwarp.mult_aff"]], "optimize() (dipy.align.imaffine.affineregistration method)": [[187, "dipy.align.imaffine.AffineRegistration.optimize"]], "optimize() (dipy.align.imwarp.diffeomorphicregistration method)": [[187, "dipy.align.imwarp.DiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[187, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.streamlinear.streamlinelinearregistration method)": [[187, "dipy.align.streamlinear.StreamlineLinearRegistration.optimize"]], "print_level() (dipy.align.scalespace.scalespace method)": [[187, "dipy.align.scalespace.ScaleSpace.print_level"]], "progressive_slr() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.progressive_slr"]], "read_mapping() (in module dipy.align._public)": [[187, "dipy.align._public.read_mapping"]], "register() (dipy.align.cpd.deformableregistration method)": [[187, "dipy.align.cpd.DeformableRegistration.register"]], "register_dwi_series() (in module dipy.align._public)": [[187, "dipy.align._public.register_dwi_series"]], "register_dwi_to_template() (in module dipy.align._public)": [[187, "dipy.align._public.register_dwi_to_template"]], "register_series() (in module dipy.align._public)": [[187, "dipy.align._public.register_series"]], "remove_clusters_by_size() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.remove_clusters_by_size"]], "resample() (in module dipy.align._public)": [[187, "dipy.align._public.resample"]], "reslice() (in module dipy.align.reslice)": [[187, "dipy.align.reslice.reslice"]], "rigid() (in module dipy.align._public)": [[187, "dipy.align._public.rigid"]], "rigid_isoscaling() (in module dipy.align._public)": [[187, "dipy.align._public.rigid_isoscaling"]], "rigid_scaling() (in module dipy.align._public)": [[187, "dipy.align._public.rigid_scaling"]], "set_affine() (dipy.align.imaffine.affinemap method)": [[187, "dipy.align.imaffine.AffineMap.set_affine"]], "set_level_iters() (dipy.align.imwarp.diffeomorphicregistration method)": [[187, "dipy.align.imwarp.DiffeomorphicRegistration.set_level_iters"]], "set_levels_above() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.set_levels_above"]], "set_levels_below() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.set_levels_below"]], "set_moving_image() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.set_moving_image"]], "set_static_image() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.set_static_image"]], "setup() (dipy.align.imaffine.mutualinformationmetric method)": [[187, "dipy.align.imaffine.MutualInformationMetric.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[187, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancemetric method)": [[187, "dipy.align.streamlinear.BundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[187, "dipy.align.streamlinear.JointBundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.streamlinedistancemetric method)": [[187, "dipy.align.streamlinear.StreamlineDistanceMetric.setup"]], "shallow_copy() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.shallow_copy"]], "slr_with_qbx() (in module dipy.align.streamlinear)": [[187, "dipy.align.streamlinear.slr_with_qbx"]], "streamline_registration() (in module dipy.align._public)": [[187, "dipy.align._public.streamline_registration"]], "syn_registration() (in module dipy.align._public)": [[187, "dipy.align._public.syn_registration"]], "transform() (dipy.align.imaffine.affinemap method)": [[187, "dipy.align.imaffine.AffineMap.transform"]], "transform() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.transform"]], "transform() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[187, "dipy.align.streamlinear.JointStreamlineRegistrationMap.transform"]], "transform() (dipy.align.streamlinear.streamlineregistrationmap method)": [[187, "dipy.align.streamlinear.StreamlineRegistrationMap.transform"]], "transform_centers_of_mass() (in module dipy.align.imaffine)": [[187, "dipy.align.imaffine.transform_centers_of_mass"]], "transform_geometric_centers() (in module dipy.align.imaffine)": [[187, "dipy.align.imaffine.transform_geometric_centers"]], "transform_inverse() (dipy.align.imaffine.affinemap method)": [[187, "dipy.align.imaffine.AffineMap.transform_inverse"]], "transform_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.transform_inverse"]], "transform_origins() (in module dipy.align.imaffine)": [[187, "dipy.align.imaffine.transform_origins"]], "transform_point_cloud() (dipy.align.cpd.deformableregistration method)": [[187, "dipy.align.cpd.DeformableRegistration.transform_point_cloud"]], "transform_points() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.transform_points"]], "transform_points_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.transform_points_inverse"]], "translation() (in module dipy.align._public)": [[187, "dipy.align._public.translation"]], "update() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[187, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.update"]], "update_transform() (dipy.align.cpd.deformableregistration method)": [[187, "dipy.align.cpd.DeformableRegistration.update_transform"]], "update_variance() (dipy.align.cpd.deformableregistration method)": [[187, "dipy.align.cpd.DeformableRegistration.update_variance"]], "use_moving_image_dynamics() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.use_moving_image_dynamics"]], "use_moving_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.use_moving_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.emmetric method)": [[187, "dipy.align.metrics.EMMetric.use_static_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[187, "dipy.align.metrics.SimilarityMetric.use_static_image_dynamics"]], "v_cycle_2d() (in module dipy.align.metrics)": [[187, "dipy.align.metrics.v_cycle_2d"]], "v_cycle_3d() (in module dipy.align.metrics)": [[187, "dipy.align.metrics.v_cycle_3d"]], "warp_endomorphism() (dipy.align.imwarp.diffeomorphicmap method)": [[187, "dipy.align.imwarp.DiffeomorphicMap.warp_endomorphism"]], "write_mapping() (in module dipy.align._public)": [[187, "dipy.align._public.write_mapping"]], "dipy.boots": [[188, "module-dipy.boots"]], "gradienttable (class in dipy.core.gradients)": [[189, "dipy.core.gradients.GradientTable"]], "graph (class in dipy.core.graph)": [[189, "dipy.core.graph.Graph"]], "hemisphere (class in dipy.core.sphere)": [[189, "dipy.core.sphere.HemiSphere"]], "lecuyer() (in module dipy.core.rng)": [[189, "dipy.core.rng.LEcuyer"]], "nonnegativeleastsquares (class in dipy.core.optimize)": [[189, "dipy.core.optimize.NonNegativeLeastSquares"]], "onetimeproperty (class in dipy.core.onetime)": [[189, "dipy.core.onetime.OneTimeProperty"]], "optimizer (class in dipy.core.optimize)": [[189, "dipy.core.optimize.Optimizer"]], "positivedefiniteleastsquares (class in dipy.core.optimize)": [[189, "dipy.core.optimize.PositiveDefiniteLeastSquares"]], "profiler (class in dipy.core.profile)": [[189, "dipy.core.profile.Profiler"]], "resetmixin (class in dipy.core.onetime)": [[189, "dipy.core.onetime.ResetMixin"]], "sklearnlinearsolver (class in dipy.core.optimize)": [[189, "dipy.core.optimize.SKLearnLinearSolver"]], "sphere (class in dipy.core.sphere)": [[189, "dipy.core.sphere.Sphere"]], "wichmannhill1982() (in module dipy.core.rng)": [[189, "dipy.core.rng.WichmannHill1982"]], "wichmannhill2006() (in module dipy.core.rng)": [[189, "dipy.core.rng.WichmannHill2006"]], "_tuple2axes() (in module dipy.core.geometry)": [[189, "dipy.core.geometry._TUPLE2AXES"]], "__init__() (dipy.core.gradients.gradienttable method)": [[189, "dipy.core.gradients.GradientTable.__init__"]], "__init__() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.__init__"]], "__init__() (dipy.core.onetime.onetimeproperty method)": [[189, "dipy.core.onetime.OneTimeProperty.__init__"]], "__init__() (dipy.core.onetime.resetmixin method)": [[189, "dipy.core.onetime.ResetMixin.__init__"]], "__init__() (dipy.core.optimize.nonnegativeleastsquares method)": [[189, "dipy.core.optimize.NonNegativeLeastSquares.__init__"]], "__init__() (dipy.core.optimize.optimizer method)": [[189, "dipy.core.optimize.Optimizer.__init__"]], "__init__() (dipy.core.optimize.positivedefiniteleastsquares method)": [[189, "dipy.core.optimize.PositiveDefiniteLeastSquares.__init__"]], "__init__() (dipy.core.optimize.sklearnlinearsolver method)": [[189, "dipy.core.optimize.SKLearnLinearSolver.__init__"]], "__init__() (dipy.core.profile.profiler method)": [[189, "dipy.core.profile.Profiler.__init__"]], "__init__() (dipy.core.sphere.hemisphere method)": [[189, "dipy.core.sphere.HemiSphere.__init__"]], "__init__() (dipy.core.sphere.sphere method)": [[189, "dipy.core.sphere.Sphere.__init__"]], "add_edge() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.add_edge"]], "add_node() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.add_node"]], "afb3d() (in module dipy.core.wavelet)": [[189, "dipy.core.wavelet.afb3D"]], "afb3d_a() (in module dipy.core.wavelet)": [[189, "dipy.core.wavelet.afb3D_A"]], "all_paths() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.all_paths"]], "angular_similarity() (in module dipy.core.sphere_stats)": [[189, "dipy.core.sphere_stats.angular_similarity"]], "auto_attr() (in module dipy.core.onetime)": [[189, "dipy.core.onetime.auto_attr"]], "b0s_mask() (dipy.core.gradients.gradienttable method)": [[189, "dipy.core.gradients.GradientTable.b0s_mask"]], "btens_to_params() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.btens_to_params"]], "bvals() (dipy.core.gradients.gradienttable method)": [[189, "dipy.core.gradients.GradientTable.bvals"]], "bvecs() (dipy.core.gradients.gradienttable method)": [[189, "dipy.core.gradients.GradientTable.bvecs"]], "cart2sphere() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.cart2sphere"]], "cart_distance() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.cart_distance"]], "check_multi_b() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.check_multi_b"]], "children() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.children"]], "circumradius() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.circumradius"]], "compare_orientation_sets() (in module dipy.core.sphere_stats)": [[189, "dipy.core.sphere_stats.compare_orientation_sets"]], "compose_matrix() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.compose_matrix"]], "compose_transformations() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.compose_transformations"]], "create_unit_hemisphere() (in module dipy.core.subdivide_octahedron)": [[189, "dipy.core.subdivide_octahedron.create_unit_hemisphere"]], "create_unit_sphere() (in module dipy.core.subdivide_octahedron)": [[189, "dipy.core.subdivide_octahedron.create_unit_sphere"]], "cshift3d() (in module dipy.core.wavelet)": [[189, "dipy.core.wavelet.cshift3D"]], "decompose_matrix() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.decompose_matrix"]], "del_node() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.del_node"]], "del_node_and_edges() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.del_node_and_edges"]], "dipy.core": [[189, "module-dipy.core"]], "dipy.core.geometry": [[189, "module-dipy.core.geometry"]], "dipy.core.gradients": [[189, "module-dipy.core.gradients"]], "dipy.core.graph": [[189, "module-dipy.core.graph"]], "dipy.core.histeq": [[189, "module-dipy.core.histeq"]], "dipy.core.ndindex": [[189, "module-dipy.core.ndindex"]], "dipy.core.onetime": [[189, "module-dipy.core.onetime"]], "dipy.core.optimize": [[189, "module-dipy.core.optimize"]], "dipy.core.profile": [[189, "module-dipy.core.profile"]], "dipy.core.rng": [[189, "module-dipy.core.rng"]], "dipy.core.sphere": [[189, "module-dipy.core.sphere"]], "dipy.core.sphere_stats": [[189, "module-dipy.core.sphere_stats"]], "dipy.core.subdivide_octahedron": [[189, "module-dipy.core.subdivide_octahedron"]], "dipy.core.wavelet": [[189, "module-dipy.core.wavelet"]], "disperse_charges() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.disperse_charges"]], "disperse_charges_alt() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.disperse_charges_alt"]], "dist_to_corner() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.dist_to_corner"]], "down() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.down"]], "down_short() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.down_short"]], "dwt3d() (in module dipy.core.wavelet)": [[189, "dipy.core.wavelet.dwt3D"]], "edges() (dipy.core.sphere.sphere method)": [[189, "dipy.core.sphere.Sphere.edges"]], "eigenstats() (in module dipy.core.sphere_stats)": [[189, "dipy.core.sphere_stats.eigenstats"]], "euler_characteristic_check() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.euler_characteristic_check"]], "euler_matrix() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.euler_matrix"]], "evolution (dipy.core.optimize.optimizer property)": [[189, "dipy.core.optimize.Optimizer.evolution"]], "faces() (dipy.core.sphere.hemisphere method)": [[189, "dipy.core.sphere.HemiSphere.faces"]], "faces() (dipy.core.sphere.sphere method)": [[189, "dipy.core.sphere.Sphere.faces"]], "faces_from_sphere_vertices() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.faces_from_sphere_vertices"]], "find_closest() (dipy.core.sphere.hemisphere method)": [[189, "dipy.core.sphere.HemiSphere.find_closest"]], "find_closest() (dipy.core.sphere.sphere method)": [[189, "dipy.core.sphere.Sphere.find_closest"]], "fit() (dipy.core.optimize.nonnegativeleastsquares method)": [[189, "dipy.core.optimize.NonNegativeLeastSquares.fit"]], "fit() (dipy.core.optimize.sklearnlinearsolver method)": [[189, "dipy.core.optimize.SKLearnLinearSolver.fit"]], "fopt (dipy.core.optimize.optimizer property)": [[189, "dipy.core.optimize.Optimizer.fopt"]], "from_sphere() (dipy.core.sphere.hemisphere class method)": [[189, "dipy.core.sphere.HemiSphere.from_sphere"]], "generate_bvecs() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.generate_bvecs"]], "get_bval_indices() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.get_bval_indices"]], "gradient_strength() (dipy.core.gradients.gradienttable method)": [[189, "dipy.core.gradients.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.gradient_table"]], "gradient_table_from_bvals_bvecs() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.gradient_table_from_bvals_bvecs"]], "gradient_table_from_gradient_strength_bvecs() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.gradient_table_from_gradient_strength_bvecs"]], "gradient_table_from_qvals_bvecs() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.gradient_table_from_qvals_bvecs"]], "hemi_icosahedron() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.hemi_icosahedron"]], "histeq() (in module dipy.core.histeq)": [[189, "dipy.core.histeq.histeq"]], "icosahedron_faces() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.icosahedron_faces"]], "icosahedron_vertices() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.icosahedron_vertices"]], "idwt3d() (in module dipy.core.wavelet)": [[189, "dipy.core.wavelet.idwt3D"]], "info (dipy.core.gradients.gradienttable property)": [[189, "dipy.core.gradients.GradientTable.info"]], "is_hemispherical() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.is_hemispherical"]], "lambert_equal_area_projection_cart() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.lambert_equal_area_projection_cart"]], "lambert_equal_area_projection_polar() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.lambert_equal_area_projection_polar"]], "logger() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.logger"]], "message (dipy.core.optimize.optimizer property)": [[189, "dipy.core.optimize.Optimizer.message"]], "mirror() (dipy.core.sphere.hemisphere method)": [[189, "dipy.core.sphere.HemiSphere.mirror"]], "ndindex() (in module dipy.core.ndindex)": [[189, "dipy.core.ndindex.ndindex"]], "nearest_pos_semi_def() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.nearest_pos_semi_def"]], "nfev (dipy.core.optimize.optimizer property)": [[189, "dipy.core.optimize.Optimizer.nfev"]], "nit (dipy.core.optimize.optimizer property)": [[189, "dipy.core.optimize.Optimizer.nit"]], "normalized_vector() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.normalized_vector"]], "octahedron_faces() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.octahedron_faces"]], "octahedron_vertices() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.octahedron_vertices"]], "orientation_from_string() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.orientation_from_string"]], "orientation_to_string() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.orientation_to_string"]], "ornt_mapping() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.ornt_mapping"]], "params_to_btens() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.params_to_btens"]], "parents() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.parents"]], "permutationinverse() (in module dipy.core.wavelet)": [[189, "dipy.core.wavelet.permutationinverse"]], "perpendicular_directions() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.perpendicular_directions"]], "predict() (dipy.core.optimize.sklearnlinearsolver method)": [[189, "dipy.core.optimize.SKLearnLinearSolver.predict"]], "print_stats() (dipy.core.profile.profiler method)": [[189, "dipy.core.profile.Profiler.print_stats"]], "print_summary() (dipy.core.optimize.optimizer method)": [[189, "dipy.core.optimize.Optimizer.print_summary"]], "qvals() (dipy.core.gradients.gradienttable method)": [[189, "dipy.core.gradients.GradientTable.qvals"]], "random_uniform_on_sphere() (in module dipy.core.sphere_stats)": [[189, "dipy.core.sphere_stats.random_uniform_on_sphere"]], "reorient_bvecs() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.reorient_bvecs"]], "reorient_on_axis() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.reorient_on_axis"]], "reorient_vectors() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.reorient_vectors"]], "reset() (dipy.core.onetime.resetmixin method)": [[189, "dipy.core.onetime.ResetMixin.reset"]], "rodrigues_axis_rotation() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.rodrigues_axis_rotation"]], "round_bvals() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.round_bvals"]], "sfb3d() (in module dipy.core.wavelet)": [[189, "dipy.core.wavelet.sfb3D"]], "sfb3d_a() (in module dipy.core.wavelet)": [[189, "dipy.core.wavelet.sfb3D_A"]], "shortest_path() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.shortest_path"]], "solve() (dipy.core.optimize.positivedefiniteleastsquares method)": [[189, "dipy.core.optimize.PositiveDefiniteLeastSquares.solve"]], "sparse_nnls() (in module dipy.core.optimize)": [[189, "dipy.core.optimize.sparse_nnls"]], "spdot() (in module dipy.core.optimize)": [[189, "dipy.core.optimize.spdot"]], "sph2latlon() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.sph2latlon"]], "sphere2cart() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.sphere2cart"]], "sphere_distance() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.sphere_distance"]], "subdivide() (dipy.core.sphere.hemisphere method)": [[189, "dipy.core.sphere.HemiSphere.subdivide"]], "subdivide() (dipy.core.sphere.sphere method)": [[189, "dipy.core.sphere.Sphere.subdivide"]], "tau() (dipy.core.gradients.gradienttable method)": [[189, "dipy.core.gradients.GradientTable.tau"]], "unique_bvals() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.unique_bvals"]], "unique_bvals_magnitude() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.unique_bvals_magnitude"]], "unique_bvals_tolerance() (in module dipy.core.gradients)": [[189, "dipy.core.gradients.unique_bvals_tolerance"]], "unique_edges() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.unique_edges"]], "unique_sets() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.unique_sets"]], "unit_icosahedron() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.unit_icosahedron"]], "unit_octahedron() (in module dipy.core.sphere)": [[189, "dipy.core.sphere.unit_octahedron"]], "up() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.up"]], "up_short() (dipy.core.graph.graph method)": [[189, "dipy.core.graph.Graph.up_short"]], "vec2vec_rotmat() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.vec2vec_rotmat"]], "vector_cosine() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.vector_cosine"]], "vector_norm() (in module dipy.core.geometry)": [[189, "dipy.core.geometry.vector_norm"]], "vertices() (dipy.core.sphere.sphere method)": [[189, "dipy.core.sphere.Sphere.vertices"]], "x (dipy.core.sphere.sphere property)": [[189, "dipy.core.sphere.Sphere.x"]], "xopt (dipy.core.optimize.optimizer property)": [[189, "dipy.core.optimize.Optimizer.xopt"]], "y (dipy.core.sphere.sphere property)": [[189, "dipy.core.sphere.Sphere.y"]], "z (dipy.core.sphere.sphere property)": [[189, "dipy.core.sphere.Sphere.z"]], "data_dir() (in module dipy.data)": [[190, "dipy.data.DATA_DIR"]], "dataerror (class in dipy.data)": [[190, "dipy.data.DataError"]], "__init__() (dipy.data.dataerror method)": [[190, "dipy.data.DataError.__init__"]], "check_md5() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.check_md5"]], "copyfileobj_withprogress() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.copyfileobj_withprogress"]], "default_sphere() (in module dipy.data)": [[190, "dipy.data.default_sphere"]], "dipy.data": [[190, "module-dipy.data"]], "dipy.data.fetcher": [[190, "module-dipy.data.fetcher"]], "dsi_deconv_voxels() (in module dipy.data)": [[190, "dipy.data.dsi_deconv_voxels"]], "dsi_voxels() (in module dipy.data)": [[190, "dipy.data.dsi_voxels"]], "extract_example_tracts() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.extract_example_tracts"]], "fetch_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_DiB_217_lte_pte_ste"]], "fetch_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_DiB_70_lte_pte_ste"]], "fetch_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_bundle_atlas_hcp842"]], "fetch_bundle_fa_hcp() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_bundle_fa_hcp"]], "fetch_bundle_warp_dataset() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_bundle_warp_dataset"]], "fetch_bundles_2_subjects() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_bundles_2_subjects"]], "fetch_cenir_multib() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_cenir_multib"]], "fetch_cfin_multib() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_cfin_multib"]], "fetch_data() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_data"]], "fetch_evac_test() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_evac_test"]], "fetch_evac_weights() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_evac_weights"]], "fetch_file_formats() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_file_formats"]], "fetch_fury_surface() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_fury_surface"]], "fetch_gold_standard_io() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_gold_standard_io"]], "fetch_hbn() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_hbn"]], "fetch_hcp() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_hcp"]], "fetch_isbi2013_2shell() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_isbi2013_2shell"]], "fetch_ivim() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_ivim"]], "fetch_mni_template() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_mni_template"]], "fetch_ptt_minimal_dataset() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_ptt_minimal_dataset"]], "fetch_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_qtdMRI_test_retest_2subjects"]], "fetch_qte_lte_pte() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_qte_lte_pte"]], "fetch_resdnn_weights() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_resdnn_weights"]], "fetch_scil_b0() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_scil_b0"]], "fetch_sherbrooke_3shell() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_sherbrooke_3shell"]], "fetch_stanford_hardi() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_stanford_hardi"]], "fetch_stanford_labels() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_stanford_labels"]], "fetch_stanford_pve_maps() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_stanford_pve_maps"]], "fetch_stanford_t1() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_stanford_t1"]], "fetch_stanford_tracks() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_stanford_tracks"]], "fetch_syn_data() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_syn_data"]], "fetch_synb0_test() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_synb0_test"]], "fetch_synb0_weights() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_synb0_weights"]], "fetch_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_taiwan_ntu_dsi"]], "fetch_target_tractogram_hcp() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_target_tractogram_hcp"]], "fetch_tissue_data() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.fetch_tissue_data"]], "get_3shell_gtab() (in module dipy.data)": [[190, "dipy.data.get_3shell_gtab"]], "get_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.get_bundle_atlas_hcp842"]], "get_cmap() (in module dipy.data)": [[190, "dipy.data.get_cmap"]], "get_file_formats() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.get_file_formats"]], "get_fnames() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.get_fnames"]], "get_gtab_taiwan_dsi() (in module dipy.data)": [[190, "dipy.data.get_gtab_taiwan_dsi"]], "get_isbi2013_2shell_gtab() (in module dipy.data)": [[190, "dipy.data.get_isbi2013_2shell_gtab"]], "get_sim_voxels() (in module dipy.data)": [[190, "dipy.data.get_sim_voxels"]], "get_skeleton() (in module dipy.data)": [[190, "dipy.data.get_skeleton"]], "get_sphere() (in module dipy.data)": [[190, "dipy.data.get_sphere"]], "get_target_tractogram_hcp() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.get_target_tractogram_hcp"]], "get_two_hcp842_bundles() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.get_two_hcp842_bundles"]], "load_sdp_constraints() (in module dipy.data)": [[190, "dipy.data.load_sdp_constraints"]], "loads_compat() (in module dipy.data)": [[190, "dipy.data.loads_compat"]], "matlab_life_results() (in module dipy.data)": [[190, "dipy.data.matlab_life_results"]], "mrtrix_spherical_functions() (in module dipy.data)": [[190, "dipy.data.mrtrix_spherical_functions"]], "read_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_DiB_217_lte_pte_ste"]], "read_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_DiB_70_lte_pte_ste"]], "read_bundles_2_subjects() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_bundles_2_subjects"]], "read_cenir_multib() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_cenir_multib"]], "read_cfin_dwi() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_cfin_dwi"]], "read_cfin_t1() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_cfin_t1"]], "read_five_af_bundles() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_five_af_bundles"]], "read_isbi2013_2shell() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_isbi2013_2shell"]], "read_ivim() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_ivim"]], "read_mni_template() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_mni_template"]], "read_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_qtdMRI_test_retest_2subjects"]], "read_qte_lte_pte() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_qte_lte_pte"]], "read_scil_b0() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_scil_b0"]], "read_sherbrooke_3shell() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_sherbrooke_3shell"]], "read_siemens_scil_b0() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_siemens_scil_b0"]], "read_stanford_hardi() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_stanford_hardi"]], "read_stanford_labels() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_stanford_labels"]], "read_stanford_pve_maps() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_stanford_pve_maps"]], "read_stanford_t1() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_stanford_t1"]], "read_syn_data() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_syn_data"]], "read_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_taiwan_ntu_dsi"]], "read_tissue_data() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.read_tissue_data"]], "small_sphere() (in module dipy.data)": [[190, "dipy.data.small_sphere"]], "to_bids_description() (in module dipy.data.fetcher)": [[190, "dipy.data.fetcher.to_bids_description"]], "two_cingulum_bundles() (in module dipy.data)": [[190, "dipy.data.two_cingulum_bundles"]], "adaptive_soft_matching() (in module dipy.denoise.adaptive_soft_matching)": [[191, "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching"]], "dipy.denoise": [[191, "module-dipy.denoise"]], "dipy.denoise.adaptive_soft_matching": [[191, "module-dipy.denoise.adaptive_soft_matching"]], "dipy.denoise.gibbs": [[191, "module-dipy.denoise.gibbs"]], "dipy.denoise.localpca": [[191, "module-dipy.denoise.localpca"]], "dipy.denoise.nlmeans": [[191, "module-dipy.denoise.nlmeans"]], "dipy.denoise.noise_estimate": [[191, "module-dipy.denoise.noise_estimate"]], "dipy.denoise.non_local_means": [[191, "module-dipy.denoise.non_local_means"]], "dipy.denoise.patch2self": [[191, "module-dipy.denoise.patch2self"]], "estimate_sigma() (in module dipy.denoise.noise_estimate)": [[191, "dipy.denoise.noise_estimate.estimate_sigma"]], "genpca() (in module dipy.denoise.localpca)": [[191, "dipy.denoise.localpca.genpca"]], "gibbs_removal() (in module dipy.denoise.gibbs)": [[191, "dipy.denoise.gibbs.gibbs_removal"]], "localpca() (in module dipy.denoise.localpca)": [[191, "dipy.denoise.localpca.localpca"]], "mppca() (in module dipy.denoise.localpca)": [[191, "dipy.denoise.localpca.mppca"]], "nlmeans() (in module dipy.denoise.nlmeans)": [[191, "dipy.denoise.nlmeans.nlmeans"]], "non_local_means() (in module dipy.denoise.non_local_means)": [[191, "dipy.denoise.non_local_means.non_local_means"]], "patch2self() (in module dipy.denoise.patch2self)": [[191, "dipy.denoise.patch2self.patch2self"]], "piesno() (in module dipy.denoise.noise_estimate)": [[191, "dipy.denoise.noise_estimate.piesno"]], "peaksandmetrics (class in dipy.direction.peaks)": [[192, "dipy.direction.peaks.PeaksAndMetrics"]], "__init__() (dipy.direction.peaks.peaksandmetrics method)": [[192, "dipy.direction.peaks.PeaksAndMetrics.__init__"]], "dipy.direction": [[192, "module-dipy.direction"]], "dipy.direction.peaks": [[192, "module-dipy.direction.peaks"]], "peak_directions() (in module dipy.direction.peaks)": [[192, "dipy.direction.peaks.peak_directions"]], "peak_directions_nl() (in module dipy.direction.peaks)": [[192, "dipy.direction.peaks.peak_directions_nl"]], "peaks_from_model() (in module dipy.direction.peaks)": [[192, "dipy.direction.peaks.peaks_from_model"]], "reshape_peaks_for_visualization() (in module dipy.direction.peaks)": [[192, "dipy.direction.peaks.reshape_peaks_for_visualization"]], "dpy (class in dipy.io.dpy)": [[193, "dipy.io.dpy.Dpy"]], "nifti (dipy.io.stateful_tractogram.origin attribute)": [[193, "dipy.io.stateful_tractogram.Origin.NIFTI"]], "origin (class in dipy.io.stateful_tractogram)": [[193, "dipy.io.stateful_tractogram.Origin"]], "rasmm (dipy.io.stateful_tractogram.space attribute)": [[193, "dipy.io.stateful_tractogram.Space.RASMM"]], "space (class in dipy.io.stateful_tractogram)": [[193, "dipy.io.stateful_tractogram.Space"]], "statefultractogram (class in dipy.io.stateful_tractogram)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram"]], "trackvis (dipy.io.stateful_tractogram.origin attribute)": [[193, "dipy.io.stateful_tractogram.Origin.TRACKVIS"]], "vox (dipy.io.stateful_tractogram.space attribute)": [[193, "dipy.io.stateful_tractogram.Space.VOX"]], "voxmm (dipy.io.stateful_tractogram.space attribute)": [[193, "dipy.io.stateful_tractogram.Space.VOXMM"]], "__init__() (dipy.io.dpy.dpy method)": [[193, "dipy.io.dpy.Dpy.__init__"]], "__init__() (dipy.io.stateful_tractogram.origin method)": [[193, "dipy.io.stateful_tractogram.Origin.__init__"]], "__init__() (dipy.io.stateful_tractogram.space method)": [[193, "dipy.io.stateful_tractogram.Space.__init__"]], "__init__() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.__init__"]], "affine (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.affine"]], "are_compatible() (dipy.io.stateful_tractogram.statefultractogram static method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.are_compatible"]], "close() (dipy.io.dpy.dpy method)": [[193, "dipy.io.dpy.Dpy.close"]], "compute_bounding_box() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box"]], "create_nifti_header() (in module dipy.io.utils)": [[193, "dipy.io.utils.create_nifti_header"]], "create_tractogram_header() (in module dipy.io.utils)": [[193, "dipy.io.utils.create_tractogram_header"]], "data_per_point (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_point"]], "data_per_streamline (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline"]], "decfa() (in module dipy.io.utils)": [[193, "dipy.io.utils.decfa"]], "decfa_to_float() (in module dipy.io.utils)": [[193, "dipy.io.utils.decfa_to_float"]], "dimensions (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.dimensions"]], "dipy.io": [[193, "module-dipy.io"]], "dipy.io.bvectxt": [[193, "module-dipy.io.bvectxt"]], "dipy.io.dpy": [[193, "module-dipy.io.dpy"]], "dipy.io.gradients": [[193, "module-dipy.io.gradients"]], "dipy.io.image": [[193, "module-dipy.io.image"]], "dipy.io.peaks": [[193, "module-dipy.io.peaks"]], "dipy.io.pickles": [[193, "module-dipy.io.pickles"]], "dipy.io.stateful_tractogram": [[193, "module-dipy.io.stateful_tractogram"]], "dipy.io.streamline": [[193, "module-dipy.io.streamline"]], "dipy.io.utils": [[193, "module-dipy.io.utils"]], "dipy.io.vtk": [[193, "module-dipy.io.vtk"]], "dtype_dict (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.dtype_dict"]], "from_sft() (dipy.io.stateful_tractogram.statefultractogram static method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.from_sft"]], "get_data_per_point_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_streamline_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys"]], "get_reference_info() (in module dipy.io.utils)": [[193, "dipy.io.utils.get_reference_info"]], "get_streamlines_copy() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy"]], "is_bbox_in_vox_valid() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid"]], "is_header_compatible() (in module dipy.io.utils)": [[193, "dipy.io.utils.is_header_compatible"]], "is_reference_info_valid() (in module dipy.io.utils)": [[193, "dipy.io.utils.is_reference_info_valid"]], "load_dpy() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.load_dpy"]], "load_fib() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.load_fib"]], "load_generator() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.load_generator"]], "load_nifti() (in module dipy.io.image)": [[193, "dipy.io.image.load_nifti"]], "load_nifti_data() (in module dipy.io.image)": [[193, "dipy.io.image.load_nifti_data"]], "load_peaks() (in module dipy.io.peaks)": [[193, "dipy.io.peaks.load_peaks"]], "load_pickle() (in module dipy.io.pickles)": [[193, "dipy.io.pickles.load_pickle"]], "load_polydata() (in module dipy.io.vtk)": [[193, "dipy.io.vtk.load_polydata"]], "load_tck() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.load_tck"]], "load_tractogram() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.load_tractogram"]], "load_trk() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.load_trk"]], "load_vtk() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.load_vtk"]], "load_vtk_streamlines() (in module dipy.io.vtk)": [[193, "dipy.io.vtk.load_vtk_streamlines"]], "load_vtp() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.load_vtp"]], "logger() (in module dipy.io.stateful_tractogram)": [[193, "dipy.io.stateful_tractogram.logger"]], "make5d() (in module dipy.io.utils)": [[193, "dipy.io.utils.make5d"]], "nifti1_symmat() (in module dipy.io.utils)": [[193, "dipy.io.utils.nifti1_symmat"]], "orientation_from_string() (in module dipy.io.bvectxt)": [[193, "dipy.io.bvectxt.orientation_from_string"]], "orientation_to_string() (in module dipy.io.bvectxt)": [[193, "dipy.io.bvectxt.orientation_to_string"]], "origin (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.origin"]], "ornt_mapping() (in module dipy.io.bvectxt)": [[193, "dipy.io.bvectxt.ornt_mapping"]], "peaks_to_niftis() (in module dipy.io.peaks)": [[193, "dipy.io.peaks.peaks_to_niftis"]], "read_bvals_bvecs() (in module dipy.io.gradients)": [[193, "dipy.io.gradients.read_bvals_bvecs"]], "read_bvec_file() (in module dipy.io.bvectxt)": [[193, "dipy.io.bvectxt.read_bvec_file"]], "read_img_arr_or_path() (in module dipy.io.utils)": [[193, "dipy.io.utils.read_img_arr_or_path"]], "read_track() (dipy.io.dpy.dpy method)": [[193, "dipy.io.dpy.Dpy.read_track"]], "read_tracks() (dipy.io.dpy.dpy method)": [[193, "dipy.io.dpy.Dpy.read_tracks"]], "read_tracksi() (dipy.io.dpy.dpy method)": [[193, "dipy.io.dpy.Dpy.read_tracksi"]], "remove_invalid_streamlines() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines"]], "reorient_on_axis() (in module dipy.io.bvectxt)": [[193, "dipy.io.bvectxt.reorient_on_axis"]], "reorient_vectors() (in module dipy.io.bvectxt)": [[193, "dipy.io.bvectxt.reorient_vectors"]], "save_buan_profiles_hdf5() (in module dipy.io.utils)": [[193, "dipy.io.utils.save_buan_profiles_hdf5"]], "save_dpy() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.save_dpy"]], "save_fib() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.save_fib"]], "save_generator() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.save_generator"]], "save_nifti() (in module dipy.io.image)": [[193, "dipy.io.image.save_nifti"]], "save_peaks() (in module dipy.io.peaks)": [[193, "dipy.io.peaks.save_peaks"]], "save_pickle() (in module dipy.io.pickles)": [[193, "dipy.io.pickles.save_pickle"]], "save_polydata() (in module dipy.io.vtk)": [[193, "dipy.io.vtk.save_polydata"]], "save_qa_metric() (in module dipy.io.image)": [[193, "dipy.io.image.save_qa_metric"]], "save_tck() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.save_tck"]], "save_tractogram() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.save_tractogram"]], "save_trk() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.save_trk"]], "save_vtk() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.save_vtk"]], "save_vtk_streamlines() (in module dipy.io.vtk)": [[193, "dipy.io.vtk.save_vtk_streamlines"]], "save_vtp() (in module dipy.io.streamline)": [[193, "dipy.io.streamline.save_vtp"]], "set_sft_logger_level() (in module dipy.io.stateful_tractogram)": [[193, "dipy.io.stateful_tractogram.set_sft_logger_level"]], "space (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.space"]], "space_attributes (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.space_attributes"]], "streamlines (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.streamlines"]], "to_center() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.to_center"]], "to_corner() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.to_corner"]], "to_origin() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.to_origin"]], "to_rasmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm"]], "to_space() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.to_space"]], "to_vox() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.to_vox"]], "to_voxmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm"]], "version() (dipy.io.dpy.dpy method)": [[193, "dipy.io.dpy.Dpy.version"]], "voxel_order (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_order"]], "voxel_sizes (dipy.io.stateful_tractogram.statefultractogram property)": [[193, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes"]], "write_track() (dipy.io.dpy.dpy method)": [[193, "dipy.io.dpy.Dpy.write_track"]], "write_tracks() (dipy.io.dpy.dpy method)": [[193, "dipy.io.dpy.Dpy.write_tracks"]], "block (class in dipy.nn.evac)": [[194, "dipy.nn.evac.Block"]], "channelsum (class in dipy.nn.evac)": [[194, "dipy.nn.evac.ChannelSum"]], "cnn1ddenoiser (class in dipy.nn.cnn_1d_denoising)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser"]], "decoderblock (class in dipy.nn.synb0)": [[194, "dipy.nn.synb0.DecoderBlock"], [194, "id69"]], "evacplus (class in dipy.nn.evac)": [[194, "dipy.nn.evac.EVACPlus"]], "encoderblock (class in dipy.nn.synb0)": [[194, "dipy.nn.synb0.EncoderBlock"], [194, "id0"]], "historesdnn (class in dipy.nn.histo_resdnn)": [[194, "dipy.nn.histo_resdnn.HistoResDNN"]], "multiplelayerpercepton (class in dipy.nn.model)": [[194, "dipy.nn.model.MultipleLayerPercepton"]], "singlelayerperceptron (class in dipy.nn.model)": [[194, "dipy.nn.model.SingleLayerPerceptron"]], "synb0 (class in dipy.nn.synb0)": [[194, "dipy.nn.synb0.Synb0"]], "unet3d() (in module dipy.nn.synb0)": [[194, "dipy.nn.synb0.UNet3D"], [194, "id90"]], "__init__() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.__init__"]], "__init__() (dipy.nn.evac.block method)": [[194, "dipy.nn.evac.Block.__init__"]], "__init__() (dipy.nn.evac.channelsum method)": [[194, "dipy.nn.evac.ChannelSum.__init__"]], "__init__() (dipy.nn.evac.evacplus method)": [[194, "dipy.nn.evac.EVACPlus.__init__"]], "__init__() (dipy.nn.histo_resdnn.historesdnn method)": [[194, "dipy.nn.histo_resdnn.HistoResDNN.__init__"]], "__init__() (dipy.nn.model.multiplelayerpercepton method)": [[194, "dipy.nn.model.MultipleLayerPercepton.__init__"]], "__init__() (dipy.nn.model.singlelayerperceptron method)": [[194, "dipy.nn.model.SingleLayerPerceptron.__init__"]], "__init__() (dipy.nn.synb0.decoderblock method)": [[194, "dipy.nn.synb0.DecoderBlock.__init__"], [194, "id70"]], "__init__() (dipy.nn.synb0.encoderblock method)": [[194, "dipy.nn.synb0.EncoderBlock.__init__"], [194, "id62"]], "__init__() (dipy.nn.synb0.synb0 method)": [[194, "dipy.nn.synb0.Synb0.__init__"]], "call() (dipy.nn.evac.block method)": [[194, "dipy.nn.evac.Block.call"]], "call() (dipy.nn.evac.channelsum method)": [[194, "dipy.nn.evac.ChannelSum.call"]], "call() (dipy.nn.synb0.decoderblock method)": [[194, "dipy.nn.synb0.DecoderBlock.call"], [194, "id71"]], "call() (dipy.nn.synb0.encoderblock method)": [[194, "dipy.nn.synb0.EncoderBlock.call"], [194, "id63"]], "compile() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.compile"]], "dipy.nn": [[194, "module-dipy.nn"]], "dipy.nn.cnn_1d_denoising": [[194, "module-dipy.nn.cnn_1d_denoising"]], "dipy.nn.evac": [[194, "module-dipy.nn.evac"]], "dipy.nn.histo_resdnn": [[194, "module-dipy.nn.histo_resdnn"]], "dipy.nn.model": [[194, "module-dipy.nn.model"]], "dipy.nn.synb0": [[194, "module-dipy.nn.synb0"]], "dipy.nn.utils": [[194, "module-dipy.nn.utils"]], "evaluate() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.evaluate"]], "evaluate() (dipy.nn.model.multiplelayerpercepton method)": [[194, "dipy.nn.model.MultipleLayerPercepton.evaluate"]], "evaluate() (dipy.nn.model.singlelayerperceptron method)": [[194, "dipy.nn.model.SingleLayerPerceptron.evaluate"]], "fetch_default_weights() (dipy.nn.evac.evacplus method)": [[194, "dipy.nn.evac.EVACPlus.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[194, "dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.synb0.synb0 method)": [[194, "dipy.nn.synb0.Synb0.fetch_default_weights"]], "fit() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.fit"]], "fit() (dipy.nn.model.multiplelayerpercepton method)": [[194, "dipy.nn.model.MultipleLayerPercepton.fit"]], "fit() (dipy.nn.model.singlelayerperceptron method)": [[194, "dipy.nn.model.SingleLayerPerceptron.fit"]], "init_model() (in module dipy.nn.evac)": [[194, "dipy.nn.evac.init_model"]], "load_model_weights() (dipy.nn.evac.evacplus method)": [[194, "dipy.nn.evac.EVACPlus.load_model_weights"]], "load_model_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[194, "dipy.nn.histo_resdnn.HistoResDNN.load_model_weights"]], "load_model_weights() (dipy.nn.synb0.synb0 method)": [[194, "dipy.nn.synb0.Synb0.load_model_weights"]], "load_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.load_weights"]], "logger() (in module dipy.nn.evac)": [[194, "dipy.nn.evac.logger"]], "logger() (in module dipy.nn.histo_resdnn)": [[194, "dipy.nn.histo_resdnn.logger"]], "logger() (in module dipy.nn.synb0)": [[194, "dipy.nn.synb0.logger"]], "normalize() (in module dipy.nn.synb0)": [[194, "dipy.nn.synb0.normalize"]], "normalize() (in module dipy.nn.utils)": [[194, "dipy.nn.utils.normalize"]], "predict() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.predict"]], "predict() (dipy.nn.evac.evacplus method)": [[194, "dipy.nn.evac.EVACPlus.predict"]], "predict() (dipy.nn.histo_resdnn.historesdnn method)": [[194, "dipy.nn.histo_resdnn.HistoResDNN.predict"]], "predict() (dipy.nn.model.multiplelayerpercepton method)": [[194, "dipy.nn.model.MultipleLayerPercepton.predict"]], "predict() (dipy.nn.model.singlelayerperceptron method)": [[194, "dipy.nn.model.SingleLayerPerceptron.predict"]], "predict() (dipy.nn.synb0.synb0 method)": [[194, "dipy.nn.synb0.Synb0.predict"]], "prepare_img() (in module dipy.nn.evac)": [[194, "dipy.nn.evac.prepare_img"]], "recover_img() (in module dipy.nn.utils)": [[194, "dipy.nn.utils.recover_img"]], "save_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.save_weights"]], "set_logger_level() (in module dipy.nn.utils)": [[194, "dipy.nn.utils.set_logger_level"]], "summary() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.summary"]], "summary() (dipy.nn.model.multiplelayerpercepton method)": [[194, "dipy.nn.model.MultipleLayerPercepton.summary"]], "summary() (dipy.nn.model.singlelayerperceptron method)": [[194, "dipy.nn.model.SingleLayerPerceptron.summary"]], "train_test_split() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[194, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.train_test_split"]], "transform_img() (in module dipy.nn.utils)": [[194, "dipy.nn.utils.transform_img"]], "unnormalize() (in module dipy.nn.synb0)": [[194, "dipy.nn.synb0.unnormalize"]], "unnormalize() (in module dipy.nn.utils)": [[194, "dipy.nn.utils.unnormalize"]], "axsymshresponse (class in dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.AxSymShResponse"]], "cache (class in dipy.reconst.cache)": [[195, "dipy.reconst.cache.Cache"]], "callablearray (class in dipy.reconst.multi_voxel)": [[195, "dipy.reconst.multi_voxel.CallableArray"]], "constrainedsdtmodel (class in dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.ConstrainedSDTModel"]], "constrainedsphericaldeconvmodel (class in dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"]], "csaodfmodel (class in dipy.reconst.shm)": [[195, "dipy.reconst.shm.CsaOdfModel"]], "d (dipy.reconst.ivim.ivimfit property)": [[195, "dipy.reconst.ivim.IvimFit.D"]], "d_star (dipy.reconst.ivim.ivimfit property)": [[195, "dipy.reconst.ivim.IvimFit.D_star"]], "diffusionkurtosisfit (class in dipy.reconst.dki)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit"]], "diffusionkurtosismodel (class in dipy.reconst.dki)": [[195, "dipy.reconst.dki.DiffusionKurtosisModel"]], "diffusionspectrumdeconvfit (class in dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit"]], "diffusionspectrumdeconvmodel (class in dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel"]], "diffusionspectrumfit (class in dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.DiffusionSpectrumFit"]], "diffusionspectrummodel (class in dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.DiffusionSpectrumModel"]], "exponentialisotropicfit (class in dipy.reconst.sfm)": [[195, "dipy.reconst.sfm.ExponentialIsotropicFit"]], "exponentialisotropicmodel (class in dipy.reconst.sfm)": [[195, "dipy.reconst.sfm.ExponentialIsotropicModel"]], "forecastfit (class in dipy.reconst.forecast)": [[195, "dipy.reconst.forecast.ForecastFit"]], "forecastmodel (class in dipy.reconst.forecast)": [[195, "dipy.reconst.forecast.ForecastModel"]], "freewatertensorfit (class in dipy.reconst.fwdti)": [[195, "dipy.reconst.fwdti.FreeWaterTensorFit"]], "freewatertensormodel (class in dipy.reconst.fwdti)": [[195, "dipy.reconst.fwdti.FreeWaterTensorModel"]], "gcv_cost_function() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.GCV_cost_function"]], "generalizedqsamplingfit (class in dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.GeneralizedQSamplingFit"]], "generalizedqsamplingmodel (class in dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.GeneralizedQSamplingModel"]], "h() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.H"]], "isotropicfit (class in dipy.reconst.sfm)": [[195, "dipy.reconst.sfm.IsotropicFit"]], "isotropicmodel (class in dipy.reconst.sfm)": [[195, "dipy.reconst.sfm.IsotropicModel"]], "ivimfit (class in dipy.reconst.ivim)": [[195, "dipy.reconst.ivim.IvimFit"]], "ivimmodeltrr (class in dipy.reconst.ivim)": [[195, "dipy.reconst.ivim.IvimModelTRR"]], "ivimmodelvp (class in dipy.reconst.ivim)": [[195, "dipy.reconst.ivim.IvimModelVP"]], "kurtosismicrostructuralfit (class in dipy.reconst.dki_micro)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit"]], "kurtosismicrostructuremodel (class in dipy.reconst.dki_micro)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructureModel"]], "lr_deconv() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.LR_deconv"]], "msdeconvfit (class in dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.MSDeconvFit"]], "mapmrifit (class in dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.MapmriFit"]], "mapmrimodel (class in dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.MapmriModel"]], "meandiffusionkurtosisfit (class in dipy.reconst.msdki)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisFit"]], "meandiffusionkurtosismodel (class in dipy.reconst.msdki)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisModel"]], "multishelldeconvmodel (class in dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.MultiShellDeconvModel"]], "multishellresponse (class in dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.MultiShellResponse"]], "multivoxelfit (class in dipy.reconst.multi_voxel)": [[195, "dipy.reconst.multi_voxel.MultiVoxelFit"]], "odffit (class in dipy.reconst.odf)": [[195, "dipy.reconst.odf.OdfFit"]], "odfmodel (class in dipy.reconst.odf)": [[195, "dipy.reconst.odf.OdfModel"]], "opdtmodel (class in dipy.reconst.shm)": [[195, "dipy.reconst.shm.OpdtModel"]], "qballbasemodel (class in dipy.reconst.shm)": [[195, "dipy.reconst.shm.QballBaseModel"]], "qballmodel (class in dipy.reconst.shm)": [[195, "dipy.reconst.shm.QballModel"]], "qpfitter (class in dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.QpFitter"]], "qtdmrifit (class in dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.QtdmriFit"]], "qtdmrimodel (class in dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.QtdmriModel"]], "qtifit (class in dipy.reconst.qti)": [[195, "dipy.reconst.qti.QtiFit"]], "qtimodel (class in dipy.reconst.qti)": [[195, "dipy.reconst.qti.QtiModel"]], "reconstfit (class in dipy.reconst.base)": [[195, "dipy.reconst.base.ReconstFit"]], "reconstmodel (class in dipy.reconst.base)": [[195, "dipy.reconst.base.ReconstModel"]], "residualbootstrapwrapper (class in dipy.reconst.shm)": [[195, "dipy.reconst.shm.ResidualBootstrapWrapper"]], "rumbafit (class in dipy.reconst.rumba)": [[195, "dipy.reconst.rumba.RumbaFit"]], "rumbasdmodel (class in dipy.reconst.rumba)": [[195, "dipy.reconst.rumba.RumbaSDModel"]], "s0_hat (dipy.reconst.dti.tensorfit property)": [[195, "dipy.reconst.dti.TensorFit.S0_hat"]], "s0_hat (dipy.reconst.msdki.meandiffusionkurtosisfit property)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.S0_hat"]], "s0_hat() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.S0_hat"]], "s0_predicted (dipy.reconst.ivim.ivimfit property)": [[195, "dipy.reconst.ivim.IvimFit.S0_predicted"]], "shorefit (class in dipy.reconst.shore)": [[195, "dipy.reconst.shore.ShoreFit"]], "shoremodel (class in dipy.reconst.shore)": [[195, "dipy.reconst.shore.ShoreModel"]], "sparsefasciclefit (class in dipy.reconst.sfm)": [[195, "dipy.reconst.sfm.SparseFascicleFit"]], "sparsefasciclemodel (class in dipy.reconst.sfm)": [[195, "dipy.reconst.sfm.SparseFascicleModel"]], "sphharmfit (class in dipy.reconst.shm)": [[195, "dipy.reconst.shm.SphHarmFit"]], "sphharmmodel (class in dipy.reconst.shm)": [[195, "dipy.reconst.shm.SphHarmModel"]], "tensorfit (class in dipy.reconst.dti)": [[195, "dipy.reconst.dti.TensorFit"]], "tensormodel (class in dipy.reconst.dti)": [[195, "dipy.reconst.dti.TensorModel"]], "wcons() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.Wcons"]], "wrotate() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.Wrotate"]], "wrotate_element() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.Wrotate_element"]], "__init__() (dipy.reconst.base.reconstfit method)": [[195, "dipy.reconst.base.ReconstFit.__init__"]], "__init__() (dipy.reconst.base.reconstmodel method)": [[195, "dipy.reconst.base.ReconstModel.__init__"]], "__init__() (dipy.reconst.cache.cache method)": [[195, "dipy.reconst.cache.Cache.__init__"]], "__init__() (dipy.reconst.csdeconv.axsymshresponse method)": [[195, "dipy.reconst.csdeconv.AxSymShResponse.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[195, "dipy.reconst.csdeconv.ConstrainedSDTModel.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[195, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosisfit method)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosismodel method)": [[195, "dipy.reconst.dki.DiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumfit method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrummodel method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumModel.__init__"]], "__init__() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.__init__"]], "__init__() (dipy.reconst.dti.tensormodel method)": [[195, "dipy.reconst.dti.TensorModel.__init__"]], "__init__() (dipy.reconst.forecast.forecastfit method)": [[195, "dipy.reconst.forecast.ForecastFit.__init__"]], "__init__() (dipy.reconst.forecast.forecastmodel method)": [[195, "dipy.reconst.forecast.ForecastModel.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensorfit method)": [[195, "dipy.reconst.fwdti.FreeWaterTensorFit.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensormodel method)": [[195, "dipy.reconst.fwdti.FreeWaterTensorModel.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[195, "dipy.reconst.gqi.GeneralizedQSamplingFit.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[195, "dipy.reconst.gqi.GeneralizedQSamplingModel.__init__"]], "__init__() (dipy.reconst.ivim.ivimfit method)": [[195, "dipy.reconst.ivim.IvimFit.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodeltrr method)": [[195, "dipy.reconst.ivim.IvimModelTRR.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodelvp method)": [[195, "dipy.reconst.ivim.IvimModelVP.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrimodel method)": [[195, "dipy.reconst.mapmri.MapmriModel.__init__"]], "__init__() (dipy.reconst.mcsd.msdeconvfit method)": [[195, "dipy.reconst.mcsd.MSDeconvFit.__init__"]], "__init__() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[195, "dipy.reconst.mcsd.MultiShellDeconvModel.__init__"]], "__init__() (dipy.reconst.mcsd.multishellresponse method)": [[195, "dipy.reconst.mcsd.MultiShellResponse.__init__"]], "__init__() (dipy.reconst.mcsd.qpfitter method)": [[195, "dipy.reconst.mcsd.QpFitter.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.multi_voxel.callablearray method)": [[195, "dipy.reconst.multi_voxel.CallableArray.__init__"]], "__init__() (dipy.reconst.multi_voxel.multivoxelfit method)": [[195, "dipy.reconst.multi_voxel.MultiVoxelFit.__init__"]], "__init__() (dipy.reconst.odf.odffit method)": [[195, "dipy.reconst.odf.OdfFit.__init__"]], "__init__() (dipy.reconst.odf.odfmodel method)": [[195, "dipy.reconst.odf.OdfModel.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrimodel method)": [[195, "dipy.reconst.qtdmri.QtdmriModel.__init__"]], "__init__() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.__init__"]], "__init__() (dipy.reconst.qti.qtimodel method)": [[195, "dipy.reconst.qti.QtiModel.__init__"]], "__init__() (dipy.reconst.rumba.rumbafit method)": [[195, "dipy.reconst.rumba.RumbaFit.__init__"]], "__init__() (dipy.reconst.rumba.rumbasdmodel method)": [[195, "dipy.reconst.rumba.RumbaSDModel.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicfit method)": [[195, "dipy.reconst.sfm.ExponentialIsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[195, "dipy.reconst.sfm.ExponentialIsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.isotropicfit method)": [[195, "dipy.reconst.sfm.IsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.isotropicmodel method)": [[195, "dipy.reconst.sfm.IsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclefit method)": [[195, "dipy.reconst.sfm.SparseFascicleFit.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclemodel method)": [[195, "dipy.reconst.sfm.SparseFascicleModel.__init__"]], "__init__() (dipy.reconst.shm.csaodfmodel method)": [[195, "dipy.reconst.shm.CsaOdfModel.__init__"]], "__init__() (dipy.reconst.shm.opdtmodel method)": [[195, "dipy.reconst.shm.OpdtModel.__init__"]], "__init__() (dipy.reconst.shm.qballbasemodel method)": [[195, "dipy.reconst.shm.QballBaseModel.__init__"]], "__init__() (dipy.reconst.shm.qballmodel method)": [[195, "dipy.reconst.shm.QballModel.__init__"]], "__init__() (dipy.reconst.shm.residualbootstrapwrapper method)": [[195, "dipy.reconst.shm.ResidualBootstrapWrapper.__init__"]], "__init__() (dipy.reconst.shm.sphharmfit method)": [[195, "dipy.reconst.shm.SphHarmFit.__init__"]], "__init__() (dipy.reconst.shm.sphharmmodel method)": [[195, "dipy.reconst.shm.SphHarmModel.__init__"]], "__init__() (dipy.reconst.shore.shorefit method)": [[195, "dipy.reconst.shore.ShoreFit.__init__"]], "__init__() (dipy.reconst.shore.shoremodel method)": [[195, "dipy.reconst.shore.ShoreModel.__init__"]], "_lt_cols() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti._lt_cols"]], "_lt_indices() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti._lt_indices"]], "_lt_rows() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti._lt_rows"]], "ad() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.ad"]], "adc() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.adc"]], "ak() (dipy.reconst.dki.diffusionkurtosisfit method)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.ak"]], "akc() (dipy.reconst.dki.diffusionkurtosisfit method)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.akc"]], "all_shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[195, "dipy.reconst.mcsd.MSDeconvFit.all_shm_coeff"]], "angular_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.angular_basis_EAP_opt"]], "angular_basis_opt() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.angular_basis_opt"]], "anisotropic_power() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.anisotropic_power"]], "apparent_diffusion_coef() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.apparent_diffusion_coef"]], "apparent_kurtosis_coef() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.apparent_kurtosis_coef"]], "auto_response() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.auto_response"]], "auto_response_msmt() (in module dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.auto_response_msmt"]], "auto_response_ssst() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.auto_response_ssst"]], "awf (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf"]], "awf_from_msk() (in module dipy.reconst.msdki)": [[195, "dipy.reconst.msdki.awf_from_msk"]], "axial_diffusivity() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.axial_diffusivity"]], "axial_kurtosis() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.axial_kurtosis"]], "axonal_diffusivity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity"]], "axonal_water_fraction() (in module dipy.reconst.dki_micro)": [[195, "dipy.reconst.dki_micro.axonal_water_fraction"]], "b_mat() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.b_mat"]], "b_mat_isotropic() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.b_mat_isotropic"]], "basis() (dipy.reconst.csdeconv.axsymshresponse method)": [[195, "dipy.reconst.csdeconv.AxSymShResponse.basis"]], "bench_bounding_box() (in module dipy.reconst.benchmarks.bench_bounding_box)": [[195, "dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box"]], "bench_csdeconv() (in module dipy.reconst.benchmarks.bench_csd)": [[195, "dipy.reconst.benchmarks.bench_csd.bench_csdeconv"]], "bench_local_maxima() (in module dipy.reconst.benchmarks.bench_peaks)": [[195, "dipy.reconst.benchmarks.bench_peaks.bench_local_maxima"]], "bench_quick_squash() (in module dipy.reconst.benchmarks.bench_squash)": [[195, "dipy.reconst.benchmarks.bench_squash.bench_quick_squash"]], "bench_vec_val_vect() (in module dipy.reconst.benchmarks.bench_vec_val_sum)": [[195, "dipy.reconst.benchmarks.bench_vec_val_sum.bench_vec_val_vect"]], "binomialfloat() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.binomialfloat"]], "bootstrap_data_array() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.bootstrap_data_array"]], "bootstrap_data_voxel() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.bootstrap_data_voxel"]], "c_c() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.c_c"]], "c_m() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.c_m"]], "c_md() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.c_md"]], "c_mu() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.c_mu"]], "cache_clear() (dipy.reconst.cache.cache method)": [[195, "dipy.reconst.cache.Cache.cache_clear"]], "cache_get() (dipy.reconst.cache.cache method)": [[195, "dipy.reconst.cache.Cache.cache_get"]], "cache_set() (dipy.reconst.cache.cache method)": [[195, "dipy.reconst.cache.Cache.cache_set"]], "calculate_max_order() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.calculate_max_order"]], "carlson_rd() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.carlson_rd"]], "carlson_rf() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.carlson_rf"]], "cholesky_to_lower_triangular() (in module dipy.reconst.fwdti)": [[195, "dipy.reconst.fwdti.cholesky_to_lower_triangular"]], "cls_fit_dki() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.cls_fit_dki"]], "coeff_of_determination() (in module dipy.reconst.cross_validation)": [[195, "dipy.reconst.cross_validation.coeff_of_determination"]], "color_fa() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.color_fa"]], "color_fa() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.color_fa"]], "combined_odf_iso() (dipy.reconst.rumba.rumbafit method)": [[195, "dipy.reconst.rumba.RumbaFit.combined_odf_iso"]], "convert_sh_from_legacy() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.convert_sh_from_legacy"]], "convert_sh_to_full_basis() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.convert_sh_to_full_basis"]], "convert_sh_to_legacy() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.convert_sh_to_legacy"]], "create_qspace() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.create_qspace"]], "create_qtable() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.create_qtable"]], "create_rspace() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.create_rspace"]], "create_rspace() (in module dipy.reconst.shore)": [[195, "dipy.reconst.shore.create_rspace"]], "create_rt_space_grid() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.create_rt_space_grid"]], "csdeconv() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.csdeconv"]], "cvx_fit() (dipy.reconst.ivim.ivimmodelvp method)": [[195, "dipy.reconst.ivim.IvimModelVP.cvx_fit"]], "cvxpy_1x21_to_6x6() (in module dipy.reconst.qti)": [[195, "dipy.reconst.qti.cvxpy_1x21_to_6x6"]], "cvxpy_1x6_to_3x3() (in module dipy.reconst.qti)": [[195, "dipy.reconst.qti.cvxpy_1x6_to_3x3"]], "d_sq() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.d_sq"]], "decompose_tensor() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.decompose_tensor"]], "delta() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.delta"]], "design_matrix() (dipy.reconst.sfm.sparsefasciclemodel method)": [[195, "dipy.reconst.sfm.SparseFascicleModel.design_matrix"]], "design_matrix() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.design_matrix"]], "design_matrix() (in module dipy.reconst.msdki)": [[195, "dipy.reconst.msdki.design_matrix"]], "design_matrix() (in module dipy.reconst.qti)": [[195, "dipy.reconst.qti.design_matrix"]], "design_matrix_spatial() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.design_matrix_spatial"]], "determinant() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.determinant"]], "deviatoric() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.deviatoric"]], "diffusion_components() (in module dipy.reconst.dki_micro)": [[195, "dipy.reconst.dki_micro.diffusion_components"]], "dipy.reconst": [[195, "module-dipy.reconst"]], "dipy.reconst.base": [[195, "module-dipy.reconst.base"]], "dipy.reconst.benchmarks": [[195, "module-dipy.reconst.benchmarks"]], "dipy.reconst.benchmarks.bench_bounding_box": [[195, "module-dipy.reconst.benchmarks.bench_bounding_box"]], "dipy.reconst.benchmarks.bench_csd": [[195, "module-dipy.reconst.benchmarks.bench_csd"]], "dipy.reconst.benchmarks.bench_peaks": [[195, "module-dipy.reconst.benchmarks.bench_peaks"]], "dipy.reconst.benchmarks.bench_squash": [[195, "module-dipy.reconst.benchmarks.bench_squash"]], "dipy.reconst.benchmarks.bench_vec_val_sum": [[195, "module-dipy.reconst.benchmarks.bench_vec_val_sum"]], "dipy.reconst.cache": [[195, "module-dipy.reconst.cache"]], "dipy.reconst.cross_validation": [[195, "module-dipy.reconst.cross_validation"]], "dipy.reconst.csdeconv": [[195, "module-dipy.reconst.csdeconv"]], "dipy.reconst.dki": [[195, "module-dipy.reconst.dki"]], "dipy.reconst.dki_micro": [[195, "module-dipy.reconst.dki_micro"]], "dipy.reconst.dsi": [[195, "module-dipy.reconst.dsi"]], "dipy.reconst.dti": [[195, "module-dipy.reconst.dti"]], "dipy.reconst.forecast": [[195, "module-dipy.reconst.forecast"]], "dipy.reconst.fwdti": [[195, "module-dipy.reconst.fwdti"]], "dipy.reconst.gqi": [[195, "module-dipy.reconst.gqi"]], "dipy.reconst.ivim": [[195, "module-dipy.reconst.ivim"]], "dipy.reconst.mapmri": [[195, "module-dipy.reconst.mapmri"]], "dipy.reconst.mcsd": [[195, "module-dipy.reconst.mcsd"]], "dipy.reconst.msdki": [[195, "module-dipy.reconst.msdki"]], "dipy.reconst.multi_voxel": [[195, "module-dipy.reconst.multi_voxel"]], "dipy.reconst.odf": [[195, "module-dipy.reconst.odf"]], "dipy.reconst.qtdmri": [[195, "module-dipy.reconst.qtdmri"]], "dipy.reconst.qti": [[195, "module-dipy.reconst.qti"]], "dipy.reconst.rumba": [[195, "module-dipy.reconst.rumba"]], "dipy.reconst.sfm": [[195, "module-dipy.reconst.sfm"]], "dipy.reconst.shm": [[195, "module-dipy.reconst.shm"]], "dipy.reconst.shore": [[195, "module-dipy.reconst.shore"]], "dipy.reconst.utils": [[195, "module-dipy.reconst.utils"]], "directional_diffusion() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.directional_diffusion"]], "directional_diffusion_variance() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.directional_diffusion_variance"]], "directional_kurtosis() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.directional_kurtosis"]], "directions (dipy.reconst.dti.tensorfit property)": [[195, "dipy.reconst.dti.TensorFit.directions"]], "dki_design_matrix() (in module dipy.reconst.utils)": [[195, "dipy.reconst.utils.dki_design_matrix"]], "dki_prediction() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.dki_prediction"]], "dkimicro_prediction() (in module dipy.reconst.dki_micro)": [[195, "dipy.reconst.dki_micro.dkimicro_prediction"]], "dpar (dipy.reconst.forecast.forecastfit property)": [[195, "dipy.reconst.forecast.ForecastFit.dpar"]], "dperp (dipy.reconst.forecast.forecastfit property)": [[195, "dipy.reconst.forecast.ForecastFit.dperp"]], "dtd_covariance() (in module dipy.reconst.qti)": [[195, "dipy.reconst.qti.dtd_covariance"]], "eig_from_lo_tri() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.eig_from_lo_tri"]], "elastic_crossvalidation() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.elastic_crossvalidation"]], "equatorial_maximum() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.equatorial_maximum"]], "equatorial_zone_vertices() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.equatorial_zone_vertices"]], "estimate_f_d_star() (dipy.reconst.ivim.ivimmodeltrr method)": [[195, "dipy.reconst.ivim.IvimModelTRR.estimate_f_D_star"]], "estimate_linear_fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[195, "dipy.reconst.ivim.IvimModelTRR.estimate_linear_fit"]], "estimate_response() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.estimate_response"]], "evals (dipy.reconst.dti.tensorfit property)": [[195, "dipy.reconst.dti.TensorFit.evals"]], "evecs (dipy.reconst.dti.tensorfit property)": [[195, "dipy.reconst.dti.TensorFit.evecs"]], "f (dipy.reconst.fwdti.freewatertensorfit property)": [[195, "dipy.reconst.fwdti.FreeWaterTensorFit.f"]], "f_d_star_error() (in module dipy.reconst.ivim)": [[195, "dipy.reconst.ivim.f_D_star_error"]], "f_d_star_prediction() (in module dipy.reconst.ivim)": [[195, "dipy.reconst.ivim.f_D_star_prediction"]], "f_csf() (dipy.reconst.rumba.rumbafit method)": [[195, "dipy.reconst.rumba.RumbaFit.f_csf"]], "f_gm() (dipy.reconst.rumba.rumbafit method)": [[195, "dipy.reconst.rumba.RumbaFit.f_gm"]], "f_iso() (dipy.reconst.rumba.rumbafit method)": [[195, "dipy.reconst.rumba.RumbaFit.f_iso"]], "f_wm() (dipy.reconst.rumba.rumbafit method)": [[195, "dipy.reconst.rumba.RumbaFit.f_wm"]], "fa() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.fa"]], "fa() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.fa"]], "fa_trace_to_lambdas() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.fa_trace_to_lambdas"]], "find_signal_means() (in module dipy.reconst.forecast)": [[195, "dipy.reconst.forecast.find_signal_means"]], "fit() (dipy.reconst.base.reconstmodel method)": [[195, "dipy.reconst.base.ReconstModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[195, "dipy.reconst.csdeconv.ConstrainedSDTModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[195, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit"]], "fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[195, "dipy.reconst.dki.DiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrummodel method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumModel.fit"]], "fit() (dipy.reconst.dti.tensormodel method)": [[195, "dipy.reconst.dti.TensorModel.fit"]], "fit() (dipy.reconst.forecast.forecastmodel method)": [[195, "dipy.reconst.forecast.ForecastModel.fit"]], "fit() (dipy.reconst.fwdti.freewatertensormodel method)": [[195, "dipy.reconst.fwdti.FreeWaterTensorModel.fit"]], "fit() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[195, "dipy.reconst.gqi.GeneralizedQSamplingModel.fit"]], "fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[195, "dipy.reconst.ivim.IvimModelTRR.fit"]], "fit() (dipy.reconst.ivim.ivimmodelvp method)": [[195, "dipy.reconst.ivim.IvimModelVP.fit"]], "fit() (dipy.reconst.mapmri.mapmrimodel method)": [[195, "dipy.reconst.mapmri.MapmriModel.fit"]], "fit() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[195, "dipy.reconst.mcsd.MultiShellDeconvModel.fit"]], "fit() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.odf.odfmodel method)": [[195, "dipy.reconst.odf.OdfModel.fit"]], "fit() (dipy.reconst.qtdmri.qtdmrimodel method)": [[195, "dipy.reconst.qtdmri.QtdmriModel.fit"]], "fit() (dipy.reconst.qti.qtimodel method)": [[195, "dipy.reconst.qti.QtiModel.fit"]], "fit() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[195, "dipy.reconst.sfm.ExponentialIsotropicModel.fit"]], "fit() (dipy.reconst.sfm.isotropicmodel method)": [[195, "dipy.reconst.sfm.IsotropicModel.fit"]], "fit() (dipy.reconst.sfm.sparsefasciclemodel method)": [[195, "dipy.reconst.sfm.SparseFascicleModel.fit"]], "fit() (dipy.reconst.shm.qballbasemodel method)": [[195, "dipy.reconst.shm.QballBaseModel.fit"]], "fit() (dipy.reconst.shore.shoremodel method)": [[195, "dipy.reconst.shore.ShoreModel.fit"]], "fitted_signal() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.shore.shorefit method)": [[195, "dipy.reconst.shore.ShoreFit.fitted_signal"]], "forecast_error_func() (in module dipy.reconst.forecast)": [[195, "dipy.reconst.forecast.forecast_error_func"]], "forecast_matrix() (in module dipy.reconst.forecast)": [[195, "dipy.reconst.forecast.forecast_matrix"]], "forward_sdeconv_mat() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.forward_sdeconv_mat"]], "forward_sdt_deconv_mat() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.forward_sdt_deconv_mat"]], "fractional_anisotropy() (dipy.reconst.forecast.forecastfit method)": [[195, "dipy.reconst.forecast.ForecastFit.fractional_anisotropy"]], "fractional_anisotropy() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.fractional_anisotropy"]], "from_21x1_to_6x6() (in module dipy.reconst.qti)": [[195, "dipy.reconst.qti.from_21x1_to_6x6"]], "from_3x3_to_6x1() (in module dipy.reconst.qti)": [[195, "dipy.reconst.qti.from_3x3_to_6x1"]], "from_6x1_to_3x3() (in module dipy.reconst.qti)": [[195, "dipy.reconst.qti.from_6x1_to_3x3"]], "from_6x6_to_21x1() (in module dipy.reconst.qti)": [[195, "dipy.reconst.qti.from_6x6_to_21x1"]], "from_lower_triangular() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.from_lower_triangular"]], "fwdti_prediction() (in module dipy.reconst.fwdti)": [[195, "dipy.reconst.fwdti.fwdti_prediction"]], "ga() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.ga"]], "gcv_cost_function() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.gcv_cost_function"]], "gen_psf() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.gen_PSF"]], "gen_dirac() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.gen_dirac"]], "generalized_crossvalidation() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.generalized_crossvalidation"]], "generalized_crossvalidation() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.generalized_crossvalidation"]], "generalized_crossvalidation_array() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.generalized_crossvalidation_array"]], "generate_kernel() (in module dipy.reconst.rumba)": [[195, "dipy.reconst.rumba.generate_kernel"]], "geodesic_anisotropy() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.geodesic_anisotropy"]], "gfa() (dipy.reconst.shm.sphharmfit method)": [[195, "dipy.reconst.shm.SphHarmFit.gfa"]], "gfa() (in module dipy.reconst.odf)": [[195, "dipy.reconst.odf.gfa"]], "half_to_full_qspace() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.half_to_full_qspace"]], "hanning_filter() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.hanning_filter"]], "hat() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.hat"]], "hindered_ad (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad"]], "hindered_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals"]], "hindered_rd (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd"]], "iso (dipy.reconst.mcsd.multishellresponse property)": [[195, "dipy.reconst.mcsd.MultiShellResponse.iso"]], "isotropic() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.isotropic"]], "isotropic_scale_factor() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.isotropic_scale_factor"]], "iter_fit_tensor() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.iter_fit_tensor"]], "ivim_mix_cost_one() (dipy.reconst.ivim.ivimmodelvp method)": [[195, "dipy.reconst.ivim.IvimModelVP.ivim_mix_cost_one"]], "ivim_model_selector() (in module dipy.reconst.ivim)": [[195, "dipy.reconst.ivim.ivim_model_selector"]], "ivim_prediction() (in module dipy.reconst.ivim)": [[195, "dipy.reconst.ivim.ivim_prediction"]], "k_bulk() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.k_bulk"]], "k_mu() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.k_mu"]], "k_shear() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.k_shear"]], "kfa (dipy.reconst.dki.diffusionkurtosisfit property)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.kfa"]], "kfold_xval() (in module dipy.reconst.cross_validation)": [[195, "dipy.reconst.cross_validation.kfold_xval"]], "kmax() (dipy.reconst.dki.diffusionkurtosisfit method)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.kmax"]], "kt (dipy.reconst.dki.diffusionkurtosisfit property)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.kt"]], "kurtosis_fractional_anisotropy() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.kurtosis_fractional_anisotropy"]], "kurtosis_maximum() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.kurtosis_maximum"]], "l1_crossvalidation() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.l1_crossvalidation"]], "l_shore() (in module dipy.reconst.shore)": [[195, "dipy.reconst.shore.l_shore"]], "lazy_index() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.lazy_index"]], "lb_forecast() (in module dipy.reconst.forecast)": [[195, "dipy.reconst.forecast.lb_forecast"]], "lcr_matrix() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.lcr_matrix"]], "linearity() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.linearity"]], "linearity() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.linearity"]], "logger() (in module dipy.reconst.rumba)": [[195, "dipy.reconst.rumba.logger"]], "lower_triangular() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.lower_triangular"]], "lower_triangular() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.lower_triangular"]], "lower_triangular_to_cholesky() (in module dipy.reconst.fwdti)": [[195, "dipy.reconst.fwdti.lower_triangular_to_cholesky"]], "ls_fit_dki() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.ls_fit_dki"]], "map_laplace_s() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.map_laplace_s"]], "map_laplace_t() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.map_laplace_t"]], "map_laplace_u() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.map_laplace_u"]], "mapmri_r (dipy.reconst.mapmri.mapmrifit property)": [[195, "dipy.reconst.mapmri.MapmriFit.mapmri_R"]], "mapmri_stu_reg_matrices() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_STU_reg_matrices"]], "mapmri_coeff (dipy.reconst.mapmri.mapmrifit property)": [[195, "dipy.reconst.mapmri.MapmriFit.mapmri_coeff"]], "mapmri_index_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_index_matrix"]], "mapmri_isotropic_k_mu_dependent() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent"]], "mapmri_isotropic_k_mu_independent() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent"]], "mapmri_isotropic_m_mu_dependent() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent"]], "mapmri_isotropic_m_mu_independent() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent"]], "mapmri_isotropic_index_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_index_matrix"]], "mapmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"]], "mapmri_isotropic_odf_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_odf_matrix"]], "mapmri_isotropic_odf_sh_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix"]], "mapmri_isotropic_phi_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_phi_matrix"]], "mapmri_isotropic_psi_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_psi_matrix"]], "mapmri_isotropic_radial_pdf_basis() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis"]], "mapmri_isotropic_radial_signal_basis() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis"]], "mapmri_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix"]], "mapmri_mu (dipy.reconst.mapmri.mapmrifit property)": [[195, "dipy.reconst.mapmri.MapmriFit.mapmri_mu"]], "mapmri_odf_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_odf_matrix"]], "mapmri_phi_1d() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_phi_1d"]], "mapmri_phi_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_phi_matrix"]], "mapmri_psi_1d() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_psi_1d"]], "mapmri_psi_matrix() (in module dipy.reconst.mapmri)": [[195, "dipy.reconst.mapmri.mapmri_psi_matrix"]], "mask_for_response_msmt() (in module dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.mask_for_response_msmt"]], "mask_for_response_ssst() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.mask_for_response_ssst"]], "max (dipy.reconst.shm.csaodfmodel attribute)": [[195, "dipy.reconst.shm.CsaOdfModel.max"]], "mbessel_ratio() (in module dipy.reconst.rumba)": [[195, "dipy.reconst.rumba.mbessel_ratio"]], "md() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.md"]], "md() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.md"]], "mean_d_sq() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.mean_d_sq"]], "mean_diffusivity() (dipy.reconst.forecast.forecastfit method)": [[195, "dipy.reconst.forecast.ForecastFit.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.mean_diffusivity"]], "mean_kurtosis() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.mean_kurtosis"]], "mean_kurtosis_tensor() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.mean_kurtosis_tensor"]], "mean_signal_bvalue() (in module dipy.reconst.msdki)": [[195, "dipy.reconst.msdki.mean_signal_bvalue"]], "min (dipy.reconst.shm.csaodfmodel attribute)": [[195, "dipy.reconst.shm.CsaOdfModel.min"]], "minmax_normalize() (in module dipy.reconst.odf)": [[195, "dipy.reconst.odf.minmax_normalize"]], "mk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.mk"]], "mk() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.mk"]], "mkt() (dipy.reconst.dki.diffusionkurtosisfit method)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.mkt"]], "mode() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.mode"]], "mode() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.mode"]], "msd() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.msd"]], "msd() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msd"]], "msd() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.msd"]], "msd() (dipy.reconst.shore.shorefit method)": [[195, "dipy.reconst.shore.ShoreFit.msd"]], "msd_discrete() (dipy.reconst.dsi.diffusionspectrumfit method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete"]], "msdki_prediction() (in module dipy.reconst.msdki)": [[195, "dipy.reconst.msdki.msdki_prediction"]], "msk() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msk"]], "msk_from_awf() (in module dipy.reconst.msdki)": [[195, "dipy.reconst.msdki.msk_from_awf"]], "multi_fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[195, "dipy.reconst.dki.DiffusionKurtosisModel.multi_fit"]], "multi_shell_fiber_response() (in module dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.multi_shell_fiber_response"]], "multi_tissue_basis() (in module dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.multi_tissue_basis"]], "multi_voxel_fit() (in module dipy.reconst.multi_voxel)": [[195, "dipy.reconst.multi_voxel.multi_voxel_fit"]], "n_shore() (in module dipy.reconst.shore)": [[195, "dipy.reconst.shore.n_shore"]], "ng() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.ng"]], "ng_parallel() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.ng_parallel"]], "ng_perpendicular() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.ng_perpendicular"]], "nlls_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[195, "dipy.reconst.ivim.IvimModelVP.nlls_cost"]], "nlls_fit_tensor() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.nlls_fit_tensor"]], "nls_fit_tensor() (in module dipy.reconst.fwdti)": [[195, "dipy.reconst.fwdti.nls_fit_tensor"]], "nls_iter() (in module dipy.reconst.fwdti)": [[195, "dipy.reconst.fwdti.nls_iter"]], "norm() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.norm"]], "norm_of_laplacian_signal() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal"]], "norm_of_laplacian_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.norm_of_laplacian_signal"]], "normalize_data() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.normalize_data"]], "normalize_qa() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.normalize_qa"]], "npa() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.npa"]], "num_grad() (in module dipy.reconst.benchmarks.bench_csd)": [[195, "dipy.reconst.benchmarks.bench_csd.num_grad"]], "odf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumFit.odf"]], "odf() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.odf"]], "odf() (dipy.reconst.forecast.forecastfit method)": [[195, "dipy.reconst.forecast.ForecastFit.odf"]], "odf() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[195, "dipy.reconst.gqi.GeneralizedQSamplingFit.odf"]], "odf() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.odf"]], "odf() (dipy.reconst.odf.odffit method)": [[195, "dipy.reconst.odf.OdfFit.odf"]], "odf() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.odf"]], "odf() (dipy.reconst.rumba.rumbafit method)": [[195, "dipy.reconst.rumba.RumbaFit.odf"]], "odf() (dipy.reconst.sfm.sparsefasciclefit method)": [[195, "dipy.reconst.sfm.SparseFascicleFit.odf"]], "odf() (dipy.reconst.shm.sphharmfit method)": [[195, "dipy.reconst.shm.SphHarmFit.odf"]], "odf() (dipy.reconst.shore.shorefit method)": [[195, "dipy.reconst.shore.ShoreFit.odf"]], "odf_deconv() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.odf_deconv"]], "odf_sh() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.odf_sh"]], "odf_sh() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.odf_sh"]], "odf_sh() (dipy.reconst.shore.shorefit method)": [[195, "dipy.reconst.shore.ShoreFit.odf_sh"]], "odf_sh_to_sharp() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.odf_sh_to_sharp"]], "odf_sum() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.odf_sum"]], "old_squash() (in module dipy.reconst.benchmarks.bench_squash)": [[195, "dipy.reconst.benchmarks.bench_squash.old_squash"]], "ols_fit_tensor() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.ols_fit_tensor"]], "on_sphere() (dipy.reconst.csdeconv.axsymshresponse method)": [[195, "dipy.reconst.csdeconv.AxSymShResponse.on_sphere"]], "order_from_ncoef() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.order_from_ncoef"]], "params_to_dki_params() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.params_to_dki_params"]], "part1_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.part1_reg_matrix_tau"]], "part23_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.part23_iso_reg_matrix_q"]], "part23_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.part23_reg_matrix_q"]], "part23_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.part23_reg_matrix_tau"]], "part4_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.part4_iso_reg_matrix_q"]], "part4_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.part4_reg_matrix_q"]], "part4_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.part4_reg_matrix_tau"]], "patch_maximum() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.patch_maximum"]], "patch_sum() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.patch_sum"]], "patch_vertices() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.patch_vertices"]], "pdf() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf"]], "pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumFit.pdf"]], "pdf() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.pdf"]], "pdf() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.pdf"]], "pdf() (dipy.reconst.shore.shorefit method)": [[195, "dipy.reconst.shore.ShoreFit.pdf"]], "pdf_grid() (dipy.reconst.shore.shorefit method)": [[195, "dipy.reconst.shore.ShoreFit.pdf_grid"]], "pdf_interp_coords() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.pdf_interp_coords"]], "pdf_odf() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.pdf_odf"]], "perfusion_fraction (dipy.reconst.ivim.ivimfit property)": [[195, "dipy.reconst.ivim.IvimFit.perfusion_fraction"]], "phi() (dipy.reconst.ivim.ivimmodelvp method)": [[195, "dipy.reconst.ivim.IvimModelVP.phi"]], "planarity() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.planarity"]], "planarity() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.planarity"]], "polar_zone_vertices() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.polar_zone_vertices"]], "predict() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[195, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosisfit method)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosismodel method)": [[195, "dipy.reconst.dki.DiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict"]], "predict() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.predict"]], "predict() (dipy.reconst.dti.tensormodel method)": [[195, "dipy.reconst.dti.TensorModel.predict"]], "predict() (dipy.reconst.forecast.forecastfit method)": [[195, "dipy.reconst.forecast.ForecastFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensorfit method)": [[195, "dipy.reconst.fwdti.FreeWaterTensorFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensormodel method)": [[195, "dipy.reconst.fwdti.FreeWaterTensorModel.predict"]], "predict() (dipy.reconst.ivim.ivimfit method)": [[195, "dipy.reconst.ivim.IvimFit.predict"]], "predict() (dipy.reconst.ivim.ivimmodeltrr method)": [[195, "dipy.reconst.ivim.IvimModelTRR.predict"]], "predict() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.predict"]], "predict() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[195, "dipy.reconst.mcsd.MultiShellDeconvModel.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.multi_voxel.multivoxelfit method)": [[195, "dipy.reconst.multi_voxel.MultiVoxelFit.predict"]], "predict() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.predict"]], "predict() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.predict"]], "predict() (dipy.reconst.qti.qtimodel method)": [[195, "dipy.reconst.qti.QtiModel.predict"]], "predict() (dipy.reconst.rumba.rumbafit method)": [[195, "dipy.reconst.rumba.RumbaFit.predict"]], "predict() (dipy.reconst.sfm.exponentialisotropicfit method)": [[195, "dipy.reconst.sfm.ExponentialIsotropicFit.predict"]], "predict() (dipy.reconst.sfm.isotropicfit method)": [[195, "dipy.reconst.sfm.IsotropicFit.predict"]], "predict() (dipy.reconst.sfm.sparsefasciclefit method)": [[195, "dipy.reconst.sfm.SparseFascicleFit.predict"]], "predict() (dipy.reconst.shm.sphharmfit method)": [[195, "dipy.reconst.shm.SphHarmFit.predict"]], "project_hemisph_bvecs() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.project_hemisph_bvecs"]], "psi_l() (in module dipy.reconst.forecast)": [[195, "dipy.reconst.forecast.psi_l"]], "qiv() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.qiv"]], "qiv() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.qiv"]], "qtdmri_anisotropic_scaling() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_anisotropic_scaling"]], "qtdmri_eap_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_eap_matrix"]], "qtdmri_eap_matrix_() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_eap_matrix_"]], "qtdmri_index_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_index_matrix"]], "qtdmri_isotropic_eap_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix"]], "qtdmri_isotropic_eap_matrix_() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix_"]], "qtdmri_isotropic_index_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_isotropic_index_matrix"]], "qtdmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_isotropic_laplacian_reg_matrix"]], "qtdmri_isotropic_scaling() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_isotropic_scaling"]], "qtdmri_isotropic_signal_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix"]], "qtdmri_isotropic_signal_matrix_() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix_"]], "qtdmri_isotropic_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_isotropic_to_mapmri_matrix"]], "qtdmri_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_laplacian_reg_matrix"]], "qtdmri_mapmri_isotropic_normalization() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_mapmri_isotropic_normalization"]], "qtdmri_mapmri_normalization() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_mapmri_normalization"]], "qtdmri_number_of_coefficients() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_number_of_coefficients"]], "qtdmri_signal_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_signal_matrix"]], "qtdmri_signal_matrix_() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_signal_matrix_"]], "qtdmri_temporal_normalization() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_temporal_normalization"]], "qtdmri_to_mapmri_coef() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.qtdmri_to_mapmri_coef"]], "qtdmri_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.qtdmri_to_mapmri_matrix"]], "qti_signal() (in module dipy.reconst.qti)": [[195, "dipy.reconst.qti.qti_signal"]], "quadratic_form (dipy.reconst.dti.tensorfit property)": [[195, "dipy.reconst.dti.TensorFit.quadratic_form"]], "quantize_evecs() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.quantize_evecs"]], "radial_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.radial_basis_EAP_opt"]], "radial_basis_opt() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.radial_basis_opt"]], "radial_diffusivity() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.radial_diffusivity"]], "radial_kurtosis() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.radial_kurtosis"]], "rd() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.rd"]], "real_sh_descoteaux() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.real_sh_descoteaux"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.real_sh_descoteaux_from_index"]], "real_sh_tournier() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.real_sh_tournier"]], "real_sh_tournier_from_index() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.real_sh_tournier_from_index"]], "real_sph_harm() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.real_sph_harm"]], "real_sym_sh_basis() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.real_sym_sh_basis"]], "real_sym_sh_mrtrix() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.real_sym_sh_mrtrix"]], "recursive_response() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.recursive_response"]], "response_from_mask() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.response_from_mask"]], "response_from_mask_msmt() (in module dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.response_from_mask_msmt"]], "response_from_mask_ssst() (in module dipy.reconst.csdeconv)": [[195, "dipy.reconst.csdeconv.response_from_mask_ssst"]], "restore_fit_tensor() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.restore_fit_tensor"]], "restricted_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals"]], "rho_matrix() (in module dipy.reconst.forecast)": [[195, "dipy.reconst.forecast.rho_matrix"]], "rk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[195, "dipy.reconst.dki.DiffusionKurtosisFit.rk"]], "rtap() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.rtap"]], "rtap() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.rtap"]], "rtop() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.rtop"]], "rtop() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.rtop"]], "rtop_pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf"]], "rtop_pdf() (dipy.reconst.shore.shorefit method)": [[195, "dipy.reconst.shore.ShoreFit.rtop_pdf"]], "rtop_signal() (dipy.reconst.dsi.diffusionspectrumfit method)": [[195, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal"]], "rtop_signal() (dipy.reconst.shore.shorefit method)": [[195, "dipy.reconst.shore.ShoreFit.rtop_signal"]], "rtpp() (dipy.reconst.mapmri.mapmrifit method)": [[195, "dipy.reconst.mapmri.MapmriFit.rtpp"]], "rtpp() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.rtpp"]], "rumba_deconv() (in module dipy.reconst.rumba)": [[195, "dipy.reconst.rumba.rumba_deconv"]], "rumba_deconv_global() (in module dipy.reconst.rumba)": [[195, "dipy.reconst.rumba.rumba_deconv_global"]], "sampling_matrix() (dipy.reconst.shm.sphharmmodel method)": [[195, "dipy.reconst.shm.SphHarmModel.sampling_matrix"]], "sf_to_sh() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.sf_to_sh"]], "sfm_design_matrix() (in module dipy.reconst.sfm)": [[195, "dipy.reconst.sfm.sfm_design_matrix"]], "sh_coeff (dipy.reconst.forecast.forecastfit property)": [[195, "dipy.reconst.forecast.ForecastFit.sh_coeff"]], "sh_to_rh() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.sh_to_rh"]], "sh_to_sf() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.sh_to_sf"]], "sh_to_sf_matrix() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.sh_to_sf_matrix"]], "shape (dipy.reconst.dti.tensorfit property)": [[195, "dipy.reconst.dti.TensorFit.shape"]], "shape (dipy.reconst.ivim.ivimfit property)": [[195, "dipy.reconst.ivim.IvimFit.shape"]], "shape (dipy.reconst.multi_voxel.multivoxelfit property)": [[195, "dipy.reconst.multi_voxel.MultiVoxelFit.shape"]], "shape (dipy.reconst.shm.sphharmfit property)": [[195, "dipy.reconst.shm.SphHarmFit.shape"]], "shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[195, "dipy.reconst.mcsd.MSDeconvFit.shm_coeff"]], "shm_coeff (dipy.reconst.shm.sphharmfit property)": [[195, "dipy.reconst.shm.SphHarmFit.shm_coeff"]], "shore_coeff (dipy.reconst.shore.shorefit property)": [[195, "dipy.reconst.shore.ShoreFit.shore_coeff"]], "shore_indices() (in module dipy.reconst.shore)": [[195, "dipy.reconst.shore.shore_indices"]], "shore_matrix() (in module dipy.reconst.shore)": [[195, "dipy.reconst.shore.shore_matrix"]], "shore_matrix_odf() (in module dipy.reconst.shore)": [[195, "dipy.reconst.shore.shore_matrix_odf"]], "shore_matrix_pdf() (in module dipy.reconst.shore)": [[195, "dipy.reconst.shore.shore_matrix_pdf"]], "shore_order() (in module dipy.reconst.shore)": [[195, "dipy.reconst.shore.shore_order"]], "smooth_pinv() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.smooth_pinv"]], "smt2di() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2di"]], "smt2f() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2f"]], "smt2ufa() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[195, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2uFA"]], "solve_qp() (in module dipy.reconst.mcsd)": [[195, "dipy.reconst.mcsd.solve_qp"]], "sparsity_abs() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.sparsity_abs"]], "sparsity_density() (dipy.reconst.qtdmri.qtdmrifit method)": [[195, "dipy.reconst.qtdmri.QtdmriFit.sparsity_density"]], "sph_harm_ind_list() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.sph_harm_ind_list"]], "spherical_harmonics() (in module dipy.reconst.shm)": [[195, "dipy.reconst.shm.spherical_harmonics"]], "sphericity() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.sphericity"]], "sphericity() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.sphericity"]], "split_dki_param() (in module dipy.reconst.dki)": [[195, "dipy.reconst.dki.split_dki_param"]], "squared_radial_component() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.squared_radial_component"]], "stoc_search_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[195, "dipy.reconst.ivim.IvimModelVP.stoc_search_cost"]], "temporal_basis() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.temporal_basis"]], "tensor_prediction() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.tensor_prediction"]], "threshold_propagator() (in module dipy.reconst.dsi)": [[195, "dipy.reconst.dsi.threshold_propagator"]], "tortuosity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[195, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity"]], "tortuosity() (in module dipy.reconst.dki_micro)": [[195, "dipy.reconst.dki_micro.tortuosity"]], "trace() (dipy.reconst.dti.tensorfit method)": [[195, "dipy.reconst.dti.TensorFit.trace"]], "trace() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.trace"]], "triple_odf_maxima() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.triple_odf_maxima"]], "ufa() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.ufa"]], "upper_hemi_map() (in module dipy.reconst.gqi)": [[195, "dipy.reconst.gqi.upper_hemi_map"]], "v_iso() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.v_iso"]], "v_md() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.v_md"]], "v_shear() (dipy.reconst.qti.qtifit method)": [[195, "dipy.reconst.qti.QtiFit.v_shear"]], "visualise_gradient_table_g_delta_rainbow() (in module dipy.reconst.qtdmri)": [[195, "dipy.reconst.qtdmri.visualise_gradient_table_G_Delta_rainbow"]], "volume_fractions (dipy.reconst.mcsd.msdeconvfit property)": [[195, "dipy.reconst.mcsd.MSDeconvFit.volume_fractions"]], "wls_fit_msdki() (in module dipy.reconst.msdki)": [[195, "dipy.reconst.msdki.wls_fit_msdki"]], "wls_fit_tensor() (in module dipy.reconst.dti)": [[195, "dipy.reconst.dti.wls_fit_tensor"]], "wls_fit_tensor() (in module dipy.reconst.fwdti)": [[195, "dipy.reconst.fwdti.wls_fit_tensor"]], "wls_iter() (in module dipy.reconst.fwdti)": [[195, "dipy.reconst.fwdti.wls_iter"]], "x_and_f_to_x_f() (dipy.reconst.ivim.ivimmodelvp method)": [[195, "dipy.reconst.ivim.IvimModelVP.x_and_f_to_x_f"]], "x_f_to_x_and_f() (dipy.reconst.ivim.ivimmodelvp method)": [[195, "dipy.reconst.ivim.IvimModelVP.x_f_to_x_and_f"]], "cluster (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.Cluster"]], "clustercentroid (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.ClusterCentroid"]], "clustermap (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.ClusterMap"]], "clustermapcentroid (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.ClusterMapCentroid"]], "clustering (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.Clustering"]], "faststreamlinesearch (class in dipy.segment.fss)": [[196, "dipy.segment.fss.FastStreamlineSearch"]], "identity (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.Identity"]], "mdfpy (class in dipy.segment.benchmarks.bench_quickbundles)": [[196, "dipy.segment.benchmarks.bench_quickbundles.MDFpy"]], "quickbundles (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.QuickBundles"]], "quickbundlesx (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.QuickBundlesX"]], "recobundles (class in dipy.segment.bundles)": [[196, "dipy.segment.bundles.RecoBundles"]], "tissueclassifierhmrf (class in dipy.segment.tissue)": [[196, "dipy.segment.tissue.TissueClassifierHMRF"]], "treecluster (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.TreeCluster"]], "treeclustermap (class in dipy.segment.clustering)": [[196, "dipy.segment.clustering.TreeClusterMap"]], "__init__() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[196, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.__init__"]], "__init__() (dipy.segment.bundles.recobundles method)": [[196, "dipy.segment.bundles.RecoBundles.__init__"]], "__init__() (dipy.segment.clustering.cluster method)": [[196, "dipy.segment.clustering.Cluster.__init__"]], "__init__() (dipy.segment.clustering.clustercentroid method)": [[196, "dipy.segment.clustering.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustermap method)": [[196, "dipy.segment.clustering.ClusterMap.__init__"]], "__init__() (dipy.segment.clustering.clustermapcentroid method)": [[196, "dipy.segment.clustering.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustering method)": [[196, "dipy.segment.clustering.Clustering.__init__"]], "__init__() (dipy.segment.clustering.identity method)": [[196, "dipy.segment.clustering.Identity.__init__"]], "__init__() (dipy.segment.clustering.quickbundles method)": [[196, "dipy.segment.clustering.QuickBundles.__init__"]], "__init__() (dipy.segment.clustering.quickbundlesx method)": [[196, "dipy.segment.clustering.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clustering.treecluster method)": [[196, "dipy.segment.clustering.TreeCluster.__init__"]], "__init__() (dipy.segment.clustering.treeclustermap method)": [[196, "dipy.segment.clustering.TreeClusterMap.__init__"]], "__init__() (dipy.segment.fss.faststreamlinesearch method)": [[196, "dipy.segment.fss.FastStreamlineSearch.__init__"]], "__init__() (dipy.segment.tissue.tissueclassifierhmrf method)": [[196, "dipy.segment.tissue.TissueClassifierHMRF.__init__"]], "add() (dipy.segment.clustering.treecluster method)": [[196, "dipy.segment.clustering.TreeCluster.add"]], "add_cluster() (dipy.segment.clustering.clustermap method)": [[196, "dipy.segment.clustering.ClusterMap.add_cluster"]], "applymask() (in module dipy.segment.mask)": [[196, "dipy.segment.mask.applymask"]], "are_compatible() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[196, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible"]], "assign() (dipy.segment.clustering.cluster method)": [[196, "dipy.segment.clustering.Cluster.assign"]], "assign() (dipy.segment.clustering.clustercentroid method)": [[196, "dipy.segment.clustering.ClusterCentroid.assign"]], "ba_analysis() (in module dipy.segment.bundles)": [[196, "dipy.segment.bundles.ba_analysis"]], "bench_quickbundles() (in module dipy.segment.benchmarks.bench_quickbundles)": [[196, "dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles"]], "bounding_box() (in module dipy.segment.mask)": [[196, "dipy.segment.mask.bounding_box"]], "bundle_adjacency() (in module dipy.segment.bundles)": [[196, "dipy.segment.bundles.bundle_adjacency"]], "bundle_shape_similarity() (in module dipy.segment.bundles)": [[196, "dipy.segment.bundles.bundle_shape_similarity"]], "centroids (dipy.segment.clustering.clustermapcentroid property)": [[196, "dipy.segment.clustering.ClusterMapCentroid.centroids"]], "check_range() (in module dipy.segment.bundles)": [[196, "dipy.segment.bundles.check_range"]], "classify() (dipy.segment.tissue.tissueclassifierhmrf method)": [[196, "dipy.segment.tissue.TissueClassifierHMRF.classify"]], "clean_cc_mask() (in module dipy.segment.mask)": [[196, "dipy.segment.mask.clean_cc_mask"]], "clear() (dipy.segment.clustering.clustermap method)": [[196, "dipy.segment.clustering.ClusterMap.clear"]], "cluster() (dipy.segment.clustering.clustering method)": [[196, "dipy.segment.clustering.Clustering.cluster"]], "cluster() (dipy.segment.clustering.quickbundles method)": [[196, "dipy.segment.clustering.QuickBundles.cluster"]], "cluster() (dipy.segment.clustering.quickbundlesx method)": [[196, "dipy.segment.clustering.QuickBundlesX.cluster"]], "cluster_bundle() (in module dipy.segment.bundles)": [[196, "dipy.segment.bundles.cluster_bundle"]], "clusters (dipy.segment.clustering.clustermap property)": [[196, "dipy.segment.clustering.ClusterMap.clusters"]], "clusters_sizes() (dipy.segment.clustering.clustermap method)": [[196, "dipy.segment.clustering.ClusterMap.clusters_sizes"]], "crop() (in module dipy.segment.mask)": [[196, "dipy.segment.mask.crop"]], "dipy.segment": [[196, "module-dipy.segment"]], "dipy.segment.benchmarks": [[196, "module-dipy.segment.benchmarks"]], "dipy.segment.benchmarks.bench_quickbundles": [[196, "module-dipy.segment.benchmarks.bench_quickbundles"]], "dipy.segment.bundles": [[196, "module-dipy.segment.bundles"]], "dipy.segment.clustering": [[196, "module-dipy.segment.clustering"]], "dipy.segment.fss": [[196, "module-dipy.segment.fss"]], "dipy.segment.mask": [[196, "module-dipy.segment.mask"]], "dipy.segment.metric": [[196, "module-dipy.segment.metric"]], "dipy.segment.threshold": [[196, "module-dipy.segment.threshold"]], "dipy.segment.tissue": [[196, "module-dipy.segment.tissue"]], "dist() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[196, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist"]], "evaluate_results() (dipy.segment.bundles.recobundles method)": [[196, "dipy.segment.bundles.RecoBundles.evaluate_results"]], "get_clusters() (dipy.segment.clustering.treeclustermap method)": [[196, "dipy.segment.clustering.TreeClusterMap.get_clusters"]], "get_large_clusters() (dipy.segment.clustering.clustermap method)": [[196, "dipy.segment.clustering.ClusterMap.get_large_clusters"]], "get_small_clusters() (dipy.segment.clustering.clustermap method)": [[196, "dipy.segment.clustering.ClusterMap.get_small_clusters"]], "is_leaf (dipy.segment.clustering.treecluster property)": [[196, "dipy.segment.clustering.TreeCluster.is_leaf"]], "iter_preorder() (dipy.segment.clustering.treeclustermap method)": [[196, "dipy.segment.clustering.TreeClusterMap.iter_preorder"]], "logger() (in module dipy.segment.bundles)": [[196, "dipy.segment.bundles.logger"]], "logger() (in module dipy.segment.clustering)": [[196, "dipy.segment.clustering.logger"]], "mdf() (in module dipy.segment.metric)": [[196, "dipy.segment.metric.mdf"]], "mean_euclidean_distance() (in module dipy.segment.metric)": [[196, "dipy.segment.metric.mean_euclidean_distance"]], "mean_manhattan_distance() (in module dipy.segment.metric)": [[196, "dipy.segment.metric.mean_manhattan_distance"]], "median_otsu() (in module dipy.segment.mask)": [[196, "dipy.segment.mask.median_otsu"]], "multi_median() (in module dipy.segment.mask)": [[196, "dipy.segment.mask.multi_median"]], "nearest_from_matrix_col() (in module dipy.segment.fss)": [[196, "dipy.segment.fss.nearest_from_matrix_col"]], "nearest_from_matrix_row() (in module dipy.segment.fss)": [[196, "dipy.segment.fss.nearest_from_matrix_row"]], "otsu() (in module dipy.segment.threshold)": [[196, "dipy.segment.threshold.otsu"]], "qbx_and_merge() (in module dipy.segment.clustering)": [[196, "dipy.segment.clustering.qbx_and_merge"]], "radius_search() (dipy.segment.fss.faststreamlinesearch method)": [[196, "dipy.segment.fss.FastStreamlineSearch.radius_search"]], "recognize() (dipy.segment.bundles.recobundles method)": [[196, "dipy.segment.bundles.RecoBundles.recognize"]], "refdata (dipy.segment.clustering.clustermap property)": [[196, "dipy.segment.clustering.ClusterMap.refdata"]], "refdata (dipy.segment.clustering.treeclustermap property)": [[196, "dipy.segment.clustering.TreeClusterMap.refdata"]], "refine() (dipy.segment.bundles.recobundles method)": [[196, "dipy.segment.bundles.RecoBundles.refine"]], "remove_cluster() (dipy.segment.clustering.clustermap method)": [[196, "dipy.segment.clustering.ClusterMap.remove_cluster"]], "return_indices() (dipy.segment.clustering.treecluster method)": [[196, "dipy.segment.clustering.TreeCluster.return_indices"]], "segment_from_cfa() (in module dipy.segment.mask)": [[196, "dipy.segment.mask.segment_from_cfa"]], "size() (dipy.segment.clustering.clustermap method)": [[196, "dipy.segment.clustering.ClusterMap.size"]], "traverse_postorder() (dipy.segment.clustering.treeclustermap method)": [[196, "dipy.segment.clustering.TreeClusterMap.traverse_postorder"]], "update() (dipy.segment.clustering.clustercentroid method)": [[196, "dipy.segment.clustering.ClusterCentroid.update"]], "upper_bound_by_percent() (in module dipy.segment.threshold)": [[196, "dipy.segment.threshold.upper_bound_by_percent"]], "upper_bound_by_rate() (in module dipy.segment.threshold)": [[196, "dipy.segment.threshold.upper_bound_by_rate"]], "add_noise() (in module dipy.sims.phantom)": [[197, "dipy.sims.phantom.add_noise"]], "add_noise() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.add_noise"]], "all_tensor_evecs() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.all_tensor_evecs"]], "callaghan_perpendicular() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.callaghan_perpendicular"]], "cylinders_and_ball_soderman() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.cylinders_and_ball_soderman"]], "diff2eigenvectors() (in module dipy.sims.phantom)": [[197, "dipy.sims.phantom.diff2eigenvectors"]], "diffusion_evals() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.diffusion_evals"]], "dipy.sims": [[197, "module-dipy.sims"]], "dipy.sims.phantom": [[197, "module-dipy.sims.phantom"]], "dipy.sims.voxel": [[197, "module-dipy.sims.voxel"]], "dki_signal() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.dki_signal"]], "gaussian_parallel() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.gaussian_parallel"]], "kurtosis_element() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.kurtosis_element"]], "multi_tensor() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.multi_tensor"]], "multi_tensor_dki() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.multi_tensor_dki"]], "multi_tensor_msd() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.multi_tensor_msd"]], "multi_tensor_odf() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.multi_tensor_odf"]], "multi_tensor_pdf() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.multi_tensor_pdf"]], "multi_tensor_rtop() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.multi_tensor_rtop"]], "orbital_phantom() (in module dipy.sims.phantom)": [[197, "dipy.sims.phantom.orbital_phantom"]], "single_tensor() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.single_tensor"]], "single_tensor_msd() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.single_tensor_msd"]], "single_tensor_odf() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.single_tensor_odf"]], "single_tensor_pdf() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.single_tensor_pdf"]], "single_tensor_rtop() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.single_tensor_rtop"]], "sticks_and_ball() (in module dipy.sims.voxel)": [[197, "dipy.sims.voxel.sticks_and_ball"]], "afq_profile() (in module dipy.stats.analysis)": [[198, "dipy.stats.analysis.afq_profile"]], "anatomical_measures() (in module dipy.stats.analysis)": [[198, "dipy.stats.analysis.anatomical_measures"]], "assignment_map() (in module dipy.stats.analysis)": [[198, "dipy.stats.analysis.assignment_map"]], "dipy.stats": [[198, "module-dipy.stats"]], "dipy.stats.analysis": [[198, "module-dipy.stats.analysis"]], "gaussian_weights() (in module dipy.stats.analysis)": [[198, "dipy.stats.analysis.gaussian_weights"]], "peak_values() (in module dipy.stats.analysis)": [[198, "dipy.stats.analysis.peak_values"]], "fiberfit (class in dipy.tracking.life)": [[199, "dipy.tracking.life.FiberFit"]], "fibermodel (class in dipy.tracking.life)": [[199, "dipy.tracking.life.FiberModel"]], "lifesignalmaker (class in dipy.tracking.life)": [[199, "dipy.tracking.life.LifeSignalMaker"]], "localtracking (class in dipy.tracking.local_tracking)": [[199, "dipy.tracking.local_tracking.LocalTracking"]], "particlefilteringtracking (class in dipy.tracking.local_tracking)": [[199, "dipy.tracking.local_tracking.ParticleFilteringTracking"]], "__init__() (dipy.tracking.life.fiberfit method)": [[199, "dipy.tracking.life.FiberFit.__init__"]], "__init__() (dipy.tracking.life.fibermodel method)": [[199, "dipy.tracking.life.FiberModel.__init__"]], "__init__() (dipy.tracking.life.lifesignalmaker method)": [[199, "dipy.tracking.life.LifeSignalMaker.__init__"]], "__init__() (dipy.tracking.local_tracking.localtracking method)": [[199, "dipy.tracking.local_tracking.LocalTracking.__init__"]], "__init__() (dipy.tracking.local_tracking.particlefilteringtracking method)": [[199, "dipy.tracking.local_tracking.ParticleFilteringTracking.__init__"]], "arbitrarypoint() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.arbitrarypoint"]], "bench_compress_streamlines() (in module dipy.tracking.benchmarks.bench_streamline)": [[199, "dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines"]], "bench_length() (in module dipy.tracking.benchmarks.bench_streamline)": [[199, "dipy.tracking.benchmarks.bench_streamline.bench_length"]], "bench_set_number_of_points() (in module dipy.tracking.benchmarks.bench_streamline)": [[199, "dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points"]], "bytes() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.bytes"]], "calc_signal() (dipy.tracking.life.lifesignalmaker method)": [[199, "dipy.tracking.life.LifeSignalMaker.calc_signal"]], "center_of_mass() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.center_of_mass"]], "center_streamlines() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.center_streamlines"]], "cluster_confidence() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.cluster_confidence"]], "connectivity_matrix() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.connectivity_matrix"]], "deform_streamlines() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.deform_streamlines"]], "density_map() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.density_map"]], "detect_corresponding_tracks() (in module dipy.tracking.learning)": [[199, "dipy.tracking.learning.detect_corresponding_tracks"]], "detect_corresponding_tracks_plus() (in module dipy.tracking.learning)": [[199, "dipy.tracking.learning.detect_corresponding_tracks_plus"]], "dipy.tracking": [[199, "module-dipy.tracking"]], "dipy.tracking._utils": [[199, "module-dipy.tracking._utils"]], "dipy.tracking.benchmarks": [[199, "module-dipy.tracking.benchmarks"]], "dipy.tracking.benchmarks.bench_streamline": [[199, "module-dipy.tracking.benchmarks.bench_streamline"]], "dipy.tracking.learning": [[199, "module-dipy.tracking.learning"]], "dipy.tracking.life": [[199, "module-dipy.tracking.life"]], "dipy.tracking.local_tracking": [[199, "module-dipy.tracking.local_tracking"]], "dipy.tracking.mesh": [[199, "module-dipy.tracking.mesh"]], "dipy.tracking.metrics": [[199, "module-dipy.tracking.metrics"]], "dipy.tracking.streamline": [[199, "module-dipy.tracking.streamline"]], "dipy.tracking.utils": [[199, "module-dipy.tracking.utils"]], "downsample() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.downsample"]], "endpoint() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.endpoint"]], "fit() (dipy.tracking.life.fibermodel method)": [[199, "dipy.tracking.life.FiberModel.fit"]], "frenet_serret() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.frenet_serret"]], "generate_combinations() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.generate_combinations"]], "generate_streamlines() (in module dipy.tracking.benchmarks.bench_streamline)": [[199, "dipy.tracking.benchmarks.bench_streamline.generate_streamlines"]], "grad_tensor() (in module dipy.tracking.life)": [[199, "dipy.tracking.life.grad_tensor"]], "gradient() (in module dipy.tracking.life)": [[199, "dipy.tracking.life.gradient"]], "inside_sphere() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.inside_sphere"]], "inside_sphere_points() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.inside_sphere_points"]], "intersect_sphere() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.intersect_sphere"]], "length() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.length"]], "length() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.length"]], "longest_track_bundle() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.longest_track_bundle"]], "magn() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.magn"]], "max_angle_from_curvature() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.max_angle_from_curvature"]], "mean_curvature() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.mean_curvature"]], "mean_orientation() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.mean_orientation"]], "midpoint() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.midpoint"]], "midpoint2point() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.midpoint2point"]], "min_radius_curvature_from_angle() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.min_radius_curvature_from_angle"]], "nbytes() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.nbytes"]], "ndbincount() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.ndbincount"]], "near_roi() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.near_roi"]], "orient_by_rois() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.orient_by_rois"]], "orient_by_streamline() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.orient_by_streamline"]], "path_length() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.path_length"]], "predict() (dipy.tracking.life.fiberfit method)": [[199, "dipy.tracking.life.FiberFit.predict"]], "principal_components() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.principal_components"]], "random_coordinates_from_surface() (in module dipy.tracking.mesh)": [[199, "dipy.tracking.mesh.random_coordinates_from_surface"]], "random_seeds_from_mask() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.random_seeds_from_mask"]], "reduce_labels() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.reduce_labels"]], "reduce_rois() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.reduce_rois"]], "relist_streamlines() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.relist_streamlines"]], "seeds_from_mask() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.seeds_from_mask"]], "seeds_from_surface_coordinates() (in module dipy.tracking.mesh)": [[199, "dipy.tracking.mesh.seeds_from_surface_coordinates"]], "select_by_rois() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.select_by_rois"]], "select_random_set_of_streamlines() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.select_random_set_of_streamlines"]], "setup() (dipy.tracking.life.fibermodel method)": [[199, "dipy.tracking.life.FiberModel.setup"]], "setup() (in module dipy.tracking.benchmarks.bench_streamline)": [[199, "dipy.tracking.benchmarks.bench_streamline.setup"]], "spline() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.spline"]], "startpoint() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.startpoint"]], "streamline_gradients() (in module dipy.tracking.life)": [[199, "dipy.tracking.life.streamline_gradients"]], "streamline_near_roi() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.streamline_near_roi"]], "streamline_signal() (dipy.tracking.life.lifesignalmaker method)": [[199, "dipy.tracking.life.LifeSignalMaker.streamline_signal"]], "streamline_signal() (in module dipy.tracking.life)": [[199, "dipy.tracking.life.streamline_signal"]], "streamline_tensors() (in module dipy.tracking.life)": [[199, "dipy.tracking.life.streamline_tensors"]], "subsegment() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.subsegment"]], "target() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.target"]], "target_line_based() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.target_line_based"]], "transform_streamlines() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.transform_streamlines"]], "transform_tracking_output() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.transform_tracking_output"]], "triangles_area() (in module dipy.tracking.mesh)": [[199, "dipy.tracking.mesh.triangles_area"]], "unique_rows() (in module dipy.tracking.utils)": [[199, "dipy.tracking.utils.unique_rows"]], "unlist_streamlines() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.unlist_streamlines"]], "values_from_volume() (in module dipy.tracking.streamline)": [[199, "dipy.tracking.streamline.values_from_volume"]], "vertices_to_triangles_values() (in module dipy.tracking.mesh)": [[199, "dipy.tracking.mesh.vertices_to_triangles_values"]], "voxel2streamline() (in module dipy.tracking.life)": [[199, "dipy.tracking.life.voxel2streamline"]], "winding() (in module dipy.tracking.metrics)": [[199, "dipy.tracking.metrics.winding"]], "clusterstab (class in dipy.viz.horizon.tab.cluster)": [[200, "dipy.viz.horizon.tab.cluster.ClustersTab"]], "clustersvisualizer (class in dipy.viz.horizon.visualizer.cluster)": [[200, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer"]], "globalhorizon (class in dipy.viz.gmem)": [[200, "dipy.viz.gmem.GlobalHorizon"]], "horizon (class in dipy.viz.app)": [[200, "dipy.viz.app.Horizon"]], "horizon (class in dipy.viz.horizon.app)": [[200, "dipy.viz.horizon.app.Horizon"]], "horizontab (class in dipy.viz.horizon.tab.base)": [[200, "dipy.viz.horizon.tab.base.HorizonTab"]], "peakstab (class in dipy.viz.horizon.tab.peak)": [[200, "dipy.viz.horizon.tab.peak.PeaksTab"]], "roistab (class in dipy.viz.horizon.tab.roi)": [[200, "dipy.viz.horizon.tab.roi.ROIsTab"]], "slicestab (class in dipy.viz.horizon.tab.slice)": [[200, "dipy.viz.horizon.tab.slice.SlicesTab"]], "slicesvisualizer (class in dipy.viz.horizon.visualizer.slice)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer"]], "tabmanager (class in dipy.viz.horizon.tab.base)": [[200, "dipy.viz.horizon.tab.base.TabManager"]], "__init__() (dipy.viz.app.horizon method)": [[200, "dipy.viz.app.Horizon.__init__"]], "__init__() (dipy.viz.gmem.globalhorizon method)": [[200, "dipy.viz.gmem.GlobalHorizon.__init__"]], "__init__() (dipy.viz.horizon.app.horizon method)": [[200, "dipy.viz.horizon.app.Horizon.__init__"]], "__init__() (dipy.viz.horizon.tab.base.horizontab method)": [[200, "dipy.viz.horizon.tab.base.HorizonTab.__init__"]], "__init__() (dipy.viz.horizon.tab.base.tabmanager method)": [[200, "dipy.viz.horizon.tab.base.TabManager.__init__"]], "__init__() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[200, "dipy.viz.horizon.tab.cluster.ClustersTab.__init__"]], "__init__() (dipy.viz.horizon.tab.peak.peakstab method)": [[200, "dipy.viz.horizon.tab.peak.PeaksTab.__init__"]], "__init__() (dipy.viz.horizon.tab.roi.roistab method)": [[200, "dipy.viz.horizon.tab.roi.ROIsTab.__init__"]], "__init__() (dipy.viz.horizon.tab.slice.slicestab method)": [[200, "dipy.viz.horizon.tab.slice.SlicesTab.__init__"]], "__init__() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[200, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.__init__"]], "__init__() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.__init__"]], "add_cluster_actors() (dipy.viz.app.horizon method)": [[200, "dipy.viz.app.Horizon.add_cluster_actors"]], "add_cluster_actors() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[200, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.add_cluster_actors"]], "apply_shader() (in module dipy.viz.app)": [[200, "dipy.viz.app.apply_shader"]], "build() (dipy.viz.horizon.tab.base.horizontab method)": [[200, "dipy.viz.horizon.tab.base.HorizonTab.build"]], "build() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[200, "dipy.viz.horizon.tab.cluster.ClustersTab.build"]], "build() (dipy.viz.horizon.tab.peak.peakstab method)": [[200, "dipy.viz.horizon.tab.peak.PeaksTab.build"]], "build() (dipy.viz.horizon.tab.roi.roistab method)": [[200, "dipy.viz.horizon.tab.roi.ROIsTab.build"]], "build() (dipy.viz.horizon.tab.slice.slicestab method)": [[200, "dipy.viz.horizon.tab.slice.SlicesTab.build"]], "build_label() (in module dipy.viz.horizon.tab.base)": [[200, "dipy.viz.horizon.tab.base.build_label"]], "build_label() (in module dipy.viz.panel)": [[200, "dipy.viz.panel.build_label"]], "build_scene() (dipy.viz.app.horizon method)": [[200, "dipy.viz.app.Horizon.build_scene"]], "build_scene() (dipy.viz.horizon.app.horizon method)": [[200, "dipy.viz.horizon.app.Horizon.build_scene"]], "build_show() (dipy.viz.app.horizon method)": [[200, "dipy.viz.app.Horizon.build_show"]], "build_show() (dipy.viz.horizon.app.horizon method)": [[200, "dipy.viz.horizon.app.Horizon.build_show"]], "bundle_shape_profile() (in module dipy.viz.plotting)": [[200, "dipy.viz.plotting.bundle_shape_profile"]], "centroid_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[200, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.centroid_actors"]], "change_volume() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.change_volume"]], "cluster_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[200, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.cluster_actors"]], "color_double_slider() (in module dipy.viz.horizon.tab.base)": [[200, "dipy.viz.horizon.tab.base.color_double_slider"]], "color_single_slider() (in module dipy.viz.horizon.tab.base)": [[200, "dipy.viz.horizon.tab.base.color_single_slider"]], "compare_maps() (in module dipy.viz.plotting)": [[200, "dipy.viz.plotting.compare_maps"]], "compare_qti_maps() (in module dipy.viz.plotting)": [[200, "dipy.viz.plotting.compare_qti_maps"]], "data_shape (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.data_shape"]], "dipy.viz": [[200, "module-dipy.viz"]], "dipy.viz.app": [[200, "module-dipy.viz.app"]], "dipy.viz.gmem": [[200, "module-dipy.viz.gmem"]], "dipy.viz.horizon": [[200, "module-dipy.viz.horizon"]], "dipy.viz.horizon.app": [[200, "module-dipy.viz.horizon.app"]], "dipy.viz.horizon.tab": [[200, "module-dipy.viz.horizon.tab"]], "dipy.viz.horizon.tab.base": [[200, "module-dipy.viz.horizon.tab.base"]], "dipy.viz.horizon.tab.cluster": [[200, "module-dipy.viz.horizon.tab.cluster"]], "dipy.viz.horizon.tab.peak": [[200, "module-dipy.viz.horizon.tab.peak"]], "dipy.viz.horizon.tab.roi": [[200, "module-dipy.viz.horizon.tab.roi"]], "dipy.viz.horizon.tab.slice": [[200, "module-dipy.viz.horizon.tab.slice"]], "dipy.viz.horizon.visualizer": [[200, "module-dipy.viz.horizon.visualizer"]], "dipy.viz.horizon.visualizer.cluster": [[200, "module-dipy.viz.horizon.visualizer.cluster"]], "dipy.viz.horizon.visualizer.slice": [[200, "module-dipy.viz.horizon.visualizer.slice"]], "dipy.viz.panel": [[200, "module-dipy.viz.panel"]], "dipy.viz.plotting": [[200, "module-dipy.viz.plotting"]], "dipy.viz.projections": [[200, "module-dipy.viz.projections"]], "dipy.viz.regtools": [[200, "module-dipy.viz.regtools"]], "dipy.viz.streamline": [[200, "module-dipy.viz.streamline"]], "draw_lattice_2d() (in module dipy.viz.regtools)": [[200, "dipy.viz.regtools.draw_lattice_2d"]], "horizon() (in module dipy.viz.app)": [[200, "dipy.viz.app.horizon"]], "horizon() (in module dipy.viz.horizon.app)": [[200, "dipy.viz.horizon.app.horizon"]], "intensities_range (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.intensities_range"]], "lengths (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[200, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.lengths"]], "name (dipy.viz.horizon.tab.base.horizontab property)": [[200, "dipy.viz.horizon.tab.base.HorizonTab.name"]], "name (dipy.viz.horizon.tab.cluster.clusterstab property)": [[200, "dipy.viz.horizon.tab.cluster.ClustersTab.name"]], "name (dipy.viz.horizon.tab.peak.peakstab property)": [[200, "dipy.viz.horizon.tab.peak.PeaksTab.name"]], "name (dipy.viz.horizon.tab.roi.roistab property)": [[200, "dipy.viz.horizon.tab.roi.ROIsTab.name"]], "name (dipy.viz.horizon.tab.slice.slicestab property)": [[200, "dipy.viz.horizon.tab.slice.SlicesTab.name"]], "overlay_images() (in module dipy.viz.regtools)": [[200, "dipy.viz.regtools.overlay_images"]], "overlay_slices() (in module dipy.viz.regtools)": [[200, "dipy.viz.regtools.overlay_slices"]], "plot_2d_diffeomorphic_map() (in module dipy.viz.regtools)": [[200, "dipy.viz.regtools.plot_2d_diffeomorphic_map"]], "plot_slices() (in module dipy.viz.regtools)": [[200, "dipy.viz.regtools.plot_slices"]], "recluster_tractograms() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[200, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.recluster_tractograms"]], "register_picker_callback() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.register_picker_callback"]], "remove_cluster_actors() (dipy.viz.app.horizon method)": [[200, "dipy.viz.app.Horizon.remove_cluster_actors"]], "reposition() (dipy.viz.horizon.tab.base.tabmanager method)": [[200, "dipy.viz.horizon.tab.base.TabManager.reposition"]], "selected_slices (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.selected_slices"]], "show_bundles() (in module dipy.viz.streamline)": [[200, "dipy.viz.streamline.show_bundles"]], "simple_plot() (in module dipy.viz.regtools)": [[200, "dipy.viz.regtools.simple_plot"]], "sizes (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[200, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.sizes"]], "slice_actors (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.slice_actors"]], "slicer_panel() (in module dipy.viz.panel)": [[200, "dipy.viz.panel.slicer_panel"]], "sph_project() (in module dipy.viz.projections)": [[200, "dipy.viz.projections.sph_project"]], "tab_ui (dipy.viz.horizon.tab.base.tabmanager property)": [[200, "dipy.viz.horizon.tab.base.TabManager.tab_ui"]], "tractogram_clusters (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[200, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.tractogram_clusters"]], "viz_displacement_mag() (in module dipy.viz.streamline)": [[200, "dipy.viz.streamline.viz_displacement_mag"]], "viz_two_bundles() (in module dipy.viz.streamline)": [[200, "dipy.viz.streamline.viz_two_bundles"]], "viz_vector_field() (in module dipy.viz.streamline)": [[200, "dipy.viz.streamline.viz_vector_field"]], "volume_max (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_max"]], "volume_min (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[200, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_min"]], "applytransformflow (class in dipy.workflows.align)": [[201, "dipy.workflows.align.ApplyTransformFlow"]], "bundleanalysistractometryflow (class in dipy.workflows.stats)": [[201, "dipy.workflows.stats.BundleAnalysisTractometryFlow"]], "bundleshapeanalysis (class in dipy.workflows.stats)": [[201, "dipy.workflows.stats.BundleShapeAnalysis"]], "bundlewarpflow (class in dipy.workflows.align)": [[201, "dipy.workflows.align.BundleWarpFlow"]], "combinedworkflow (class in dipy.workflows.combined_workflow)": [[201, "dipy.workflows.combined_workflow.CombinedWorkflow"]], "evacplusflow (class in dipy.workflows.segment)": [[201, "dipy.workflows.segment.EVACPlusFlow"]], "fetchflow (class in dipy.workflows.io)": [[201, "dipy.workflows.io.FetchFlow"]], "gibbsringingflow (class in dipy.workflows.denoise)": [[201, "dipy.workflows.denoise.GibbsRingingFlow"]], "horizonflow (class in dipy.workflows.viz)": [[201, "dipy.workflows.viz.HorizonFlow"]], "ioiterator (class in dipy.workflows.multi_io)": [[201, "dipy.workflows.multi_io.IOIterator"]], "imageregistrationflow (class in dipy.workflows.align)": [[201, "dipy.workflows.align.ImageRegistrationFlow"]], "introspectiveargumentparser (class in dipy.workflows.base)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser"]], "ioinfoflow (class in dipy.workflows.io)": [[201, "dipy.workflows.io.IoInfoFlow"]], "lpcaflow (class in dipy.workflows.denoise)": [[201, "dipy.workflows.denoise.LPCAFlow"]], "labelsbundlesflow (class in dipy.workflows.segment)": [[201, "dipy.workflows.segment.LabelsBundlesFlow"]], "linearmixedmodelsflow (class in dipy.workflows.stats)": [[201, "dipy.workflows.stats.LinearMixedModelsFlow"]], "localfibertrackingpamflow (class in dipy.workflows.tracking)": [[201, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow"]], "mppcaflow (class in dipy.workflows.denoise)": [[201, "dipy.workflows.denoise.MPPCAFlow"]], "maskflow (class in dipy.workflows.mask)": [[201, "dipy.workflows.mask.MaskFlow"]], "medianotsuflow (class in dipy.workflows.segment)": [[201, "dipy.workflows.segment.MedianOtsuFlow"]], "motioncorrectionflow (class in dipy.workflows.align)": [[201, "dipy.workflows.align.MotionCorrectionFlow"]], "nlmeansflow (class in dipy.workflows.denoise)": [[201, "dipy.workflows.denoise.NLMeansFlow"]], "numpydocstring (class in dipy.workflows.docstring_parser)": [[201, "dipy.workflows.docstring_parser.NumpyDocString"]], "pftrackingpamflow (class in dipy.workflows.tracking)": [[201, "dipy.workflows.tracking.PFTrackingPAMFlow"]], "patch2selfflow (class in dipy.workflows.denoise)": [[201, "dipy.workflows.denoise.Patch2SelfFlow"]], "reader (class in dipy.workflows.docstring_parser)": [[201, "dipy.workflows.docstring_parser.Reader"]], "recobundlesflow (class in dipy.workflows.segment)": [[201, "dipy.workflows.segment.RecoBundlesFlow"]], "reconstcsaflow (class in dipy.workflows.reconst)": [[201, "dipy.workflows.reconst.ReconstCSAFlow"]], "reconstcsdflow (class in dipy.workflows.reconst)": [[201, "dipy.workflows.reconst.ReconstCSDFlow"]], "reconstdkiflow (class in dipy.workflows.reconst)": [[201, "dipy.workflows.reconst.ReconstDkiFlow"]], "reconstdtiflow (class in dipy.workflows.reconst)": [[201, "dipy.workflows.reconst.ReconstDtiFlow"]], "reconstivimflow (class in dipy.workflows.reconst)": [[201, "dipy.workflows.reconst.ReconstIvimFlow"]], "reconstmapmriflow (class in dipy.workflows.reconst)": [[201, "dipy.workflows.reconst.ReconstMAPMRIFlow"]], "reconstrumbaflow (class in dipy.workflows.reconst)": [[201, "dipy.workflows.reconst.ReconstRUMBAFlow"]], "resliceflow (class in dipy.workflows.align)": [[201, "dipy.workflows.align.ResliceFlow"]], "snrinccflow (class in dipy.workflows.stats)": [[201, "dipy.workflows.stats.SNRinCCFlow"]], "slrwithqbxflow (class in dipy.workflows.align)": [[201, "dipy.workflows.align.SlrWithQbxFlow"]], "splitflow (class in dipy.workflows.io)": [[201, "dipy.workflows.io.SplitFlow"]], "synregistrationflow (class in dipy.workflows.align)": [[201, "dipy.workflows.align.SynRegistrationFlow"]], "workflow (class in dipy.workflows.workflow)": [[201, "dipy.workflows.workflow.Workflow"]], "__init__() (dipy.workflows.align.applytransformflow method)": [[201, "dipy.workflows.align.ApplyTransformFlow.__init__"]], "__init__() (dipy.workflows.align.bundlewarpflow method)": [[201, "dipy.workflows.align.BundleWarpFlow.__init__"]], "__init__() (dipy.workflows.align.imageregistrationflow method)": [[201, "dipy.workflows.align.ImageRegistrationFlow.__init__"]], "__init__() (dipy.workflows.align.motioncorrectionflow method)": [[201, "dipy.workflows.align.MotionCorrectionFlow.__init__"]], "__init__() (dipy.workflows.align.resliceflow method)": [[201, "dipy.workflows.align.ResliceFlow.__init__"]], "__init__() (dipy.workflows.align.slrwithqbxflow method)": [[201, "dipy.workflows.align.SlrWithQbxFlow.__init__"]], "__init__() (dipy.workflows.align.synregistrationflow method)": [[201, "dipy.workflows.align.SynRegistrationFlow.__init__"]], "__init__() (dipy.workflows.base.introspectiveargumentparser method)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.__init__"]], "__init__() (dipy.workflows.combined_workflow.combinedworkflow method)": [[201, "dipy.workflows.combined_workflow.CombinedWorkflow.__init__"]], "__init__() (dipy.workflows.denoise.gibbsringingflow method)": [[201, "dipy.workflows.denoise.GibbsRingingFlow.__init__"]], "__init__() (dipy.workflows.denoise.lpcaflow method)": [[201, "dipy.workflows.denoise.LPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.mppcaflow method)": [[201, "dipy.workflows.denoise.MPPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.nlmeansflow method)": [[201, "dipy.workflows.denoise.NLMeansFlow.__init__"]], "__init__() (dipy.workflows.denoise.patch2selfflow method)": [[201, "dipy.workflows.denoise.Patch2SelfFlow.__init__"]], "__init__() (dipy.workflows.docstring_parser.numpydocstring method)": [[201, "dipy.workflows.docstring_parser.NumpyDocString.__init__"]], "__init__() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.__init__"]], "__init__() (dipy.workflows.io.fetchflow method)": [[201, "dipy.workflows.io.FetchFlow.__init__"]], "__init__() (dipy.workflows.io.ioinfoflow method)": [[201, "dipy.workflows.io.IoInfoFlow.__init__"]], "__init__() (dipy.workflows.io.splitflow method)": [[201, "dipy.workflows.io.SplitFlow.__init__"]], "__init__() (dipy.workflows.mask.maskflow method)": [[201, "dipy.workflows.mask.MaskFlow.__init__"]], "__init__() (dipy.workflows.multi_io.ioiterator method)": [[201, "dipy.workflows.multi_io.IOIterator.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsaflow method)": [[201, "dipy.workflows.reconst.ReconstCSAFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsdflow method)": [[201, "dipy.workflows.reconst.ReconstCSDFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdkiflow method)": [[201, "dipy.workflows.reconst.ReconstDkiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdtiflow method)": [[201, "dipy.workflows.reconst.ReconstDtiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstivimflow method)": [[201, "dipy.workflows.reconst.ReconstIvimFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstmapmriflow method)": [[201, "dipy.workflows.reconst.ReconstMAPMRIFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstrumbaflow method)": [[201, "dipy.workflows.reconst.ReconstRUMBAFlow.__init__"]], "__init__() (dipy.workflows.segment.evacplusflow method)": [[201, "dipy.workflows.segment.EVACPlusFlow.__init__"]], "__init__() (dipy.workflows.segment.labelsbundlesflow method)": [[201, "dipy.workflows.segment.LabelsBundlesFlow.__init__"]], "__init__() (dipy.workflows.segment.medianotsuflow method)": [[201, "dipy.workflows.segment.MedianOtsuFlow.__init__"]], "__init__() (dipy.workflows.segment.recobundlesflow method)": [[201, "dipy.workflows.segment.RecoBundlesFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[201, "dipy.workflows.stats.BundleAnalysisTractometryFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleshapeanalysis method)": [[201, "dipy.workflows.stats.BundleShapeAnalysis.__init__"]], "__init__() (dipy.workflows.stats.linearmixedmodelsflow method)": [[201, "dipy.workflows.stats.LinearMixedModelsFlow.__init__"]], "__init__() (dipy.workflows.stats.snrinccflow method)": [[201, "dipy.workflows.stats.SNRinCCFlow.__init__"]], "__init__() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[201, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.tracking.pftrackingpamflow method)": [[201, "dipy.workflows.tracking.PFTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.viz.horizonflow method)": [[201, "dipy.workflows.viz.HorizonFlow.__init__"]], "__init__() (dipy.workflows.workflow.workflow method)": [[201, "dipy.workflows.workflow.Workflow.__init__"]], "add_description() (dipy.workflows.base.introspectiveargumentparser method)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.add_description"]], "add_epilogue() (dipy.workflows.base.introspectiveargumentparser method)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue"]], "add_sub_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args"]], "add_workflow() (dipy.workflows.base.introspectiveargumentparser method)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.add_workflow"]], "basename_without_extension() (in module dipy.workflows.multi_io)": [[201, "dipy.workflows.multi_io.basename_without_extension"]], "buan_bundle_profiles() (in module dipy.workflows.stats)": [[201, "dipy.workflows.stats.buan_bundle_profiles"]], "check_dimensions() (in module dipy.workflows.align)": [[201, "dipy.workflows.align.check_dimensions"]], "common_start() (in module dipy.workflows.multi_io)": [[201, "dipy.workflows.multi_io.common_start"]], "concatenate_inputs() (in module dipy.workflows.multi_io)": [[201, "dipy.workflows.multi_io.concatenate_inputs"]], "connect_output_paths() (in module dipy.workflows.multi_io)": [[201, "dipy.workflows.multi_io.connect_output_paths"]], "create_directories() (dipy.workflows.multi_io.ioiterator method)": [[201, "dipy.workflows.multi_io.IOIterator.create_directories"]], "create_outputs() (dipy.workflows.multi_io.ioiterator method)": [[201, "dipy.workflows.multi_io.IOIterator.create_outputs"]], "dedent_lines() (in module dipy.workflows.docstring_parser)": [[201, "dipy.workflows.docstring_parser.dedent_lines"]], "dipy.workflows": [[201, "module-dipy.workflows"]], "dipy.workflows.align": [[201, "module-dipy.workflows.align"]], "dipy.workflows.base": [[201, "module-dipy.workflows.base"]], "dipy.workflows.combined_workflow": [[201, "module-dipy.workflows.combined_workflow"]], "dipy.workflows.denoise": [[201, "module-dipy.workflows.denoise"]], "dipy.workflows.docstring_parser": [[201, "module-dipy.workflows.docstring_parser"]], "dipy.workflows.flow_runner": [[201, "module-dipy.workflows.flow_runner"]], "dipy.workflows.io": [[201, "module-dipy.workflows.io"]], "dipy.workflows.mask": [[201, "module-dipy.workflows.mask"]], "dipy.workflows.multi_io": [[201, "module-dipy.workflows.multi_io"]], "dipy.workflows.reconst": [[201, "module-dipy.workflows.reconst"]], "dipy.workflows.segment": [[201, "module-dipy.workflows.segment"]], "dipy.workflows.stats": [[201, "module-dipy.workflows.stats"]], "dipy.workflows.tracking": [[201, "module-dipy.workflows.tracking"]], "dipy.workflows.viz": [[201, "module-dipy.workflows.viz"]], "dipy.workflows.workflow": [[201, "module-dipy.workflows.workflow"]], "eof() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.eof"]], "file_existence_check() (dipy.workflows.multi_io.ioiterator method)": [[201, "dipy.workflows.multi_io.IOIterator.file_existence_check"]], "get_args_default() (in module dipy.workflows.base)": [[201, "dipy.workflows.base.get_args_default"]], "get_fetcher_datanames() (dipy.workflows.io.fetchflow static method)": [[201, "dipy.workflows.io.FetchFlow.get_fetcher_datanames"]], "get_fitted_ivim() (dipy.workflows.reconst.reconstivimflow method)": [[201, "dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdkiflow method)": [[201, "dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdtiflow method)": [[201, "dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor"]], "get_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args"]], "get_io_iterator() (dipy.workflows.workflow.workflow method)": [[201, "dipy.workflows.workflow.Workflow.get_io_iterator"]], "get_level() (in module dipy.workflows.flow_runner)": [[201, "dipy.workflows.flow_runner.get_level"]], "get_metric_name() (dipy.workflows.stats.linearmixedmodelsflow method)": [[201, "dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name"]], "get_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[201, "dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals"]], "get_short_name() (dipy.workflows.align.bundlewarpflow class method)": [[201, "dipy.workflows.align.BundleWarpFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.resliceflow class method)": [[201, "dipy.workflows.align.ResliceFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.slrwithqbxflow class method)": [[201, "dipy.workflows.align.SlrWithQbxFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.gibbsringingflow class method)": [[201, "dipy.workflows.denoise.GibbsRingingFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.lpcaflow class method)": [[201, "dipy.workflows.denoise.LPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.mppcaflow class method)": [[201, "dipy.workflows.denoise.MPPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.nlmeansflow class method)": [[201, "dipy.workflows.denoise.NLMeansFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.patch2selfflow class method)": [[201, "dipy.workflows.denoise.Patch2SelfFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.fetchflow class method)": [[201, "dipy.workflows.io.FetchFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.ioinfoflow class method)": [[201, "dipy.workflows.io.IoInfoFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.splitflow class method)": [[201, "dipy.workflows.io.SplitFlow.get_short_name"]], "get_short_name() (dipy.workflows.mask.maskflow class method)": [[201, "dipy.workflows.mask.MaskFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsaflow class method)": [[201, "dipy.workflows.reconst.ReconstCSAFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsdflow class method)": [[201, "dipy.workflows.reconst.ReconstCSDFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdkiflow class method)": [[201, "dipy.workflows.reconst.ReconstDkiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdtiflow class method)": [[201, "dipy.workflows.reconst.ReconstDtiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstivimflow class method)": [[201, "dipy.workflows.reconst.ReconstIvimFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstmapmriflow class method)": [[201, "dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstrumbaflow class method)": [[201, "dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.evacplusflow class method)": [[201, "dipy.workflows.segment.EVACPlusFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.labelsbundlesflow class method)": [[201, "dipy.workflows.segment.LabelsBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.medianotsuflow class method)": [[201, "dipy.workflows.segment.MedianOtsuFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.recobundlesflow class method)": [[201, "dipy.workflows.segment.RecoBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleanalysistractometryflow class method)": [[201, "dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleshapeanalysis class method)": [[201, "dipy.workflows.stats.BundleShapeAnalysis.get_short_name"]], "get_short_name() (dipy.workflows.stats.linearmixedmodelsflow class method)": [[201, "dipy.workflows.stats.LinearMixedModelsFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.snrinccflow class method)": [[201, "dipy.workflows.stats.SNRinCCFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.localfibertrackingpamflow class method)": [[201, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.pftrackingpamflow class method)": [[201, "dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.viz.horizonflow class method)": [[201, "dipy.workflows.viz.HorizonFlow.get_short_name"]], "get_short_name() (dipy.workflows.workflow.workflow class method)": [[201, "dipy.workflows.workflow.Workflow.get_short_name"]], "get_sub_runs() (dipy.workflows.combined_workflow.combinedworkflow method)": [[201, "dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.workflow.workflow method)": [[201, "dipy.workflows.workflow.Workflow.get_sub_runs"]], "io_iterator() (in module dipy.workflows.multi_io)": [[201, "dipy.workflows.multi_io.io_iterator"]], "io_iterator_() (in module dipy.workflows.multi_io)": [[201, "dipy.workflows.multi_io.io_iterator_"]], "is_empty() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.is_empty"]], "load_module() (dipy.workflows.io.fetchflow static method)": [[201, "dipy.workflows.io.FetchFlow.load_module"]], "manage_output_overwrite() (dipy.workflows.workflow.workflow method)": [[201, "dipy.workflows.workflow.Workflow.manage_output_overwrite"]], "none_or_dtype() (in module dipy.workflows.base)": [[201, "dipy.workflows.base.none_or_dtype"]], "optional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters"]], "output_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.output_parameters"]], "peek() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.peek"]], "positional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters"]], "read() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.read"]], "read_to_condition() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.read_to_condition"]], "read_to_next_empty_line() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.read_to_next_empty_line"]], "read_to_next_unindented_line() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line"]], "reset() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.reset"]], "run() (dipy.workflows.align.applytransformflow method)": [[201, "dipy.workflows.align.ApplyTransformFlow.run"]], "run() (dipy.workflows.align.bundlewarpflow method)": [[201, "dipy.workflows.align.BundleWarpFlow.run"]], "run() (dipy.workflows.align.imageregistrationflow method)": [[201, "dipy.workflows.align.ImageRegistrationFlow.run"]], "run() (dipy.workflows.align.motioncorrectionflow method)": [[201, "dipy.workflows.align.MotionCorrectionFlow.run"]], "run() (dipy.workflows.align.resliceflow method)": [[201, "dipy.workflows.align.ResliceFlow.run"]], "run() (dipy.workflows.align.slrwithqbxflow method)": [[201, "dipy.workflows.align.SlrWithQbxFlow.run"]], "run() (dipy.workflows.align.synregistrationflow method)": [[201, "dipy.workflows.align.SynRegistrationFlow.run"]], "run() (dipy.workflows.denoise.gibbsringingflow method)": [[201, "dipy.workflows.denoise.GibbsRingingFlow.run"]], "run() (dipy.workflows.denoise.lpcaflow method)": [[201, "dipy.workflows.denoise.LPCAFlow.run"]], "run() (dipy.workflows.denoise.mppcaflow method)": [[201, "dipy.workflows.denoise.MPPCAFlow.run"]], "run() (dipy.workflows.denoise.nlmeansflow method)": [[201, "dipy.workflows.denoise.NLMeansFlow.run"]], "run() (dipy.workflows.denoise.patch2selfflow method)": [[201, "dipy.workflows.denoise.Patch2SelfFlow.run"]], "run() (dipy.workflows.io.fetchflow method)": [[201, "dipy.workflows.io.FetchFlow.run"]], "run() (dipy.workflows.io.ioinfoflow method)": [[201, "dipy.workflows.io.IoInfoFlow.run"]], "run() (dipy.workflows.io.splitflow method)": [[201, "dipy.workflows.io.SplitFlow.run"]], "run() (dipy.workflows.mask.maskflow method)": [[201, "dipy.workflows.mask.MaskFlow.run"]], "run() (dipy.workflows.reconst.reconstcsaflow method)": [[201, "dipy.workflows.reconst.ReconstCSAFlow.run"]], "run() (dipy.workflows.reconst.reconstcsdflow method)": [[201, "dipy.workflows.reconst.ReconstCSDFlow.run"]], "run() (dipy.workflows.reconst.reconstdkiflow method)": [[201, "dipy.workflows.reconst.ReconstDkiFlow.run"]], "run() (dipy.workflows.reconst.reconstdtiflow method)": [[201, "dipy.workflows.reconst.ReconstDtiFlow.run"]], "run() (dipy.workflows.reconst.reconstivimflow method)": [[201, "dipy.workflows.reconst.ReconstIvimFlow.run"]], "run() (dipy.workflows.reconst.reconstmapmriflow method)": [[201, "dipy.workflows.reconst.ReconstMAPMRIFlow.run"]], "run() (dipy.workflows.reconst.reconstrumbaflow method)": [[201, "dipy.workflows.reconst.ReconstRUMBAFlow.run"]], "run() (dipy.workflows.segment.evacplusflow method)": [[201, "dipy.workflows.segment.EVACPlusFlow.run"]], "run() (dipy.workflows.segment.labelsbundlesflow method)": [[201, "dipy.workflows.segment.LabelsBundlesFlow.run"]], "run() (dipy.workflows.segment.medianotsuflow method)": [[201, "dipy.workflows.segment.MedianOtsuFlow.run"]], "run() (dipy.workflows.segment.recobundlesflow method)": [[201, "dipy.workflows.segment.RecoBundlesFlow.run"]], "run() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[201, "dipy.workflows.stats.BundleAnalysisTractometryFlow.run"]], "run() (dipy.workflows.stats.bundleshapeanalysis method)": [[201, "dipy.workflows.stats.BundleShapeAnalysis.run"]], "run() (dipy.workflows.stats.linearmixedmodelsflow method)": [[201, "dipy.workflows.stats.LinearMixedModelsFlow.run"]], "run() (dipy.workflows.stats.snrinccflow method)": [[201, "dipy.workflows.stats.SNRinCCFlow.run"]], "run() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[201, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run"]], "run() (dipy.workflows.tracking.pftrackingpamflow method)": [[201, "dipy.workflows.tracking.PFTrackingPAMFlow.run"]], "run() (dipy.workflows.viz.horizonflow method)": [[201, "dipy.workflows.viz.HorizonFlow.run"]], "run() (dipy.workflows.workflow.workflow method)": [[201, "dipy.workflows.workflow.Workflow.run"]], "run_flow() (in module dipy.workflows.flow_runner)": [[201, "dipy.workflows.flow_runner.run_flow"]], "run_sub_flow() (dipy.workflows.combined_workflow.combinedworkflow method)": [[201, "dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow"]], "save_lmm_plot() (dipy.workflows.stats.linearmixedmodelsflow method)": [[201, "dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot"]], "seek_next_non_empty_line() (dipy.workflows.docstring_parser.reader method)": [[201, "dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line"]], "set_inputs() (dipy.workflows.multi_io.ioiterator method)": [[201, "dipy.workflows.multi_io.IOIterator.set_inputs"]], "set_out_dir() (dipy.workflows.multi_io.ioiterator method)": [[201, "dipy.workflows.multi_io.IOIterator.set_out_dir"]], "set_out_fnames() (dipy.workflows.multi_io.ioiterator method)": [[201, "dipy.workflows.multi_io.IOIterator.set_out_fnames"]], "set_output_keys() (dipy.workflows.multi_io.ioiterator method)": [[201, "dipy.workflows.multi_io.IOIterator.set_output_keys"]], "set_sub_flows_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[201, "dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals"]], "show_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.show_argument"]], "slash_to_under() (in module dipy.workflows.multi_io)": [[201, "dipy.workflows.multi_io.slash_to_under"]], "update_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[201, "dipy.workflows.base.IntrospectiveArgumentParser.update_argument"]]}}