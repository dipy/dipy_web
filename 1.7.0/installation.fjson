{"parents": [{"link": "../documentation/", "title": "Documentation"}], "prev": {"link": "../mission/", "title": "Mission statement"}, "next": {"link": "../data/", "title": "Data"}, "title": "Installation", "meta": {}, "body": "<section id=\"installation\">\n<span id=\"id1\"></span><h1>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p><a class=\"reference external\" href=\"http://dipy.org\">DIPY</a> is in active development. You can install it from our latest release, but\nyou may find that the release has gotten well behind the current development -\nat least - we hope so - if we\u2019re developing fast enough!</p>\n<p>If you want to install the latest and greatest from the bleeding edge of the\ndevelopment, skip to <a class=\"reference internal\" href=\"#from-source\"><span class=\"std std-ref\">Installing from source</span></a>. If you just want to install a released\nversion, read on for your platform.</p>\n<section id=\"installing-a-release\">\n<h2>Installing a release<a class=\"headerlink\" href=\"#installing-a-release\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>If you are on Debian or Ubuntu Linux we recommend you try\n<a class=\"reference internal\" href=\"#install-packages\"><span class=\"std std-ref\">Using Anaconda:</span></a> first. Otherwise please try <a class=\"reference internal\" href=\"#install-pip\"><span class=\"std std-ref\">Using pip:</span></a>.</p>\n<section id=\"using-anaconda\">\n<span id=\"install-packages\"></span><h3>Using Anaconda:<a class=\"headerlink\" href=\"#using-anaconda\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>On all platforms, you can use <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> to install DIPY. To do so issue the following command in a terminal:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">dipy</span>\n</pre></div>\n</div>\n<p>Some of the visualization methods require the <a class=\"reference external\" href=\"https://fury.gl\">FURY</a> library and this can be installed separately (for the time being only on Python 3.4+):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">fury</span>\n</pre></div>\n</div>\n</section>\n<section id=\"using-packages\">\n<h3>Using packages:<a class=\"headerlink\" href=\"#using-packages\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<section id=\"windows\">\n<h4>Windows<a class=\"headerlink\" href=\"#windows\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<ol class=\"arabic\">\n<li><p>First, install the python library dependencies. One easy way to do that is to\nuse the <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> distribution (see below for <a class=\"reference internal\" href=\"#alternatives\"><span class=\"std std-ref\">Alternatives to Anaconda</span></a>).</p></li>\n<li><p>Even with <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> installed, you will still need to install the <a class=\"reference external\" href=\"http://nipy.org/nibabel\">nibabel</a>\nlibrary, which supports reading and writing of neuroimaging data formats. Open\na terminal and type:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nibabel</span>\n</pre></div>\n</div>\n</li>\n<li><p>Finally, we are ready to install DIPY itself. Same as with <cite>nibabel</cite> above,\nwe will type at the terminal shell command line:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dipy</span>\n</pre></div>\n</div>\n<p>When the installation has finished we can check if it is successful in the following way. From a Python console script try:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n</pre></div>\n</div>\n<p>This should work with no error.</p>\n</li>\n<li><p>Some of the visualization methods require the <a class=\"reference external\" href=\"https://fury.gl\">FURY</a> library and this can be installed by doing</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">fury</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</section>\n<section id=\"osx\">\n<h4>OSX<a class=\"headerlink\" href=\"#osx\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<ol class=\"arabic\">\n<li><p>To use <a class=\"reference external\" href=\"http://dipy.org\">DIPY</a>, you need to have some <a class=\"reference internal\" href=\"../dependencies/#dependencies\"><span class=\"std std-ref\">Dependencies</span></a> installed. First of all, make sure that you have installed the Apple <a class=\"reference external\" href=\"http://developer.apple.com/TOOLS/xcode\">Xcode</a> developer tools. You\u2019ll need those to install all the following dependencies.</p></li>\n<li><p>Next, install the python library dependencies. One easy way to do that is to use the <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> distribution (see below for <a class=\"reference internal\" href=\"#alternatives\"><span class=\"std std-ref\">Alternatives to Anaconda</span></a>).</p></li>\n<li><p>Even with <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> installed, you will still need to install the <a class=\"reference external\" href=\"http://nipy.org/nibabel\">nibabel</a> library, which supports the reading and writing of neuroimaging data formats. Open a terminal and type:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nibabel</span>\n</pre></div>\n</div>\n</li>\n<li><p>Finally, we are ready to install DIPY itself. Same as with <cite>nibabel</cite> above, we will type at the terminal shell command line:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dipy</span>\n</pre></div>\n</div>\n<p>When the installation has finished we can check if it is successful in the following way. From a Python console script try:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n</pre></div>\n</div>\n<p>This should work with no error.</p>\n</li>\n<li><p>Some of the visualization methods require the <a class=\"reference external\" href=\"https://fury.gl\">FURY</a> library and this can be installed by doing:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">fury</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</section>\n<section id=\"linux\">\n<h4>Linux<a class=\"headerlink\" href=\"#linux\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>For Debian, Ubuntu and Mint set up the <a class=\"reference external\" href=\"http://neuro.debian.net\">NeuroDebian</a> repositories - see\n<a class=\"reference external\" href=\"http://neuro.debian.net/#how-to-use-this-repository\">NeuroDebian how to</a>. Then:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">dipy</span>\n</pre></div>\n</div>\n<p>We hope to get packages for the other Linux distributions, but for now, please\ntry <a class=\"reference internal\" href=\"#install-pip\"><span class=\"std std-ref\">Using pip:</span></a> instead.</p>\n</section>\n</section>\n<section id=\"using-pip\">\n<span id=\"install-pip\"></span><h3>Using pip:<a class=\"headerlink\" href=\"#using-pip\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>This method should work under Linux, Mac OS X, and Windows.</p>\n<p>Please install <a class=\"reference external\" href=\"http://numpy.scipy.org\">numpy</a> and <a class=\"reference external\" href=\"http://www.scipy.org\">scipy</a> using their respective binary installers if\nyou haven\u2019t already.</p>\n<p>For Windows and Mac OSX you can use <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> to get numpy, scipy, cython and lots\nof other useful python modules. <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> is a big package but will install many\ntools and libraries that are useful for scientific processing.</p>\n<p>When you have numpy, scipy and cython installed then try:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nibabel</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dipy</span>\n</pre></div>\n</div>\n<p>Then from any python console or script try:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n</pre></div>\n</div>\n</section>\n</section>\n<section id=\"support\">\n<h2>Support<a class=\"headerlink\" href=\"#support\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<section id=\"contact-us\">\n<h3>Contact us:<a class=\"headerlink\" href=\"#contact-us\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Do these installation instructions work for you? For any problems/suggestions please let us know by sending us an e-mail to the <a class=\"reference external\" href=\"https://mail.python.org/mailman/listinfo/neuroimaging\">nipy mailing list</a> with the subject line starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">[DIPY]</span></code>.</p>\n</section>\n<section id=\"common-problems\">\n<h3>Common problems:<a class=\"headerlink\" href=\"#common-problems\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<section id=\"multiple-installations\">\n<h4>Multiple installations<a class=\"headerlink\" href=\"#multiple-installations\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Make sure that you have uninstalled all previous versions of DIPY before installing a new one. A simple and general way to uninstall DIPY is by removing the installation directory. You can find where DIPY is installed by using:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n<span class=\"n\">dipy</span><span class=\"o\">.</span><span class=\"vm\">__file__</span>\n</pre></div>\n</div>\n<p>and then remove the DIPY directory that contains that file.</p>\n</section>\n<section id=\"alternatives-to-anaconda\">\n<span id=\"alternatives\"></span><h4>Alternatives to Anaconda<a class=\"headerlink\" href=\"#alternatives-to-anaconda\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>If you have problems installing <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> we recommend using <a class=\"reference external\" href=\"https://www.enthought.com/products/canopy\">Canopy</a> or <a class=\"reference external\" href=\"http://www.pythonxy.com\">pythonxy</a>.</p>\n</section>\n<section id=\"memory-issues\">\n<h4>Memory issues<a class=\"headerlink\" href=\"#memory-issues\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>DIPY can process large diffusion datasets. For this reason, we recommend using a 64bit operating system that can allocate larger memory chunks than 32bit operating systems. If you don\u2019t have a 64bit computer that is okay DIPY works with 32bit too.</p>\n</section>\n<section id=\"note-on-python-versions\">\n<span id=\"python-versions\"></span><h4>Note on python versions<a class=\"headerlink\" href=\"#note-on-python-versions\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Most DIPY functionality can be used with Python versions 2.6 and newer, including Python 3.\nHowever, some visualization functionality depends on FURY, which only supports Python 3 in versions 7 and newer.</p>\n</section>\n</section>\n</section>\n<section id=\"installing-from-source\">\n<span id=\"from-source\"></span><h2>Installing from source<a class=\"headerlink\" href=\"#installing-from-source\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<section id=\"getting-the-source\">\n<h3>Getting the source<a class=\"headerlink\" href=\"#getting-the-source\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>More likely you will want to get the source repository to be able to follow the\nlatest changes.  In that case, you can use:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dipy</span><span class=\"o\">/</span><span class=\"n\">dipy</span><span class=\"o\">.</span><span class=\"n\">git</span>\n</pre></div>\n</div>\n<p>For more information about this see <a class=\"reference internal\" href=\"../devel/gitwash/following_latest/#following-latest\"><span class=\"std std-ref\">Following the latest source</span></a>.</p>\n<p>After you\u2019ve cloned the repository, you will have a new directory, containing\nthe DIPY <code class=\"docutils literal notranslate\"><span class=\"pre\">setup.py</span></code> file, among others.  We\u2019ll call this directory - that\ncontains the <code class=\"docutils literal notranslate\"><span class=\"pre\">setup.py</span></code> file - the <em>DIPY source root directory</em>.  Sometimes\nwe\u2019ll also call it the <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;dipy</span> <span class=\"pre\">root&gt;</span></code> directory.</p>\n</section>\n<section id=\"building-and-installing\">\n<h3>Building and installing<a class=\"headerlink\" href=\"#building-and-installing\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<section id=\"install-from-source-all-operating-systems\">\n<h4>Install from source (all operating systems)<a class=\"headerlink\" href=\"#install-from-source-all-operating-systems\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Change directory into the <em>DIPY source root directory</em>.</p>\n<p>To clean your directory from temporary file, use:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">clean</span> <span class=\"o\">-</span><span class=\"n\">fxd</span>\n</pre></div>\n</div>\n<p>This command will delete all files not present in your github repository.</p>\n<p>Then, complete your installation by using this command:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">--</span><span class=\"n\">user</span> <span class=\"o\">-</span><span class=\"n\">e</span> <span class=\"o\">.</span>\n</pre></div>\n</div>\n<dl class=\"simple\">\n<dt>This command will do the following :</dt><dd><ul class=\"simple\">\n<li><p>remove the old dipy installation if present</p></li>\n<li><p>build dipy (equivalent to <cite>python setup.py build_ext \u2013inplace</cite>)</p></li>\n<li><p>install dipy locally on your user environment</p></li>\n</ul>\n</dd>\n</dl>\n</section>\n<section id=\"install-from-source-for-unix-e-g-linux-osx\">\n<span id=\"install-source-nix\"></span><h4>Install from source for Unix (e.g Linux, OSX)<a class=\"headerlink\" href=\"#install-from-source-for-unix-e-g-linux-osx\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Change directory into the <em>DIPY source root directory</em>.</p>\n<p>To install for the system:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">install</span>\n</pre></div>\n</div>\n<p>To build DIPY in the source tree (locally) so you can run the code in the source tree (recommended for following the latest source) run:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">build_ext</span> <span class=\"o\">--</span><span class=\"n\">inplace</span>\n</pre></div>\n</div>\n<p>add the <em>DIPY source root directory</em> into your <code class=\"docutils literal notranslate\"><span class=\"pre\">PYTHONPATH</span></code> environment variable. Search google for <code class=\"docutils literal notranslate\"><span class=\"pre\">PYTHONPATH</span></code> for details or see <a class=\"reference external\" href=\"http://docs.python.org/tutorial/modules.html#the-module-search-path\">python module path</a> for an introduction.</p>\n<p>When adding <a class=\"reference external\" href=\"http://dipy.org\">dipy</a> to the <code class=\"docutils literal notranslate\"><span class=\"pre\">PYTHONPATH</span></code>, we usually add the <code class=\"docutils literal notranslate\"><span class=\"pre\">PYTHONPATH</span></code> at\nthe end of <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code> or (OSX) <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bash_profile</span></code> so we don\u2019t need to\nretype it every time. This should look something like:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">export</span> <span class=\"n\">PYTHONPATH</span><span class=\"o\">=</span><span class=\"s2\">&quot;/home/user_dir/Devel/dipy:$PYTHONPATH&quot;</span>\n</pre></div>\n</div>\n<p>After changing the <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code> or (OSX) <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bash_profile</span></code> try:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">source</span> <span class=\"o\">~/.</span><span class=\"n\">bashrc</span>\n</pre></div>\n</div>\n<p>or:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">source</span> <span class=\"o\">~/.</span><span class=\"n\">bash_profile</span>\n</pre></div>\n</div>\n<p>so that you can have immediate access to <a class=\"reference external\" href=\"http://dipy.org\">DIPY</a> without needing to\nrestart your terminal.</p>\n</section>\n<section id=\"ubuntu-debian\">\n<h4>Ubuntu/Debian<a class=\"headerlink\" href=\"#ubuntu-debian\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">dev</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">setuptools</span>\n<span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">numpy</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">scipy</span>\n<span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">cython</span>\n</pre></div>\n</div>\n<p>then:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sudo</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nibabel</span>\n</pre></div>\n</div>\n<p>(we need the latest version of this one - hence <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code> rather than\n<code class=\"docutils literal notranslate\"><span class=\"pre\">apt-get</span></code>).</p>\n<p>You might want the optional packages too (highly recommended):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">ipython</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">h5py</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">vtk</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">matplotlib</span>\n</pre></div>\n</div>\n<p>Now follow <a class=\"reference internal\" href=\"#install-source-nix\"><span class=\"std std-ref\">Install from source for Unix (e.g Linux, OSX)</span></a>.</p>\n</section>\n<section id=\"fedora-mandriva-maybe-redhat\">\n<h4>Fedora / Mandriva maybe Redhat<a class=\"headerlink\" href=\"#fedora-mandriva-maybe-redhat\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Same as above but use yum rather than apt-get when necessary.</p>\n<p>Now follow <a class=\"reference internal\" href=\"#install-source-nix\"><span class=\"std std-ref\">Install from source for Unix (e.g Linux, OSX)</span></a>.</p>\n</section>\n<section id=\"id2\">\n<h4>Windows<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p><a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> is probably the easiest way to install the dependencies that you need.\nTo build from source, you will also need to install the exact compiler which is\nused with your specific version of python.</p>\n<p>For getting this information, type this command in shell like <code class=\"docutils literal notranslate\"><span class=\"pre\">cmd</span></code> or <a class=\"reference external\" href=\"http://www.microsoft.com/powershell\">Powershell</a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s2\">&quot;import platform;print(platform.python_compiler())&quot;</span>\n</pre></div>\n</div>\n<p>This command should print information of this form:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">MSC</span> <span class=\"n\">v</span><span class=\"mf\">.1900</span> <span class=\"mi\">64</span> <span class=\"n\">bit</span> <span class=\"p\">(</span><span class=\"n\">AMD64</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now that you find the relevant compiler, you have to install the <a class=\"reference external\" href=\"http://landinghub.visualstudio.com/visual-cpp-build-tools\">VisualStudioBuildTools</a>\nby respecting the following table:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Visual</span> <span class=\"n\">C</span><span class=\"o\">++</span> <span class=\"mi\">2008</span>  <span class=\"p\">(</span><span class=\"mf\">9.0</span><span class=\"p\">)</span>          <span class=\"n\">MSC_VER</span><span class=\"o\">=</span><span class=\"mi\">1500</span>\n<span class=\"n\">Visual</span> <span class=\"n\">C</span><span class=\"o\">++</span> <span class=\"mi\">2010</span> <span class=\"p\">(</span><span class=\"mf\">10.0</span><span class=\"p\">)</span>          <span class=\"n\">MSC_VER</span><span class=\"o\">=</span><span class=\"mi\">1600</span>\n<span class=\"n\">Visual</span> <span class=\"n\">C</span><span class=\"o\">++</span> <span class=\"mi\">2012</span> <span class=\"p\">(</span><span class=\"mf\">11.0</span><span class=\"p\">)</span>          <span class=\"n\">MSC_VER</span><span class=\"o\">=</span><span class=\"mi\">1700</span>\n<span class=\"n\">Visual</span> <span class=\"n\">C</span><span class=\"o\">++</span> <span class=\"mi\">2013</span> <span class=\"p\">(</span><span class=\"mf\">12.0</span><span class=\"p\">)</span>          <span class=\"n\">MSC_VER</span><span class=\"o\">=</span><span class=\"mi\">1800</span>\n<span class=\"n\">Visual</span> <span class=\"n\">C</span><span class=\"o\">++</span> <span class=\"mi\">2015</span> <span class=\"p\">(</span><span class=\"mf\">14.0</span><span class=\"p\">)</span>          <span class=\"n\">MSC_VER</span><span class=\"o\">=</span><span class=\"mi\">1900</span>\n<span class=\"n\">Visual</span> <span class=\"n\">C</span><span class=\"o\">++</span> <span class=\"mi\">2017</span> <span class=\"p\">(</span><span class=\"mf\">15.0</span><span class=\"p\">)</span>          <span class=\"n\">MSC_VER</span><span class=\"o\">=</span><span class=\"mi\">1910</span>\n</pre></div>\n</div>\n<p>After the <a class=\"reference external\" href=\"http://landinghub.visualstudio.com/visual-cpp-build-tools\">VisualStudioBuildTools</a> installation,  restart a command shell and\nchange directory into the <em>DIPY source root directory</em>.</p>\n<p>To install into your system:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">install</span>\n</pre></div>\n</div>\n<p>To install inplace - so that DIPY is running out of the source code directory:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">develop</span>\n</pre></div>\n</div>\n<p>(this is the mode we recommend for following the latest source code).  If you\nget an error with <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span> <span class=\"pre\">setup.py</span> <span class=\"pre\">develop</span></code> make sure you have installed\n<a class=\"reference external\" href=\"http://pypi.python.org/pypi/setuptools\">setuptools</a>.</p>\n<p>If you get an error saying  \u201cunable to find vcvarsall.bat\u201d then you need to\ncheck your environment variable <code class=\"docutils literal notranslate\"><span class=\"pre\">PATH</span></code> or reinstall <a class=\"reference external\" href=\"http://landinghub.visualstudio.com/visual-cpp-build-tools\">VisualStudioBuildTools</a>.\nSetuptools should automatically detect the compiler and use it.</p>\n</section>\n<section id=\"id3\">\n<h4>OSX<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Make sure you have <a class=\"reference external\" href=\"http://developer.apple.com/TOOLS/xcode\">Xcode</a> and <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> installed.</p>\n<p>From here follow the <a class=\"reference internal\" href=\"#install-source-nix\"><span class=\"std std-ref\">Install from source for Unix (e.g Linux, OSX)</span></a> instructions.</p>\n</section>\n<section id=\"openmp-with-osx\">\n<h4>OpenMP with OSX<a class=\"headerlink\" href=\"#openmp-with-osx\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p><a class=\"reference external\" href=\"http://www.openmp.org/\">OpenMP</a> is a standard library for efficient multithreaded applications. This\nis used in DIPY for speeding up many different parts of the library (e.g., denoising\nand bundle registration). If you do not have an OpenMP-enabled compiler, you can\nstill compile DIPY from source using the above instructions, but it might not take\nadvantage of the multithreaded parts of the code. To be able to compile\nDIPY from source with OpenMP on Mac OSX, you will have to do a few more things. First\nof all, you will need to install the <a class=\"reference external\" href=\"http://brew.sh/\">Homebrew</a> package manager. Next, you will need\nto install and configure the compiler. You have two options: using the GCC compiler\nor the CLANG compiler. This depends on your python installation:</p>\n<section id=\"under-anaconda\">\n<h5>Under Anaconda<a class=\"headerlink\" href=\"#under-anaconda\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<p>If you are using <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a>, you will need to use GCC. The first option is to run the following command:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"n\">gcc</span>\n</pre></div>\n</div>\n<p>After this installation, gcc will be your default compiler in <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> environment.</p>\n<p>The second option is to install gcc via homebrew. Run the following:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">brew</span> <span class=\"n\">reinstall</span> <span class=\"n\">gcc</span> <span class=\"o\">--</span><span class=\"n\">without</span><span class=\"o\">-</span><span class=\"n\">multilib</span>\n</pre></div>\n</div>\n<p>This should take about 45 minutes to complete. Then add to your bash\nconfiguration (usually in <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bash_profile</span></code>), the following:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">export</span> <span class=\"n\">PATH</span><span class=\"o\">=</span><span class=\"s2\">&quot;/usr/local/Cellar/gcc/5.2.0/bin/gcc-5:$PATH&quot;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"under-homebrew-python-or-python-org-python\">\n<h5>Under Homebrew Python or python.org Python<a class=\"headerlink\" href=\"#under-homebrew-python-or-python-org-python\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<p>If you are already using the Homebrew Python, or the standard python.org Python,\nyou will need to use the CLANG compiler with OMP. Run:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">brew</span> <span class=\"n\">install</span> <span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"n\">omp</span>\n</pre></div>\n</div>\n<p>And then edit the <code class=\"docutils literal notranslate\"><span class=\"pre\">setup.py</span></code> file to include the following line (e.g., on line 14,\nat the top of the file, but after the initial imports):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;CC&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/usr/local/bin/clang-omp&#39;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id4\">\n<h5>Building and installing<a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<p>Whether you are using <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> or Hombrew/python.org Python, you will need to then\nrun <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span> <span class=\"pre\">setup.py</span> <span class=\"pre\">install</span></code>. When you do that, it should now\ncompile the code with this OpenMP-enabled compiler, and things should go faster!</p>\n</section>\n</section>\n</section>\n<section id=\"testing\">\n<h3>Testing<a class=\"headerlink\" href=\"#testing\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>If you want to run the tests:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sudo</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pytest</span>\n</pre></div>\n</div>\n<p>Then (in python or <a class=\"reference external\" href=\"http://www.ipython.org/\">ipython</a>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dipy</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>You can also run the examples in <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;dipy</span> <span class=\"pre\">root&gt;/doc</span></code>.</p>\n</section>\n<section id=\"documentation-unix-only\">\n<h3>Documentation (Unix only)<a class=\"headerlink\" href=\"#documentation-unix-only\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>To build the documentation in HTML in your computer you will need to do:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sudo</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">sphinx</span>\n</pre></div>\n</div>\n<p>Then change directory to <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;dipy</span> <span class=\"pre\">root&gt;</span></code> and:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cd</span> <span class=\"n\">doc</span>\n<span class=\"n\">make</span> <span class=\"n\">clean</span>\n<span class=\"n\">make</span> <span class=\"n\">html</span>\n</pre></div>\n</div>\n<section id=\"tip\">\n<h4>Tip<a class=\"headerlink\" href=\"#tip\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Building the entire <code class=\"docutils literal notranslate\"><span class=\"pre\">DIPY</span></code> documentation takes a few hours. You may want to\nskip building the documentation for the examples, which will reduce the\ndocumentation build time to a few minutes. You can do so by executing:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">make</span> <span class=\"o\">-</span><span class=\"n\">C</span> <span class=\"o\">.</span> <span class=\"n\">html</span><span class=\"o\">-</span><span class=\"n\">after</span><span class=\"o\">-</span><span class=\"n\">examples</span>\n</pre></div>\n</div>\n</section>\n<section id=\"troubleshooting\">\n<h4>Troubleshooting<a class=\"headerlink\" href=\"#troubleshooting\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>If you encounter the following error when trying to build the documentation:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">tools</span><span class=\"o\">/</span><span class=\"n\">build_modref_templates</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">dipy</span> <span class=\"n\">reference</span>\n<span class=\"o\">*</span><span class=\"n\">WARNING</span><span class=\"o\">*</span> <span class=\"n\">API</span> <span class=\"n\">documentation</span> <span class=\"ow\">not</span> <span class=\"n\">generated</span><span class=\"p\">:</span> <span class=\"n\">Can</span> <span class=\"ow\">not</span> <span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n<span class=\"n\">tools</span><span class=\"o\">/</span><span class=\"n\">docgen_cmd</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">dipy</span> <span class=\"n\">reference_cmd</span>\n<span class=\"o\">*</span><span class=\"n\">WARNING</span><span class=\"o\">*</span> <span class=\"n\">Command</span> <span class=\"n\">line</span> <span class=\"n\">API</span> <span class=\"n\">documentation</span> <span class=\"ow\">not</span> <span class=\"n\">generated</span><span class=\"p\">:</span> <span class=\"n\">Cannot</span> <span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n<span class=\"n\">Build</span> <span class=\"n\">API</span> <span class=\"n\">docs</span><span class=\"o\">...</span><span class=\"n\">done</span><span class=\"o\">.</span>\n<span class=\"n\">cd</span> <span class=\"n\">examples_built</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">../../</span><span class=\"n\">tools</span><span class=\"o\">/</span><span class=\"n\">make_examples</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;../../tools/make_examples.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">33</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n<span class=\"ne\">ModuleNotFoundError</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">module</span> <span class=\"n\">named</span> <span class=\"s1\">&#39;dipy&#39;</span>\n</pre></div>\n</div>\n<p>it is probably due to a conflict between the picked <code class=\"docutils literal notranslate\"><span class=\"pre\">Sphinx</span></code> version: this\nhappens when the system\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">Sphinx</span></code> package is used instead of the virtual\nenvironment\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">Sphinx</span></code> package, and the former trying to import a <code class=\"docutils literal notranslate\"><span class=\"pre\">DIPY</span></code>\nversion in the system: the <code class=\"docutils literal notranslate\"><span class=\"pre\">Sphinx</span></code> package used should correspond to that of\nthe virtual environment where <code class=\"docutils literal notranslate\"><span class=\"pre\">DIPY</span></code> lives. This can be solved by specifying\nthe path to the <code class=\"docutils literal notranslate\"><span class=\"pre\">Sphinx</span></code> package in the virtual environment:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">make</span> <span class=\"n\">html</span> <span class=\"n\">SPHINXBUILD</span><span class=\"o\">=</span><span class=\"s1\">&#39;python &lt;path_to_sphinx&gt;/sphinx-build&#39;</span>\n</pre></div>\n</div>\n</section>\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["data", "Data", "N", "next"], ["mission", "Mission statement", "P", "previous"]], "sourcename": "installation.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Installation</a><ul>\n<li><a class=\"reference internal\" href=\"#installing-a-release\">Installing a release</a><ul>\n<li><a class=\"reference internal\" href=\"#using-anaconda\">Using Anaconda:</a></li>\n<li><a class=\"reference internal\" href=\"#using-packages\">Using packages:</a><ul>\n<li><a class=\"reference internal\" href=\"#windows\">Windows</a></li>\n<li><a class=\"reference internal\" href=\"#osx\">OSX</a></li>\n<li><a class=\"reference internal\" href=\"#linux\">Linux</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#using-pip\">Using pip:</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#support\">Support</a><ul>\n<li><a class=\"reference internal\" href=\"#contact-us\">Contact us:</a></li>\n<li><a class=\"reference internal\" href=\"#common-problems\">Common problems:</a><ul>\n<li><a class=\"reference internal\" href=\"#multiple-installations\">Multiple installations</a></li>\n<li><a class=\"reference internal\" href=\"#alternatives-to-anaconda\">Alternatives to Anaconda</a></li>\n<li><a class=\"reference internal\" href=\"#memory-issues\">Memory issues</a></li>\n<li><a class=\"reference internal\" href=\"#note-on-python-versions\">Note on python versions</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#installing-from-source\">Installing from source</a><ul>\n<li><a class=\"reference internal\" href=\"#getting-the-source\">Getting the source</a></li>\n<li><a class=\"reference internal\" href=\"#building-and-installing\">Building and installing</a><ul>\n<li><a class=\"reference internal\" href=\"#install-from-source-all-operating-systems\">Install from source (all operating systems)</a></li>\n<li><a class=\"reference internal\" href=\"#install-from-source-for-unix-e-g-linux-osx\">Install from source for Unix (e.g Linux, OSX)</a></li>\n<li><a class=\"reference internal\" href=\"#ubuntu-debian\">Ubuntu/Debian</a></li>\n<li><a class=\"reference internal\" href=\"#fedora-mandriva-maybe-redhat\">Fedora / Mandriva maybe Redhat</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">Windows</a></li>\n<li><a class=\"reference internal\" href=\"#id3\">OSX</a></li>\n<li><a class=\"reference internal\" href=\"#openmp-with-osx\">OpenMP with OSX</a><ul>\n<li><a class=\"reference internal\" href=\"#under-anaconda\">Under Anaconda</a></li>\n<li><a class=\"reference internal\" href=\"#under-homebrew-python-or-python-org-python\">Under Homebrew Python or python.org Python</a></li>\n<li><a class=\"reference internal\" href=\"#id4\">Building and installing</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#testing\">Testing</a></li>\n<li><a class=\"reference internal\" href=\"#documentation-unix-only\">Documentation (Unix only)</a><ul>\n<li><a class=\"reference internal\" href=\"#tip\">Tip</a></li>\n<li><a class=\"reference internal\" href=\"#troubleshooting\">Troubleshooting</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "installation", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}