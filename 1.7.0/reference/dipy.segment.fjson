{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.reconst/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>"}, "next": {"link": "../dipy.sims/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>", "meta": {}, "body": "<section id=\"module-dipy.segment\">\n<span id=\"segment\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code><a class=\"headerlink\" href=\"#module-dipy.segment\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n<section id=\"module-dipy.segment.benchmarks\">\n<span id=\"module-segment-benchmarks\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.benchmarks</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.benchmarks\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.segment.benchmarks.bench_quickbundles\">\n<span id=\"module-segment-benchmarks-bench-quickbundles\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.benchmarks.bench_quickbundles</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.benchmarks.bench_quickbundles\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Benchmarks for QuickBundles</p>\n<p>Run all benchmarks with:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy.segment</span> <span class=\"k\">as</span> <span class=\"nn\">dipysegment</span>\n<span class=\"n\">dipysegment</span><span class=\"o\">.</span><span class=\"n\">bench</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>With Pytest, Run this benchmark with:</p>\n<blockquote>\n<div><p>pytest -svv -c bench.ini /path/to/bench_quickbundles.py</p>\n</div></blockquote>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy\" title=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">MDFpy</span></code></a></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles\" title=\"dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">bench_quickbundles</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.segment.bundles\">\n<span id=\"module-segment-bundles\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.bundles</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.bundles\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.bundles.RecoBundles\" title=\"dipy.segment.bundles.RecoBundles\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">RecoBundles</span></code></a>(streamlines[,\u00a0greater_than,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.bundles.check_range\" title=\"dipy.segment.bundles.check_range\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">check_range</span></code></a>(streamline,\u00a0gt,\u00a0lt)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.bundles.logger\" title=\"dipy.segment.bundles.logger\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">logger</span></code></a></p></td>\n<td><p>Instances of the Logger class represent a single logging channel.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.bundles.bundle_adjacency\" title=\"dipy.segment.bundles.bundle_adjacency\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">bundle_adjacency</span></code></a>(dtracks0,\u00a0dtracks1,\u00a0threshold)</p></td>\n<td><p>Find bundle adjacency between two given tracks/bundles</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.bundles.ba_analysis\" title=\"dipy.segment.bundles.ba_analysis\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ba_analysis</span></code></a>(recognized_bundle,\u00a0expert_bundle)</p></td>\n<td><p>Calculates bundle adjacency score between two given bundles</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.bundles.cluster_bundle\" title=\"dipy.segment.bundles.cluster_bundle\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">cluster_bundle</span></code></a>(bundle,\u00a0clust_thr,\u00a0rng[,\u00a0...])</p></td>\n<td><p>Clusters bundles</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.bundles.bundle_shape_similarity\" title=\"dipy.segment.bundles.bundle_shape_similarity\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">bundle_shape_similarity</span></code></a>(bundle1,\u00a0bundle2,\u00a0rng)</p></td>\n<td><p>Calculates bundle shape similarity between two given bundles using bundle adjacency (BA) metric</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.segment.clustering\">\n<span id=\"module-segment-clustering\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.clustering</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.clustering\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.Identity\" title=\"dipy.segment.clustering.Identity\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Identity</span></code></a>()</p></td>\n<td><p>Provides identity indexing functionality.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster\" title=\"dipy.segment.clustering.Cluster\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Cluster</span></code></a>([id,\u00a0indices,\u00a0refdata])</p></td>\n<td><p>Provides functionalities for interacting with a cluster.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid\" title=\"dipy.segment.clustering.ClusterCentroid\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ClusterCentroid</span></code></a>(centroid[,\u00a0id,\u00a0indices,\u00a0refdata])</p></td>\n<td><p>Provides functionalities for interacting with a cluster.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap\" title=\"dipy.segment.clustering.ClusterMap\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ClusterMap</span></code></a>([refdata])</p></td>\n<td><p>Provides functionalities for interacting with clustering outputs.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMapCentroid\" title=\"dipy.segment.clustering.ClusterMapCentroid\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ClusterMapCentroid</span></code></a>([refdata])</p></td>\n<td><p>Provides functionalities for interacting with clustering outputs that have centroids.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering\" title=\"dipy.segment.clustering.Clustering\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Clustering</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundles\" title=\"dipy.segment.clustering.QuickBundles\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">QuickBundles</span></code></a>(threshold[,\u00a0metric,\u00a0...])</p></td>\n<td><p>Clusters streamlines using QuickBundles <a class=\"reference internal\" href=\"../../examples_built/23_segmentation/segment_quickbundles/#garyfallidis12\" id=\"id1\"><span>[Garyfallidis12]</span></a>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundlesX\" title=\"dipy.segment.clustering.QuickBundlesX\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">QuickBundlesX</span></code></a>(thresholds[,\u00a0metric])</p></td>\n<td><p>Clusters streamlines using QuickBundlesX.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeCluster\" title=\"dipy.segment.clustering.TreeCluster\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">TreeCluster</span></code></a>(threshold,\u00a0centroid[,\u00a0indices])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeClusterMap\" title=\"dipy.segment.clustering.TreeClusterMap\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">TreeClusterMap</span></code></a>(root)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.logger\" title=\"dipy.segment.clustering.logger\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">logger</span></code></a></p></td>\n<td><p>Instances of the Logger class represent a single logging channel.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.clustering.qbx_and_merge\" title=\"dipy.segment.clustering.qbx_and_merge\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">qbx_and_merge</span></code></a>(streamlines,\u00a0thresholds[,\u00a0...])</p></td>\n<td><p>Run QuickBundlesX and then run again on the centroids of the last layer</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.segment.fss\">\n<span id=\"module-segment-fss\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.fss</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.fss\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.fss.FastStreamlineSearch\" title=\"dipy.segment.fss.FastStreamlineSearch\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">FastStreamlineSearch</span></code></a>(ref_streamlines,\u00a0max_radius)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.fss.nearest_from_matrix_row\" title=\"dipy.segment.fss.nearest_from_matrix_row\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">nearest_from_matrix_row</span></code></a>(coo_matrix)</p></td>\n<td><p>Return the nearest (smallest) for each row given an coup sparse matrix</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.fss.nearest_from_matrix_col\" title=\"dipy.segment.fss.nearest_from_matrix_col\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">nearest_from_matrix_col</span></code></a>(coo_matrix)</p></td>\n<td><p>Return the nearest (smallest) for each column given an coup sparse matrix</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.segment.mask\">\n<span id=\"module-segment-mask\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.mask</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.mask\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.mask.multi_median\" title=\"dipy.segment.mask.multi_median\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">multi_median</span></code></a>(data,\u00a0median_radius,\u00a0numpass)</p></td>\n<td><p>Applies median filter multiple times on input data.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.mask.applymask\" title=\"dipy.segment.mask.applymask\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">applymask</span></code></a>(vol,\u00a0mask)</p></td>\n<td><p>Mask vol with mask.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.mask.bounding_box\" title=\"dipy.segment.mask.bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">bounding_box</span></code></a>(vol)</p></td>\n<td><p>Compute the bounding box of nonzero intensity voxels in the volume.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.mask.crop\" title=\"dipy.segment.mask.crop\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">crop</span></code></a>(vol,\u00a0mins,\u00a0maxs)</p></td>\n<td><p>Crops the input volume.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.mask.median_otsu\" title=\"dipy.segment.mask.median_otsu\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">median_otsu</span></code></a>(input_volume[,\u00a0vol_idx,\u00a0...])</p></td>\n<td><p>Simple brain extraction tool method for images from DWI data.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.mask.segment_from_cfa\" title=\"dipy.segment.mask.segment_from_cfa\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">segment_from_cfa</span></code></a>(tensor_fit,\u00a0roi,\u00a0threshold)</p></td>\n<td><p>Segment the cfa inside roi using the values from threshold as bounds.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.mask.clean_cc_mask\" title=\"dipy.segment.mask.clean_cc_mask\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">clean_cc_mask</span></code></a>(mask)</p></td>\n<td><p>Cleans a segmentation of the corpus callosum so no random pixels are included.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.segment.metric\">\n<span id=\"module-segment-metric\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.metric</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.metric\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.metric.mdf\" title=\"dipy.segment.metric.mdf\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mdf</span></code></a>(s1,\u00a0s2)</p></td>\n<td><p>Computes the MDF (Minimum average Direct-Flip) distance <a class=\"reference internal\" href=\"../../examples_built/23_segmentation/segment_quickbundles/#garyfallidis12\" id=\"id2\"><span>[Garyfallidis12]</span></a> between two streamlines.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.metric.mean_manhattan_distance\" title=\"dipy.segment.metric.mean_manhattan_distance\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mean_manhattan_distance</span></code></a>(a,\u00a0b)</p></td>\n<td><p>Compute the average Manhattan-L1 distance (MDF without flip)</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.metric.mean_euclidean_distance\" title=\"dipy.segment.metric.mean_euclidean_distance\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mean_euclidean_distance</span></code></a>(a,\u00a0b)</p></td>\n<td><p>Compute the average Euclidean-L2 distance (MDF without flip)</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.segment.threshold\">\n<span id=\"module-segment-threshold\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.threshold</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.threshold\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.threshold.otsu\" title=\"dipy.segment.threshold.otsu\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">otsu</span></code></a>(image[,\u00a0nbins])</p></td>\n<td><p>Return threshold value based on Otsu's method.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.threshold.upper_bound_by_rate\" title=\"dipy.segment.threshold.upper_bound_by_rate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">upper_bound_by_rate</span></code></a>(data[,\u00a0rate])</p></td>\n<td><p>Adjusts upper intensity boundary using rates</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.threshold.upper_bound_by_percent\" title=\"dipy.segment.threshold.upper_bound_by_percent\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">upper_bound_by_percent</span></code></a>(data[,\u00a0percent])</p></td>\n<td><p>Find the upper bound for visualization of medical images</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.segment.tissue\">\n<span id=\"module-segment-tissue\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.tissue</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.tissue\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.segment.tissue.TissueClassifierHMRF\" title=\"dipy.segment.tissue.TissueClassifierHMRF\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">TissueClassifierHMRF</span></code></a>([save_history,\u00a0verbose])</p></td>\n<td><p>This class contains the methods for tissue classification using the Markov Random Fields modeling approach</p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"mdfpy\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy\" title=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MDFpy</span></code></a><a class=\"headerlink\" href=\"#mdfpy\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.benchmarks.bench_quickbundles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">MDFpy</span></span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Metric</span></code></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible\">\n<span class=\"sig-name descname\"><span class=\"pre\">are_compatible</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shape1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shape2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</p>\n<p>Basically this method exists so we don\u2019t have to do this check\ninside the <cite>metric.dist</cite> function (speedup).</p>\n<section id=\"parameters\">\n<h4>Parameters<a class=\"headerlink\" href=\"#parameters\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>shape1<span class=\"classifier\">int, 1-tuple or 2-tuple</span></dt><dd><p>shape of the first data point\u2019s features</p>\n</dd>\n<dt>shape2<span class=\"classifier\">int, 1-tuple or 2-tuple</span></dt><dd><p>shape of the second data point\u2019s features</p>\n</dd>\n</dl>\n</section>\n<section id=\"returns\">\n<h4>Returns<a class=\"headerlink\" href=\"#returns\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>are_compatible<span class=\"classifier\">bool</span></dt><dd><p>whether or not shapes are compatible</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist\">\n<span class=\"sig-name descname\"><span class=\"pre\">dist</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">features1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">features2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes a distance between two data points based on their features.</p>\n<section id=\"id3\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>features1<span class=\"classifier\">2D array</span></dt><dd><p>Features of the first data point.</p>\n</dd>\n<dt>features2<span class=\"classifier\">2D array</span></dt><dd><p>Features of the second data point.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id4\">\n<h4>Returns<a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>double</dt><dd><p>Distance between two data points.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"bench-quickbundles\">\n<h3>bench_quickbundles<a class=\"headerlink\" href=\"#bench-quickbundles\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.benchmarks.bench_quickbundles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">bench_quickbundles</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"recobundles\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.bundles.RecoBundles\" title=\"dipy.segment.bundles.RecoBundles\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RecoBundles</span></code></a><a class=\"headerlink\" href=\"#recobundles\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.RecoBundles\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.bundles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">RecoBundles</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">greater_than</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">less_than</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1000000</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cluster_map</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clust_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">15</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_pts</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rng</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.RecoBundles\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.RecoBundles.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">greater_than</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">less_than</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1000000</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cluster_map</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clust_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">15</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_pts</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rng</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.RecoBundles.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Recognition of bundles</p>\n<p>Extract bundles from a participants\u2019 tractograms using model bundles\nsegmented from a different subject or an atlas of bundles.\nSee <a class=\"reference internal\" href=\"../../examples_built/23_segmentation/bundle_extraction/#garyfallidis17\" id=\"id5\"><span>[Garyfallidis17]</span></a> for the details.</p>\n<section id=\"id6\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">Streamlines</span></dt><dd><p>The tractogram in which you want to recognize bundles.</p>\n</dd>\n<dt>greater_than<span class=\"classifier\">int, optional</span></dt><dd><p>Keep streamlines that have length greater than\nthis value (default 50)</p>\n</dd>\n<dt>less_than<span class=\"classifier\">int, optional</span></dt><dd><p>Keep streamlines have length less than this value (default 1000000)</p>\n</dd>\n<dt>cluster_map<span class=\"classifier\">QB map, optional.</span></dt><dd><p>Provide existing clustering to start RB faster (default None).</p>\n</dd>\n<dt>clust_thr<span class=\"classifier\">float, optional.</span></dt><dd><p>Distance threshold in mm for clustering <cite>streamlines</cite>.\nDefault: 15.</p>\n</dd>\n<dt>nb_pts<span class=\"classifier\">int, optional.</span></dt><dd><p>Number of points per streamline (default 20)</p>\n</dd>\n<dt>rng<span class=\"classifier\">RandomState</span></dt><dd><p>If None define RandomState in initialization function.\nDefault: None</p>\n</dd>\n<dt>verbose: bool, optional.</dt><dd><p>If True, log information.</p>\n</dd>\n</dl>\n</section>\n<section id=\"notes\">\n<h4>Notes<a class=\"headerlink\" href=\"#notes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Make sure that before creating this class that the streamlines and\nthe model bundles are roughly in the same space.\nAlso default thresholds are assumed in RAS 1mm^3 space. You may\nwant to adjust those if your streamlines are not in world coordinates.</p>\n</section>\n<section id=\"references\">\n<h4>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"garyfallidis17\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis17<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis et al. Recognition of white matter\nbundles using local and global streamline-based registration and\nclustering, Neuroimage, 2017.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.RecoBundles.evaluate_results\">\n<span class=\"sig-name descname\"><span class=\"pre\">evaluate_results</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pruned_streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_select</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.RecoBundles.evaluate_results\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compare the similarity between two given bundles, model bundle,\nand extracted bundle.</p>\n<section id=\"id7\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>model_bundle : Streamlines\npruned_streamlines : Streamlines\nslr_select : tuple</p>\n<blockquote>\n<div><p>Select the number of streamlines from model to neirborhood of\nmodel to perform the local SLR.</p>\n</div></blockquote>\n</section>\n<section id=\"id8\">\n<h4>Returns<a class=\"headerlink\" href=\"#id8\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ba_value<span class=\"classifier\">float</span></dt><dd><p>bundle adjacency value between model bundle and pruned bundle</p>\n</dd>\n<dt>bmd_value<span class=\"classifier\">float</span></dt><dd><p>bundle minimum distance value between model bundle and\npruned bundle</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.RecoBundles.recognize\">\n<span class=\"sig-name descname\"><span class=\"pre\">recognize</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_clust_thr</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reduction_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reduction_distance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mdf'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_threads</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_x0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_bounds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(400,</span> <span class=\"pre\">600)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'L-BFGS-B'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pruning_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pruning_distance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mdf'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.RecoBundles.recognize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Recognize the model_bundle in self.streamlines</p>\n<section id=\"id9\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>model_bundle<span class=\"classifier\">Streamlines</span></dt><dd><p>model bundle streamlines used as a reference to extract similar\nstreamlines from input tractogram</p>\n</dd>\n<dt>model_clust_thr<span class=\"classifier\">float</span></dt><dd><p>MDF distance threshold for the model bundles</p>\n</dd>\n<dt>reduction_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Reduce search space in the target tractogram by (mm) (default 10)</p>\n</dd>\n<dt>reduction_distance<span class=\"classifier\">string, optional</span></dt><dd><p>Reduction distance type can be mdf or mam (default mdf)</p>\n</dd>\n<dt>slr<span class=\"classifier\">bool, optional</span></dt><dd><p>Use Streamline-based Linear Registration (SLR) locally\n(default True)</p>\n</dd>\n<dt>num_threads<span class=\"classifier\">int, optional</span></dt><dd><p>Number of threads to be used for OpenMP parallelization. If None\n(default) the value of OMP_NUM_THREADS environment variable is used\nif it is set, otherwise all available threads are used. If &lt; 0 the\nmaximal number of threads minus <a href=\"#id123\"><span class=\"problematic\" id=\"id124\">|num_threads + 1|</span></a> is used (enter -1\nto use as many threads as possible). 0 raises an error.</p>\n</dd>\n</dl>\n<p>slr_metric : BundleMinDistanceMetric\nslr_x0 : array or int or str, optional</p>\n<blockquote>\n<div><p>Transformation allowed. translation, rigid, similarity or scaling\nInitial parametrization for the optimization.</p>\n<dl>\n<dt>If 1D array with:</dt><dd><p>a) 6 elements then only rigid registration is performed with\nthe 3 first elements for translation and 3 for rotation.\nb) 7 elements also isotropic scaling is performed (similarity).\nc) 12 elements then translation, rotation (in degrees),\nscaling and shearing are performed (affine).</p>\n<p>Here is an example of x0 with 12 elements:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">x0=np.array([0,</span> <span class=\"pre\">10,</span> <span class=\"pre\">0,</span> <span class=\"pre\">40,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">2.,</span> <span class=\"pre\">1.5,</span> <span class=\"pre\">1,</span> <span class=\"pre\">0.1,</span> <span class=\"pre\">-0.5,</span> <span class=\"pre\">0])</span></code></p>\n<p>This has translation (0, 10, 0), rotation (40, 0, 0) in\ndegrees, scaling (2., 1.5, 1) and shearing (0.1, -0.5, 0).</p>\n</dd>\n<dt>If int:</dt><dd><ol class=\"loweralpha simple\">\n<li><dl class=\"simple\">\n<dt>6</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0])</span></code></p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>7</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">1.])</span></code></p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>12</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">1.,</span> <span class=\"pre\">1.,</span> <span class=\"pre\">1,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0])</span></code></p>\n</dd>\n</dl>\n</li>\n</ol>\n</dd>\n<dt>If str:</dt><dd><ol class=\"loweralpha simple\">\n<li><dl class=\"simple\">\n<dt>\u201crigid\u201d</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0])</span></code></p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>\u201csimilarity\u201d</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">1.])</span></code></p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>\u201caffine\u201d</dt><dd><p><a href=\"#id10\"><span class=\"problematic\" id=\"id11\">``</span></a>x0 = np.array([0, 0, 0, 0, 0, 0, 1., 1., 1, 0, 0, 0])</p>\n</dd>\n</dl>\n</li>\n</ol>\n</dd>\n</dl>\n<p>(default None)</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>slr_bounds<span class=\"classifier\">array, optional</span></dt><dd><p>(default None)</p>\n</dd>\n<dt>slr_select<span class=\"classifier\">tuple, optional</span></dt><dd><p>Select the number of streamlines from model to neirborhood of\nmodel to perform the local SLR.</p>\n</dd>\n<dt>slr_method<span class=\"classifier\">string, optional</span></dt><dd><p>Optimization method \u2018L_BFGS_B\u2019 or \u2018Powell\u2019 optimizers can be used.\n(default \u2018L-BFGS-B\u2019)</p>\n</dd>\n<dt>pruning_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Pruning after reducing the search space (default 5).</p>\n</dd>\n<dt>pruning_distance<span class=\"classifier\">string, optional</span></dt><dd><p>Pruning distance type can be mdf or mam (default mdf)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id12\">\n<h4>Returns<a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>recognized_transf<span class=\"classifier\">Streamlines</span></dt><dd><p>Recognized bundle in the space of the model tractogram</p>\n</dd>\n<dt>recognized_labels<span class=\"classifier\">array</span></dt><dd><p>Indices of recognized bundle in the original tractogram</p>\n</dd>\n</dl>\n</section>\n<section id=\"id13\">\n<h4>References<a class=\"headerlink\" href=\"#id13\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id14\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis17<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis et al. Recognition of white matter\nbundles using local and global streamline-based registration and\nclustering, Neuroimage, 2017.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.RecoBundles.refine\">\n<span class=\"sig-name descname\"><span class=\"pre\">refine</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pruned_streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_clust_thr</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reduction_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">14</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reduction_distance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mdf'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_x0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_bounds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(400,</span> <span class=\"pre\">600)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'L-BFGS-B'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pruning_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">6</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pruning_distance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mdf'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.RecoBundles.refine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Refine and recognize the model_bundle in self.streamlines\nThis method expects once pruned streamlines as input. It refines the\nfirst output of recobundle by applying second local slr (optional),\nand second pruning. This method is useful when we are dealing with\nnoisy data or when we want to extract small tracks from tractograms.\nThis time, search space is created using pruned bundle and not model\nbundle.</p>\n<section id=\"id15\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id15\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>model_bundle<span class=\"classifier\">Streamlines</span></dt><dd><p>model bundle streamlines used as a reference to extract similar\nstreamlines from input tractogram</p>\n</dd>\n<dt>pruned_streamlines<span class=\"classifier\">Streamlines</span></dt><dd><p>Recognized bundle from target tractogram by RecoBundles.</p>\n</dd>\n<dt>model_clust_thr<span class=\"classifier\">float</span></dt><dd><p>MDF distance threshold for the model bundles</p>\n</dd>\n<dt>reduction_thr<span class=\"classifier\">float</span></dt><dd><p>Reduce search space by (mm) (default 14)</p>\n</dd>\n<dt>reduction_distance<span class=\"classifier\">string</span></dt><dd><p>Reduction distance type can be mdf or mam (default mdf)</p>\n</dd>\n<dt>slr<span class=\"classifier\">bool</span></dt><dd><p>Use Streamline-based Linear Registration (SLR) locally\n(default True)</p>\n</dd>\n</dl>\n<p>slr_metric : BundleMinDistanceMetric\nslr_x0 : array or int or str</p>\n<blockquote>\n<div><p>Transformation allowed. translation, rigid, similarity or scaling\nInitial parametrization for the optimization.</p>\n<dl>\n<dt>If 1D array with:</dt><dd><p>a) 6 elements then only rigid registration is performed with\nthe 3 first elements for translation and 3 for rotation.\nb) 7 elements also isotropic scaling is performed (similarity).\nc) 12 elements then translation, rotation (in degrees),\nscaling and shearing are performed (affine).</p>\n<p>Here is an example of x0 with 12 elements:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">x0=np.array([0,</span> <span class=\"pre\">10,</span> <span class=\"pre\">0,</span> <span class=\"pre\">40,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">2.,</span> <span class=\"pre\">1.5,</span> <span class=\"pre\">1,</span> <span class=\"pre\">0.1,</span> <span class=\"pre\">-0.5,</span> <span class=\"pre\">0])</span></code></p>\n<p>This has translation (0, 10, 0), rotation (40, 0, 0) in\ndegrees, scaling (2., 1.5, 1) and shearing (0.1, -0.5, 0).</p>\n</dd>\n<dt>If int:</dt><dd><ol class=\"loweralpha simple\">\n<li><dl class=\"simple\">\n<dt>6</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0])</span></code></p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>7</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">1.])</span></code></p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>12</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">1.,</span> <span class=\"pre\">1.,</span> <span class=\"pre\">1,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0])</span></code></p>\n</dd>\n</dl>\n</li>\n</ol>\n</dd>\n<dt>If str:</dt><dd><ol class=\"loweralpha simple\">\n<li><dl class=\"simple\">\n<dt>\u201crigid\u201d</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0])</span></code></p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>\u201csimilarity\u201d</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">x0</span> <span class=\"pre\">=</span> <span class=\"pre\">np.array([0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">1.])</span></code></p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>\u201caffine\u201d</dt><dd><p><a href=\"#id16\"><span class=\"problematic\" id=\"id17\">``</span></a>x0 = np.array([0, 0, 0, 0, 0, 0, 1., 1., 1, 0, 0, 0])</p>\n</dd>\n</dl>\n</li>\n</ol>\n</dd>\n</dl>\n<p>(default None)</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>slr_bounds<span class=\"classifier\">array</span></dt><dd><p>(default None)</p>\n</dd>\n<dt>slr_select<span class=\"classifier\">tuple</span></dt><dd><p>Select the number of streamlines from model to neirborhood of\nmodel to perform the local SLR.</p>\n</dd>\n<dt>slr_method<span class=\"classifier\">string</span></dt><dd><p>Optimization method \u2018L_BFGS_B\u2019 or \u2018Powell\u2019 optimizers can be used.\n(default \u2018L-BFGS-B\u2019)</p>\n</dd>\n<dt>pruning_thr<span class=\"classifier\">float</span></dt><dd><p>Pruning after reducing the search space (default 6).</p>\n</dd>\n<dt>pruning_distance<span class=\"classifier\">string</span></dt><dd><p>Pruning distance type can be mdf or mam (default mdf)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id18\">\n<h4>Returns<a class=\"headerlink\" href=\"#id18\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>recognized_transf<span class=\"classifier\">Streamlines</span></dt><dd><p>Recognized bundle in the space of the model tractogram</p>\n</dd>\n<dt>recognized_labels<span class=\"classifier\">array</span></dt><dd><p>Indices of recognized bundle in the original tractogram</p>\n</dd>\n</dl>\n</section>\n<section id=\"id19\">\n<h4>References<a class=\"headerlink\" href=\"#id19\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id20\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis17<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis et al. Recognition of white matter\nbundles using local and global streamline-based registration and\nclustering, Neuroimage, 2017.</p>\n</div>\n<div class=\"citation\" id=\"chandio2020\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Chandio2020<span class=\"fn-bracket\">]</span></span>\n<p>Chandio, B.Q., Risacher, S.L., Pestilli, F.,</p>\n</div>\n</div>\n<p>Bullock, D., Yeh, FC., Koudoro, S., Rokem, A., Harezlak, J., and\nGaryfallidis, E. Bundle analytics, a computational framework for\ninvestigating the shapes and profiles of brain pathways across\npopulations. Sci Rep 10, 17149 (2020)</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"check-range\">\n<h3>check_range<a class=\"headerlink\" href=\"#check-range\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.check_range\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.bundles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">check_range</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">lt</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.check_range\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"logger\">\n<h3>logger<a class=\"headerlink\" href=\"#logger\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.logger\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.bundles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">logger</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Instances of the Logger class represent a single logging channel. A\n\u201clogging channel\u201d indicates an area of an application. Exactly how an\n\u201carea\u201d is defined is up to the application developer. Since an\napplication can have any number of areas, logging channels are identified\nby a unique string. Application areas can be nested (e.g. an area\nof \u201cinput processing\u201d might include sub-areas \u201cread CSV files\u201d, \u201cread\nXLS files\u201d and \u201cread Gnumeric files\u201d). To cater for this natural nesting,\nchannel names are organized into a namespace hierarchy where levels are\nseparated by periods, much like the Java or Python package namespace. So\nin the instance given above, channel names might be \u201cinput\u201d for the upper\nlevel, and \u201cinput.csv\u201d, \u201cinput.xls\u201d and \u201cinput.gnu\u201d for the sub-levels.\nThere is no arbitrary limit to the depth of nesting.</p>\n</dd></dl>\n\n</section>\n<section id=\"bundle-adjacency\">\n<h3>bundle_adjacency<a class=\"headerlink\" href=\"#bundle-adjacency\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.bundle_adjacency\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.bundles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">bundle_adjacency</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dtracks0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dtracks1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.bundle_adjacency\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find bundle adjacency between two given tracks/bundles</p>\n<section id=\"id21\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id21\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>dtracks0<span class=\"classifier\">Streamlines</span></dt><dd><p>White matter tract from one subject</p>\n</dd>\n<dt>dtracks1<span class=\"classifier\">Streamlines</span></dt><dd><p>White matter tract from another subject</p>\n</dd>\n<dt>threshold<span class=\"classifier\">float</span></dt><dd><p>Threshold controls\nhow much strictness user wants while calculating bundle adjacency\nbetween two bundles. Smaller threshold means bundles should be strictly\nadjacent to get higher BA score.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id22\">\n<h4>Returns<a class=\"headerlink\" href=\"#id22\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>res<span class=\"classifier\">Float</span></dt><dd><p>Bundle adjacency score between two tracts</p>\n</dd>\n</dl>\n</section>\n<section id=\"id23\">\n<h4>References<a class=\"headerlink\" href=\"#id23\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"garyfallidis12\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis12<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"ba-analysis\">\n<h3>ba_analysis<a class=\"headerlink\" href=\"#ba-analysis\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.ba_analysis\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.bundles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ba_analysis</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">recognized_bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">expert_bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_pts</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">6.0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.ba_analysis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates bundle adjacency score between two given bundles</p>\n<section id=\"id24\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id24\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>recognized_bundle<span class=\"classifier\">Streamlines</span></dt><dd><p>Extracted bundle from the whole brain tractogram (eg: AF_L)</p>\n</dd>\n<dt>expert_bundle<span class=\"classifier\">Streamlines</span></dt><dd><p>Model bundle used as reference while extracting similar type bundle\nfrom input tractogram</p>\n</dd>\n<dt>nb_pts<span class=\"classifier\">integer (default 20)</span></dt><dd><p>Discretizing streamlines to have nb_pts number of points</p>\n</dd>\n<dt>threshold<span class=\"classifier\">float (default 6)</span></dt><dd><p>Threshold used for in computing bundle adjacency. Threshold controls\nhow much strictness user wants while calculating bundle adjacency\nbetween two bundles. Smaller threshold means bundles should be strictly\nadjacent to get higher BA score.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id25\">\n<h4>Returns<a class=\"headerlink\" href=\"#id25\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<blockquote>\n<div><p>Bundle adjacency score between two tracts</p>\n</div></blockquote>\n</section>\n<section id=\"id26\">\n<h4>References<a class=\"headerlink\" href=\"#id26\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id27\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis12<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"cluster-bundle\">\n<h3>cluster_bundle<a class=\"headerlink\" href=\"#cluster-bundle\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.cluster_bundle\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.bundles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">cluster_bundle</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clust_thr</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rng</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_pts</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select_randomly</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">500000</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.cluster_bundle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clusters bundles</p>\n<section id=\"id28\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id28\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bundle<span class=\"classifier\">Streamlines</span></dt><dd><p>White matter tract</p>\n</dd>\n<dt>clust_thr<span class=\"classifier\">float</span></dt><dd><p>clustering threshold used in quickbundlesX</p>\n</dd>\n</dl>\n<p>rng : RandomState\nnb_pts: integer (default 20)</p>\n<blockquote>\n<div><p>Discretizing streamlines to have nb_points number of points</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>select_randomly: integer (default 500000)</dt><dd><p>Randomly select streamlines from the input bundle</p>\n</dd>\n</dl>\n</section>\n<section id=\"id29\">\n<h4>Returns<a class=\"headerlink\" href=\"#id29\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>centroids<span class=\"classifier\">Streamlines</span></dt><dd><p>clustered centroids of the input bundle</p>\n</dd>\n</dl>\n</section>\n<section id=\"id30\">\n<h4>References<a class=\"headerlink\" href=\"#id30\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id31\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis12<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"bundle-shape-similarity\">\n<h3>bundle_shape_similarity<a class=\"headerlink\" href=\"#bundle-shape-similarity\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.bundles.bundle_shape_similarity\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.bundles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">bundle_shape_similarity</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rng</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clust_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(5,</span> <span class=\"pre\">3,</span> <span class=\"pre\">1.5)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">6</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.bundles.bundle_shape_similarity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates bundle shape similarity between two given bundles using\nbundle adjacency (BA) metric</p>\n<section id=\"id32\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id32\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bundle1<span class=\"classifier\">Streamlines</span></dt><dd><p>White matter tract from one subject (eg: AF_L)</p>\n</dd>\n<dt>bundle2<span class=\"classifier\">Streamlines</span></dt><dd><p>White matter tract from another subject (eg: AF_L)</p>\n</dd>\n</dl>\n<p>rng : RandomState\nclust_thr : array-like, optional</p>\n<blockquote>\n<div><p>list of clustering thresholds used in quickbundlesX</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used for in computing bundle adjacency. Threshold controls\nhow much strictness user wants while calculating shape similarity\nbetween two bundles. Smaller threshold means bundles should be strictly\nsimilar to get higher shape similarity score.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id33\">\n<h4>Returns<a class=\"headerlink\" href=\"#id33\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ba_value<span class=\"classifier\">Float</span></dt><dd><p>Bundle similarity score between two tracts</p>\n</dd>\n</dl>\n</section>\n<section id=\"id34\">\n<h4>References<a class=\"headerlink\" href=\"#id34\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id35\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Chandio2020<span class=\"fn-bracket\">]</span></span>\n<p>Chandio, B.Q., Risacher, S.L., Pestilli, F., Bullock, D.,</p>\n</div>\n</div>\n<p>Yeh, FC., Koudoro, S., Rokem, A., Harezlak, J., and Garyfallidis, E.\nBundle analytics, a computational framework for investigating the\nshapes and profiles of brain pathways across populations.\nSci Rep 10, 17149 (2020)</p>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id36\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis12<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"identity\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.Identity\" title=\"dipy.segment.clustering.Identity\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Identity</span></code></a><a class=\"headerlink\" href=\"#identity\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.Identity\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Identity</span></span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Identity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Provides identity indexing functionality.</p>\n<p>This can replace any class supporting indexing used for referencing\n(e.g. list, tuple). Indexing an instance of this class will return the\nindex provided instead of the element. It does not support slicing.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.Identity.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Identity.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"cluster\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster\" title=\"dipy.segment.clustering.Cluster\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Cluster</span></code></a><a class=\"headerlink\" href=\"#cluster\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.Cluster\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Cluster</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">id=0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refdata=&lt;dipy.segment.clustering.Identity</span> <span class=\"pre\">object&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Provides functionalities for interacting with a cluster.</p>\n<p>Useful container to retrieve index of elements grouped together. If\na reference to the data is provided to <cite>cluster_map</cite>, elements will\nbe returned instead of their index when possible.</p>\n<section id=\"id37\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id37\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>cluster_map<span class=\"classifier\"><cite>ClusterMap</cite> object</span></dt><dd><p>Reference to the set of clusters this cluster is being part of.</p>\n</dd>\n<dt>id<span class=\"classifier\">int</span></dt><dd><p>Id of this cluster in its associated <cite>cluster_map</cite> object.</p>\n</dd>\n<dt>refdata<span class=\"classifier\">list (optional)</span></dt><dd><p>Actual elements that clustered indices refer to.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id38\">\n<h4>Notes<a class=\"headerlink\" href=\"#id38\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>A cluster does not contain actual data but instead knows how to\nretrieve them using its <cite>ClusterMap</cite> object.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.Cluster.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">id=0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refdata=&lt;dipy.segment.clustering.Identity</span> <span class=\"pre\">object&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Cluster.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.Cluster.assign\">\n<span class=\"sig-name descname\"><span class=\"pre\">assign</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">indices</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Cluster.assign\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Assigns indices to this cluster.</p>\n<section id=\"id39\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id39\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt><a href=\"#id40\"><span class=\"problematic\" id=\"id41\">*</span></a>indices<span class=\"classifier\">list of indices</span></dt><dd><p>Indices to add to this cluster.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"clustercentroid\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid\" title=\"dipy.segment.clustering.ClusterCentroid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClusterCentroid</span></code></a><a class=\"headerlink\" href=\"#clustercentroid\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterCentroid\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ClusterCentroid</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">centroid</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">id=0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refdata=&lt;dipy.segment.clustering.Identity</span> <span class=\"pre\">object&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterCentroid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster\" title=\"dipy.segment.clustering.Cluster\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Cluster</span></code></a></p>\n<p>Provides functionalities for interacting with a cluster.</p>\n<p>Useful container to retrieve the indices of elements grouped together and\nthe cluster\u2019s centroid. If a reference to the data is provided to\n<cite>cluster_map</cite>, elements will be returned instead of their index when\npossible.</p>\n<section id=\"id42\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id42\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>cluster_map<span class=\"classifier\"><cite>ClusterMapCentroid</cite> object</span></dt><dd><p>Reference to the set of clusters this cluster is being part of.</p>\n</dd>\n<dt>id<span class=\"classifier\">int</span></dt><dd><p>Id of this cluster in its associated <cite>cluster_map</cite> object.</p>\n</dd>\n<dt>refdata<span class=\"classifier\">list (optional)</span></dt><dd><p>Actual elements that clustered indices refer to.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id43\">\n<h4>Notes<a class=\"headerlink\" href=\"#id43\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>A cluster does not contain actual data but instead knows how to\nretrieve them using its <cite>ClusterMapCentroid</cite> object.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterCentroid.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">centroid</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">id=0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refdata=&lt;dipy.segment.clustering.Identity</span> <span class=\"pre\">object&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterCentroid.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterCentroid.assign\">\n<span class=\"sig-name descname\"><span class=\"pre\">assign</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">id_datum</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">features</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterCentroid.assign\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Assigns a data point to this cluster.</p>\n<section id=\"id44\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id44\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>id_datum<span class=\"classifier\">int</span></dt><dd><p>Index of the data point to add to this cluster.</p>\n</dd>\n<dt>features<span class=\"classifier\">2D array</span></dt><dd><p>Data point\u2019s features to modify this cluster\u2019s centroid.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterCentroid.update\">\n<span class=\"sig-name descname\"><span class=\"pre\">update</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterCentroid.update\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Update centroid of this cluster.</p>\n<section id=\"id45\">\n<h5>Returns<a class=\"headerlink\" href=\"#id45\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>converged<span class=\"classifier\">bool</span></dt><dd><p>Tells if the centroid has moved.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"clustermap\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap\" title=\"dipy.segment.clustering.ClusterMap\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClusterMap</span></code></a><a class=\"headerlink\" href=\"#clustermap\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ClusterMap</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refdata=&lt;dipy.segment.clustering.Identity</span> <span class=\"pre\">object&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Provides functionalities for interacting with clustering outputs.</p>\n<p>Useful container to create, remove, retrieve and filter clusters.\nIf <cite>refdata</cite> is given, elements will be returned instead of their\nindex when using <cite>Cluster</cite> objects.</p>\n<section id=\"id46\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id46\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>refdata<span class=\"classifier\">list</span></dt><dd><p>Actual elements that clustered indices refer to.</p>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refdata=&lt;dipy.segment.clustering.Identity</span> <span class=\"pre\">object&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.add_cluster\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_cluster</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">clusters</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.add_cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds one or multiple clusters to this cluster map.</p>\n<section id=\"id47\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id47\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl>\n<dt><a href=\"#id48\"><span class=\"problematic\" id=\"id49\">*</span></a>clusters<span class=\"classifier\"><cite>Cluster</cite> object, \u2026</span></dt><dd><p>Cluster(s) to be added in this cluster map.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.clear\">\n<span class=\"sig-name descname\"><span class=\"pre\">clear</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.clear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove all clusters from this cluster map.</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.clusters\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">clusters</span></span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.clusters_sizes\">\n<span class=\"sig-name descname\"><span class=\"pre\">clusters_sizes</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.clusters_sizes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets the size of every cluster contained in this cluster map.</p>\n<section id=\"id50\">\n<h5>Returns<a class=\"headerlink\" href=\"#id50\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>list of int</dt><dd><p>Sizes of every cluster in this cluster map.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.get_large_clusters\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_large_clusters</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_size</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.get_large_clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets clusters which contains at least <cite>min_size</cite> elements.</p>\n<section id=\"id51\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id51\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>min_size<span class=\"classifier\">int</span></dt><dd><p>Minimum number of elements a cluster needs to have to be selected.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id52\">\n<h5>Returns<a class=\"headerlink\" href=\"#id52\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>list of <cite>Cluster</cite> objects</dt><dd><p>Clusters having at least <cite>min_size</cite> elements.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.get_small_clusters\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_small_clusters</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_size</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.get_small_clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets clusters which contains at most <cite>max_size</cite> elements.</p>\n<section id=\"id53\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id53\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>max_size<span class=\"classifier\">int</span></dt><dd><p>Maximum number of elements a cluster can have to be selected.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id54\">\n<h5>Returns<a class=\"headerlink\" href=\"#id54\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>list of <cite>Cluster</cite> objects</dt><dd><p>Clusters having at most <cite>max_size</cite> elements.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.refdata\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">refdata</span></span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.refdata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.remove_cluster\">\n<span class=\"sig-name descname\"><span class=\"pre\">remove_cluster</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">clusters</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.remove_cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove one or multiple clusters from this cluster map.</p>\n<section id=\"id55\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id55\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl>\n<dt><a href=\"#id56\"><span class=\"problematic\" id=\"id57\">*</span></a>clusters<span class=\"classifier\"><cite>Cluster</cite> object, \u2026</span></dt><dd><p>Cluster(s) to be removed from this cluster map.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMap.size\">\n<span class=\"sig-name descname\"><span class=\"pre\">size</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.size\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets number of clusters contained in this cluster map.</p>\n</dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"clustermapcentroid\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMapCentroid\" title=\"dipy.segment.clustering.ClusterMapCentroid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClusterMapCentroid</span></code></a><a class=\"headerlink\" href=\"#clustermapcentroid\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMapCentroid\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ClusterMapCentroid</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refdata=&lt;dipy.segment.clustering.Identity</span> <span class=\"pre\">object&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMapCentroid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap\" title=\"dipy.segment.clustering.ClusterMap\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClusterMap</span></code></a></p>\n<p>Provides functionalities for interacting with clustering outputs\nthat have centroids.</p>\n<p>Allows to retrieve easily the centroid of every cluster. Also, it is\na useful container to create, remove, retrieve and filter clusters.\nIf <cite>refdata</cite> is given, elements will be returned instead of their\nindex when using <cite>ClusterCentroid</cite> objects.</p>\n<section id=\"id58\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id58\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>refdata<span class=\"classifier\">list</span></dt><dd><p>Actual elements that clustered indices refer to.</p>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMapCentroid.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refdata=&lt;dipy.segment.clustering.Identity</span> <span class=\"pre\">object&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMapCentroid.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.ClusterMapCentroid.centroids\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">centroids</span></span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMapCentroid.centroids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"clustering\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering\" title=\"dipy.segment.clustering.Clustering\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Clustering</span></code></a><a class=\"headerlink\" href=\"#clustering\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.Clustering\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Clustering</span></span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Clustering\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.Clustering.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Clustering.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.Clustering.cluster\">\n<em class=\"property\"><span class=\"pre\">abstract</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">cluster</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ordering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Clustering.cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clusters <cite>data</cite>.</p>\n<p>Subclasses will perform their clustering algorithm here.</p>\n<section id=\"id59\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id59\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data<span class=\"classifier\">list of N-dimensional arrays</span></dt><dd><p>Each array represents a data point.</p>\n</dd>\n<dt>ordering<span class=\"classifier\">iterable of indices, optional</span></dt><dd><p>Specifies the order in which data points will be clustered.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id60\">\n<h4>Returns<a class=\"headerlink\" href=\"#id60\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt><cite>ClusterMap</cite> object</dt><dd><p>Result of the clustering.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"quickbundles\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundles\" title=\"dipy.segment.clustering.QuickBundles\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">QuickBundles</span></code></a><a class=\"headerlink\" href=\"#quickbundles\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.QuickBundles\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">QuickBundles</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'MDF_12points'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_nb_clusters</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2147483647</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.QuickBundles\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering\" title=\"dipy.segment.clustering.Clustering\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Clustering</span></code></a></p>\n<p>Clusters streamlines using QuickBundles <a class=\"reference internal\" href=\"../../examples_built/23_segmentation/segment_quickbundles/#garyfallidis12\" id=\"id61\"><span>[Garyfallidis12]</span></a>.\n\nGiven a list of streamlines, the QuickBundles algorithm sequentially\nassigns each streamline to its closest bundle in <span class=\"math notranslate nohighlight\">\\(\\mathcal{O}(Nk)\\)</span> where\n<span class=\"math notranslate nohighlight\">\\(N\\)</span> is the number of streamlines and <span class=\"math notranslate nohighlight\">\\(k\\)</span> is the final number of bundles.\nIf for a given streamline its closest bundle is farther than <cite>threshold</cite>,\na new bundle is created and the streamline is assigned to it except if the\nnumber of bundles has already exceeded <cite>max_nb_clusters</cite>.\n\nParameters\n\u2014\u2014\u2014-\nthreshold : float\n    The maximum distance from a bundle for a streamline to be still\n    considered as part of it.\nmetric : str or <cite>Metric</cite> object (optional)\n    The distance metric to use when comparing two streamlines. By default,\n    the Minimum average Direct-Flip (MDF) distance <a class=\"reference internal\" href=\"../../examples_built/23_segmentation/segment_quickbundles/#garyfallidis12\" id=\"id62\"><span>[Garyfallidis12]</span></a> is\n    used and streamlines are automatically resampled so they have\n    12 points.\nmax_nb_clusters : int\n    Limits the creation of bundles.\n\nExamples\n\u2014\u2014\u2013\n&gt;&gt;&gt; from dipy.segment.clustering import QuickBundles\n&gt;&gt;&gt; from dipy.data import get_fnames\n&gt;&gt;&gt; from dipy.io.streamline import load_tractogram\n&gt;&gt;&gt; from dipy.tracking.streamline import Streamlines\n&gt;&gt;&gt; fname = get_fnames(\u2018fornix\u2019)\n&gt;&gt;&gt; fornix = load_tractogram(fname, \u2018same\u2019,\n\u2026                          bbox_valid_check=False).streamlines\n&gt;&gt;&gt; streamlines = Streamlines(fornix)\n&gt;&gt;&gt; # Segment fornix with a threshold of 10mm and streamlines resampled\n&gt;&gt;&gt; # to 12 points.\n&gt;&gt;&gt; qb = QuickBundles(threshold=10.)\n&gt;&gt;&gt; clusters = qb.cluster(streamlines)\n&gt;&gt;&gt; len(clusters)\n4\n&gt;&gt;&gt; list(map(len, clusters))\n[61, 191, 47, 1]\n&gt;&gt;&gt; # Resampling streamlines differently is done explicitly as follows.\n&gt;&gt;&gt; # Note this has an impact on the speed and the accuracy (tradeoff).\n&gt;&gt;&gt; from dipy.segment.featurespeed import ResampleFeature\n&gt;&gt;&gt; from dipy.segment.metricspeed import AveragePointwiseEuclideanMetric\n&gt;&gt;&gt; feature = ResampleFeature(nb_points=2)\n&gt;&gt;&gt; metric = AveragePointwiseEuclideanMetric(feature)\n&gt;&gt;&gt; qb = QuickBundles(threshold=10., metric=metric)\n&gt;&gt;&gt; clusters = qb.cluster(streamlines)\n&gt;&gt;&gt; len(clusters)\n4\n&gt;&gt;&gt; list(map(len, clusters))\n[58, 142, 72, 28]\n\n\nReferences\n\u2014\u2014\u2014-\n.. [Garyfallidis12] Garyfallidis E. et al., QuickBundles a method for\n                    tractography simplification, Frontiers in Neuroscience,\n                    vol 6, no 175, 2012.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.QuickBundles.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'MDF_12points'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_nb_clusters</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2147483647</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.QuickBundles.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.QuickBundles.cluster\">\n<span class=\"sig-name descname\"><span class=\"pre\">cluster</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ordering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.QuickBundles.cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clusters <cite>streamlines</cite> into bundles.</p>\n<p>Performs quickbundles algorithm using predefined metric and threshold.</p>\n<section id=\"id63\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id63\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list of 2D arrays</span></dt><dd><p>Each 2D array represents a sequence of 3D points (points, 3).</p>\n</dd>\n<dt>ordering<span class=\"classifier\">iterable of indices</span></dt><dd><p>Specifies the order in which data points will be clustered.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id64\">\n<h4>Returns<a class=\"headerlink\" href=\"#id64\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt><cite>ClusterMapCentroid</cite> object</dt><dd><p>Result of the clustering.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"quickbundlesx\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundlesX\" title=\"dipy.segment.clustering.QuickBundlesX\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">QuickBundlesX</span></code></a><a class=\"headerlink\" href=\"#quickbundlesx\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.QuickBundlesX\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">QuickBundlesX</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">thresholds</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'MDF_12points'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.QuickBundlesX\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering\" title=\"dipy.segment.clustering.Clustering\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Clustering</span></code></a></p>\n<p>Clusters streamlines using QuickBundlesX.</p>\n<section id=\"id65\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id65\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>thresholds<span class=\"classifier\">list of float</span></dt><dd><p>Thresholds to use for each clustering layer. A threshold represents the\nmaximum distance from a cluster for a streamline to be still considered\nas part of it.</p>\n</dd>\n<dt>metric<span class=\"classifier\">str or <cite>Metric</cite> object (optional)</span></dt><dd><p>The distance metric to use when comparing two streamlines. By default,\nthe Minimum average Direct-Flip (MDF) distance <a class=\"reference internal\" href=\"../../examples_built/23_segmentation/segment_quickbundles/#garyfallidis12\" id=\"id66\"><span>[Garyfallidis12]</span></a> is\nused and streamlines are automatically resampled so they have 12\npoints.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id67\">\n<h4>References<a class=\"headerlink\" href=\"#id67\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id68\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis12<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</p>\n</div>\n<div class=\"citation\" id=\"garyfallidis16\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis16<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E. et al. QuickBundlesX: Sequential\nclustering of millions of streamlines in multiple\nlevels of detail at record execution time. Proceedings\nof the, International Society of Magnetic Resonance\nin Medicine (ISMRM). Singapore, 4187, 2016.</p>\n</div>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.QuickBundlesX.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">thresholds</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'MDF_12points'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.QuickBundlesX.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.QuickBundlesX.cluster\">\n<span class=\"sig-name descname\"><span class=\"pre\">cluster</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ordering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.QuickBundlesX.cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clusters <cite>streamlines</cite> into bundles.</p>\n<p>Performs QuickbundleX using a predefined metric and thresholds.</p>\n<section id=\"id69\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id69\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list of 2D arrays</span></dt><dd><p>Each 2D array represents a sequence of 3D points (points, 3).</p>\n</dd>\n<dt>ordering<span class=\"classifier\">iterable of indices</span></dt><dd><p>Specifies the order in which data points will be clustered.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id70\">\n<h5>Returns<a class=\"headerlink\" href=\"#id70\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt><cite>TreeClusterMap</cite> object</dt><dd><p>Result of the clustering.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"treecluster\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeCluster\" title=\"dipy.segment.clustering.TreeCluster\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TreeCluster</span></code></a><a class=\"headerlink\" href=\"#treecluster\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeCluster\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">TreeCluster</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">centroid</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeCluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid\" title=\"dipy.segment.clustering.ClusterCentroid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClusterCentroid</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeCluster.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">centroid</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeCluster.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeCluster.add\">\n<span class=\"sig-name descname\"><span class=\"pre\">add</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">child</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeCluster.add\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeCluster.is_leaf\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">is_leaf</span></span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeCluster.is_leaf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeCluster.return_indices\">\n<span class=\"sig-name descname\"><span class=\"pre\">return_indices</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeCluster.return_indices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"treeclustermap\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeClusterMap\" title=\"dipy.segment.clustering.TreeClusterMap\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TreeClusterMap</span></code></a><a class=\"headerlink\" href=\"#treeclustermap\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeClusterMap\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">TreeClusterMap</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">root</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeClusterMap\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap\" title=\"dipy.segment.clustering.ClusterMap\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClusterMap</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeClusterMap.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">root</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeClusterMap.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeClusterMap.get_clusters\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_clusters</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">wanted_level</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeClusterMap.get_clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeClusterMap.iter_preorder\">\n<span class=\"sig-name descname\"><span class=\"pre\">iter_preorder</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">node</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeClusterMap.iter_preorder\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeClusterMap.refdata\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">refdata</span></span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeClusterMap.refdata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.TreeClusterMap.traverse_postorder\">\n<span class=\"sig-name descname\"><span class=\"pre\">traverse_postorder</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">node</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visit</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.TreeClusterMap.traverse_postorder\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"id71\">\n<h3>logger<a class=\"headerlink\" href=\"#id71\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.logger\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">logger</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Instances of the Logger class represent a single logging channel. A\n\u201clogging channel\u201d indicates an area of an application. Exactly how an\n\u201carea\u201d is defined is up to the application developer. Since an\napplication can have any number of areas, logging channels are identified\nby a unique string. Application areas can be nested (e.g. an area\nof \u201cinput processing\u201d might include sub-areas \u201cread CSV files\u201d, \u201cread\nXLS files\u201d and \u201cread Gnumeric files\u201d). To cater for this natural nesting,\nchannel names are organized into a namespace hierarchy where levels are\nseparated by periods, much like the Java or Python package namespace. So\nin the instance given above, channel names might be \u201cinput\u201d for the upper\nlevel, and \u201cinput.csv\u201d, \u201cinput.xls\u201d and \u201cinput.gnu\u201d for the sub-levels.\nThere is no arbitrary limit to the depth of nesting.</p>\n</dd></dl>\n\n</section>\n<section id=\"qbx-and-merge\">\n<h3>qbx_and_merge<a class=\"headerlink\" href=\"#qbx-and-merge\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.clustering.qbx_and_merge\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.clustering.</span></span><span class=\"sig-name descname\"><span class=\"pre\">qbx_and_merge</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">thresholds</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_pts</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select_randomly</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rng</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.qbx_and_merge\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run QuickBundlesX and then run again on the centroids of the last layer</p>\n<p>Running again QuickBundles at a layer has the effect of merging\nsome of the clusters that may be originally divided because of branching.\nThis function help obtain a result at a QuickBundles quality but with\nQuickBundlesX speed. The merging phase has low cost because it is applied\nonly on the centroids rather than the entire dataset.</p>\n<section id=\"id72\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id72\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>streamlines : Streamlines\nthresholds : sequence</p>\n<blockquote>\n<div><p>List of distance thresholds for QuickBundlesX.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>nb_pts<span class=\"classifier\">int</span></dt><dd><p>Number of points for discretizing each streamline</p>\n</dd>\n<dt>select_randomly<span class=\"classifier\">int</span></dt><dd><p>Randomly select a specific number of streamlines. If None all the\nstreamlines are used.</p>\n</dd>\n<dt>rng<span class=\"classifier\">RandomState</span></dt><dd><p>If None then RandomState is initialized internally.</p>\n</dd>\n<dt>verbose<span class=\"classifier\">bool, optional.</span></dt><dd><p>If True, log information. Default False.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id73\">\n<h4>Returns<a class=\"headerlink\" href=\"#id73\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>clusters<span class=\"classifier\">obj</span></dt><dd><p>Contains the clusters of the last layer of QuickBundlesX after merging.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id74\">\n<h4>References<a class=\"headerlink\" href=\"#id74\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id75\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis12<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</p>\n</div>\n<div class=\"citation\" id=\"id76\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis16<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E. et al. QuickBundlesX: Sequential\nclustering of millions of streamlines in multiple\nlevels of detail at record execution time. Proceedings\nof the, International Society of Magnetic Resonance\nin Medicine (ISMRM). Singapore, 4187, 2016.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"faststreamlinesearch\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.fss.FastStreamlineSearch\" title=\"dipy.segment.fss.FastStreamlineSearch\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FastStreamlineSearch</span></code></a><a class=\"headerlink\" href=\"#faststreamlinesearch\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.fss.FastStreamlineSearch\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.fss.</span></span><span class=\"sig-name descname\"><span class=\"pre\">FastStreamlineSearch</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ref_streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_radius</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_mpts</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bin_size</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resampling</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">24</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bidirectional</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.fss.FastStreamlineSearch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.fss.FastStreamlineSearch.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ref_streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_radius</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_mpts</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bin_size</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resampling</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">24</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bidirectional</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.fss.FastStreamlineSearch.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fast Streamline Search (FFS)</p>\n<p>Generate the Binned K-D Tree structure with reference streamlines,\nusing streamlines barycenter and mean-points.\nSee <a class=\"reference internal\" href=\"../../examples_built/23_segmentation/fast_streamline_search/#stonge2022\" id=\"id77\"><span>[StOnge2022]</span></a> for further details.</p>\n<section id=\"id78\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id78\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ref_streamlines<span class=\"classifier\">Streamlines</span></dt><dd><p>Streamlines (ref) to generate the tree structure.</p>\n</dd>\n<dt>max_radius<span class=\"classifier\">float</span></dt><dd><p>The maximum radius (distance) for subsequent streamline search.\nUsed to compute the overlap in-between bins.</p>\n</dd>\n<dt>nb_mpts<span class=\"classifier\">int, optional</span></dt><dd><p>Number of means points to improve computation speed.\n(this only changes computation time)</p>\n</dd>\n<dt>bin_size<span class=\"classifier\">float, optional</span></dt><dd><p>The bin size to separate streamlines in groups.\n(this only changes computation time)</p>\n</dd>\n<dt>resampling<span class=\"classifier\">int, optional</span></dt><dd><p>Number of points used to reshape each streamline.</p>\n</dd>\n<dt>bidirectional<span class=\"classifier\">bool, optional</span></dt><dd><p>Compute the smallest distance with and without flip.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id79\">\n<h4>Notes<a class=\"headerlink\" href=\"#id79\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Make sure that streamlines are aligned in the same space.\nPreferably in millimeter space (voxmm or rasmm).</p>\n</section>\n<section id=\"id80\">\n<h4>References<a class=\"headerlink\" href=\"#id80\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"stonge2022\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>StOnge2022<span class=\"fn-bracket\">]</span></span>\n<p>St-Onge E. et al. Fast Streamline Search:\nAn Exact Technique for Diffusion MRI Tractography.\nNeuroinformatics, 2022.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.fss.FastStreamlineSearch.radius_search\">\n<span class=\"sig-name descname\"><span class=\"pre\">radius_search</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radius</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_negative</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.fss.FastStreamlineSearch.radius_search\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radius Search using Fast Streamline Search</p>\n<p>For each given streamlines, return all reference streamlines\nwithin the given radius. See <a class=\"reference internal\" href=\"../../examples_built/23_segmentation/fast_streamline_search/#stonge2022\" id=\"id81\"><span>[StOnge2022]</span></a> for further details.</p>\n<section id=\"id82\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id82\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">Streamlines</span></dt><dd><p>Streamlines to generate the tree structure.</p>\n</dd>\n<dt>radius<span class=\"classifier\">float</span></dt><dd><p>Search radius (with MDF / average L2 distance)\nmust be smaller than max_radius when FFS was initialized.</p>\n</dd>\n<dt>use_negative<span class=\"classifier\">bool, optional</span></dt><dd><p>When used with bidirectional,\nnegative values are returned for reversed order neighbors.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id83\">\n<h4>Returns<a class=\"headerlink\" href=\"#id83\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>res<span class=\"classifier\">scipy COOrdinates sparse matrix (nb_slines x nb_slines_ref)</span></dt><dd><p>Adjacency matrix containing all neighbors within the given radius</p>\n</dd>\n</dl>\n</section>\n<section id=\"id84\">\n<h4>Notes<a class=\"headerlink\" href=\"#id84\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Given streamlines should be already aligned with ref streamlines.\nPreferably in millimeter space (voxmm or rasmm).</p>\n</section>\n<section id=\"id85\">\n<h4>References<a class=\"headerlink\" href=\"#id85\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id86\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>StOnge2022<span class=\"fn-bracket\">]</span></span>\n<p>St-Onge E. et al. Fast Streamline Search:\nAn Exact Technique for Diffusion MRI Tractography.\nNeuroinformatics, 2022.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"nearest-from-matrix-row\">\n<h3>nearest_from_matrix_row<a class=\"headerlink\" href=\"#nearest-from-matrix-row\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.fss.nearest_from_matrix_row\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.fss.</span></span><span class=\"sig-name descname\"><span class=\"pre\">nearest_from_matrix_row</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">coo_matrix</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.fss.nearest_from_matrix_row\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the nearest (smallest) for each row given an coup sparse matrix</p>\n<section id=\"id87\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id87\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>coo_matrix<span class=\"classifier\">scipy COOrdinates sparse matrix (nb_slines x nb_slines_ref)</span></dt><dd><p>Adjacency matrix containing all neighbors within the given radius</p>\n</dd>\n</dl>\n</section>\n<section id=\"id88\">\n<h4>Returns<a class=\"headerlink\" href=\"#id88\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>non_zero_ids<span class=\"classifier\">numpy array (nb_non_empty_row x 1)</span></dt><dd><p>Indices of each non-empty slines (row)</p>\n</dd>\n<dt>nearest_id<span class=\"classifier\">numpy array (nb_non_empty_row x 1)</span></dt><dd><p>Indices of the nearest reference match (column)</p>\n</dd>\n<dt>nearest_dist<span class=\"classifier\">numpy array (nb_non_empty_row x 1)</span></dt><dd><p>Distance for each nearest match</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"nearest-from-matrix-col\">\n<h3>nearest_from_matrix_col<a class=\"headerlink\" href=\"#nearest-from-matrix-col\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.fss.nearest_from_matrix_col\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.fss.</span></span><span class=\"sig-name descname\"><span class=\"pre\">nearest_from_matrix_col</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">coo_matrix</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.fss.nearest_from_matrix_col\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the nearest (smallest) for each column given an coup sparse matrix</p>\n<section id=\"id89\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id89\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>coo_matrix<span class=\"classifier\">scipy COOrdinates sparse matrix (nb_slines x nb_slines_ref)</span></dt><dd><p>Adjacency matrix containing all neighbors within the given radius</p>\n</dd>\n</dl>\n</section>\n<section id=\"id90\">\n<h4>Returns<a class=\"headerlink\" href=\"#id90\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>non_zero_ids<span class=\"classifier\">numpy array (nb_non_empty_col x 1)</span></dt><dd><p>Indices of each non-empty reference (column)</p>\n</dd>\n<dt>nearest_id<span class=\"classifier\">numpy array (nb_non_empty_col x 1)</span></dt><dd><p>Indices of the nearest slines match (row)</p>\n</dd>\n<dt>nearest_dist<span class=\"classifier\">numpy array (nb_non_empty_col x 1)</span></dt><dd><p>Distance for each nearest match</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"multi-median\">\n<h3>multi_median<a class=\"headerlink\" href=\"#multi-median\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.mask.multi_median\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.mask.</span></span><span class=\"sig-name descname\"><span class=\"pre\">multi_median</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">median_radius</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">numpass</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.multi_median\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies median filter multiple times on input data.</p>\n<section id=\"id91\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id91\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data<span class=\"classifier\">ndarray</span></dt><dd><p>The input volume to apply filter on.</p>\n</dd>\n<dt>median_radius<span class=\"classifier\">int</span></dt><dd><p>Radius (in voxels) of the applied median filter</p>\n</dd>\n<dt>numpass: int</dt><dd><p>Number of pass of the median filter</p>\n</dd>\n</dl>\n</section>\n<section id=\"id92\">\n<h4>Returns<a class=\"headerlink\" href=\"#id92\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data<span class=\"classifier\">ndarray</span></dt><dd><p>Filtered input volume.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"applymask\">\n<h3>applymask<a class=\"headerlink\" href=\"#applymask\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.mask.applymask\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.mask.</span></span><span class=\"sig-name descname\"><span class=\"pre\">applymask</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vol</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.applymask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Mask vol with mask.\n\nParameters\n\u2014\u2014\u2014-\nvol : ndarray\n    Array with <span class=\"math notranslate nohighlight\">\\(V\\)</span> dimensions\nmask : ndarray\n    Binary mask.  Has <span class=\"math notranslate nohighlight\">\\(M\\)</span> dimensions where <span class=\"math notranslate nohighlight\">\\(M &lt;= V\\)</span>. When <span class=\"math notranslate nohighlight\">\\(M &lt; V\\)</span>, we\n    append <span class=\"math notranslate nohighlight\">\\(V - M\\)</span> dimensions with axis length 1 to <cite>mask</cite> so that <cite>mask</cite>\n    will broadcast against <cite>vol</cite>.  In the typical case <cite>vol</cite> can be 4D,\n    <cite>mask</cite> can be 3D, and we append a 1 to the mask shape which (via numpy\n    broadcasting) has the effect of applying the 3D mask to each 3D slice in\n    <cite>vol</cite> (<code class=\"docutils literal notranslate\"><span class=\"pre\">vol[...,</span> <span class=\"pre\">0]</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">vol[...,</span> <span class=\"pre\">-1</span></code>).\n\nReturns\n\u2014\u2014-\nmasked_vol : ndarray\n    <cite>vol</cite> multiplied by <cite>mask</cite> where <cite>mask</cite> may have been extended to match\n    extra dimensions in <cite>vol</cite></p>\n</dd></dl>\n\n</section>\n<section id=\"bounding-box\">\n<h3>bounding_box<a class=\"headerlink\" href=\"#bounding-box\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.mask.bounding_box\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.mask.</span></span><span class=\"sig-name descname\"><span class=\"pre\">bounding_box</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vol</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.bounding_box\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the bounding box of nonzero intensity voxels in the volume.</p>\n<section id=\"id93\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id93\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vol<span class=\"classifier\">ndarray</span></dt><dd><p>Volume to compute bounding box on.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id94\">\n<h4>Returns<a class=\"headerlink\" href=\"#id94\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>npmins<span class=\"classifier\">list</span></dt><dd><p>Array containing minimum index of each dimension</p>\n</dd>\n<dt>npmaxs<span class=\"classifier\">list</span></dt><dd><p>Array containing maximum index of each dimension</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"crop\">\n<h3>crop<a class=\"headerlink\" href=\"#crop\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.mask.crop\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.mask.</span></span><span class=\"sig-name descname\"><span class=\"pre\">crop</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vol</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mins</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">maxs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.crop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Crops the input volume.</p>\n<section id=\"id95\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id95\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vol<span class=\"classifier\">ndarray</span></dt><dd><p>Volume to crop.</p>\n</dd>\n<dt>mins<span class=\"classifier\">array</span></dt><dd><p>Array containing minimum index of each dimension.</p>\n</dd>\n<dt>maxs<span class=\"classifier\">array</span></dt><dd><p>Array containing maximum index of each dimension.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id96\">\n<h4>Returns<a class=\"headerlink\" href=\"#id96\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vol<span class=\"classifier\">ndarray</span></dt><dd><p>The cropped volume.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"median-otsu\">\n<h3>median_otsu<a class=\"headerlink\" href=\"#median-otsu\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.mask.median_otsu\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.mask.</span></span><span class=\"sig-name descname\"><span class=\"pre\">median_otsu</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_volume</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vol_idx</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">median_radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">numpass</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">autocrop</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dilate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.median_otsu\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple brain extraction tool method for images from DWI data.</p>\n<p>It uses a median filter smoothing of the input_volumes <cite>vol_idx</cite> and an\nautomatic histogram Otsu thresholding technique, hence the name\n<em>median_otsu</em>.</p>\n<p>This function is inspired from Mrtrix\u2019s bet which has default values\n<code class=\"docutils literal notranslate\"><span class=\"pre\">median_radius=3</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">numpass=2</span></code>. However, from tests on multiple 1.5T\nand 3T data     from GE, Philips, Siemens, the most robust choice is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">median_radius=4</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">numpass=4</span></code>.</p>\n<section id=\"id97\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id97\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_volume<span class=\"classifier\">ndarray</span></dt><dd><p>3D or 4D array of the brain volume.</p>\n</dd>\n<dt>vol_idx<span class=\"classifier\">None or array, optional.</span></dt><dd><p>1D array representing indices of <code class=\"docutils literal notranslate\"><span class=\"pre\">axis=3</span></code> of a 4D <cite>input_volume</cite>.\nNone is only an acceptable input if <code class=\"docutils literal notranslate\"><span class=\"pre\">input_volume</span></code> is 3D.</p>\n</dd>\n<dt>median_radius<span class=\"classifier\">int</span></dt><dd><p>Radius (in voxels) of the applied median filter (default: 4).</p>\n</dd>\n<dt>numpass: int</dt><dd><p>Number of pass of the median filter (default: 4).</p>\n</dd>\n<dt>autocrop: bool, optional</dt><dd><p>if True, the masked input_volume will also be cropped using the\nbounding box defined by the masked data. Should be on if DWI is\nupsampled to 1x1x1 resolution. (default: False).</p>\n</dd>\n<dt>dilate<span class=\"classifier\">None or int, optional</span></dt><dd><p>number of iterations for binary dilation</p>\n</dd>\n</dl>\n</section>\n<section id=\"id98\">\n<h4>Returns<a class=\"headerlink\" href=\"#id98\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>maskedvolume<span class=\"classifier\">ndarray</span></dt><dd><p>Masked input_volume</p>\n</dd>\n<dt>mask<span class=\"classifier\">3D ndarray</span></dt><dd><p>The binary brain mask</p>\n</dd>\n</dl>\n</section>\n<section id=\"id99\">\n<h4>Notes<a class=\"headerlink\" href=\"#id99\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Copyright (C) 2011, the scikit-image team\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.</p></li>\n<li><p>Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in\nthe documentation and/or other materials provided with the\ndistribution.</p></li>\n<li><p>Neither the name of skimage nor the names of its contributors may be\nused to endorse or promote products derived from this software without\nspecific prior written permission.</p></li>\n</ol>\n</div></blockquote>\n<p>THIS SOFTWARE IS PROVIDED BY THE AUTHOR <a href=\"#id100\"><span class=\"problematic\" id=\"id101\">``</span></a>AS IS\u2019\u2019 AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\nIN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"segment-from-cfa\">\n<h3>segment_from_cfa<a class=\"headerlink\" href=\"#segment-from-cfa\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.mask.segment_from_cfa\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.mask.</span></span><span class=\"sig-name descname\"><span class=\"pre\">segment_from_cfa</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tensor_fit</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_cfa</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.segment_from_cfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Segment the cfa inside roi using the values from threshold as bounds.</p>\n<section id=\"id102\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id102\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>tensor_fit<span class=\"classifier\">TensorFit object</span></dt><dd><p>TensorFit object</p>\n</dd>\n<dt>roi<span class=\"classifier\">ndarray</span></dt><dd><p>A binary mask, which contains the bounding box for the segmentation.</p>\n</dd>\n<dt>threshold<span class=\"classifier\">array-like</span></dt><dd><p>An iterable that defines the min and max values to use for the\nthresholding.\nThe values are specified as (R_min, R_max, G_min, G_max, B_min, B_max)</p>\n</dd>\n<dt>return_cfa<span class=\"classifier\">bool, optional</span></dt><dd><p>If True, the cfa is also returned.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id103\">\n<h4>Returns<a class=\"headerlink\" href=\"#id103\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>mask<span class=\"classifier\">ndarray</span></dt><dd><p>Binary mask of the segmentation.</p>\n</dd>\n<dt>cfa<span class=\"classifier\">ndarray, optional</span></dt><dd><p>Array with shape = (\u2026, 3), where \u2026 is the shape of tensor_fit.\nThe color fractional anisotropy, ordered as a nd array with the last\ndimension of size 3 for the R, G and B channels.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"clean-cc-mask\">\n<h3>clean_cc_mask<a class=\"headerlink\" href=\"#clean-cc-mask\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.mask.clean_cc_mask\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.mask.</span></span><span class=\"sig-name descname\"><span class=\"pre\">clean_cc_mask</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.clean_cc_mask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Cleans a segmentation of the corpus callosum so no random pixels\nare included.</p>\n<section id=\"id104\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id104\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>mask<span class=\"classifier\">ndarray</span></dt><dd><p>Binary mask of the coarse segmentation.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id105\">\n<h4>Returns<a class=\"headerlink\" href=\"#id105\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>new_cc_mask<span class=\"classifier\">ndarray</span></dt><dd><p>Binary mask of the cleaned segmentation.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"mdf\">\n<h3>mdf<a class=\"headerlink\" href=\"#mdf\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.metric.mdf\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.metric.</span></span><span class=\"sig-name descname\"><span class=\"pre\">mdf</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">s1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">s2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.mdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the MDF (Minimum average Direct-Flip) distance\n<a class=\"reference internal\" href=\"../../examples_built/23_segmentation/segment_quickbundles/#garyfallidis12\" id=\"id106\"><span>[Garyfallidis12]</span></a> between two streamlines.</p>\n<p>Streamlines must have the same number of points.</p>\n<section id=\"id107\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id107\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>s1<span class=\"classifier\">2D array</span></dt><dd><p>A streamline (sequence of N-dimensional points).</p>\n</dd>\n<dt>s2<span class=\"classifier\">2D array</span></dt><dd><p>A streamline (sequence of N-dimensional points).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id108\">\n<h4>Returns<a class=\"headerlink\" href=\"#id108\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>double</dt><dd><p>Distance between two streamlines.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id109\">\n<h4>References<a class=\"headerlink\" href=\"#id109\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id110\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis12<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"mean-manhattan-distance\">\n<h3>mean_manhattan_distance<a class=\"headerlink\" href=\"#mean-manhattan-distance\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.metric.mean_manhattan_distance\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.metric.</span></span><span class=\"sig-name descname\"><span class=\"pre\">mean_manhattan_distance</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">a</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.mean_manhattan_distance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the average Manhattan-L1 distance (MDF without flip)</p>\n<p>Arrays are representing a single streamline or a list of streamlines\nthat have the same number of N-dimensional points (two last axis).</p>\n<section id=\"id111\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id111\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>a<span class=\"classifier\">2D or 3D array</span></dt><dd><p>A streamline or concatenated streamlines\n(array of S streamlines by P points in N dimension).</p>\n</dd>\n<dt>b<span class=\"classifier\">2D or 3D array</span></dt><dd><p>A streamline or concatenated streamlines\n(array of S streamlines by P points in N dimension).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id112\">\n<h4>Returns<a class=\"headerlink\" href=\"#id112\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>1D array</dt><dd><p>Distance between each S streamlines</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"mean-euclidean-distance\">\n<h3>mean_euclidean_distance<a class=\"headerlink\" href=\"#mean-euclidean-distance\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.metric.mean_euclidean_distance\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.metric.</span></span><span class=\"sig-name descname\"><span class=\"pre\">mean_euclidean_distance</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">a</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.mean_euclidean_distance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the average Euclidean-L2 distance (MDF without flip)</p>\n<p>Arrays are representing a single streamline or a list of streamlines\nthat have the same number of N-dimensional points (two last axis).</p>\n<section id=\"id113\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id113\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>a<span class=\"classifier\">2D or 3D array</span></dt><dd><p>A streamline or concatenated streamlines\n(array of S streamlines by P points in N dimension).</p>\n</dd>\n<dt>b<span class=\"classifier\">2D or 3D array</span></dt><dd><p>A streamline or concatenated streamlines\n(array of S streamlines by P points in N dimension).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id114\">\n<h4>Returns<a class=\"headerlink\" href=\"#id114\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>1D array</dt><dd><p>Distance between each S streamlines</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"otsu\">\n<h3>otsu<a class=\"headerlink\" href=\"#otsu\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.threshold.otsu\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.threshold.</span></span><span class=\"sig-name descname\"><span class=\"pre\">otsu</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">image</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nbins</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">256</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.threshold.otsu\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return threshold value based on Otsu\u2019s method.\nCopied from scikit-image to remove dependency.</p>\n<section id=\"id115\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id115\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>image<span class=\"classifier\">array</span></dt><dd><p>Input image.</p>\n</dd>\n<dt>nbins<span class=\"classifier\">int</span></dt><dd><p>Number of bins used to calculate histogram. This value is ignored for\ninteger arrays.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id116\">\n<h4>Returns<a class=\"headerlink\" href=\"#id116\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>threshold<span class=\"classifier\">float</span></dt><dd><p>Threshold value.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"upper-bound-by-rate\">\n<h3>upper_bound_by_rate<a class=\"headerlink\" href=\"#upper-bound-by-rate\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.threshold.upper_bound_by_rate\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.threshold.</span></span><span class=\"sig-name descname\"><span class=\"pre\">upper_bound_by_rate</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.05</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.threshold.upper_bound_by_rate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adjusts upper intensity boundary using rates</p>\n<p>It calculates the image intensity histogram, and based on the rate value it\ndecide what is the upperbound value for intensity normalization, usually\nlower bound is 0. The rate is the ratio between the amount of pixels in\nevery bins and the bins with highest pixel amount</p>\n<section id=\"id117\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id117\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data<span class=\"classifier\">float</span></dt><dd><p>Input intensity value data</p>\n</dd>\n<dt>rate<span class=\"classifier\">float</span></dt><dd><p>representing the threshold whether a specific histogram bin that should\nbe count in the normalization range</p>\n</dd>\n</dl>\n</section>\n<section id=\"id118\">\n<h4>Returns<a class=\"headerlink\" href=\"#id118\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>high : float</p>\n<blockquote>\n<div><p>the upper_bound value for normalization</p>\n</div></blockquote>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"upper-bound-by-percent\">\n<h3>upper_bound_by_percent<a class=\"headerlink\" href=\"#upper-bound-by-percent\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.threshold.upper_bound_by_percent\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.threshold.</span></span><span class=\"sig-name descname\"><span class=\"pre\">upper_bound_by_percent</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">percent</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.threshold.upper_bound_by_percent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the upper bound for visualization of medical images</p>\n<p>Calculate the histogram of the image and go right to left until you find\nthe bound that contains more than a percentage of the image.</p>\n<section id=\"id119\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id119\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>data : ndarray\npercent : float</p>\n</section>\n<section id=\"id120\">\n<h4>Returns<a class=\"headerlink\" href=\"#id120\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>upper_bound : float</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"tissueclassifierhmrf\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.tissue.TissueClassifierHMRF\" title=\"dipy.segment.tissue.TissueClassifierHMRF\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TissueClassifierHMRF</span></code></a><a class=\"headerlink\" href=\"#tissueclassifierhmrf\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.tissue.TissueClassifierHMRF\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.segment.tissue.</span></span><span class=\"sig-name descname\"><span class=\"pre\">TissueClassifierHMRF</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_history</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.tissue.TissueClassifierHMRF\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>This class contains the methods for tissue classification using the Markov\nRandom Fields modeling approach</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.tissue.TissueClassifierHMRF.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_history</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.tissue.TissueClassifierHMRF.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.segment.tissue.TissueClassifierHMRF.classify\">\n<span class=\"sig-name descname\"><span class=\"pre\">classify</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">image</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nclasses</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">beta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tolerance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_iter</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.tissue.TissueClassifierHMRF.classify\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This method uses the Maximum a posteriori - Markov Random Field\napproach for segmentation by using the Iterative Conditional Modes and\nExpectation Maximization to estimate the parameters.</p>\n<section id=\"id121\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id121\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>image<span class=\"classifier\">ndarray,</span></dt><dd><p>3D structural image.</p>\n</dd>\n<dt>nclasses<span class=\"classifier\">int,</span></dt><dd><p>number of desired classes.</p>\n</dd>\n<dt>beta<span class=\"classifier\">float,</span></dt><dd><p>smoothing parameter, the higher this number the smoother the\noutput will be.</p>\n</dd>\n<dt>tolerance: float,</dt><dd><p>value that defines the percentage of change tolerated to\nprevent the ICM loop to stop. Default is 1e-05.</p>\n</dd>\n<dt>max_iter<span class=\"classifier\">float,</span></dt><dd><p>fixed number of desired iterations. Default is 100.\nIf the user only specifies this parameter, the tolerance\nvalue will not be considered. If none of these two\nparameters</p>\n</dd>\n</dl>\n</section>\n<section id=\"id122\">\n<h4>Returns<a class=\"headerlink\" href=\"#id122\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>initial_segmentation<span class=\"classifier\">ndarray,</span></dt><dd><p>3D segmented image with all tissue types\nspecified in nclasses.</p>\n</dd>\n<dt>final_segmentation<span class=\"classifier\">ndarray,</span></dt><dd><p>3D final refined segmentation containing all\ntissue types.</p>\n</dd>\n<dt>PVE<span class=\"classifier\">ndarray,</span></dt><dd><p>3D probability map of each tissue type.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.sims", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "N", "next"], ["reference/dipy.reconst", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>", "P", "previous"]], "sourcename": "reference/dipy.segment.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.benchmarks\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.benchmarks</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.benchmarks.bench_quickbundles\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.benchmarks.bench_quickbundles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.bundles\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.bundles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.clustering\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.clustering</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.fss\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.fss</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.mask\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.mask</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.metric\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.metric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.threshold\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.threshold</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.tissue\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment.tissue</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#mdfpy\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MDFpy</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MDFpy</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MDFpy.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MDFpy.are_compatible()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MDFpy.dist()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bench-quickbundles\">bench_quickbundles</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bench_quickbundles()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#recobundles\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RecoBundles</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.RecoBundles\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RecoBundles</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.RecoBundles.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RecoBundles.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.RecoBundles.evaluate_results\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RecoBundles.evaluate_results()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.RecoBundles.recognize\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RecoBundles.recognize()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.RecoBundles.refine\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RecoBundles.refine()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#check-range\">check_range</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.check_range\"><code class=\"docutils literal notranslate\"><span class=\"pre\">check_range()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#logger\">logger</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.logger\"><code class=\"docutils literal notranslate\"><span class=\"pre\">logger()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bundle-adjacency\">bundle_adjacency</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.bundle_adjacency\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bundle_adjacency()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ba-analysis\">ba_analysis</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.ba_analysis\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ba_analysis()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#cluster-bundle\">cluster_bundle</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.cluster_bundle\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cluster_bundle()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bundle-shape-similarity\">bundle_shape_similarity</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.bundles.bundle_shape_similarity\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bundle_shape_similarity()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#identity\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Identity</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.Identity\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Identity</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.Identity.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Identity.__init__()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#cluster\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Cluster</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Cluster</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Cluster.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster.assign\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Cluster.assign()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#clustercentroid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClusterCentroid</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterCentroid</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterCentroid.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid.assign\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterCentroid.assign()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid.update\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterCentroid.update()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#clustermap\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClusterMap</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.add_cluster\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.add_cluster()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.clear\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.clear()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.clusters\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.clusters</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.clusters_sizes\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.clusters_sizes()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.get_large_clusters\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.get_large_clusters()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.get_small_clusters\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.get_small_clusters()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.refdata\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.refdata</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.remove_cluster\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.remove_cluster()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.size\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMap.size()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#clustermapcentroid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClusterMapCentroid</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMapCentroid\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMapCentroid</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMapCentroid.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMapCentroid.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMapCentroid.centroids\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ClusterMapCentroid.centroids</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#clustering\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Clustering</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Clustering</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Clustering.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering.cluster\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Clustering.cluster()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#quickbundles\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">QuickBundles</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundles\"><code class=\"docutils literal notranslate\"><span class=\"pre\">QuickBundles</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundles.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">QuickBundles.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundles.cluster\"><code class=\"docutils literal notranslate\"><span class=\"pre\">QuickBundles.cluster()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#quickbundlesx\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">QuickBundlesX</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundlesX\"><code class=\"docutils literal notranslate\"><span class=\"pre\">QuickBundlesX</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundlesX.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">QuickBundlesX.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundlesX.cluster\"><code class=\"docutils literal notranslate\"><span class=\"pre\">QuickBundlesX.cluster()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#treecluster\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TreeCluster</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeCluster\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeCluster</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeCluster.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeCluster.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeCluster.add\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeCluster.add()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeCluster.is_leaf\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeCluster.is_leaf</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeCluster.return_indices\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeCluster.return_indices()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#treeclustermap\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TreeClusterMap</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeClusterMap\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeClusterMap</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeClusterMap.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeClusterMap.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeClusterMap.get_clusters\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeClusterMap.get_clusters()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeClusterMap.iter_preorder\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeClusterMap.iter_preorder()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeClusterMap.refdata\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeClusterMap.refdata</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.TreeClusterMap.traverse_postorder\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TreeClusterMap.traverse_postorder()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id71\">logger</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.logger\"><code class=\"docutils literal notranslate\"><span class=\"pre\">logger()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#qbx-and-merge\">qbx_and_merge</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.clustering.qbx_and_merge\"><code class=\"docutils literal notranslate\"><span class=\"pre\">qbx_and_merge()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#faststreamlinesearch\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FastStreamlineSearch</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.fss.FastStreamlineSearch\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FastStreamlineSearch</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.fss.FastStreamlineSearch.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FastStreamlineSearch.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.fss.FastStreamlineSearch.radius_search\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FastStreamlineSearch.radius_search()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#nearest-from-matrix-row\">nearest_from_matrix_row</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.fss.nearest_from_matrix_row\"><code class=\"docutils literal notranslate\"><span class=\"pre\">nearest_from_matrix_row()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#nearest-from-matrix-col\">nearest_from_matrix_col</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.fss.nearest_from_matrix_col\"><code class=\"docutils literal notranslate\"><span class=\"pre\">nearest_from_matrix_col()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#multi-median\">multi_median</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.mask.multi_median\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multi_median()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#applymask\">applymask</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.mask.applymask\"><code class=\"docutils literal notranslate\"><span class=\"pre\">applymask()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bounding-box\">bounding_box</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.mask.bounding_box\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bounding_box()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#crop\">crop</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.mask.crop\"><code class=\"docutils literal notranslate\"><span class=\"pre\">crop()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#median-otsu\">median_otsu</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.mask.median_otsu\"><code class=\"docutils literal notranslate\"><span class=\"pre\">median_otsu()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#segment-from-cfa\">segment_from_cfa</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.mask.segment_from_cfa\"><code class=\"docutils literal notranslate\"><span class=\"pre\">segment_from_cfa()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#clean-cc-mask\">clean_cc_mask</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.mask.clean_cc_mask\"><code class=\"docutils literal notranslate\"><span class=\"pre\">clean_cc_mask()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#mdf\">mdf</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.metric.mdf\"><code class=\"docutils literal notranslate\"><span class=\"pre\">mdf()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#mean-manhattan-distance\">mean_manhattan_distance</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.metric.mean_manhattan_distance\"><code class=\"docutils literal notranslate\"><span class=\"pre\">mean_manhattan_distance()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#mean-euclidean-distance\">mean_euclidean_distance</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.metric.mean_euclidean_distance\"><code class=\"docutils literal notranslate\"><span class=\"pre\">mean_euclidean_distance()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#otsu\">otsu</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.threshold.otsu\"><code class=\"docutils literal notranslate\"><span class=\"pre\">otsu()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#upper-bound-by-rate\">upper_bound_by_rate</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.threshold.upper_bound_by_rate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">upper_bound_by_rate()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#upper-bound-by-percent\">upper_bound_by_percent</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.threshold.upper_bound_by_percent\"><code class=\"docutils literal notranslate\"><span class=\"pre\">upper_bound_by_percent()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#tissueclassifierhmrf\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TissueClassifierHMRF</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.tissue.TissueClassifierHMRF\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TissueClassifierHMRF</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.segment.tissue.TissueClassifierHMRF.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TissueClassifierHMRF.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.segment.tissue.TissueClassifierHMRF.classify\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TissueClassifierHMRF.classify()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.segment", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}