{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.stats/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>"}, "next": {"link": "../dipy.viz/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "meta": {}, "body": "<section id=\"module-dipy.tracking\">\n<span id=\"tracking\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>Tracking objects</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n<section id=\"module-dipy.tracking._utils\">\n<span id=\"module-tracking-utils\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking._utils</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking._utils\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>This is a helper module for dipy.tracking.utils.</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.tracking.benchmarks\">\n<span id=\"module-tracking-benchmarks\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.benchmarks</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking.benchmarks\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.tracking.benchmarks.bench_streamline\">\n<span id=\"module-tracking-benchmarks-bench-streamline\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.benchmarks.bench_streamline</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking.benchmarks.bench_streamline\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Benchmarks for functions related to streamline</p>\n<p>Run all benchmarks with:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy.tracking</span> <span class=\"k\">as</span> <span class=\"nn\">dipytracking</span>\n<span class=\"n\">dipytracking</span><span class=\"o\">.</span><span class=\"n\">bench</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>With Pytest, Run this benchmark with:</p>\n<blockquote>\n<div><p>pytest -svv -c bench.ini /path/to/bench_streamline.py</p>\n</div></blockquote>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.setup\" title=\"dipy.tracking.benchmarks.bench_streamline.setup\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">setup</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.generate_streamlines\" title=\"dipy.tracking.benchmarks.bench_streamline.generate_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">generate_streamlines</span></code></a>(nb_streamlines,\u00a0...)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points\" title=\"dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">bench_set_number_of_points</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.bench_length\" title=\"dipy.tracking.benchmarks.bench_streamline.bench_length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">bench_length</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines\" title=\"dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">bench_compress_streamlines</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.tracking.learning\">\n<span id=\"module-tracking-learning\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.learning</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking.learning\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Learning algorithms for tractography</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.learning.detect_corresponding_tracks\" title=\"dipy.tracking.learning.detect_corresponding_tracks\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">detect_corresponding_tracks</span></code></a>(indices,\u00a0...)</p></td>\n<td><p>Detect corresponding tracks from list tracks1 to list tracks2 where tracks1 &amp; tracks2 are lists of tracks</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.learning.detect_corresponding_tracks_plus\" title=\"dipy.tracking.learning.detect_corresponding_tracks_plus\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">detect_corresponding_tracks_plus</span></code></a>(indices,\u00a0...)</p></td>\n<td><p>Detect corresponding tracks from 1 to 2 where tracks1 &amp; tracks2 are sequences of tracks</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.tracking.life\">\n<span id=\"module-tracking-life\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.life</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking.life\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>This is an implementation of the Linear Fascicle Evaluation (LiFE) algorithm\ndescribed in:</p>\n<p>Pestilli, F., Yeatman, J, Rokem, A. Kay, K. and Wandell B.A. (2014). Validation\nand statistical inference in living connectomes. Nature Methods 11:\n1058-1063. doi:10.1038/nmeth.3098</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.life.LifeSignalMaker\" title=\"dipy.tracking.life.LifeSignalMaker\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">LifeSignalMaker</span></code></a>(gtab[,\u00a0evals,\u00a0sphere])</p></td>\n<td><p>A class for generating signals from streamlines in an efficient and speedy manner.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberModel\" title=\"dipy.tracking.life.FiberModel\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">FiberModel</span></code></a>(gtab)</p></td>\n<td><p>A class for representing and solving predictive models based on tractography solutions.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberFit\" title=\"dipy.tracking.life.FiberFit\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">FiberFit</span></code></a>(fiber_model,\u00a0life_matrix,\u00a0...)</p></td>\n<td><p>A fit of the LiFE model to diffusion data</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.life.gradient\" title=\"dipy.tracking.life.gradient\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gradient</span></code></a>(f)</p></td>\n<td><p>Return the gradient of an N-dimensional array.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.life.streamline_gradients\" title=\"dipy.tracking.life.streamline_gradients\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">streamline_gradients</span></code></a>(streamline)</p></td>\n<td><p>Calculate the gradients of the streamline along the spatial dimension</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.life.grad_tensor\" title=\"dipy.tracking.life.grad_tensor\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">grad_tensor</span></code></a>(grad,\u00a0evals)</p></td>\n<td><p>Calculate the 3 by 3 tensor for a given spatial gradient, given a canonical tensor shape (also as a 3 by 3), pointing at [1,0,0]</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.life.streamline_tensors\" title=\"dipy.tracking.life.streamline_tensors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">streamline_tensors</span></code></a>(streamline[,\u00a0evals])</p></td>\n<td><p>The tensors generated by this fiber.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.life.streamline_signal\" title=\"dipy.tracking.life.streamline_signal\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">streamline_signal</span></code></a>(streamline,\u00a0gtab[,\u00a0evals])</p></td>\n<td><p>The signal from a single streamline estimate along each of its nodes.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.life.voxel2streamline\" title=\"dipy.tracking.life.voxel2streamline\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">voxel2streamline</span></code></a>(streamline,\u00a0affine[,\u00a0...])</p></td>\n<td><p>Maps voxels to streamlines and streamlines to voxels, for setting up the LiFE equations matrix</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.tracking.local_tracking\">\n<span id=\"module-tracking-local-tracking\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.local_tracking</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking.local_tracking\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.local_tracking.LocalTracking\" title=\"dipy.tracking.local_tracking.LocalTracking\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">LocalTracking</span></code></a>(direction_getter,\u00a0...[,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.local_tracking.ParticleFilteringTracking\" title=\"dipy.tracking.local_tracking.ParticleFilteringTracking\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ParticleFilteringTracking</span></code></a>(direction_getter,\u00a0...)</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.tracking.mesh\">\n<span id=\"module-tracking-mesh\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.mesh</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking.mesh\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.mesh.random_coordinates_from_surface\" title=\"dipy.tracking.mesh.random_coordinates_from_surface\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">random_coordinates_from_surface</span></code></a>(...[,\u00a0...])</p></td>\n<td><p>Generate random triangles_indices and trilinear_coord</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.mesh.seeds_from_surface_coordinates\" title=\"dipy.tracking.mesh.seeds_from_surface_coordinates\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">seeds_from_surface_coordinates</span></code></a>(triangles,\u00a0...)</p></td>\n<td><p>Compute points from triangles_indices and trilinear_coord</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.mesh.triangles_area\" title=\"dipy.tracking.mesh.triangles_area\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">triangles_area</span></code></a>(triangles,\u00a0vts)</p></td>\n<td><p>Compute the local area of each triangle</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.mesh.vertices_to_triangles_values\" title=\"dipy.tracking.mesh.vertices_to_triangles_values\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">vertices_to_triangles_values</span></code></a>(triangles,\u00a0...)</p></td>\n<td><p>Change from values per vertex to values per triangle</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.tracking.metrics\">\n<span id=\"module-tracking-metrics\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.metrics</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking.metrics\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Metrics for tracks, where tracks are arrays of points</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.winding\" title=\"dipy.tracking.metrics.winding\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">winding</span></code></a>(xyz)</p></td>\n<td><p>Total turning angle projected.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.length\" title=\"dipy.tracking.metrics.length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">length</span></code></a>(xyz[,\u00a0along])</p></td>\n<td><p>Euclidean length of track line</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.bytes\" title=\"dipy.tracking.metrics.bytes\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">bytes</span></code></a>(xyz)</p></td>\n<td><p>Size of track in bytes.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.midpoint\" title=\"dipy.tracking.metrics.midpoint\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">midpoint</span></code></a>(xyz)</p></td>\n<td><p>Midpoint of track</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.downsample\" title=\"dipy.tracking.metrics.downsample\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">downsample</span></code></a>(xyz[,\u00a0n_pols])</p></td>\n<td><p>downsample for a specific number of points along the streamline Uses the length of the curve.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.center_of_mass\" title=\"dipy.tracking.metrics.center_of_mass\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">center_of_mass</span></code></a>(xyz)</p></td>\n<td><p>Center of mass of streamline</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.magn\" title=\"dipy.tracking.metrics.magn\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">magn</span></code></a>(xyz[,\u00a0n])</p></td>\n<td><p>magnitude of vector</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.frenet_serret\" title=\"dipy.tracking.metrics.frenet_serret\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">frenet_serret</span></code></a>(xyz)</p></td>\n<td><p>Frenet-Serret Space Curve Invariants\n\nCalculates the 3 vector and 2 scalar invariants of a space curve\ndefined by vectors r = (x,y,z).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.mean_curvature\" title=\"dipy.tracking.metrics.mean_curvature\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mean_curvature</span></code></a>(xyz)</p></td>\n<td><p>Calculates the mean curvature of a curve</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.mean_orientation\" title=\"dipy.tracking.metrics.mean_orientation\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mean_orientation</span></code></a>(xyz)</p></td>\n<td><p>Calculates the mean orientation of a curve</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.generate_combinations\" title=\"dipy.tracking.metrics.generate_combinations\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">generate_combinations</span></code></a>(items,\u00a0n)</p></td>\n<td><p>Combine sets of size n from items</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.longest_track_bundle\" title=\"dipy.tracking.metrics.longest_track_bundle\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">longest_track_bundle</span></code></a>(bundle[,\u00a0sort])</p></td>\n<td><p>Return longest track or length sorted track indices in <cite>bundle</cite></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.intersect_sphere\" title=\"dipy.tracking.metrics.intersect_sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">intersect_sphere</span></code></a>(xyz,\u00a0center,\u00a0radius)</p></td>\n<td><p>If any segment of the track is intersecting with a sphere of specific center and radius return True otherwise False</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.inside_sphere\" title=\"dipy.tracking.metrics.inside_sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">inside_sphere</span></code></a>(xyz,\u00a0center,\u00a0radius)</p></td>\n<td><p>If any point of the track is inside a sphere of a specified\ncenter and radius return True otherwise False.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.inside_sphere_points\" title=\"dipy.tracking.metrics.inside_sphere_points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">inside_sphere_points</span></code></a>(xyz,\u00a0center,\u00a0radius)</p></td>\n<td><p>If a track intersects with a sphere of a specified center and\nradius return the points that are inside the sphere otherwise False.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.spline\" title=\"dipy.tracking.metrics.spline\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">spline</span></code></a>(xyz[,\u00a0s,\u00a0k,\u00a0nest])</p></td>\n<td><p>Generate B-splines as documented in <a class=\"reference external\" href=\"http://www.scipy.org/Cookbook/Interpolation\">http://www.scipy.org/Cookbook/Interpolation</a></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.startpoint\" title=\"dipy.tracking.metrics.startpoint\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">startpoint</span></code></a>(xyz)</p></td>\n<td><p>First point of the track</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.endpoint\" title=\"dipy.tracking.metrics.endpoint\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">endpoint</span></code></a>(xyz)</p></td>\n<td><p>Parameters\n\nxyz\n\narray, shape(N,3)\n\nTrack.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.arbitrarypoint\" title=\"dipy.tracking.metrics.arbitrarypoint\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">arbitrarypoint</span></code></a>(xyz,\u00a0distance)</p></td>\n<td><p>Select an arbitrary point along distance on the track (curve)</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.principal_components\" title=\"dipy.tracking.metrics.principal_components\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">principal_components</span></code></a>(xyz)</p></td>\n<td><p>We use PCA to calculate the 3 principal directions for a track</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.metrics.midpoint2point\" title=\"dipy.tracking.metrics.midpoint2point\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">midpoint2point</span></code></a>(xyz,\u00a0p)</p></td>\n<td><p>Calculate distance from midpoint of a curve to arbitrary point p</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.tracking.streamline\">\n<span id=\"module-tracking-streamline\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.streamline</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking.streamline\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.unlist_streamlines\" title=\"dipy.tracking.streamline.unlist_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unlist_streamlines</span></code></a>(streamlines)</p></td>\n<td><p>Return the streamlines not as a list but as an array and an offset</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.relist_streamlines\" title=\"dipy.tracking.streamline.relist_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">relist_streamlines</span></code></a>(points,\u00a0offsets)</p></td>\n<td><p>Given a representation of a set of streamlines as a large array and an offsets array return the streamlines as a list of shorter arrays.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.center_streamlines\" title=\"dipy.tracking.streamline.center_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">center_streamlines</span></code></a>(streamlines)</p></td>\n<td><p>Move streamlines to the origin</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.deform_streamlines\" title=\"dipy.tracking.streamline.deform_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">deform_streamlines</span></code></a>(streamlines,\u00a0...)</p></td>\n<td><p>Apply deformation field to streamlines</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.transform_streamlines\" title=\"dipy.tracking.streamline.transform_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">transform_streamlines</span></code></a>(streamlines,\u00a0mat[,\u00a0...])</p></td>\n<td><p>Apply affine transformation to streamlines</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.select_random_set_of_streamlines\" title=\"dipy.tracking.streamline.select_random_set_of_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">select_random_set_of_streamlines</span></code></a>(...[,\u00a0rng])</p></td>\n<td><p>Select a random set of streamlines</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.select_by_rois\" title=\"dipy.tracking.streamline.select_by_rois\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">select_by_rois</span></code></a>(streamlines,\u00a0affine,\u00a0rois,\u00a0...)</p></td>\n<td><p>Select streamlines based on logical relations with several regions of interest (ROIs).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.cluster_confidence\" title=\"dipy.tracking.streamline.cluster_confidence\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">cluster_confidence</span></code></a>(streamlines[,\u00a0max_mdf,\u00a0...])</p></td>\n<td><p>Computes the cluster confidence index (cci), which is an estimation of the support a set of streamlines gives to a particular pathway.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.orient_by_rois\" title=\"dipy.tracking.streamline.orient_by_rois\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">orient_by_rois</span></code></a>(streamlines,\u00a0affine,\u00a0roi1,\u00a0roi2)</p></td>\n<td><p>Orient a set of streamlines according to a pair of ROIs</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.orient_by_streamline\" title=\"dipy.tracking.streamline.orient_by_streamline\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">orient_by_streamline</span></code></a>(streamlines,\u00a0standard)</p></td>\n<td><p>Orient a bundle of streamlines to a standard streamline.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.values_from_volume\" title=\"dipy.tracking.streamline.values_from_volume\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">values_from_volume</span></code></a>(data,\u00a0streamlines,\u00a0affine)</p></td>\n<td><p>Extract values of a scalar/vector along each streamline from a volume.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.streamline.nbytes\" title=\"dipy.tracking.streamline.nbytes\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">nbytes</span></code></a>(streamlines)</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.tracking.utils\">\n<span id=\"id1\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.utils</span></code><a class=\"headerlink\" href=\"#module-dipy.tracking.utils\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Various tools related to creating and working with streamlines.</p>\n<p>This module provides tools for targeting streamlines using ROIs, for making\nconnectivity matrices from whole brain fiber tracking and some other tools that\nallow streamlines to interact with image data.</p>\n<section id=\"important-notes\">\n<h3>Important Notes<a class=\"headerlink\" href=\"#important-notes\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Dipy uses affine matrices to represent the relationship between streamline\npoints, which are defined as points in a continuous 3d space, and image voxels,\nwhich are typically arranged in a discrete 3d grid. Dipy uses a convention\nsimilar to nifti files to interpret these affine matrices. This convention is\nthat the point at the center of voxel <code class=\"docutils literal notranslate\"><span class=\"pre\">[i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">k]</span></code> is represented by the point\n<code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z]</span></code> where <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z,</span> <span class=\"pre\">1]</span> <span class=\"pre\">=</span> <span class=\"pre\">affine</span> <span class=\"pre\">*</span> <span class=\"pre\">[i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">k,</span> <span class=\"pre\">1]</span></code>.  Also when the\nphrase \u201cvoxel coordinates\u201d is used, it is understood to be the same as <code class=\"docutils literal notranslate\"><span class=\"pre\">affine</span>\n<span class=\"pre\">=</span> <span class=\"pre\">eye(4)</span></code>.</p>\n<p>As an example, let\u2019s take a 2d image where the affine is:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[[</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">]]</span>\n</pre></div>\n</div>\n<p>The pixels of an image with this affine would look something like:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">A</span><span class=\"o\">------------</span>\n<span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>\n<span class=\"o\">|</span> <span class=\"n\">C</span> <span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>\n<span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>\n<span class=\"o\">----</span><span class=\"n\">B</span><span class=\"o\">--------</span>\n<span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>\n<span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>\n<span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>\n<span class=\"o\">-------------</span>\n<span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>\n<span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>\n<span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>   <span class=\"o\">|</span>\n<span class=\"o\">------------</span><span class=\"n\">D</span>\n</pre></div>\n</div>\n<p>And the letters A-D represent the following points in\n\u201creal world coordinates\u201d:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">.5</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.</span><span class=\"p\">]</span>\n<span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"mf\">.5</span><span class=\"p\">,</span>  <span class=\"mf\">1.</span><span class=\"p\">]</span>\n<span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"mf\">0.</span><span class=\"p\">,</span>  <span class=\"mf\">0.</span><span class=\"p\">]</span>\n<span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"mf\">2.5</span><span class=\"p\">,</span>  <span class=\"mf\">5.</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</section>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.density_map\" title=\"dipy.tracking.utils.density_map\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">density_map</span></code></a>(streamlines,\u00a0affine,\u00a0vol_dims)</p></td>\n<td><p>Count the number of unique streamlines that pass through each voxel.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.connectivity_matrix\" title=\"dipy.tracking.utils.connectivity_matrix\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">connectivity_matrix</span></code></a>(streamlines,\u00a0affine,\u00a0...)</p></td>\n<td><p>Count the streamlines that start and end at each label pair.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.ndbincount\" title=\"dipy.tracking.utils.ndbincount\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ndbincount</span></code></a>(x[,\u00a0weights,\u00a0shape])</p></td>\n<td><p>Like bincount, but for nd-indices.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.reduce_labels\" title=\"dipy.tracking.utils.reduce_labels\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reduce_labels</span></code></a>(label_volume)</p></td>\n<td><p>Reduce an array of labels to the integers from 0 to n with smallest possible n.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.subsegment\" title=\"dipy.tracking.utils.subsegment\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">subsegment</span></code></a>(streamlines,\u00a0max_segment_length)</p></td>\n<td><p>Split the segments of the streamlines into small segments.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.seeds_from_mask\" title=\"dipy.tracking.utils.seeds_from_mask\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">seeds_from_mask</span></code></a>(mask,\u00a0affine[,\u00a0density])</p></td>\n<td><p>Create seeds for fiber tracking from a binary mask.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.random_seeds_from_mask\" title=\"dipy.tracking.utils.random_seeds_from_mask\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">random_seeds_from_mask</span></code></a>(mask,\u00a0affine[,\u00a0...])</p></td>\n<td><p>Create randomly placed seeds for fiber tracking from a binary mask.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.target\" title=\"dipy.tracking.utils.target\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">target</span></code></a>(streamlines,\u00a0affine,\u00a0target_mask[,\u00a0...])</p></td>\n<td><p>Filter streamlines based on whether or not they pass through an ROI.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.target_line_based\" title=\"dipy.tracking.utils.target_line_based\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">target_line_based</span></code></a>(streamlines,\u00a0affine,\u00a0...)</p></td>\n<td><p>Filter streamlines based on whether or not they pass through a ROI, using a line-based algorithm.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.streamline_near_roi\" title=\"dipy.tracking.utils.streamline_near_roi\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">streamline_near_roi</span></code></a>(streamline,\u00a0roi_coords,\u00a0tol)</p></td>\n<td><p>Is a streamline near an ROI.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.near_roi\" title=\"dipy.tracking.utils.near_roi\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">near_roi</span></code></a>(streamlines,\u00a0affine,\u00a0region_of_interest)</p></td>\n<td><p>Provide filtering criteria for a set of streamlines based on whether they fall within a tolerance distance from an ROI.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.length\" title=\"dipy.tracking.utils.length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">length</span></code></a>(streamlines)</p></td>\n<td><p>Calculate the lengths of many streamlines in a bundle.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.unique_rows\" title=\"dipy.tracking.utils.unique_rows\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unique_rows</span></code></a>(in_array[,\u00a0dtype])</p></td>\n<td><p>Find the unique rows in an array.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.transform_tracking_output\" title=\"dipy.tracking.utils.transform_tracking_output\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">transform_tracking_output</span></code></a>(tracking_output,\u00a0...)</p></td>\n<td><p>Apply a linear transformation, given by affine, to streamlines.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.reduce_rois\" title=\"dipy.tracking.utils.reduce_rois\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reduce_rois</span></code></a>(rois,\u00a0include)</p></td>\n<td><p>Reduce multiple ROIs to one inclusion and one exclusion ROI.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.path_length\" title=\"dipy.tracking.utils.path_length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">path_length</span></code></a>(streamlines,\u00a0affine,\u00a0aoi[,\u00a0...])</p></td>\n<td><p>Compute the shortest path, along any streamline, between aoi and each voxel.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.max_angle_from_curvature\" title=\"dipy.tracking.utils.max_angle_from_curvature\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">max_angle_from_curvature</span></code></a>(...)</p></td>\n<td><p>Get the maximum deviation angle from the minimum radius curvature.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.tracking.utils.min_radius_curvature_from_angle\" title=\"dipy.tracking.utils.min_radius_curvature_from_angle\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">min_radius_curvature_from_angle</span></code></a>(max_angle,\u00a0...)</p></td>\n<td><p>Get minimum radius of curvature from a deviation angle.</p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"setup\">\n<h3>setup<a class=\"headerlink\" href=\"#setup\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.benchmarks.bench_streamline.setup\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.benchmarks.bench_streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">setup</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.benchmarks.bench_streamline.setup\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"generate-streamlines\">\n<h3>generate_streamlines<a class=\"headerlink\" href=\"#generate-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.benchmarks.bench_streamline.generate_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.benchmarks.bench_streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">generate_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_nb_points</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_nb_points</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rng</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.benchmarks.bench_streamline.generate_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"bench-set-number-of-points\">\n<h3>bench_set_number_of_points<a class=\"headerlink\" href=\"#bench-set-number-of-points\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.benchmarks.bench_streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">bench_set_number_of_points</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"bench-length\">\n<h3>bench_length<a class=\"headerlink\" href=\"#bench-length\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.benchmarks.bench_streamline.bench_length\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.benchmarks.bench_streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">bench_length</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.benchmarks.bench_streamline.bench_length\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"bench-compress-streamlines\">\n<h3>bench_compress_streamlines<a class=\"headerlink\" href=\"#bench-compress-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.benchmarks.bench_streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">bench_compress_streamlines</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"detect-corresponding-tracks\">\n<h3>detect_corresponding_tracks<a class=\"headerlink\" href=\"#detect-corresponding-tracks\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.learning.detect_corresponding_tracks\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.learning.</span></span><span class=\"sig-name descname\"><span class=\"pre\">detect_corresponding_tracks</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tracks1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tracks2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.learning.detect_corresponding_tracks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Detect corresponding tracks from list tracks1 to list tracks2\nwhere tracks1 &amp; tracks2 are lists of tracks</p>\n<section id=\"parameters\">\n<h4>Parameters<a class=\"headerlink\" href=\"#parameters\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>indices<span class=\"classifier\">sequence</span></dt><dd><p>of indices of tracks1 that are to be detected in tracks2</p>\n</dd>\n<dt>tracks1<span class=\"classifier\">sequence</span></dt><dd><p>of tracks as arrays, shape (N1,3) .. (Nm,3)</p>\n</dd>\n<dt>tracks2<span class=\"classifier\">sequence</span></dt><dd><p>of tracks as arrays, shape (M1,3) .. (Mm,3)</p>\n</dd>\n</dl>\n</section>\n<section id=\"returns\">\n<h4>Returns<a class=\"headerlink\" href=\"#returns\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>track2track<span class=\"classifier\">array (N,2) where N is len(indices) of int</span></dt><dd><p>it shows the correspondence in the following way:\nthe first column is the current index in tracks1\nthe second column is the corresponding index in tracks2</p>\n</dd>\n</dl>\n</section>\n<section id=\"examples\">\n<h4>Examples<a class=\"headerlink\" href=\"#examples\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy.tracking.learning</span> <span class=\"k\">as</span> <span class=\"nn\">tl</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bundle1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bundle2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">detect_corresponding_tracks</span><span class=\"p\">(</span><span class=\"n\">indices</span><span class=\"p\">,</span> <span class=\"n\">bundle1</span><span class=\"p\">,</span> <span class=\"n\">bundle2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"notes\">\n<h4>Notes<a class=\"headerlink\" href=\"#notes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>To find the corresponding tracks we use mam_distances with \u2018avg\u2019 option.\nThen we calculate the argmin of all the calculated distances and return it\nfor every index. (See 3rd column of arr in the example given below.)</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"detect-corresponding-tracks-plus\">\n<h3>detect_corresponding_tracks_plus<a class=\"headerlink\" href=\"#detect-corresponding-tracks-plus\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.learning.detect_corresponding_tracks_plus\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.learning.</span></span><span class=\"sig-name descname\"><span class=\"pre\">detect_corresponding_tracks_plus</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tracks1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tracks2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.learning.detect_corresponding_tracks_plus\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Detect corresponding tracks from 1 to 2 where tracks1 &amp; tracks2 are\nsequences of tracks</p>\n<section id=\"id2\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>indices<span class=\"classifier\">sequence</span></dt><dd><p>of indices of tracks1 that are to be detected in tracks2</p>\n</dd>\n<dt>tracks1<span class=\"classifier\">sequence</span></dt><dd><p>of tracks as arrays, shape (N1,3) .. (Nm,3)</p>\n</dd>\n<dt>indices2<span class=\"classifier\">sequence</span></dt><dd><p>of indices of tracks2 in the initial brain</p>\n</dd>\n<dt>tracks2<span class=\"classifier\">sequence</span></dt><dd><p>of tracks as arrays, shape (M1,3) .. (Mm,3)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id3\">\n<h4>Returns<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>track2track<span class=\"classifier\">array (N,2) where N is len(indices)</span></dt><dd><p>of int showing the correspondence in th following way\nthe first column is the current index of tracks1\nthe second column is the corresponding index in tracks2</p>\n</dd>\n</dl>\n</section>\n<section id=\"id4\">\n<h4>Examples<a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy.tracking.learning</span> <span class=\"k\">as</span> <span class=\"nn\">tl</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bundle1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bundle2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indices2</span> <span class=\"o\">=</span> <span class=\"n\">indices</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">detect_corresponding_tracks_plus</span><span class=\"p\">(</span><span class=\"n\">indices</span><span class=\"p\">,</span> <span class=\"n\">bundle1</span><span class=\"p\">,</span> <span class=\"n\">indices2</span><span class=\"p\">,</span> <span class=\"n\">bundle2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id5\">\n<h4>Notes<a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>To find the corresponding tracks we use mam_distances with \u2018avg\u2019 option.\nThen we calculate the argmin of all the calculated distances and return it\nfor every index. (See 3rd column of arr in the example given below.)</p>\n</section>\n<section id=\"see-also\">\n<h4>See Also<a class=\"headerlink\" href=\"#see-also\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>distances.mam_distances</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"lifesignalmaker\">\n<h3><a class=\"reference internal\" href=\"#dipy.tracking.life.LifeSignalMaker\" title=\"dipy.tracking.life.LifeSignalMaker\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LifeSignalMaker</span></code></a><a class=\"headerlink\" href=\"#lifesignalmaker\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.LifeSignalMaker\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.life.</span></span><span class=\"sig-name descname\"><span class=\"pre\">LifeSignalMaker</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(0.001,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.LifeSignalMaker\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>A class for generating signals from streamlines in an efficient and speedy\nmanner.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.LifeSignalMaker.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(0.001,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.LifeSignalMaker.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a signal maker</p>\n<section id=\"id6\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>gtab<span class=\"classifier\">GradientTable class instance</span></dt><dd><p>The gradient table on which the signal is calculated.</p>\n</dd>\n<dt>evals<span class=\"classifier\">array-like of 3 items, optional</span></dt><dd><p>The eigenvalues of the canonical tensor to use in calculating the\nsignal.</p>\n</dd>\n<dt>sphere<span class=\"classifier\"><cite>dipy.core.Sphere</cite> class instance, optional</span></dt><dd><p>The discrete sphere to use as an approximation for the continuous\nsphere on which the signal is represented. If integer - we will use\nan instance of one of the symmetric spheres cached in\n<cite>dps.get_sphere</cite>. If a \u2018dipy.core.Sphere\u2019 class instance is\nprovided, we will use this object. Default: the <a class=\"reference internal\" href=\"../dipy.data/#module-dipy.data\" title=\"dipy.data\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dipy.data</span></code></a>\nsymmetric sphere with 724 vertices</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.LifeSignalMaker.calc_signal\">\n<span class=\"sig-name descname\"><span class=\"pre\">calc_signal</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.LifeSignalMaker.calc_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.LifeSignalMaker.streamline_signal\">\n<span class=\"sig-name descname\"><span class=\"pre\">streamline_signal</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.LifeSignalMaker.streamline_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Approximate the signal for a given streamline</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"fibermodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberModel\" title=\"dipy.tracking.life.FiberModel\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FiberModel</span></code></a><a class=\"headerlink\" href=\"#fibermodel\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.FiberModel\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.life.</span></span><span class=\"sig-name descname\"><span class=\"pre\">FiberModel</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.FiberModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../dipy.reconst/#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstModel</span></code></a></p>\n<p>A class for representing and solving predictive models based on\ntractography solutions.</p>\n<section id=\"id7\">\n<h4>Notes<a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>This is an implementation of the LiFE model described in <a class=\"footnote-reference brackets\" href=\"#id32\" id=\"id8\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></a></p>\n<dl class=\"simple\">\n<dt>[1] Pestilli, F., Yeatman, J, Rokem, A. Kay, K. and Wandell</dt><dd><p>B.A. (2014). Validation and statistical inference in living\nconnectomes. Nature Methods.</p>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.FiberModel.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.FiberModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><section id=\"id9\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<p>gtab : a GradientTable class instance</p>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.FiberModel.fit\">\n<span class=\"sig-name descname\"><span class=\"pre\">fit</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(0.001,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.FiberModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit the LiFE FiberModel for data and a set of streamlines associated\nwith this data</p>\n<section id=\"id10\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>data<span class=\"classifier\">4D array</span></dt><dd><p>Diffusion-weighted data</p>\n</dd>\n<dt>streamline<span class=\"classifier\">list</span></dt><dd><p>A bunch of streamlines</p>\n</dd>\n<dt>affine<span class=\"classifier\">array_like (4, 4)</span></dt><dd><p>The mapping from voxel coordinates to streamline points.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>evals<span class=\"classifier\">array-like (optional)</span></dt><dd><p>The eigenvalues of the tensor response function used in\nconstructing the model signal. Default: [0.001, 0, 0]</p>\n</dd>\n<dt>sphere: <cite>dipy.core.Sphere</cite> instance or False, optional</dt><dd><p>Whether to approximate (and cache) the signal on a discrete\nsphere. This may confer a significant speed-up in setting up the\nproblem, but is not as accurate. If <cite>False</cite>, we use the exact\ngradients along the streamlines to calculate the matrix, instead of\nan approximation.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id11\">\n<h5>Returns<a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<p>FiberFit class instance</p>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.FiberModel.setup\">\n<span class=\"sig-name descname\"><span class=\"pre\">setup</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(0.001,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.FiberModel.setup\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set up the necessary components for the LiFE model: the matrix of\nfiber-contributions to the DWI signal, and the coordinates of voxels\nfor which the equations will be solved</p>\n<section id=\"id12\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>streamline<span class=\"classifier\">list</span></dt><dd><p>Streamlines, each is an array of shape (n, 3)</p>\n</dd>\n<dt>affine<span class=\"classifier\">array_like (4, 4)</span></dt><dd><p>The mapping from voxel coordinates to streamline points.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>evals<span class=\"classifier\">array-like (3 items, optional)</span></dt><dd><p>The eigenvalues of the canonical tensor used as a response\nfunction. Default:[0.001, 0, 0].</p>\n</dd>\n<dt>sphere: <cite>dipy.core.Sphere</cite> instance, optional</dt><dd><p>Whether to approximate (and cache) the signal on a discrete\nsphere. This may confer a significant speed-up in setting up the\nproblem, but is not as accurate. If <cite>False</cite>, we use the exact\ngradients along the streamlines to calculate the matrix, instead of\nan approximation. Defaults to use the 724-vertex symmetric sphere\nfrom <a class=\"reference internal\" href=\"../dipy.data/#module-dipy.data\" title=\"dipy.data\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dipy.data</span></code></a></p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"fiberfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberFit\" title=\"dipy.tracking.life.FiberFit\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FiberFit</span></code></a><a class=\"headerlink\" href=\"#fiberfit\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.FiberFit\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.life.</span></span><span class=\"sig-name descname\"><span class=\"pre\">FiberFit</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fiber_model</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">life_matrix</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vox_coords</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_fit</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">beta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">weighted_signal</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_signal</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">relative_signal</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mean_sig</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vox_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.FiberFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../dipy.reconst/#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstFit</span></code></a></p>\n<p>A fit of the LiFE model to diffusion data</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.FiberFit.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fiber_model</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">life_matrix</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vox_coords</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_fit</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">beta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">weighted_signal</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_signal</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">relative_signal</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mean_sig</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vox_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.FiberFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><section id=\"id13\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id13\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>fiber_model : A FiberModel class instance</p>\n<p>params : the parameters derived from a fit of the model to the data.</p>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.FiberFit.predict\">\n<span class=\"sig-name descname\"><span class=\"pre\">predict</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.FiberFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict the signal</p>\n<section id=\"id14\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id14\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gtab<span class=\"classifier\">GradientTable</span></dt><dd><p>Default: use self.gtab</p>\n</dd>\n<dt>S0<span class=\"classifier\">float or array</span></dt><dd><p>The non-diffusion-weighted signal in the voxels for which a\nprediction is made. Default: use self.b0_signal</p>\n</dd>\n</dl>\n</section>\n<section id=\"id15\">\n<h4>Returns<a class=\"headerlink\" href=\"#id15\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>prediction<span class=\"classifier\">ndarray of shape (voxels, bvecs)</span></dt><dd><p>An array with a prediction of the signal in each voxel/direction</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"gradient\">\n<h3>gradient<a class=\"headerlink\" href=\"#gradient\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.gradient\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.life.</span></span><span class=\"sig-name descname\"><span class=\"pre\">gradient</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">f</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.gradient\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the gradient of an N-dimensional array.</p>\n<p>The gradient is computed using central differences in the interior\nand first differences at the boundaries. The returned gradient hence has\nthe same shape as the input array.</p>\n<section id=\"id16\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id16\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>f<span class=\"classifier\">array_like</span></dt><dd><p>An N-dimensional array containing samples of a scalar function.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id17\">\n<h4>Returns<a class=\"headerlink\" href=\"#id17\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gradient<span class=\"classifier\">ndarray</span></dt><dd><p>N arrays of the same shape as <cite>f</cite> giving the derivative of <cite>f</cite> with\nrespect to each dimension.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id18\">\n<h4>Examples<a class=\"headerlink\" href=\"#id18\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gradient</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1. ,  1.5,  2.5,  3.5,  4.5,  5. ])</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gradient</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">))</span>\n<span class=\"go\">[array([[ 2.,  2., -1.],</span>\n<span class=\"go\">       [ 2.,  2., -1.]]), array([[ 1. ,  2.5,  4. ],</span>\n<span class=\"go\">       [ 1. ,  1. ,  1. ]])]</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id19\">\n<h4>Notes<a class=\"headerlink\" href=\"#id19\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>This is a simplified implementation of gradient that is part of numpy\n1.8. In order to mitigate the effects of changes added to this\nimplementation in version 1.9 of numpy, we include this implementation\nhere.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"streamline-gradients\">\n<h3>streamline_gradients<a class=\"headerlink\" href=\"#streamline-gradients\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.streamline_gradients\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.life.</span></span><span class=\"sig-name descname\"><span class=\"pre\">streamline_gradients</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.streamline_gradients\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the gradients of the streamline along the spatial dimension</p>\n<section id=\"id20\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id20\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamline<span class=\"classifier\">array-like of shape (n, 3)</span></dt><dd><p>The 3d coordinates of a single streamline</p>\n</dd>\n</dl>\n</section>\n<section id=\"id21\">\n<h4>Returns<a class=\"headerlink\" href=\"#id21\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Array of shape (3, n): Spatial gradients along the length of the\nstreamline.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"grad-tensor\">\n<h3>grad_tensor<a class=\"headerlink\" href=\"#grad-tensor\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.grad_tensor\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.life.</span></span><span class=\"sig-name descname\"><span class=\"pre\">grad_tensor</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">grad</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.grad_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the 3 by 3 tensor for a given spatial gradient, given a canonical\ntensor shape (also as a 3 by 3), pointing at [1,0,0]</p>\n<section id=\"id22\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id22\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>grad<span class=\"classifier\">1d array of shape (3,)</span></dt><dd><p>The spatial gradient (e.g between two nodes of a streamline).</p>\n</dd>\n<dt>evals: 1d array of shape (3,)</dt><dd><p>The eigenvalues of a canonical tensor to be used as a response\nfunction.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"streamline-tensors\">\n<h3>streamline_tensors<a class=\"headerlink\" href=\"#streamline-tensors\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.streamline_tensors\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.life.</span></span><span class=\"sig-name descname\"><span class=\"pre\">streamline_tensors</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(0.001,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.streamline_tensors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The tensors generated by this fiber.</p>\n<section id=\"id23\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id23\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamline<span class=\"classifier\">array-like of shape (n, 3)</span></dt><dd><p>The 3d coordinates of a single streamline</p>\n</dd>\n<dt>evals<span class=\"classifier\">iterable with three entries, optional</span></dt><dd><p>The estimated eigenvalues of a single fiber tensor.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id24\">\n<h4>Returns<a class=\"headerlink\" href=\"#id24\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>An n_nodes by 3 by 3 array with the tensor for each node in the fiber.</p>\n</section>\n<section id=\"id25\">\n<h4>Notes<a class=\"headerlink\" href=\"#id25\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Estimates of the radial/axial diffusivities may rely on\nempirical measurements (for example, the AD in the Corpus Callosum), or\nmay be based on a biophysical model of some kind.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"streamline-signal\">\n<h3>streamline_signal<a class=\"headerlink\" href=\"#streamline-signal\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.streamline_signal\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.life.</span></span><span class=\"sig-name descname\"><span class=\"pre\">streamline_signal</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(0.001,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.streamline_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The signal from a single streamline estimate along each of its nodes.</p>\n<section id=\"id26\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id26\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>streamline : a single streamline</p>\n<p>gtab : GradientTable class instance</p>\n<dl class=\"simple\">\n<dt>evals<span class=\"classifier\">array-like of length 3, optional</span></dt><dd><p>The eigenvalues of the canonical tensor used as an estimate of the\nsignal generated by each node of the streamline.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"voxel2streamline\">\n<h3>voxel2streamline<a class=\"headerlink\" href=\"#voxel2streamline\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.life.voxel2streamline\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.life.</span></span><span class=\"sig-name descname\"><span class=\"pre\">voxel2streamline</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique_idx</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.life.voxel2streamline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Maps voxels to streamlines and streamlines to voxels, for setting up\nthe LiFE equations matrix</p>\n<section id=\"id27\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id27\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamline<span class=\"classifier\">list</span></dt><dd><p>A collection of streamlines, each n by 3, with n being the number of\nnodes in the fiber.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array_like (4, 4)</span></dt><dd><p>The mapping from voxel coordinates to streamline points.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>unique_idx<span class=\"classifier\">array (optional).</span></dt><dd><p>The unique indices in the streamlines</p>\n</dd>\n</dl>\n</section>\n<section id=\"id28\">\n<h4>Returns<a class=\"headerlink\" href=\"#id28\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>v2f, v2fn : tuple of dicts</p>\n<p>The first dict in the tuple answers the question: Given a voxel (from\nthe unique indices in this model), which fibers pass through it?</p>\n<p>The second answers the question: Given a streamline, for each voxel that\nthis streamline passes through, which nodes of that streamline are in that\nvoxel?</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"localtracking\">\n<h3><a class=\"reference internal\" href=\"#dipy.tracking.local_tracking.LocalTracking\" title=\"dipy.tracking.local_tracking.LocalTracking\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LocalTracking</span></code></a><a class=\"headerlink\" href=\"#localtracking\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.local_tracking.LocalTracking\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.local_tracking.</span></span><span class=\"sig-name descname\"><span class=\"pre\">LocalTracking</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">direction_getter</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stopping_criterion</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seeds</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_size</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_cross</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">maxlen</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">500</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fixedstep</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_all</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">random_seed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_seeds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.local_tracking.LocalTracking\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.local_tracking.LocalTracking.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">direction_getter</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stopping_criterion</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seeds</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_size</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_cross</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">maxlen</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">500</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fixedstep</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_all</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">random_seed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_seeds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.local_tracking.LocalTracking.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates streamlines by using local fiber-tracking.</p>\n<section id=\"id29\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id29\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>direction_getter<span class=\"classifier\">instance of DirectionGetter</span></dt><dd><p>Used to get directions for fiber tracking.</p>\n</dd>\n<dt>stopping_criterion<span class=\"classifier\">instance of StoppingCriterion</span></dt><dd><p>Identifies endpoints and invalid points to inform tracking.</p>\n</dd>\n<dt>seeds<span class=\"classifier\">array (N, 3)</span></dt><dd><p>Points to seed the tracking. Seed points should be given in point\nspace of the track (see <code class=\"docutils literal notranslate\"><span class=\"pre\">affine</span></code>).</p>\n</dd>\n<dt>affine<span class=\"classifier\">array (4, 4)</span></dt><dd><p>Coordinate space for the streamline point with respect to voxel\nindices of input data. This affine can contain scaling, rotational,\nand translational components but should not contain any shearing.\nAn identity matrix can be used to generate streamlines in \u201cvoxel\ncoordinates\u201d as long as isotropic voxels were used to acquire the\ndata.</p>\n</dd>\n<dt>step_size<span class=\"classifier\">float</span></dt><dd><p>Step size used for tracking.</p>\n</dd>\n<dt>max_cross<span class=\"classifier\">int or None</span></dt><dd><p>The maximum number of direction to track from each seed in crossing\nvoxels. By default all initial directions are tracked.</p>\n</dd>\n<dt>maxlen<span class=\"classifier\">int</span></dt><dd><p>Maximum number of steps to track from seed. Used to prevent\ninfinite loops.</p>\n</dd>\n<dt>fixedstep<span class=\"classifier\">bool</span></dt><dd><p>If true, a fixed stepsize is used, otherwise a variable step size\nis used.</p>\n</dd>\n<dt>return_all<span class=\"classifier\">bool</span></dt><dd><p>If true, return all generated streamlines, otherwise only\nstreamlines reaching end points or exiting the image.</p>\n</dd>\n<dt>random_seed<span class=\"classifier\">int</span></dt><dd><p>The seed for the random seed generator (numpy.random.seed and\nrandom.seed).</p>\n</dd>\n<dt>save_seeds<span class=\"classifier\">bool</span></dt><dd><p>If True, return seeds alongside streamlines</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"particlefilteringtracking\">\n<h3><a class=\"reference internal\" href=\"#dipy.tracking.local_tracking.ParticleFilteringTracking\" title=\"dipy.tracking.local_tracking.ParticleFilteringTracking\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ParticleFilteringTracking</span></code></a><a class=\"headerlink\" href=\"#particlefilteringtracking\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.local_tracking.ParticleFilteringTracking\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.local_tracking.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ParticleFilteringTracking</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">direction_getter</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stopping_criterion</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seeds</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_size</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_cross</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">maxlen</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">500</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pft_back_tracking_dist</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pft_front_tracking_dist</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pft_max_trial</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">particle_count</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">15</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_all</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">random_seed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_seeds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.local_tracking.ParticleFilteringTracking\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.tracking.local_tracking.LocalTracking\" title=\"dipy.tracking.local_tracking.LocalTracking\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LocalTracking</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.local_tracking.ParticleFilteringTracking.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">direction_getter</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stopping_criterion</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seeds</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_size</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_cross</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">maxlen</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">500</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pft_back_tracking_dist</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pft_front_tracking_dist</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pft_max_trial</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">particle_count</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">15</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_all</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">random_seed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_seeds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.local_tracking.ParticleFilteringTracking.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A streamline generator using the particle filtering tractography\nmethod <a class=\"footnote-reference brackets\" href=\"#id32\" id=\"id30\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></a>.</p>\n<section id=\"id31\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id31\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>direction_getter<span class=\"classifier\">instance of ProbabilisticDirectionGetter</span></dt><dd><p>Used to get directions for fiber tracking.</p>\n</dd>\n<dt>stopping_criterion<span class=\"classifier\">instance of AnatomicalStoppingCriterion</span></dt><dd><p>Identifies endpoints and invalid points to inform tracking.</p>\n</dd>\n<dt>seeds<span class=\"classifier\">array (N, 3)</span></dt><dd><p>Points to seed the tracking. Seed points should be given in point\nspace of the track (see <code class=\"docutils literal notranslate\"><span class=\"pre\">affine</span></code>).</p>\n</dd>\n<dt>affine<span class=\"classifier\">array (4, 4)</span></dt><dd><p>Coordinate space for the streamline point with respect to voxel\nindices of input data. This affine can contain scaling, rotational,\nand translational components but should not contain any shearing.\nAn identity matrix can be used to generate streamlines in \u201cvoxel\ncoordinates\u201d as long as isotropic voxels were used to acquire the\ndata.</p>\n</dd>\n<dt>step_size<span class=\"classifier\">float</span></dt><dd><p>Step size used for tracking.</p>\n</dd>\n<dt>max_cross<span class=\"classifier\">int or None</span></dt><dd><p>The maximum number of direction to track from each seed in crossing\nvoxels. By default all initial directions are tracked.</p>\n</dd>\n<dt>maxlen<span class=\"classifier\">int</span></dt><dd><p>Maximum number of steps to track from seed. Used to prevent\ninfinite loops.</p>\n</dd>\n<dt>pft_back_tracking_dist<span class=\"classifier\">float</span></dt><dd><p>Distance in mm to back track before starting the particle filtering\ntractography. The total particle filtering tractography distance is\nequal to back_tracking_dist + front_tracking_dist.\nBy default this is set to 2 mm.</p>\n</dd>\n<dt>pft_front_tracking_dist<span class=\"classifier\">float</span></dt><dd><p>Distance in mm to run the particle filtering tractography after the\nthe back track distance. The total particle filtering tractography\ndistance is equal to back_tracking_dist + front_tracking_dist. By\ndefault this is set to 1 mm.</p>\n</dd>\n<dt>pft_max_trial<span class=\"classifier\">int</span></dt><dd><p>Maximum number of trial for the particle filtering tractography\n(Prevents infinite loops).</p>\n</dd>\n<dt>particle_count<span class=\"classifier\">int</span></dt><dd><p>Number of particles to use in the particle filter.</p>\n</dd>\n<dt>return_all<span class=\"classifier\">bool</span></dt><dd><p>If true, return all generated streamlines, otherwise only\nstreamlines reaching end points or exiting the image.</p>\n</dd>\n<dt>random_seed<span class=\"classifier\">int</span></dt><dd><p>The seed for the random seed generator (numpy.random.seed and\nrandom.seed).</p>\n</dd>\n<dt>save_seeds<span class=\"classifier\">bool</span></dt><dd><p>If True, return seeds alongside streamlines</p>\n</dd>\n</dl>\n</section>\n<section id=\"references\">\n<h4>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id32\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<span class=\"backrefs\">(<a role=\"doc-backlink\" href=\"#id8\">1</a>,<a role=\"doc-backlink\" href=\"#id30\">2</a>)</span>\n<p>Girard, G., Whittingstall, K., Deriche, R., &amp; Descoteaux, M.\nTowards quantitative connectivity analysis: reducing\ntractography biases. NeuroImage, 98, 266-278, 2014.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"random-coordinates-from-surface\">\n<h3>random_coordinates_from_surface<a class=\"headerlink\" href=\"#random-coordinates-from-surface\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.mesh.random_coordinates_from_surface\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.mesh.</span></span><span class=\"sig-name descname\"><span class=\"pre\">random_coordinates_from_surface</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_triangles</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_seed</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">triangles_mask</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">triangles_weight</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rand_gen</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.mesh.random_coordinates_from_surface\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate random triangles_indices and trilinear_coord</p>\n<dl class=\"simple\">\n<dt>Triangles_indices probability are weighted by triangles_weight,</dt><dd><p>for each triangles inside the given triangles_mask</p>\n</dd>\n</dl>\n<section id=\"id33\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id33\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>nb_triangles<span class=\"classifier\">int (n)</span></dt><dd><p>The amount of triangles in the mesh</p>\n</dd>\n<dt>nb_seed<span class=\"classifier\">int</span></dt><dd><p>The number of random indices and coordinates generated.</p>\n</dd>\n<dt>triangles_mask<span class=\"classifier\">[n] numpy array</span></dt><dd><p>Specifies which triangles should be chosen (or not)</p>\n</dd>\n<dt>triangles_weight<span class=\"classifier\">[n] numpy array</span></dt><dd><p>Specifies the weight/probability of choosing each triangle</p>\n</dd>\n<dt>random_seed<span class=\"classifier\">int</span></dt><dd><p>The seed for the random seed generator (numpy.random.seed).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id34\">\n<h4>Returns<a class=\"headerlink\" href=\"#id34\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>triangles_idx: [s] array</dt><dd><p>Randomly chosen triangles_indices</p>\n</dd>\n<dt>trilin_coord: [s,3] array</dt><dd><p>Randomly chosen trilinear_coordinates</p>\n</dd>\n</dl>\n</section>\n<section id=\"id35\">\n<h4>See Also<a class=\"headerlink\" href=\"#id35\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>seeds_from_surface_coordinates, random_seeds_from_mask</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"seeds-from-surface-coordinates\">\n<h3>seeds_from_surface_coordinates<a class=\"headerlink\" href=\"#seeds-from-surface-coordinates\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.mesh.seeds_from_surface_coordinates\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.mesh.</span></span><span class=\"sig-name descname\"><span class=\"pre\">seeds_from_surface_coordinates</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">triangles</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vts_values</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">triangles_idx</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trilinear_coord</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.mesh.seeds_from_surface_coordinates\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute points from triangles_indices and trilinear_coord</p>\n<section id=\"id36\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id36\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>triangles<span class=\"classifier\">[n, 3] -&gt; m array</span></dt><dd><p>A list of triangles from a mesh</p>\n</dd>\n<dt>vts_values<span class=\"classifier\">[m, .] array</span></dt><dd><p>List of values to interpolates from coordinates along vertices,\n(vertices, vertices_normal, vertices_colors \u2026)</p>\n</dd>\n<dt>triangles_idx<span class=\"classifier\">[s] array</span></dt><dd><p>Specifies which triangles should be chosen (or not)</p>\n</dd>\n<dt>trilinear_coord<span class=\"classifier\">[s, 3] array</span></dt><dd><p>Specifies the weight/probability of choosing each triangle</p>\n</dd>\n</dl>\n</section>\n<section id=\"id37\">\n<h4>Returns<a class=\"headerlink\" href=\"#id37\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>pts<span class=\"classifier\">[s, \u2026] array</span></dt><dd><p>Interpolated values of vertices with triangles_idx and trilinear_coord</p>\n</dd>\n</dl>\n</section>\n<section id=\"id38\">\n<h4>See Also<a class=\"headerlink\" href=\"#id38\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>random_coordinates_from_surface</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"triangles-area\">\n<h3>triangles_area<a class=\"headerlink\" href=\"#triangles-area\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.mesh.triangles_area\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.mesh.</span></span><span class=\"sig-name descname\"><span class=\"pre\">triangles_area</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">triangles</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vts</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.mesh.triangles_area\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the local area of each triangle</p>\n<section id=\"id39\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id39\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>triangles<span class=\"classifier\">[n, 3] -&gt; m array</span></dt><dd><p>A list of triangles from a mesh</p>\n</dd>\n<dt>vts<span class=\"classifier\">[m, .] array</span></dt><dd><p>List of vertices</p>\n</dd>\n</dl>\n</section>\n<section id=\"id40\">\n<h4>Returns<a class=\"headerlink\" href=\"#id40\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>triangles_area<span class=\"classifier\">[m] array</span></dt><dd><p>List of area for each triangle in the mesh</p>\n</dd>\n</dl>\n</section>\n<section id=\"id41\">\n<h4>See Also<a class=\"headerlink\" href=\"#id41\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>random_coordinates_from_surface</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"vertices-to-triangles-values\">\n<h3>vertices_to_triangles_values<a class=\"headerlink\" href=\"#vertices-to-triangles-values\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.mesh.vertices_to_triangles_values\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.mesh.</span></span><span class=\"sig-name descname\"><span class=\"pre\">vertices_to_triangles_values</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">triangles</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vts_values</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.mesh.vertices_to_triangles_values\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Change from values per vertex to values per triangle</p>\n<section id=\"id42\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id42\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>triangles<span class=\"classifier\">[n, 3] -&gt; m array</span></dt><dd><p>A list of triangles from a mesh</p>\n</dd>\n<dt>vts_values<span class=\"classifier\">[m, .] array</span></dt><dd><p>List of values to interpolates from coordinates along vertices,\n(vertices, vertices_normal, vertices_colors \u2026)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id43\">\n<h4>Returns<a class=\"headerlink\" href=\"#id43\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>triangles_values<span class=\"classifier\">[m] array</span></dt><dd><p>List of values for each triangle in the mesh</p>\n</dd>\n</dl>\n</section>\n<section id=\"id44\">\n<h4>See Also<a class=\"headerlink\" href=\"#id44\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>random_coordinates_from_surface</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"winding\">\n<h3>winding<a class=\"headerlink\" href=\"#winding\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.winding\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">winding</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.winding\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Total turning angle projected.</p>\n<p>Project space curve to best fitting plane. Calculate the cumulative signed\nangle between each line segment and the previous one.</p>\n<section id=\"id45\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id45\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>Array representing x,y,z of N points in a track.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id46\">\n<h4>Returns<a class=\"headerlink\" href=\"#id46\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>a<span class=\"classifier\">scalar</span></dt><dd><p>Total turning angle in degrees.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"length\">\n<h3>length<a class=\"headerlink\" href=\"#length\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.length\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">along</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.length\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Euclidean length of track line</p>\n<p>This will give length in mm if tracks are expressed in world coordinates.</p>\n<section id=\"id47\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id47\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in a track</p>\n</dd>\n<dt>along<span class=\"classifier\">bool, optional</span></dt><dd><p>If True, return array giving cumulative length along track,\notherwise (default) return scalar giving total length.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id48\">\n<h4>Returns<a class=\"headerlink\" href=\"#id48\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>L<span class=\"classifier\">scalar or array shape (N-1,)</span></dt><dd><p>scalar in case of <cite>along</cite> == False, giving total length, array if\n<cite>along</cite> == True, giving cumulative lengths.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id49\">\n<h4>Examples<a class=\"headerlink\" href=\"#id49\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">length</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">expected_lens</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">4</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">expected_lens</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">len_along</span> <span class=\"o\">=</span> <span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">,</span> <span class=\"n\">along</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">len_along</span><span class=\"p\">,</span> <span class=\"n\">expected_lens</span><span class=\"o\">.</span><span class=\"n\">cumsum</span><span class=\"p\">())</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">length</span><span class=\"p\">([])</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">length</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]])</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">length</span><span class=\"p\">([],</span> <span class=\"n\">along</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">array([0])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"bytes\">\n<h3>bytes<a class=\"headerlink\" href=\"#bytes\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.bytes\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.bytes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Size of track in bytes.</p>\n<section id=\"id50\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id50\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>Array representing x,y,z of N points in a track.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id51\">\n<h4>Returns<a class=\"headerlink\" href=\"#id51\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>b<span class=\"classifier\">int</span></dt><dd><p>Number of bytes.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"midpoint\">\n<h3>midpoint<a class=\"headerlink\" href=\"#midpoint\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.midpoint\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">midpoint</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.midpoint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Midpoint of track</p>\n<section id=\"id52\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id52\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in a track</p>\n</dd>\n</dl>\n</section>\n<section id=\"id53\">\n<h4>Returns<a class=\"headerlink\" href=\"#id53\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>mp<span class=\"classifier\">array shape (3,)</span></dt><dd><p>Middle point of line, such that, if L is the line length then\n<cite>np</cite> is the point such that the length xyz[0] to <cite>mp</cite> and from\n<cite>mp</cite> to xyz[-1] is L/2.  If the middle point is not a point in\n<cite>xyz</cite>, then we take the interpolation between the two nearest\n<cite>xyz</cite> points.  If <cite>xyz</cite> is empty, return a ValueError</p>\n</dd>\n</dl>\n</section>\n<section id=\"id54\">\n<h4>Examples<a class=\"headerlink\" href=\"#id54\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">midpoint</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">midpoint</span><span class=\"p\">([])</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">   </span><span class=\"c\">...</span>\n<span class=\"gr\">ValueError</span>: <span class=\"n\">xyz array cannot be empty</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">midpoint</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]])</span>\n<span class=\"go\">array([1, 2, 3])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">midpoint</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.5,  2. ,  2.5])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">midpoint</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.,  1.,  1.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">midpoint</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.5,  0. ,  0. ])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">midpoint</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.5,  9. ,  7. ])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"downsample\">\n<h3>downsample<a class=\"headerlink\" href=\"#downsample\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.downsample\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">downsample</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_pols</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">3</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.downsample\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>downsample for a specific number of points along the streamline\nUses the length of the curve. It works in a similar fashion to\nmidpoint and arbitrarypoint but it also reduces the number of segments\nof a streamline.</p>\n<p>dipy.tracking.metrics.downsample is deprecated, Please use dipy.tracking.streamline.set_number_of_points instead</p>\n<ul class=\"simple\">\n<li><p>deprecated from version: 1.2</p></li>\n<li><p>Raises &lt;class \u2018dipy.utils.deprecator.ExpiredDeprecationError\u2019&gt; as of version: 1.4</p></li>\n</ul>\n<section id=\"id55\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id55\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in a streamlines</p>\n</dd>\n<dt>n_pol<span class=\"classifier\">int</span></dt><dd><p>integer representing number of points (poles) we need along the curve.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id56\">\n<h4>Returns<a class=\"headerlink\" href=\"#id56\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz2<span class=\"classifier\">array shape (M,3)</span></dt><dd><p>array representing x,y,z of M points that where extrapolated. M\nshould be equal to n_pols</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"center-of-mass\">\n<h3>center_of_mass<a class=\"headerlink\" href=\"#center-of-mass\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.center_of_mass\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">center_of_mass</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.center_of_mass\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Center of mass of streamline</p>\n<section id=\"id57\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id57\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in a track</p>\n</dd>\n</dl>\n</section>\n<section id=\"id58\">\n<h4>Returns<a class=\"headerlink\" href=\"#id58\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>com<span class=\"classifier\">array shape (3,)</span></dt><dd><p>center of mass of streamline</p>\n</dd>\n</dl>\n</section>\n<section id=\"id59\">\n<h4>Examples<a class=\"headerlink\" href=\"#id59\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">center_of_mass</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">center_of_mass</span><span class=\"p\">([])</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">   </span><span class=\"c\">...</span>\n<span class=\"gr\">ValueError</span>: <span class=\"n\">xyz array cannot be empty</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">center_of_mass</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"go\">array([ 1.,  1.,  1.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">center_of_mass</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.,  1.,  1.])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"magn\">\n<h3>magn<a class=\"headerlink\" href=\"#magn\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.magn\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">magn</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.magn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>magnitude of vector</p>\n</dd></dl>\n\n</section>\n<section id=\"frenet-serret\">\n<h3>frenet_serret<a class=\"headerlink\" href=\"#frenet-serret\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.frenet_serret\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">frenet_serret</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.frenet_serret\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Frenet-Serret Space Curve Invariants\n\nCalculates the 3 vector and 2 scalar invariants of a space curve\ndefined by vectors r = (x,y,z).  If z is omitted (i.e. the array xyz has\nshape (N,2)), then the curve is\nonly 2D (planar), but the equations are still valid.\n\nSimilar to\n<a class=\"reference external\" href=\"http://www.mathworks.com/matlabcentral/fileexchange/11169\">http://www.mathworks.com/matlabcentral/fileexchange/11169</a>\n\nIn the following equations the prime (<span class=\"math notranslate nohighlight\">\\('\\)</span>) indicates differentiation\nwith respect to the parameter <span class=\"math notranslate nohighlight\">\\(s\\)</span> of a parametrised curve <span class=\"math notranslate nohighlight\">\\(\\mathbf{r}(s)\\)</span>.\n\n- <span class=\"math notranslate nohighlight\">\\(\\mathbf{T}=\\mathbf{r'}/|\\mathbf{r'}|\\qquad\\)</span> (Tangent vector)}\n\n- <span class=\"math notranslate nohighlight\">\\(\\mathbf{N}=\\mathbf{T'}/|\\mathbf{T'}|\\qquad\\)</span> (Normal vector)\n\n- <span class=\"math notranslate nohighlight\">\\(\\mathbf{B}=\\mathbf{T}\\times\\mathbf{N}\\qquad\\)</span> (Binormal vector)\n\n- <span class=\"math notranslate nohighlight\">\\(\\kappa=|\\mathbf{T'}|\\qquad\\)</span> (Curvature)\n\n- <span class=\"math notranslate nohighlight\">\\(\\mathrm{\\tau}=-\\mathbf{B'}\\cdot\\mathbf{N}\\)</span> (Torsion)\n\nParameters\n\u2014\u2014\u2014-\nxyz : array-like shape (N,3)\n   array representing x,y,z of N points in a track\n\nReturns\n\u2014\u2014-\nT : array shape (N,3)\n    array representing the tangent of the curve xyz\nN : array shape (N,3)\n    array representing the normal of the curve xyz\nB : array shape (N,3)\n    array representing the binormal of the curve xyz\nk : array shape (N,1)\n    array representing the curvature of the curve xyz\nt : array shape (N,1)\n    array representing the torsion of the curve xyz\n\nExamples\n\u2014\u2014\u2013\nCreate a helix and calculate its tangent, normal, binormal, curvature\nand torsion\n\n&gt;&gt;&gt; from dipy.tracking import metrics as tm\n&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; theta = 2*np.pi*np.linspace(0,2,100)\n&gt;&gt;&gt; x=np.cos(theta)\n&gt;&gt;&gt; y=np.sin(theta)\n&gt;&gt;&gt; z=theta/(2*np.pi)\n&gt;&gt;&gt; xyz=np.vstack((x,y,z)).T\n&gt;&gt;&gt; T,N,B,k,t=tm.frenet_serret(xyz)</p>\n</dd></dl>\n\n</section>\n<section id=\"mean-curvature\">\n<h3>mean_curvature<a class=\"headerlink\" href=\"#mean-curvature\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.mean_curvature\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">mean_curvature</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.mean_curvature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the mean curvature of a curve</p>\n<section id=\"id60\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id60\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in a curve</p>\n</dd>\n</dl>\n</section>\n<section id=\"id61\">\n<h4>Returns<a class=\"headerlink\" href=\"#id61\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>m<span class=\"classifier\">float</span></dt><dd><p>Mean curvature.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id62\">\n<h4>Examples<a class=\"headerlink\" href=\"#id62\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Create a straight line and a semi-circle and print their mean curvatures</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking</span> <span class=\"kn\">import</span> <span class=\"n\">metrics</span> <span class=\"k\">as</span> <span class=\"n\">tm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"o\">=</span><span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">mean_curvature</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span> <span class=\"c1\">#mean curvature straight line</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">_</span><span class=\"o\">=</span> <span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">mean_curvature</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span> <span class=\"c1\">#mean curvature for semi-circle</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"mean-orientation\">\n<h3>mean_orientation<a class=\"headerlink\" href=\"#mean-orientation\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.mean_orientation\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">mean_orientation</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.mean_orientation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the mean orientation of a curve</p>\n<section id=\"id63\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id63\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in a curve</p>\n</dd>\n</dl>\n</section>\n<section id=\"id64\">\n<h4>Returns<a class=\"headerlink\" href=\"#id64\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>m<span class=\"classifier\">float</span></dt><dd><p>Mean orientation.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"generate-combinations\">\n<h3>generate_combinations<a class=\"headerlink\" href=\"#generate-combinations\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.generate_combinations\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">generate_combinations</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">items</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.generate_combinations\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Combine sets of size n from items</p>\n<section id=\"id65\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id65\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>items : sequence\nn : int</p>\n</section>\n<section id=\"id66\">\n<h4>Returns<a class=\"headerlink\" href=\"#id66\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>ic : iterator</p>\n</section>\n<section id=\"id67\">\n<h4>Examples<a class=\"headerlink\" href=\"#id67\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">generate_combinations</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ic</span><span class=\"o\">=</span><span class=\"n\">generate_combinations</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">ic</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"go\">[0, 1]</span>\n<span class=\"go\">[0, 2]</span>\n<span class=\"go\">[1, 2]</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"longest-track-bundle\">\n<h3>longest_track_bundle<a class=\"headerlink\" href=\"#longest-track-bundle\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.longest_track_bundle\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">longest_track_bundle</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sort</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.longest_track_bundle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return longest track or length sorted track indices in <cite>bundle</cite></p>\n<p>If <cite>sort</cite> == True, return the indices of the sorted tracks in the\nbundle, otherwise return the longest track.</p>\n<section id=\"id68\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id68\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bundle<span class=\"classifier\">sequence</span></dt><dd><p>of tracks as arrays, shape (N1,3) \u2026 (Nm,3)</p>\n</dd>\n<dt>sort<span class=\"classifier\">bool, optional</span></dt><dd><p>If False (default) return longest track.  If True, return length\nsorted indices for tracks in bundle</p>\n</dd>\n</dl>\n</section>\n<section id=\"id69\">\n<h4>Returns<a class=\"headerlink\" href=\"#id69\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>longest_or_indices<span class=\"classifier\">array</span></dt><dd><p>longest track - shape (N,3) -  (if <cite>sort</cite> is False), or indices\nof length sorted tracks (if <cite>sort</cite> is True)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id70\">\n<h4>Examples<a class=\"headerlink\" href=\"#id70\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">longest_track_bundle</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bundle</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]]),</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">longest_track_bundle</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">)</span>\n<span class=\"go\">array([[0, 0, 0],</span>\n<span class=\"go\">       [4, 4, 4]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">longest_track_bundle</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span> \n<span class=\"go\">array([0, 1]...)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"intersect-sphere\">\n<h3>intersect_sphere<a class=\"headerlink\" href=\"#intersect-sphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.intersect_sphere\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">intersect_sphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">center</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radius</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.intersect_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If any segment of the track is intersecting with a sphere of\nspecific center and radius return True otherwise False</p>\n<section id=\"id71\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id71\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array, shape (N,3)</span></dt><dd><p>representing x,y,z of the N points of the track</p>\n</dd>\n<dt>center<span class=\"classifier\">array, shape (3,)</span></dt><dd><p>center of the sphere</p>\n</dd>\n<dt>radius<span class=\"classifier\">float</span></dt><dd><p>radius of the sphere</p>\n</dd>\n</dl>\n</section>\n<section id=\"id72\">\n<h4>Returns<a class=\"headerlink\" href=\"#id72\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>tf<span class=\"classifier\">{True, False}</span></dt><dd><p>True if track <cite>xyz</cite> intersects sphere</p>\n</dd>\n</dl>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">intersect_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">line</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sph_cent</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sph_radius</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">intersect_sphere</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span><span class=\"n\">sph_cent</span><span class=\"p\">,</span><span class=\"n\">sph_radius</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id73\">\n<h4>Notes<a class=\"headerlink\" href=\"#id73\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>The ray to sphere intersection method used here is similar with\n<a class=\"reference external\" href=\"http://local.wasp.uwa.edu.au/~pbourke/geometry/sphereline/\">http://local.wasp.uwa.edu.au/~pbourke/geometry/sphereline/</a>\n<a class=\"reference external\" href=\"http://local.wasp.uwa.edu.au/~pbourke/geometry/sphereline/source.cpp\">http://local.wasp.uwa.edu.au/~pbourke/geometry/sphereline/source.cpp</a>\nwe just applied it for every segment neglecting the intersections where\nthe intersecting points are not inside the segment</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"inside-sphere\">\n<h3>inside_sphere<a class=\"headerlink\" href=\"#inside-sphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.inside_sphere\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">inside_sphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">center</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radius</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.inside_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If any point of the track is inside a sphere of a specified\ncenter and radius return True otherwise False.  Mathematically this\ncan be simply described by <span class=\"math notranslate nohighlight\">\\(|x-c|\\le r\\)</span> where <span class=\"math notranslate nohighlight\">\\(x\\)</span> a point <span class=\"math notranslate nohighlight\">\\(c\\)</span> the\ncenter of the sphere and <span class=\"math notranslate nohighlight\">\\(r\\)</span> the radius of the sphere.\n\nParameters\n\u2014\u2014\u2014-\nxyz : array, shape (N,3)\n   representing x,y,z of the N points of the track\ncenter : array, shape (3,)\n   center of the sphere\nradius : float\n   radius of the sphere\n\nReturns\n\u2014\u2014-\ntf : {True,False}\n    Whether point is inside sphere.\n\nExamples\n\u2014\u2014\u2013\n&gt;&gt;&gt; from dipy.tracking.metrics import inside_sphere\n&gt;&gt;&gt; line=np.array(([0,0,0],[1,1,1],[2,2,2]))\n&gt;&gt;&gt; sph_cent=np.array([1,1,1])\n&gt;&gt;&gt; sph_radius = 1\n&gt;&gt;&gt; inside_sphere(line,sph_cent,sph_radius)\nTrue</p>\n</dd></dl>\n\n</section>\n<section id=\"inside-sphere-points\">\n<h3>inside_sphere_points<a class=\"headerlink\" href=\"#inside-sphere-points\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.inside_sphere_points\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">inside_sphere_points</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">center</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radius</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.inside_sphere_points\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If a track intersects with a sphere of a specified center and\nradius return the points that are inside the sphere otherwise False.\nMathematically this can be simply described by <span class=\"math notranslate nohighlight\">\\(|x-c| \\le r\\)</span> where <span class=\"math notranslate nohighlight\">\\(x\\)</span>\na point <span class=\"math notranslate nohighlight\">\\(c\\)</span> the center of the sphere and <span class=\"math notranslate nohighlight\">\\(r\\)</span> the radius of the\nsphere.\n\nParameters\n\u2014\u2014\u2014-\nxyz : array, shape (N,3)\n   representing x,y,z of the N points of the track\ncenter : array, shape (3,)\n   center of the sphere\nradius : float\n   radius of the sphere\n\nReturns\n\u2014\u2014-\nxyzn : array, shape(M,3)\n   array representing x,y,z of the M points inside the sphere\n\nExamples\n\u2014\u2014\u2013\n&gt;&gt;&gt; from dipy.tracking.metrics import inside_sphere_points\n&gt;&gt;&gt; line=np.array(([0,0,0],[1,1,1],[2,2,2]))\n&gt;&gt;&gt; sph_cent=np.array([1,1,1])\n&gt;&gt;&gt; sph_radius = 1\n&gt;&gt;&gt; inside_sphere_points(line,sph_cent,sph_radius)\narray([[1, 1, 1]])</p>\n</dd></dl>\n\n</section>\n<section id=\"spline\">\n<h3>spline<a class=\"headerlink\" href=\"#spline\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.spline\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">spline</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">s</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">3</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">k</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nest</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">-1</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.spline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate B-splines as documented in\n<a class=\"reference external\" href=\"http://www.scipy.org/Cookbook/Interpolation\">http://www.scipy.org/Cookbook/Interpolation</a></p>\n<p>The scipy.interpolate packages wraps the netlib FITPACK routines\n(Dierckx) for calculating smoothing splines for various kinds of\ndata and geometries. Although the data is evenly spaced in this\nexample, it need not be so to use this routine.</p>\n<section id=\"id74\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id74\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array, shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in 3d space</p>\n</dd>\n<dt>s<span class=\"classifier\">float, optional</span></dt><dd><p>A smoothing condition.  The amount of smoothness is determined by\nsatisfying the conditions: sum((w * (y - g))**2,axis=0) &lt;= s\nwhere g(x) is the smoothed interpolation of (x,y).  The user can\nuse s to control the tradeoff between closeness and smoothness of\nfit.  Larger satisfying the conditions: sum((w * (y -\ng))**2,axis=0) &lt;= s where g(x) is the smoothed interpolation of\n(x,y).  The user can use s to control the tradeoff between\ncloseness and smoothness of fit.  Larger s means more smoothing\nwhile smaller values of s indicate less smoothing. Recommended\nvalues of s depend on the weights, w.  If the weights represent\nthe inverse of the standard-deviation of y, then a: good s value\nshould be found in the range (m-sqrt(2*m),m+sqrt(2*m)) where m is\nthe number of datapoints in x, y, and w.</p>\n</dd>\n<dt>k<span class=\"classifier\">int, optional</span></dt><dd><p>Degree of the spline.  Cubic splines are recommended.  Even\nvalues of k should be avoided especially with a small s-value.\nfor the same set of data.  If task=-1 find the weighted least\nsquare spline for a given set of knots, t.</p>\n</dd>\n<dt>nest<span class=\"classifier\">None or int, optional</span></dt><dd><p>An over-estimate of the total number of knots of the spline to\nhelp in determining the storage space.  None results in value\nm+2*k. -1 results in m+k+1. Always large enough is nest=m+k+1.\nDefault is -1.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id75\">\n<h4>Returns<a class=\"headerlink\" href=\"#id75\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyzn<span class=\"classifier\">array, shape (M,3)</span></dt><dd><p>array representing x,y,z of the M points inside the sphere</p>\n</dd>\n</dl>\n</section>\n<section id=\"id76\">\n<h4>Examples<a class=\"headerlink\" href=\"#id76\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mf\">1.75</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span><span class=\"c1\"># make ascending spiral in 3-space</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">t</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">+=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"c1\"># add noise</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">+=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">+=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyzn</span><span class=\"o\">=</span><span class=\"n\">spline</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">xyzn</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id77\">\n<h4>See Also<a class=\"headerlink\" href=\"#id77\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>scipy.interpolate.splprep\nscipy.interpolate.splev</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"startpoint\">\n<h3>startpoint<a class=\"headerlink\" href=\"#startpoint\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.startpoint\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">startpoint</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.startpoint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>First point of the track</p>\n<section id=\"id78\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id78\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array, shape(N,3)</span></dt><dd><p>Track.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id79\">\n<h4>Returns<a class=\"headerlink\" href=\"#id79\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sp<span class=\"classifier\">array, shape(3,)</span></dt><dd><p>First track point.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id80\">\n<h4>Examples<a class=\"headerlink\" href=\"#id80\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">startpoint</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"n\">startpoint</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">any</span><span class=\"p\">()</span><span class=\"o\">==</span><span class=\"n\">xyz</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">any</span><span class=\"p\">()</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"endpoint\">\n<h3>endpoint<a class=\"headerlink\" href=\"#endpoint\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.endpoint\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">endpoint</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.endpoint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><section id=\"id81\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id81\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array, shape(N,3)</span></dt><dd><p>Track.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id82\">\n<h4>Returns<a class=\"headerlink\" href=\"#id82\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ep<span class=\"classifier\">array, shape(3,)</span></dt><dd><p>First track point.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id83\">\n<h4>Examples<a class=\"headerlink\" href=\"#id83\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">endpoint</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ep</span><span class=\"o\">=</span><span class=\"n\">endpoint</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ep</span><span class=\"o\">.</span><span class=\"n\">any</span><span class=\"p\">()</span><span class=\"o\">==</span><span class=\"n\">xyz</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">any</span><span class=\"p\">()</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"arbitrarypoint\">\n<h3>arbitrarypoint<a class=\"headerlink\" href=\"#arbitrarypoint\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.arbitrarypoint\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">arbitrarypoint</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">distance</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.arbitrarypoint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Select an arbitrary point along distance on the track (curve)</p>\n<section id=\"id84\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id84\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in a track</p>\n</dd>\n<dt>distance<span class=\"classifier\">float</span></dt><dd><p>float representing distance travelled from the xyz[0] point of\nthe curve along the curve.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id85\">\n<h4>Returns<a class=\"headerlink\" href=\"#id85\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ap<span class=\"classifier\">array shape (3,)</span></dt><dd><p>Arbitrary point of line, such that, if the arbitrary point is not\na point in <cite>xyz</cite>, then we take the interpolation between the two\nnearest <cite>xyz</cite> points.  If <cite>xyz</cite> is empty, return a ValueError</p>\n</dd>\n</dl>\n</section>\n<section id=\"id86\">\n<h4>Examples<a class=\"headerlink\" href=\"#id86\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">arbitrarypoint</span><span class=\"p\">,</span> <span class=\"n\">length</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ap</span><span class=\"o\">=</span><span class=\"n\">arbitrarypoint</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">,</span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"principal-components\">\n<h3>principal_components<a class=\"headerlink\" href=\"#principal-components\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.principal_components\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">principal_components</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.principal_components\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>We use PCA to calculate the 3 principal directions for a track</p>\n<section id=\"id87\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id87\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in a track</p>\n</dd>\n</dl>\n</section>\n<section id=\"id88\">\n<h4>Returns<a class=\"headerlink\" href=\"#id88\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>va<span class=\"classifier\">array_like</span></dt><dd><p>eigenvalues</p>\n</dd>\n<dt>ve<span class=\"classifier\">array_like</span></dt><dd><p>eigenvectors</p>\n</dd>\n</dl>\n</section>\n<section id=\"id89\">\n<h4>Examples<a class=\"headerlink\" href=\"#id89\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">principal_components</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">va</span><span class=\"p\">,</span> <span class=\"n\">ve</span> <span class=\"o\">=</span> <span class=\"n\">principal_components</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">va</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mf\">0.51010101</span><span class=\"p\">,</span> <span class=\"mf\">0.09883545</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"midpoint2point\">\n<h3>midpoint2point<a class=\"headerlink\" href=\"#midpoint2point\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.metrics.midpoint2point\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.metrics.</span></span><span class=\"sig-name descname\"><span class=\"pre\">midpoint2point</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">p</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.metrics.midpoint2point\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate distance from midpoint of a curve to arbitrary point p</p>\n<section id=\"id90\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id90\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like shape (N,3)</span></dt><dd><p>array representing x,y,z of N points in a track</p>\n</dd>\n<dt>p<span class=\"classifier\">array shape (3,)</span></dt><dd><p>array representing an arbitrary point with x,y,z coordinates in\nspace.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id91\">\n<h4>Returns<a class=\"headerlink\" href=\"#id91\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>d<span class=\"classifier\">float</span></dt><dd><p>a float number representing Euclidean distance</p>\n</dd>\n</dl>\n</section>\n<section id=\"id92\">\n<h4>Examples<a class=\"headerlink\" href=\"#id92\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">midpoint2point</span><span class=\"p\">,</span> <span class=\"n\">midpoint</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dist</span><span class=\"o\">=</span><span class=\"n\">midpoint2point</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"unlist-streamlines\">\n<h3>unlist_streamlines<a class=\"headerlink\" href=\"#unlist-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.unlist_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unlist_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.unlist_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the streamlines not as a list but as an array and an offset</p>\n<section id=\"id93\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id93\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>streamlines: sequence</p>\n</section>\n<section id=\"id94\">\n<h4>Returns<a class=\"headerlink\" href=\"#id94\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>points : array\noffsets : array</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"relist-streamlines\">\n<h3>relist_streamlines<a class=\"headerlink\" href=\"#relist-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.relist_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">relist_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">offsets</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.relist_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a representation of a set of streamlines as a large array and\nan offsets array return the streamlines as a list of shorter arrays.</p>\n<section id=\"id95\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id95\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>points : array\noffsets : array</p>\n</section>\n<section id=\"id96\">\n<h4>Returns<a class=\"headerlink\" href=\"#id96\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>streamlines: sequence</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"center-streamlines\">\n<h3>center_streamlines<a class=\"headerlink\" href=\"#center-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.center_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">center_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.center_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Move streamlines to the origin</p>\n<section id=\"id97\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id97\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list</span></dt><dd><p>List of 2D ndarrays of shape[-1]==3</p>\n</dd>\n</dl>\n</section>\n<section id=\"id98\">\n<h4>Returns<a class=\"headerlink\" href=\"#id98\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>new_streamlines<span class=\"classifier\">list</span></dt><dd><p>List of 2D ndarrays of shape[-1]==3</p>\n</dd>\n<dt>inv_shift<span class=\"classifier\">ndarray</span></dt><dd><p>Translation in x,y,z to go back in the initial position</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"deform-streamlines\">\n<h3>deform_streamlines<a class=\"headerlink\" href=\"#deform-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.deform_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">deform_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">deform_field</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stream_to_current_grid</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">current_grid_to_world</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stream_to_ref_grid</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ref_grid_to_world</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.deform_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Apply deformation field to streamlines</p>\n<section id=\"id99\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id99\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list</span></dt><dd><p>List of 2D ndarrays of shape[-1]==3</p>\n</dd>\n<dt>deform_field<span class=\"classifier\">4D numpy array</span></dt><dd><p>x,y,z displacements stored in volume, shape[-1]==3</p>\n</dd>\n<dt>stream_to_current_grid<span class=\"classifier\">array, (4, 4)</span></dt><dd><p>transform matrix voxmm space to original grid space</p>\n</dd>\n<dt>current_grid_to_world<span class=\"classifier\">array (4, 4)</span></dt><dd><p>transform matrix original grid space to world coordinates</p>\n</dd>\n<dt>stream_to_ref_grid<span class=\"classifier\">array (4, 4)</span></dt><dd><p>transform matrix voxmm space to new grid space</p>\n</dd>\n<dt>ref_grid_to_world<span class=\"classifier\">array(4, 4)</span></dt><dd><p>transform matrix new grid space to world coordinates</p>\n</dd>\n</dl>\n</section>\n<section id=\"id100\">\n<h4>Returns<a class=\"headerlink\" href=\"#id100\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>new_streamlines<span class=\"classifier\">list</span></dt><dd><p>List of the transformed 2D ndarrays of shape[-1]==3</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"transform-streamlines\">\n<h3>transform_streamlines<a class=\"headerlink\" href=\"#transform-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.transform_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">transform_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mat</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">in_place</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.transform_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Apply affine transformation to streamlines</p>\n<section id=\"id101\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id101\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">Streamlines</span></dt><dd><p>Streamlines object</p>\n</dd>\n<dt>mat<span class=\"classifier\">array, (4, 4)</span></dt><dd><p>transformation matrix</p>\n</dd>\n<dt>in_place<span class=\"classifier\">bool</span></dt><dd><p>If True then change data in place.\nBe careful changes input streamlines.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id102\">\n<h4>Returns<a class=\"headerlink\" href=\"#id102\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>new_streamlines<span class=\"classifier\">Streamlines</span></dt><dd><p>Sequence transformed 2D ndarrays of shape[-1]==3</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"select-random-set-of-streamlines\">\n<h3>select_random_set_of_streamlines<a class=\"headerlink\" href=\"#select-random-set-of-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.select_random_set_of_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">select_random_set_of_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rng</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.select_random_set_of_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Select a random set of streamlines</p>\n<section id=\"id103\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id103\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">Streamlines</span></dt><dd><p>Object of 2D ndarrays of shape[-1]==3</p>\n</dd>\n<dt>select<span class=\"classifier\">int</span></dt><dd><p>Number of streamlines to select. If there are less streamlines\nthan <code class=\"docutils literal notranslate\"><span class=\"pre\">select</span></code> then <code class=\"docutils literal notranslate\"><span class=\"pre\">select=len(streamlines)</span></code>.</p>\n</dd>\n<dt>rng<span class=\"classifier\">RandomState</span></dt><dd><p>Default None.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id104\">\n<h4>Returns<a class=\"headerlink\" href=\"#id104\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>selected_streamlines : list</p>\n</section>\n<section id=\"id105\">\n<h4>Notes<a class=\"headerlink\" href=\"#id105\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>The same streamline will not be selected twice.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"select-by-rois\">\n<h3>select_by_rois<a class=\"headerlink\" href=\"#select-by-rois\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.select_by_rois\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">select_by_rois</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rois</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.select_by_rois\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Select streamlines based on logical relations with several regions of\ninterest (ROIs). For example, select streamlines that pass near ROI1,\nbut only if they do not pass near ROI2.</p>\n<section id=\"id106\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id106\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>streamlines<span class=\"classifier\">list</span></dt><dd><p>A list of candidate streamlines for selection</p>\n</dd>\n<dt>affine<span class=\"classifier\">array_like (4, 4)</span></dt><dd><p>The mapping from voxel coordinates to streamline points.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>rois<span class=\"classifier\">list or ndarray</span></dt><dd><p>A list of 3D arrays, each with shape (x, y, z) corresponding to the\nshape of the brain volume, or a 4D array with shape (n_rois, x, y,\nz). Non-zeros in each volume are considered to be within the region</p>\n</dd>\n<dt>include<span class=\"classifier\">array or list</span></dt><dd><p>A list or 1D array of boolean values marking inclusion or exclusion\ncriteria. If a streamline is near any of the inclusion ROIs, it\nshould evaluate to True, unless it is also near any of the exclusion\nROIs.</p>\n</dd>\n<dt>mode<span class=\"classifier\">string, optional</span></dt><dd><p>One of {\u201cany\u201d, \u201call\u201d, \u201ceither_end\u201d, \u201cboth_end\u201d}, where a streamline is\nassociated with an ROI if:</p>\n<p>\u201cany\u201d : any point is within tol from ROI. Default.</p>\n<p>\u201call\u201d : all points are within tol from ROI.</p>\n<p>\u201ceither_end\u201d : either of the end-points is within tol from ROI</p>\n<p>\u201cboth_end\u201d : both end points are within tol from ROI.</p>\n</dd>\n<dt>tol<span class=\"classifier\">float</span></dt><dd><p>Distance (in the units of the streamlines, usually mm). If any\ncoordinate in the streamline is within this distance from the center\nof any voxel in the ROI, the filtering criterion is set to True for\nthis streamline, otherwise False. Defaults to the distance between\nthe center of each voxel and the corner of the voxel.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id107\">\n<h4>Notes<a class=\"headerlink\" href=\"#id107\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>The only operation currently possible is \u201c(A or B or \u2026) and not (X or Y\nor \u2026)\u201d, where A, B are inclusion regions and X, Y are exclusion regions.</p>\n</section>\n<section id=\"id108\">\n<h4>Returns<a class=\"headerlink\" href=\"#id108\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>generator</dt><dd><p>Generates the streamlines to be included based on these criteria.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id109\">\n<h4>See also<a class=\"headerlink\" href=\"#id109\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p><a class=\"reference internal\" href=\"#dipy.tracking.utils.near_roi\" title=\"dipy.tracking.utils.near_roi\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dipy.tracking.utils.near_roi()</span></code></a>\n<a class=\"reference internal\" href=\"#dipy.tracking.utils.reduce_rois\" title=\"dipy.tracking.utils.reduce_rois\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dipy.tracking.utils.reduce_rois()</span></code></a></p>\n</section>\n<section id=\"id110\">\n<h4>Examples<a class=\"headerlink\" href=\"#id110\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span><span class=\"mf\">1.9</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>               <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>               <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask1</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">mask1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask2</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">selection</span> <span class=\"o\">=</span> <span class=\"n\">select_by_rois</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"n\">mask1</span><span class=\"p\">,</span> <span class=\"n\">mask2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">selection</span><span class=\"p\">)</span> <span class=\"c1\"># The result is a generator</span>\n<span class=\"go\">[array([[ 0. ,  0. ,  0.9],</span>\n<span class=\"go\">       [ 1.9,  0. ,  0. ]]), array([[ 0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.],</span>\n<span class=\"go\">       [ 0.,  2.,  2.]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">selection</span> <span class=\"o\">=</span> <span class=\"n\">select_by_rois</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"n\">mask1</span><span class=\"p\">,</span> <span class=\"n\">mask2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.87</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">selection</span><span class=\"p\">)</span>\n<span class=\"go\">[array([[ 0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.],</span>\n<span class=\"go\">       [ 0.,  2.,  2.]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">selection</span> <span class=\"o\">=</span> <span class=\"n\">select_by_rois</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"n\">mask1</span><span class=\"p\">,</span> <span class=\"n\">mask2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;both_end&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">selection</span><span class=\"p\">)</span>\n<span class=\"go\">[array([[ 0. ,  0. ,  0.9],</span>\n<span class=\"go\">       [ 1.9,  0. ,  0. ]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">selection</span> <span class=\"o\">=</span> <span class=\"n\">select_by_rois</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"n\">mask1</span><span class=\"p\">,</span> <span class=\"n\">mask2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;both_end&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">selection</span><span class=\"p\">)</span>\n<span class=\"go\">[array([[ 0. ,  0. ,  0.9],</span>\n<span class=\"go\">       [ 1.9,  0. ,  0. ]]), array([[ 0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.],</span>\n<span class=\"go\">       [ 0.,  2.,  2.]])]</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"cluster-confidence\">\n<h3>cluster_confidence<a class=\"headerlink\" href=\"#cluster-confidence\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.cluster_confidence\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">cluster_confidence</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_mdf</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">subsample</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">12</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">power</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">override</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.cluster_confidence\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the cluster confidence index (cci), which is an\nestimation of the support a set of streamlines gives to\na particular pathway.</p>\n<p>Ex: A single streamline with no others in the dataset\nfollowing a similar pathway has a low cci. A streamline\nin a bundle of 100 streamlines that follow similar\npathways has a high cci.</p>\n<p>See: Jordan et al. 2017\n(Based on streamline MDF distance from Garyfallidis et al. 2012)</p>\n<section id=\"id111\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id111\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list of 2D (N, 3) arrays</span></dt><dd><p>A sequence of streamlines of length N (# streamlines)</p>\n</dd>\n<dt>max_mdf<span class=\"classifier\">int</span></dt><dd><p>The maximum MDF distance (mm) that will be considered a\n\u201csupporting\u201d streamline and included in cci calculation</p>\n</dd>\n<dt>subsample: int</dt><dd><p>The number of points that are considered for each streamline\nin the calculation. To save on calculation time, each\nstreamline is subsampled to subsampleN points.</p>\n</dd>\n<dt>power: int</dt><dd><p>The power to which the MDF distance for each streamline\nwill be raised to determine how much it contributes to\nthe cci. High values of power make the contribution value\ndegrade much faster. E.g., a streamline with 5mm MDF\nsimilarity contributes 1/5 to the cci if power is 1, but\nonly contributes 1/5^2 = 1/25 if power is 2.</p>\n</dd>\n<dt>override: bool, False by default</dt><dd><p>override means that the cci calculation will still occur even\nthough there are short streamlines in the dataset that may alter\nexpected behaviour.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id112\">\n<h4>Returns<a class=\"headerlink\" href=\"#id112\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Returns an array of CCI scores</p>\n</section>\n<section id=\"id113\">\n<h4>References<a class=\"headerlink\" href=\"#id113\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>[Jordan17] Jordan K. Et al., Cluster Confidence Index: A Streamline-Wise\nPathway Reproducibility Metric for Diffusion-Weighted MRI Tractography,\nJournal of Neuroimaging, vol 28, no 1, 2017.</p>\n<p>[Garyfallidis12] Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"orient-by-rois\">\n<h3>orient_by_rois<a class=\"headerlink\" href=\"#orient-by-rois\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.orient_by_rois\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">orient_by_rois</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">in_place</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">as_generator</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.orient_by_rois\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Orient a set of streamlines according to a pair of ROIs</p>\n<section id=\"id114\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id114\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list or generator</span></dt><dd><p>List or generator of 2d arrays of 3d coordinates. Each array contains\nthe xyz coordinates of a single streamline.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array_like (4, 4)</span></dt><dd><p>The mapping from voxel coordinates to streamline points.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>roi1, roi2<span class=\"classifier\">ndarray</span></dt><dd><p>Binary masks designating the location of the regions of interest, or\ncoordinate arrays (n-by-3 array with ROI coordinate in each row).</p>\n</dd>\n<dt>in_place<span class=\"classifier\">bool</span></dt><dd><p>Whether to make the change in-place in the original list\n(and return a reference to the list), or to make a copy of the list\nand return this copy, with the relevant streamlines reoriented.\nDefault: False.</p>\n</dd>\n<dt>as_generator<span class=\"classifier\">bool</span></dt><dd><p>Whether to return a generator as output. Default: False</p>\n</dd>\n</dl>\n</section>\n<section id=\"id115\">\n<h4>Returns<a class=\"headerlink\" href=\"#id115\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list or generator</span></dt><dd><p>The same 3D arrays as a list or generator, but reoriented with respect\nto the ROIs</p>\n</dd>\n</dl>\n</section>\n<section id=\"id116\">\n<h4>Examples<a class=\"headerlink\" href=\"#id116\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>               <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>  <span class=\"mf\">0.</span><span class=\"p\">]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">roi1</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">roi2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">roi1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">roi1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">roi2</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">orient_by_rois</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">roi1</span><span class=\"p\">,</span> <span class=\"n\">roi2</span><span class=\"p\">)</span>\n<span class=\"go\">[array([[ 0.,  0.,  0.],</span>\n<span class=\"go\">       [ 1.,  0.,  0.],</span>\n<span class=\"go\">       [ 2.,  0.,  0.]]), array([[ 0.,  0.,  0.],</span>\n<span class=\"go\">       [ 1.,  0.,  0.],</span>\n<span class=\"go\">       [ 2.,  0.,  0.]])]</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"orient-by-streamline\">\n<h3>orient_by_streamline<a class=\"headerlink\" href=\"#orient-by-streamline\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.orient_by_streamline\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">orient_by_streamline</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">standard</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_points</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">12</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">in_place</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">as_generator</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.orient_by_streamline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Orient a bundle of streamlines to a standard streamline.</p>\n<section id=\"id117\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id117\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">Streamlines, list</span></dt><dd><p>The input streamlines to orient.</p>\n</dd>\n<dt>standard<span class=\"classifier\">Streamlines, list, or ndarrray</span></dt><dd><p>This provides the standard orientation according to which the\nstreamlines in the provided bundle should be reoriented.</p>\n</dd>\n<dt>n_points: int, optional</dt><dd><p>The number of samples to apply to each of the streamlines.</p>\n</dd>\n<dt>in_place<span class=\"classifier\">bool</span></dt><dd><p>Whether to make the change in-place in the original input\n(and return a reference), or to make a copy of the list\nand return this copy, with the relevant streamlines reoriented.\nDefault: False.</p>\n</dd>\n<dt>as_generator<span class=\"classifier\">bool</span></dt><dd><p>Whether to return a generator as output. Default: False</p>\n</dd>\n</dl>\n</section>\n<section id=\"id118\">\n<h4>Returns<a class=\"headerlink\" href=\"#id118\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>Streamlines<span class=\"classifier\">with each individual array oriented to be as similar as</span></dt><dd><p>possible to the standard.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"values-from-volume\">\n<h3>values_from_volume<a class=\"headerlink\" href=\"#values-from-volume\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.values_from_volume\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">values_from_volume</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.values_from_volume\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract values of a scalar/vector along each streamline from a volume.</p>\n<section id=\"id119\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id119\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data<span class=\"classifier\">3D or 4D array</span></dt><dd><p>Scalar (for 3D) and vector (for 4D) values to be extracted. For 4D\ndata, interpolation will be done on the 3 spatial dimensions in each\nvolume.</p>\n</dd>\n<dt>streamlines<span class=\"classifier\">ndarray or list</span></dt><dd><p>If array, of shape (n_streamlines, n_nodes, 3)\nIf list, len(n_streamlines) with (n_nodes, 3) array in\neach element of the list.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array_like (4, 4)</span></dt><dd><p>The mapping from voxel coordinates to streamline points.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id120\">\n<h4>Returns<a class=\"headerlink\" href=\"#id120\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>array or list (depending on the input)<span class=\"classifier\">values interpolate to each</span></dt><dd><p>coordinate along the length of each streamline.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id121\">\n<h4>Notes<a class=\"headerlink\" href=\"#id121\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Values are extracted from the image based on the 3D coordinates of the\nnodes that comprise the points in the streamline, without any interpolation\ninto segments between the nodes. Using this function with streamlines that\nhave been resampled into a very small number of nodes will result in very\nfew values.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"nbytes\">\n<h3>nbytes<a class=\"headerlink\" href=\"#nbytes\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.streamline.nbytes\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">nbytes</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.streamline.nbytes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"density-map\">\n<h3>density_map<a class=\"headerlink\" href=\"#density-map\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.density_map\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">density_map</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vol_dims</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.density_map\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Count the number of unique streamlines that pass through each voxel.</p>\n<section id=\"id122\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id122\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">iterable</span></dt><dd><p>A sequence of streamlines.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array_like (4, 4)</span></dt><dd><p>The mapping from voxel coordinates to streamline points.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>vol_dims<span class=\"classifier\">3 ints</span></dt><dd><p>The shape of the volume to be returned containing the streamlines\ncounts</p>\n</dd>\n</dl>\n</section>\n<section id=\"id123\">\n<h4>Returns<a class=\"headerlink\" href=\"#id123\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>image_volume<span class=\"classifier\">ndarray, shape=vol_dims</span></dt><dd><p>The number of streamline points in each voxel of volume.</p>\n</dd>\n</dl>\n</section>\n<section id=\"raises\">\n<h4>Raises<a class=\"headerlink\" href=\"#raises\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>IndexError</dt><dd><p>When the points of the streamlines lie outside of the return volume.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id124\">\n<h4>Notes<a class=\"headerlink\" href=\"#id124\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>A streamline can pass through a voxel even if one of the points of the\nstreamline does not lie in the voxel. For example a step from [0,0,0] to\n[0,0,2] passes through [0,0,1]. Consider subsegmenting the streamlines when\nthe edges of the voxels are smaller than the steps of the streamlines.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"connectivity-matrix\">\n<h3>connectivity_matrix<a class=\"headerlink\" href=\"#connectivity-matrix\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.connectivity_matrix\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">connectivity_matrix</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label_volume</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inclusive</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">symmetric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_mapping</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mapping_as_streamlines</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.connectivity_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Count the streamlines that start and end at each label pair.</p>\n<section id=\"id125\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id125\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">sequence</span></dt><dd><p>A sequence of streamlines.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array_like (4, 4)</span></dt><dd><p>The mapping from voxel coordinates to streamline coordinates.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>label_volume<span class=\"classifier\">ndarray</span></dt><dd><p>An image volume with an integer data type, where the intensities in the\nvolume map to anatomical structures.</p>\n</dd>\n<dt>inclusive: bool</dt><dd><p>Whether to analyze the entire streamline, as opposed to just the\nendpoints. Allowing this will increase calculation time and mapping\nsize, especially if mapping_as_streamlines is True. False by default.</p>\n</dd>\n<dt>symmetric<span class=\"classifier\">bool, True by default</span></dt><dd><p>Symmetric means we don\u2019t distinguish between start and end points. If\nsymmetric is True, <code class=\"docutils literal notranslate\"><span class=\"pre\">matrix[i,</span> <span class=\"pre\">j]</span> <span class=\"pre\">==</span> <span class=\"pre\">matrix[j,</span> <span class=\"pre\">i]</span></code>.</p>\n</dd>\n<dt>return_mapping<span class=\"classifier\">bool, False by default</span></dt><dd><p>If True, a mapping is returned which maps matrix indices to\nstreamlines.</p>\n</dd>\n<dt>mapping_as_streamlines<span class=\"classifier\">bool, False by default</span></dt><dd><p>If True voxel indices map to lists of streamline objects. Otherwise\nvoxel indices map to lists of integers.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id126\">\n<h4>Returns<a class=\"headerlink\" href=\"#id126\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>matrix<span class=\"classifier\">ndarray</span></dt><dd><p>The number of connection between each pair of regions in\n<cite>label_volume</cite>.</p>\n</dd>\n<dt>mapping<span class=\"classifier\">defaultdict(list)</span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">mapping[i,</span> <span class=\"pre\">j]</span></code> returns all the streamlines that connect region <cite>i</cite>\nto region <cite>j</cite>. If <cite>symmetric</cite> is True mapping will only have one key\nfor each start end pair such that if <code class=\"docutils literal notranslate\"><span class=\"pre\">i</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">j</span></code> mapping will have key\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(i,</span> <span class=\"pre\">j)</span></code> but not key <code class=\"docutils literal notranslate\"><span class=\"pre\">(j,</span> <span class=\"pre\">i)</span></code>.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"ndbincount\">\n<h3>ndbincount<a class=\"headerlink\" href=\"#ndbincount\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.ndbincount\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ndbincount</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">weights</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shape</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.ndbincount\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Like bincount, but for nd-indices.</p>\n<section id=\"id127\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id127\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x<span class=\"classifier\">array_like (N, M)</span></dt><dd><p>M indices to a an Nd-array</p>\n</dd>\n<dt>weights<span class=\"classifier\">array_like (M,), optional</span></dt><dd><p>Weights associated with indices</p>\n</dd>\n<dt>shape<span class=\"classifier\">optional</span></dt><dd><p>the shape of the output</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"reduce-labels\">\n<h3>reduce_labels<a class=\"headerlink\" href=\"#reduce-labels\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.reduce_labels\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">reduce_labels</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label_volume</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.reduce_labels\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reduce an array of labels to the integers from 0 to n with smallest\npossible n.</p>\n<section id=\"id128\">\n<h4>Examples<a class=\"headerlink\" href=\"#id128\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                   <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                   <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">new_labels</span><span class=\"p\">,</span> <span class=\"n\">lookup</span> <span class=\"o\">=</span> <span class=\"n\">reduce_labels</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lookup</span>\n<span class=\"go\">array([1, 3, 7, 8, 9])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">new_labels</span> \n<span class=\"go\">array([[0, 1, 4],</span>\n<span class=\"go\">       [0, 1, 3],</span>\n<span class=\"go\">       [0, 1, 2]]...)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">lookup</span><span class=\"p\">[</span><span class=\"n\">new_labels</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">labels</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"subsegment\">\n<h3>subsegment<a class=\"headerlink\" href=\"#subsegment\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.subsegment\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">subsegment</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_segment_length</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.subsegment\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Split the segments of the streamlines into small segments.</p>\n<p>Replaces each segment of each of the streamlines with the smallest possible\nnumber of equally sized smaller segments such that no segment is longer\nthan max_segment_length. Among other things, this can useful for getting\nstreamline counts on a grid that is smaller than the length of the\nstreamline segments.</p>\n<section id=\"id129\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id129\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">sequence of ndarrays</span></dt><dd><p>The streamlines to be subsegmented.</p>\n</dd>\n<dt>max_segment_length<span class=\"classifier\">float</span></dt><dd><p>The longest allowable segment length.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id130\">\n<h4>Returns<a class=\"headerlink\" href=\"#id130\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output_streamlines<span class=\"classifier\">generator</span></dt><dd><p>A set of streamlines.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id131\">\n<h4>Notes<a class=\"headerlink\" href=\"#id131\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Segments of 0 length are removed. If unchanged</p>\n</section>\n<section id=\"id132\">\n<h4>Examples<a class=\"headerlink\" href=\"#id132\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">subsegment</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">))</span>\n<span class=\"go\">[array([[ 0.,  0.,  0.],</span>\n<span class=\"go\">       [ 2.,  0.,  0.],</span>\n<span class=\"go\">       [ 5.,  0.,  0.]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">subsegment</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"go\">[array([[ 0.,  0.,  0.],</span>\n<span class=\"go\">       [ 1.,  0.,  0.],</span>\n<span class=\"go\">       [ 2.,  0.,  0.],</span>\n<span class=\"go\">       [ 3.,  0.,  0.],</span>\n<span class=\"go\">       [ 4.,  0.,  0.],</span>\n<span class=\"go\">       [ 5.,  0.,  0.]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">subsegment</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"mf\">1.6</span><span class=\"p\">))</span>\n<span class=\"go\">[array([[ 0. ,  0. ,  0. ],</span>\n<span class=\"go\">       [ 1. ,  0. ,  0. ],</span>\n<span class=\"go\">       [ 2. ,  0. ,  0. ],</span>\n<span class=\"go\">       [ 3.5,  0. ,  0. ],</span>\n<span class=\"go\">       [ 5. ,  0. ,  0. ]])]</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"seeds-from-mask\">\n<h3>seeds_from_mask<a class=\"headerlink\" href=\"#seeds-from-mask\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.seeds_from_mask\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">seeds_from_mask</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">density</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(1,</span> <span class=\"pre\">1,</span> <span class=\"pre\">1)</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.seeds_from_mask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create seeds for fiber tracking from a binary mask.</p>\n<p>Seeds points are placed evenly distributed in all voxels of <code class=\"docutils literal notranslate\"><span class=\"pre\">mask</span></code> which\nare <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<section id=\"id133\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id133\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>mask<span class=\"classifier\">binary 3d array_like</span></dt><dd><p>A binary array specifying where to place the seeds for fiber tracking.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array, (4, 4)</span></dt><dd><p>The mapping between voxel indices and the point space for seeds.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.\nA seed point at the center the voxel <code class=\"docutils literal notranslate\"><span class=\"pre\">[i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">k]</span></code>\nwill be represented as <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z]</span></code> where\n<code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z,</span> <span class=\"pre\">1]</span> <span class=\"pre\">==</span> <span class=\"pre\">np.dot(affine,</span> <span class=\"pre\">[i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">k</span> <span class=\"pre\">,</span> <span class=\"pre\">1])</span></code>.</p>\n</dd>\n<dt>density<span class=\"classifier\">int or array_like (3,)</span></dt><dd><p>Specifies the number of seeds to place along each dimension. A\n<code class=\"docutils literal notranslate\"><span class=\"pre\">density</span></code> of <cite>2</cite> is the same as <code class=\"docutils literal notranslate\"><span class=\"pre\">[2,</span> <span class=\"pre\">2,</span> <span class=\"pre\">2]</span></code> and will result in a\ntotal of 8 seeds per voxel.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id134\">\n<h4>See Also<a class=\"headerlink\" href=\"#id134\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>random_seeds_from_mask</p>\n</section>\n<section id=\"id135\">\n<h4>Raises<a class=\"headerlink\" href=\"#id135\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ValueError</dt><dd><p>When <code class=\"docutils literal notranslate\"><span class=\"pre\">mask</span></code> is not a three-dimensional array</p>\n</dd>\n</dl>\n</section>\n<section id=\"id136\">\n<h4>Examples<a class=\"headerlink\" href=\"#id136\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"s1\">&#39;bool&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">seeds_from_mask</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"go\">array([[ 0.,  0.,  0.]])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"random-seeds-from-mask\">\n<h3>random_seeds_from_mask<a class=\"headerlink\" href=\"#random-seeds-from-mask\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.random_seeds_from_mask\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">random_seeds_from_mask</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seeds_count</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seed_count_per_voxel</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">random_seed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.random_seeds_from_mask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create randomly placed seeds for fiber tracking from a binary mask.</p>\n<p>Seeds points are placed randomly distributed in voxels of <code class=\"docutils literal notranslate\"><span class=\"pre\">mask</span></code>\nwhich are <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.\nIf <code class=\"docutils literal notranslate\"><span class=\"pre\">seed_count_per_voxel</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, this function is\nsimilar to <code class=\"docutils literal notranslate\"><span class=\"pre\">seeds_from_mask()</span></code>, with the difference that instead of\nevenly distributing the seeds, it randomly places the seeds within the\nvoxels specified by the <code class=\"docutils literal notranslate\"><span class=\"pre\">mask</span></code>.</p>\n<section id=\"id137\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id137\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>mask<span class=\"classifier\">binary 3d array_like</span></dt><dd><p>A binary array specifying where to place the seeds for fiber tracking.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array, (4, 4)</span></dt><dd><p>The mapping between voxel indices and the point space for seeds.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.\nA seed point at the center the voxel <code class=\"docutils literal notranslate\"><span class=\"pre\">[i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">k]</span></code>\nwill be represented as <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z]</span></code> where\n<code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z,</span> <span class=\"pre\">1]</span> <span class=\"pre\">==</span> <span class=\"pre\">np.dot(affine,</span> <span class=\"pre\">[i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">k</span> <span class=\"pre\">,</span> <span class=\"pre\">1])</span></code>.</p>\n</dd>\n<dt>seeds_count<span class=\"classifier\">int</span></dt><dd><p>The number of seeds to generate. If <code class=\"docutils literal notranslate\"><span class=\"pre\">seed_count_per_voxel</span></code> is True,\nspecifies the number of seeds to place in each voxel. Otherwise,\nspecifies the total number of seeds to place in the mask.</p>\n</dd>\n<dt>seed_count_per_voxel: bool</dt><dd><p>If True, seeds_count is per voxel, else seeds_count is the total number\nof seeds.</p>\n</dd>\n<dt>random_seed<span class=\"classifier\">int</span></dt><dd><p>The seed for the random seed generator (numpy.random.seed).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id138\">\n<h4>See Also<a class=\"headerlink\" href=\"#id138\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>seeds_from_mask</p>\n</section>\n<section id=\"id139\">\n<h4>Raises<a class=\"headerlink\" href=\"#id139\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ValueError</dt><dd><p>When <code class=\"docutils literal notranslate\"><span class=\"pre\">mask</span></code> is not a three-dimensional array</p>\n</dd>\n</dl>\n</section>\n<section id=\"id140\">\n<h4>Examples<a class=\"headerlink\" href=\"#id140\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"s1\">&#39;bool&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">random_seeds_from_mask</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">seeds_count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"n\">seed_count_per_voxel</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([[-0.0640051 , -0.47407377,  0.04966248]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">random_seeds_from_mask</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">seeds_count</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"n\">seed_count_per_voxel</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([[-0.0640051 , -0.47407377,  0.04966248],</span>\n<span class=\"go\">       [ 0.0507979 ,  0.20814782, -0.20909526],</span>\n<span class=\"go\">       [ 0.46702984,  0.04723225,  0.47268436],</span>\n<span class=\"go\">       [-0.27800683,  0.37073231, -0.29328084],</span>\n<span class=\"go\">       [ 0.39286015, -0.16802019,  0.32122912],</span>\n<span class=\"go\">       [-0.42369171,  0.27991879, -0.06159077]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">random_seeds_from_mask</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span><span class=\"n\">seeds_count</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">seed_count_per_voxel</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([[-0.0640051 , -0.47407377,  0.04966248],</span>\n<span class=\"go\">       [-0.27800683,  1.37073231,  1.70671916],</span>\n<span class=\"go\">       [ 0.0507979 ,  0.20814782, -0.20909526],</span>\n<span class=\"go\">       [-0.48962585,  1.00187459,  1.99577329]])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"target\">\n<h3>target<a class=\"headerlink\" href=\"#target\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.target\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">target</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target_mask</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.target\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Filter streamlines based on whether or not they pass through an ROI.</p>\n<section id=\"id141\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id141\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">iterable</span></dt><dd><p>A sequence of streamlines. Each streamline should be a (N, 3) array,\nwhere N is the length of the streamline.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array (4, 4)</span></dt><dd><p>The mapping between voxel indices and the point space for seeds.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>target_mask<span class=\"classifier\">array-like</span></dt><dd><p>A mask used as a target. Non-zero values are considered to be within\nthe target region.</p>\n</dd>\n<dt>include<span class=\"classifier\">bool, default True</span></dt><dd><p>If True, streamlines passing through <cite>target_mask</cite> are kept. If False,\nthe streamlines not passing through <cite>target_mask</cite> are kept.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id142\">\n<h4>Returns<a class=\"headerlink\" href=\"#id142\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">generator</span></dt><dd><p>A sequence of streamlines that pass through <cite>target_mask</cite>.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id143\">\n<h4>Raises<a class=\"headerlink\" href=\"#id143\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ValueError</dt><dd><p>When the points of the streamlines lie outside of the <cite>target_mask</cite>.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id144\">\n<h4>See Also<a class=\"headerlink\" href=\"#id144\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>density_map</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"target-line-based\">\n<h3>target_line_based<a class=\"headerlink\" href=\"#target-line-based\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.target_line_based\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">target_line_based</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target_mask</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.target_line_based\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Filter streamlines based on whether or not they pass through a ROI,\nusing a line-based algorithm. Mostly used as a replacement of <cite>target</cite>\nfor compressed streamlines.</p>\n<p>This function never returns single-point streamlines, whatever the\nvalue of <cite>include</cite>.</p>\n<section id=\"id145\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id145\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">iterable</span></dt><dd><p>A sequence of streamlines. Each streamline should be a (N, 3) array,\nwhere N is the length of the streamline.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array (4, 4)</span></dt><dd><p>The mapping between voxel indices and the point space for seeds.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>target_mask<span class=\"classifier\">array-like</span></dt><dd><p>A mask used as a target. Non-zero values are considered to be within\nthe target region.</p>\n</dd>\n<dt>include<span class=\"classifier\">bool, default True</span></dt><dd><p>If True, streamlines passing through <cite>target_mask</cite> are kept. If False,\nthe streamlines not passing through <cite>target_mask</cite> are kept.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id146\">\n<h4>Returns<a class=\"headerlink\" href=\"#id146\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">generator</span></dt><dd><p>A sequence of streamlines that pass through <cite>target_mask</cite>.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id147\">\n<h4>References<a class=\"headerlink\" href=\"#id147\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>[Bresenham5] Bresenham, Jack Elton. \u201cAlgorithm for computer control of a</dt><dd><p>digital plotter\u201d, IBM Systems Journal, vol 4, no. 1, 1965.</p>\n</dd>\n<dt>[Houde15] Houde et al. How to avoid biased streamlines-based metrics for</dt><dd><p>streamlines with variable step sizes, ISMRM 2015.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id148\">\n<h4>See Also<a class=\"headerlink\" href=\"#id148\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>dipy.tracking.utils.density_map\ndipy.tracking.streamline.compress_streamlines</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"streamline-near-roi\">\n<h3>streamline_near_roi<a class=\"headerlink\" href=\"#streamline-near-roi\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.streamline_near_roi\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">streamline_near_roi</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi_coords</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'any'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.streamline_near_roi\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Is a streamline near an ROI.</p>\n<p>Implements the inner loops of the <a class=\"reference internal\" href=\"#dipy.tracking.utils.near_roi\" title=\"dipy.tracking.utils.near_roi\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">near_roi()</span></code></a> function.</p>\n<section id=\"id149\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id149\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>streamline<span class=\"classifier\">array, shape (N, 3)</span></dt><dd><p>A single streamline</p>\n</dd>\n<dt>roi_coords<span class=\"classifier\">array, shape (M, 3)</span></dt><dd><p>ROI coordinates transformed to the streamline coordinate frame.</p>\n</dd>\n<dt>tol<span class=\"classifier\">float</span></dt><dd><p>Distance (in the units of the streamlines, usually mm). If any\ncoordinate in the streamline is within this distance from the center\nof any voxel in the ROI, this function returns True.</p>\n</dd>\n<dt>mode<span class=\"classifier\">string</span></dt><dd><p>One of {\u201cany\u201d, \u201call\u201d, \u201ceither_end\u201d, \u201cboth_end\u201d}, where return True\nif:</p>\n<p>\u201cany\u201d : any point is within tol from ROI.</p>\n<p>\u201call\u201d : all points are within tol from ROI.</p>\n<p>\u201ceither_end\u201d : either of the end-points is within tol from ROI</p>\n<p>\u201cboth_end\u201d : both end points are within tol from ROI.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id150\">\n<h4>Returns<a class=\"headerlink\" href=\"#id150\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>out : boolean</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"near-roi\">\n<h3>near_roi<a class=\"headerlink\" href=\"#near-roi\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.near_roi\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">near_roi</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">region_of_interest</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'any'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.near_roi\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Provide filtering criteria for a set of streamlines based on whether\nthey fall within a tolerance distance from an ROI.</p>\n<section id=\"id151\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id151\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>streamlines<span class=\"classifier\">list or generator</span></dt><dd><p>A sequence of streamlines. Each streamline should be a (N, 3) array,\nwhere N is the length of the streamline.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array (4, 4)</span></dt><dd><p>The mapping between voxel indices and the point space for seeds.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>region_of_interest<span class=\"classifier\">ndarray</span></dt><dd><p>A mask used as a target. Non-zero values are considered to be within\nthe target region.</p>\n</dd>\n<dt>tol<span class=\"classifier\">float</span></dt><dd><p>Distance (in the units of the streamlines, usually mm). If any\ncoordinate in the streamline is within this distance from the center\nof any voxel in the ROI, the filtering criterion is set to True for\nthis streamline, otherwise False. Defaults to the distance between\nthe center of each voxel and the corner of the voxel.</p>\n</dd>\n<dt>mode<span class=\"classifier\">string, optional</span></dt><dd><p>One of {\u201cany\u201d, \u201call\u201d, \u201ceither_end\u201d, \u201cboth_end\u201d}, where return True\nif:</p>\n<p>\u201cany\u201d : any point is within tol from ROI. Default.</p>\n<p>\u201call\u201d : all points are within tol from ROI.</p>\n<p>\u201ceither_end\u201d : either of the end-points is within tol from ROI</p>\n<p>\u201cboth_end\u201d : both end points are within tol from ROI.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id152\">\n<h4>Returns<a class=\"headerlink\" href=\"#id152\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>1D array of boolean dtype, shape (len(streamlines), )</p>\n<p>This contains <cite>True</cite> for indices corresponding to each streamline\nthat passes within a tolerance distance from the target ROI, <cite>False</cite>\notherwise.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"id153\">\n<h3>length<a class=\"headerlink\" href=\"#id153\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.length\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.length\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the lengths of many streamlines in a bundle.</p>\n<section id=\"id154\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id154\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list</span></dt><dd><p>Each item in the list is an array with 3D coordinates of a streamline.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id155\">\n<h4>Returns<a class=\"headerlink\" href=\"#id155\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Iterator object which then computes the length of each\nstreamline in the bundle, upon iteration.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"unique-rows\">\n<h3>unique_rows<a class=\"headerlink\" href=\"#unique-rows\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.unique_rows\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unique_rows</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">in_array</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dtype</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'f4'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.unique_rows\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the unique rows in an array.</p>\n<section id=\"id156\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id156\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>in_array: ndarray</dt><dd><p>The array for which the unique rows should be found</p>\n</dd>\n<dt>dtype: str, optional</dt><dd><p>This determines the intermediate representation used for the\nvalues. Should at least preserve the values of the input array.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id157\">\n<h4>Returns<a class=\"headerlink\" href=\"#id157\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>u_return: ndarray</dt><dd><p>Array with the unique rows of the original array.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"transform-tracking-output\">\n<h3>transform_tracking_output<a class=\"headerlink\" href=\"#transform-tracking-output\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.transform_tracking_output\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">transform_tracking_output</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tracking_output</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_seeds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.transform_tracking_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Apply a linear transformation, given by affine, to streamlines.</p>\n<section id=\"id158\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id158\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">Streamlines generator</span></dt><dd><p>Either streamlines (list, ArraySequence) or a tuple with streamlines\nand seeds together</p>\n</dd>\n<dt>affine<span class=\"classifier\">array (4, 4)</span></dt><dd><p>The mapping between voxel indices and the point space for seeds.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>save_seeds<span class=\"classifier\">bool, optional</span></dt><dd><p>If set, seeds associated to streamlines will be also moved and returned</p>\n</dd>\n</dl>\n</section>\n<section id=\"id159\">\n<h4>Returns<a class=\"headerlink\" href=\"#id159\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">generator</span></dt><dd><p>A generator for the sequence of transformed streamlines.\nIf save_seeds is True, also return a generator for the\ntransformed seeds.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"reduce-rois\">\n<h3>reduce_rois<a class=\"headerlink\" href=\"#reduce-rois\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.reduce_rois\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">reduce_rois</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rois</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.reduce_rois\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reduce multiple ROIs to one inclusion and one exclusion ROI.</p>\n<section id=\"id160\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id160\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>rois<span class=\"classifier\">list or ndarray</span></dt><dd><p>A list of 3D arrays, each with shape (x, y, z) corresponding to the\nshape of the brain volume, or a 4D array with shape (n_rois, x, y,\nz). Non-zeros in each volume are considered to be within the region.</p>\n</dd>\n<dt>include<span class=\"classifier\">array or list</span></dt><dd><p>A list or 1D array of boolean marking inclusion or exclusion\ncriteria.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id161\">\n<h4>Returns<a class=\"headerlink\" href=\"#id161\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>include_roi<span class=\"classifier\">boolean 3D array</span></dt><dd><p>An array marking the inclusion mask.</p>\n</dd>\n<dt>exclude_roi<span class=\"classifier\">boolean 3D array</span></dt><dd><p>An array marking the exclusion mask</p>\n</dd>\n</dl>\n</section>\n<section id=\"id162\">\n<h4>Notes<a class=\"headerlink\" href=\"#id162\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>The include_roi and exclude_roi can be used to perform the operation: \u201c(A\nor B or \u2026) and not (X or Y or \u2026)\u201d, where A, B are inclusion regions\nand X, Y are exclusion regions.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"path-length\">\n<h3>path_length<a class=\"headerlink\" href=\"#path-length\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.path_length\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">path_length</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">aoi</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fill_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">-1</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.path_length\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the shortest path, along any streamline, between aoi and\neach voxel.</p>\n<section id=\"id163\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id163\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">seq of (N, 3) arrays</span></dt><dd><p>A sequence of streamlines, path length is given in mm along the curve\nof the streamline.</p>\n</dd>\n<dt>aoi<span class=\"classifier\">array, 3d</span></dt><dd><p>A mask (binary array) of voxels from which to start computing distance.</p>\n</dd>\n<dt>affine<span class=\"classifier\">array (4, 4)</span></dt><dd><p>The mapping between voxel indices and the point space for seeds.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>fill_value<span class=\"classifier\">float</span></dt><dd><p>The value of voxel in the path length map that are not connected to the\naoi.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id164\">\n<h4>Returns<a class=\"headerlink\" href=\"#id164\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>plm<span class=\"classifier\">array</span></dt><dd><p>Same shape as aoi. The minimum distance between every point and aoi\nalong the path of a streamline.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"max-angle-from-curvature\">\n<h3>max_angle_from_curvature<a class=\"headerlink\" href=\"#max-angle-from-curvature\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.max_angle_from_curvature\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">max_angle_from_curvature</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_radius_curvature</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_size</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.max_angle_from_curvature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the maximum deviation angle from the minimum radius curvature.</p>\n<section id=\"id165\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id165\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>min_radius_curvature: float</dt><dd><p>Minimum radius of curvature in mm.</p>\n</dd>\n<dt>step_size: float</dt><dd><p>The tracking step size in mm.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id166\">\n<h4>Returns<a class=\"headerlink\" href=\"#id166\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>max_angle: float</dt><dd><p>The maximum deviation angle in radian,\ngiven the radius curvature and the step size.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id167\">\n<h4>References<a class=\"headerlink\" href=\"#id167\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>For more information:\n<a class=\"reference external\" href=\"https://onlinelibrary.wiley.com/doi/full/10.1002/ima.22005\">https://onlinelibrary.wiley.com/doi/full/10.1002/ima.22005</a></p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"min-radius-curvature-from-angle\">\n<h3>min_radius_curvature_from_angle<a class=\"headerlink\" href=\"#min-radius-curvature-from-angle\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.tracking.utils.min_radius_curvature_from_angle\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.tracking.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">min_radius_curvature_from_angle</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_angle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_size</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.tracking.utils.min_radius_curvature_from_angle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get minimum radius of curvature from a deviation angle.</p>\n<section id=\"id168\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id168\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>max_angle: float</dt><dd><p>The maximum deviation angle in radian.\ntheta should be between [0 - pi/2] otherwise default will be pi/2.</p>\n</dd>\n<dt>step_size: float</dt><dd><p>The tracking step size in mm.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id169\">\n<h4>Returns<a class=\"headerlink\" href=\"#id169\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>min_radius_curvature: float</dt><dd><p>Minimum radius of curvature in mm,\ngiven the maximum deviation angle theta and the step size.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id170\">\n<h4>References<a class=\"headerlink\" href=\"#id170\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>More information:\n<a class=\"reference external\" href=\"https://onlinelibrary.wiley.com/doi/full/10.1002/ima.22005\">https://onlinelibrary.wiley.com/doi/full/10.1002/ima.22005</a></p>\n</section>\n</dd></dl>\n\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.viz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "N", "next"], ["reference/dipy.stats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "P", "previous"]], "sourcename": "reference/dipy.tracking.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking._utils\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking._utils</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking.benchmarks\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.benchmarks</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking.benchmarks.bench_streamline\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.benchmarks.bench_streamline</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking.learning\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.learning</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking.life\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.life</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking.local_tracking\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.local_tracking</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking.mesh\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.mesh</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking.metrics\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.metrics</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking.streamline\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.streamline</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.tracking.utils\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking.utils</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#important-notes\">Important Notes</a></li>\n<li><a class=\"reference internal\" href=\"#setup\">setup</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.setup\"><code class=\"docutils literal notranslate\"><span class=\"pre\">setup()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#generate-streamlines\">generate_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.generate_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">generate_streamlines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bench-set-number-of-points\">bench_set_number_of_points</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bench_set_number_of_points()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bench-length\">bench_length</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.bench_length\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bench_length()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bench-compress-streamlines\">bench_compress_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bench_compress_streamlines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#detect-corresponding-tracks\">detect_corresponding_tracks</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.learning.detect_corresponding_tracks\"><code class=\"docutils literal notranslate\"><span class=\"pre\">detect_corresponding_tracks()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#detect-corresponding-tracks-plus\">detect_corresponding_tracks_plus</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.learning.detect_corresponding_tracks_plus\"><code class=\"docutils literal notranslate\"><span class=\"pre\">detect_corresponding_tracks_plus()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#lifesignalmaker\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LifeSignalMaker</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.LifeSignalMaker\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LifeSignalMaker</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.LifeSignalMaker.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LifeSignalMaker.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.LifeSignalMaker.calc_signal\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LifeSignalMaker.calc_signal()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.LifeSignalMaker.streamline_signal\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LifeSignalMaker.streamline_signal()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#fibermodel\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FiberModel</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberModel\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FiberModel</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberModel.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FiberModel.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberModel.fit\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FiberModel.fit()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberModel.setup\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FiberModel.setup()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#fiberfit\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FiberFit</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberFit\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FiberFit</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberFit.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FiberFit.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.FiberFit.predict\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FiberFit.predict()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#gradient\">gradient</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.gradient\"><code class=\"docutils literal notranslate\"><span class=\"pre\">gradient()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#streamline-gradients\">streamline_gradients</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.streamline_gradients\"><code class=\"docutils literal notranslate\"><span class=\"pre\">streamline_gradients()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#grad-tensor\">grad_tensor</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.grad_tensor\"><code class=\"docutils literal notranslate\"><span class=\"pre\">grad_tensor()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#streamline-tensors\">streamline_tensors</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.streamline_tensors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">streamline_tensors()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#streamline-signal\">streamline_signal</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.streamline_signal\"><code class=\"docutils literal notranslate\"><span class=\"pre\">streamline_signal()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#voxel2streamline\">voxel2streamline</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.life.voxel2streamline\"><code class=\"docutils literal notranslate\"><span class=\"pre\">voxel2streamline()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#localtracking\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LocalTracking</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.local_tracking.LocalTracking\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LocalTracking</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.local_tracking.LocalTracking.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LocalTracking.__init__()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#particlefilteringtracking\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ParticleFilteringTracking</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.local_tracking.ParticleFilteringTracking\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ParticleFilteringTracking</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.local_tracking.ParticleFilteringTracking.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ParticleFilteringTracking.__init__()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#random-coordinates-from-surface\">random_coordinates_from_surface</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.mesh.random_coordinates_from_surface\"><code class=\"docutils literal notranslate\"><span class=\"pre\">random_coordinates_from_surface()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#seeds-from-surface-coordinates\">seeds_from_surface_coordinates</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.mesh.seeds_from_surface_coordinates\"><code class=\"docutils literal notranslate\"><span class=\"pre\">seeds_from_surface_coordinates()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#triangles-area\">triangles_area</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.mesh.triangles_area\"><code class=\"docutils literal notranslate\"><span class=\"pre\">triangles_area()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#vertices-to-triangles-values\">vertices_to_triangles_values</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.mesh.vertices_to_triangles_values\"><code class=\"docutils literal notranslate\"><span class=\"pre\">vertices_to_triangles_values()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#winding\">winding</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.winding\"><code class=\"docutils literal notranslate\"><span class=\"pre\">winding()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#length\">length</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.length\"><code class=\"docutils literal notranslate\"><span class=\"pre\">length()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bytes\">bytes</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.bytes\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bytes()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#midpoint\">midpoint</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.midpoint\"><code class=\"docutils literal notranslate\"><span class=\"pre\">midpoint()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#downsample\">downsample</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.downsample\"><code class=\"docutils literal notranslate\"><span class=\"pre\">downsample()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#center-of-mass\">center_of_mass</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.center_of_mass\"><code class=\"docutils literal notranslate\"><span class=\"pre\">center_of_mass()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#magn\">magn</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.magn\"><code class=\"docutils literal notranslate\"><span class=\"pre\">magn()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#frenet-serret\">frenet_serret</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.frenet_serret\"><code class=\"docutils literal notranslate\"><span class=\"pre\">frenet_serret()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#mean-curvature\">mean_curvature</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.mean_curvature\"><code class=\"docutils literal notranslate\"><span class=\"pre\">mean_curvature()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#mean-orientation\">mean_orientation</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.mean_orientation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">mean_orientation()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#generate-combinations\">generate_combinations</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.generate_combinations\"><code class=\"docutils literal notranslate\"><span class=\"pre\">generate_combinations()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#longest-track-bundle\">longest_track_bundle</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.longest_track_bundle\"><code class=\"docutils literal notranslate\"><span class=\"pre\">longest_track_bundle()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#intersect-sphere\">intersect_sphere</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.intersect_sphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">intersect_sphere()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#inside-sphere\">inside_sphere</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.inside_sphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">inside_sphere()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#inside-sphere-points\">inside_sphere_points</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.inside_sphere_points\"><code class=\"docutils literal notranslate\"><span class=\"pre\">inside_sphere_points()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#spline\">spline</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.spline\"><code class=\"docutils literal notranslate\"><span class=\"pre\">spline()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#startpoint\">startpoint</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.startpoint\"><code class=\"docutils literal notranslate\"><span class=\"pre\">startpoint()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#endpoint\">endpoint</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.endpoint\"><code class=\"docutils literal notranslate\"><span class=\"pre\">endpoint()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#arbitrarypoint\">arbitrarypoint</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.arbitrarypoint\"><code class=\"docutils literal notranslate\"><span class=\"pre\">arbitrarypoint()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#principal-components\">principal_components</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.principal_components\"><code class=\"docutils literal notranslate\"><span class=\"pre\">principal_components()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#midpoint2point\">midpoint2point</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.metrics.midpoint2point\"><code class=\"docutils literal notranslate\"><span class=\"pre\">midpoint2point()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unlist-streamlines\">unlist_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.unlist_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unlist_streamlines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#relist-streamlines\">relist_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.relist_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">relist_streamlines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#center-streamlines\">center_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.center_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">center_streamlines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#deform-streamlines\">deform_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.deform_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">deform_streamlines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#transform-streamlines\">transform_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.transform_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">transform_streamlines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#select-random-set-of-streamlines\">select_random_set_of_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.select_random_set_of_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">select_random_set_of_streamlines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#select-by-rois\">select_by_rois</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.select_by_rois\"><code class=\"docutils literal notranslate\"><span class=\"pre\">select_by_rois()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#cluster-confidence\">cluster_confidence</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.cluster_confidence\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cluster_confidence()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#orient-by-rois\">orient_by_rois</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.orient_by_rois\"><code class=\"docutils literal notranslate\"><span class=\"pre\">orient_by_rois()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#orient-by-streamline\">orient_by_streamline</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.orient_by_streamline\"><code class=\"docutils literal notranslate\"><span class=\"pre\">orient_by_streamline()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#values-from-volume\">values_from_volume</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.values_from_volume\"><code class=\"docutils literal notranslate\"><span class=\"pre\">values_from_volume()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#nbytes\">nbytes</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.streamline.nbytes\"><code class=\"docutils literal notranslate\"><span class=\"pre\">nbytes()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#density-map\">density_map</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.density_map\"><code class=\"docutils literal notranslate\"><span class=\"pre\">density_map()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#connectivity-matrix\">connectivity_matrix</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.connectivity_matrix\"><code class=\"docutils literal notranslate\"><span class=\"pre\">connectivity_matrix()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ndbincount\">ndbincount</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.ndbincount\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ndbincount()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reduce-labels\">reduce_labels</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.reduce_labels\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reduce_labels()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#subsegment\">subsegment</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.subsegment\"><code class=\"docutils literal notranslate\"><span class=\"pre\">subsegment()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#seeds-from-mask\">seeds_from_mask</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.seeds_from_mask\"><code class=\"docutils literal notranslate\"><span class=\"pre\">seeds_from_mask()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#random-seeds-from-mask\">random_seeds_from_mask</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.random_seeds_from_mask\"><code class=\"docutils literal notranslate\"><span class=\"pre\">random_seeds_from_mask()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#target\">target</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.target\"><code class=\"docutils literal notranslate\"><span class=\"pre\">target()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#target-line-based\">target_line_based</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.target_line_based\"><code class=\"docutils literal notranslate\"><span class=\"pre\">target_line_based()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#streamline-near-roi\">streamline_near_roi</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.streamline_near_roi\"><code class=\"docutils literal notranslate\"><span class=\"pre\">streamline_near_roi()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#near-roi\">near_roi</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.near_roi\"><code class=\"docutils literal notranslate\"><span class=\"pre\">near_roi()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id153\">length</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.length\"><code class=\"docutils literal notranslate\"><span class=\"pre\">length()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unique-rows\">unique_rows</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.unique_rows\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unique_rows()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#transform-tracking-output\">transform_tracking_output</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.transform_tracking_output\"><code class=\"docutils literal notranslate\"><span class=\"pre\">transform_tracking_output()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reduce-rois\">reduce_rois</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.reduce_rois\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reduce_rois()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#path-length\">path_length</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.path_length\"><code class=\"docutils literal notranslate\"><span class=\"pre\">path_length()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#max-angle-from-curvature\">max_angle_from_curvature</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.max_angle_from_curvature\"><code class=\"docutils literal notranslate\"><span class=\"pre\">max_angle_from_curvature()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#min-radius-curvature-from-angle\">min_radius_curvature_from_angle</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.tracking.utils.min_radius_curvature_from_angle\"><code class=\"docutils literal notranslate\"><span class=\"pre\">min_radius_curvature_from_angle()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.tracking", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}