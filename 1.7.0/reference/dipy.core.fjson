{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.boots/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">boots</span></code>"}, "next": {"link": "../dipy.data/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code>", "meta": {}, "body": "<section id=\"module-dipy.core\">\n<span id=\"core\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code><a class=\"headerlink\" href=\"#module-dipy.core\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>Core objects</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n<section id=\"module-dipy.core.geometry\">\n<span id=\"module-core-geometry\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.geometry</span></code><a class=\"headerlink\" href=\"#module-dipy.core.geometry\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Utility functions for algebra etc</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry._TUPLE2AXES\" title=\"dipy.core.geometry._TUPLE2AXES\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">_TUPLE2AXES</span></code></a></p></td>\n<td><p>dict() -&gt; new empty dictionary dict(mapping) -&gt; new dictionary initialized from a mapping object's     (key, value) pairs dict(iterable) -&gt; new dictionary initialized as if via:     d = {}     for k, v in iterable:         d[k] = v dict(<a href=\"#id1\"><span class=\"problematic\" id=\"id2\">**</span></a>kwargs) -&gt; new dictionary initialized with the name=value pairs     in the keyword argument list. For example:  dict(one=1, two=2).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.sphere2cart\" title=\"dipy.core.geometry.sphere2cart\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sphere2cart</span></code></a>(r,\u00a0theta,\u00a0phi)</p></td>\n<td><p>Spherical to Cartesian coordinates</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.cart2sphere\" title=\"dipy.core.geometry.cart2sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">cart2sphere</span></code></a>(x,\u00a0y,\u00a0z)</p></td>\n<td><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite>\n\nSee doc for <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.sph2latlon\" title=\"dipy.core.geometry.sph2latlon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sph2latlon</span></code></a>(theta,\u00a0phi)</p></td>\n<td><p>Convert spherical coordinates to latitude and longitude.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.normalized_vector\" title=\"dipy.core.geometry.normalized_vector\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">normalized_vector</span></code></a>(vec[,\u00a0axis])</p></td>\n<td><p>Return vector divided by its Euclidean (L2) norm</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.vector_norm\" title=\"dipy.core.geometry.vector_norm\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">vector_norm</span></code></a>(vec[,\u00a0axis,\u00a0keepdims])</p></td>\n<td><p>Return vector Euclidean (L2) norm</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.rodrigues_axis_rotation\" title=\"dipy.core.geometry.rodrigues_axis_rotation\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">rodrigues_axis_rotation</span></code></a>(r,\u00a0theta)</p></td>\n<td><p>Rodrigues formula</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.nearest_pos_semi_def\" title=\"dipy.core.geometry.nearest_pos_semi_def\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">nearest_pos_semi_def</span></code></a>(B)</p></td>\n<td><p>Least squares positive semi-definite tensor estimation</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.sphere_distance\" title=\"dipy.core.geometry.sphere_distance\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sphere_distance</span></code></a>(pts1,\u00a0pts2[,\u00a0radius,\u00a0...])</p></td>\n<td><p>Distance across sphere surface between <cite>pts1</cite> and <cite>pts2</cite></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.cart_distance\" title=\"dipy.core.geometry.cart_distance\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">cart_distance</span></code></a>(pts1,\u00a0pts2)</p></td>\n<td><p>Cartesian distance between <cite>pts1</cite> and <cite>pts2</cite></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.vector_cosine\" title=\"dipy.core.geometry.vector_cosine\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">vector_cosine</span></code></a>(vecs1,\u00a0vecs2)</p></td>\n<td><p>Cosine of angle between two (sets of) vectors</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.lambert_equal_area_projection_polar\" title=\"dipy.core.geometry.lambert_equal_area_projection_polar\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">lambert_equal_area_projection_polar</span></code></a>(theta,\u00a0phi)</p></td>\n<td><p>Lambert Equal Area Projection from polar sphere to plane\n\nReturn positions in (y1,y2) plane corresponding to the points\nwith polar coordinates (theta, phi) on the unit sphere, under the\nLambert Equal Area Projection mapping (see Mardia and Jupp (2000),\nDirectional Statistics, p.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.lambert_equal_area_projection_cart\" title=\"dipy.core.geometry.lambert_equal_area_projection_cart\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">lambert_equal_area_projection_cart</span></code></a>(x,\u00a0y,\u00a0z)</p></td>\n<td><p>Lambert Equal Area Projection from cartesian vector to plane\n\nReturn positions in <span class=\"math notranslate nohighlight\">\\((y_1,y_2)\\)</span> plane corresponding to the\ndirections of the vectors with cartesian coordinates xyz under the\nLambert Equal Area Projection mapping (see Mardia and Jupp (2000),\nDirectional Statistics, p.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.euler_matrix\" title=\"dipy.core.geometry.euler_matrix\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">euler_matrix</span></code></a>(ai,\u00a0aj,\u00a0ak[,\u00a0axes])</p></td>\n<td><p>Return homogeneous rotation matrix from Euler angles and axis sequence.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.compose_matrix\" title=\"dipy.core.geometry.compose_matrix\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">compose_matrix</span></code></a>([scale,\u00a0shear,\u00a0angles,\u00a0...])</p></td>\n<td><p>Return 4x4 transformation matrix from sequence of transformations.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.decompose_matrix\" title=\"dipy.core.geometry.decompose_matrix\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">decompose_matrix</span></code></a>(matrix)</p></td>\n<td><p>Return sequence of transformations from transformation matrix.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.circumradius\" title=\"dipy.core.geometry.circumradius\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">circumradius</span></code></a>(a,\u00a0b,\u00a0c)</p></td>\n<td><p>a, b and c are 3-dimensional vectors which are the vertices of a triangle.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.vec2vec_rotmat\" title=\"dipy.core.geometry.vec2vec_rotmat\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">vec2vec_rotmat</span></code></a>(u,\u00a0v)</p></td>\n<td><p>rotation matrix from 2 unit vectors</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.compose_transformations\" title=\"dipy.core.geometry.compose_transformations\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">compose_transformations</span></code></a>(*mats)</p></td>\n<td><p>Compose multiple 4x4 affine transformations in one 4x4 matrix</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.perpendicular_directions\" title=\"dipy.core.geometry.perpendicular_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">perpendicular_directions</span></code></a>(v[,\u00a0num,\u00a0half])</p></td>\n<td><p>Computes n evenly spaced perpendicular directions relative to a given vector v</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.dist_to_corner\" title=\"dipy.core.geometry.dist_to_corner\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dist_to_corner</span></code></a>(affine)</p></td>\n<td><p>Calculate the maximal distance from the center to a corner of a voxel, given an affine</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.geometry.is_hemispherical\" title=\"dipy.core.geometry.is_hemispherical\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_hemispherical</span></code></a>(vecs)</p></td>\n<td><p>Test whether all points on a unit sphere lie in the same hemisphere.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.gradients\">\n<span id=\"module-core-gradients\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.gradients</span></code><a class=\"headerlink\" href=\"#module-dipy.core.gradients\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable\" title=\"dipy.core.gradients.GradientTable\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">GradientTable</span></code></a>(gradients[,\u00a0big_delta,\u00a0...])</p></td>\n<td><p>Diffusion gradient information</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.logger\" title=\"dipy.core.gradients.logger\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">logger</span></code></a></p></td>\n<td><p>Instances of the Logger class represent a single logging channel.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.unique_bvals\" title=\"dipy.core.gradients.unique_bvals\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unique_bvals</span></code></a>(bvals[,\u00a0bmag,\u00a0rbvals])</p></td>\n<td><p>This function gives the unique rounded b-values of the data\n\ndipy.core.gradients.unique_bvals is deprecated, Please use dipy.core.gradients.unique_bvals_magnitude instead\n\n* deprecated from version: 1.2\n* Raises &lt;class 'dipy.utils.deprecator.ExpiredDeprecationError'&gt; as of version: 1.4\n\nParameters\n----------\nbvals : ndarray\n    Array containing the b-values\n\nbmag : int\n    The order of magnitude that the bvalues have to differ to be\n    considered an unique b-value.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table_from_bvals_bvecs\" title=\"dipy.core.gradients.gradient_table_from_bvals_bvecs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gradient_table_from_bvals_bvecs</span></code></a>(bvals,\u00a0bvecs)</p></td>\n<td><p>Creates a GradientTable from a bvals array and a bvecs array</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table_from_qvals_bvecs\" title=\"dipy.core.gradients.gradient_table_from_qvals_bvecs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gradient_table_from_qvals_bvecs</span></code></a>(qvals,\u00a0...)</p></td>\n<td><p>A general function for creating diffusion MR gradients.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table_from_gradient_strength_bvecs\" title=\"dipy.core.gradients.gradient_table_from_gradient_strength_bvecs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gradient_table_from_gradient_strength_bvecs</span></code></a>(...)</p></td>\n<td><p>A general function for creating diffusion MR gradients.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table\" title=\"dipy.core.gradients.gradient_table\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gradient_table</span></code></a>(bvals[,\u00a0bvecs,\u00a0big_delta,\u00a0...])</p></td>\n<td><p>A general function for creating diffusion MR gradients.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.reorient_bvecs\" title=\"dipy.core.gradients.reorient_bvecs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reorient_bvecs</span></code></a>(gtab,\u00a0affines[,\u00a0atol])</p></td>\n<td><p>Reorient the directions in a GradientTable.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.generate_bvecs\" title=\"dipy.core.gradients.generate_bvecs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">generate_bvecs</span></code></a>(N[,\u00a0iters])</p></td>\n<td><p>Generates N bvectors.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.round_bvals\" title=\"dipy.core.gradients.round_bvals\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">round_bvals</span></code></a>(bvals[,\u00a0bmag])</p></td>\n<td><p>&quot;This function rounds the b-values\n\nParameters\n----------\nbvals : ndarray\n    Array containing the b-values\n\nbmag : int\n    The order of magnitude to round the b-values.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.unique_bvals_tolerance\" title=\"dipy.core.gradients.unique_bvals_tolerance\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unique_bvals_tolerance</span></code></a>(bvals[,\u00a0tol])</p></td>\n<td><p>Gives the unique b-values of the data, within a tolerance gap</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.get_bval_indices\" title=\"dipy.core.gradients.get_bval_indices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_bval_indices</span></code></a>(bvals,\u00a0bval[,\u00a0tol])</p></td>\n<td><p>Get indices where the b-value is <cite>bval</cite></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.unique_bvals_magnitude\" title=\"dipy.core.gradients.unique_bvals_magnitude\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unique_bvals_magnitude</span></code></a>(bvals[,\u00a0bmag,\u00a0rbvals])</p></td>\n<td><p>This function gives the unique rounded b-values of the data\n\nParameters\n----------\nbvals : ndarray\n    Array containing the b-values\n\nbmag : int\n    The order of magnitude that the bvalues have to differ to be\n    considered an unique b-value.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.check_multi_b\" title=\"dipy.core.gradients.check_multi_b\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">check_multi_b</span></code></a>(gtab,\u00a0n_bvals[,\u00a0non_zero,\u00a0bmag])</p></td>\n<td><p>Check if you have enough different b-values in your gradient table\n\nParameters\n----------\ngtab : GradientTable class instance.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.btens_to_params\" title=\"dipy.core.gradients.btens_to_params\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">btens_to_params</span></code></a>(btens[,\u00a0ztol])</p></td>\n<td><p>Compute trace, anisotropy and asymmetry parameters from b-tensors.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.params_to_btens\" title=\"dipy.core.gradients.params_to_btens\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">params_to_btens</span></code></a>(bval,\u00a0bdelta,\u00a0b_eta)</p></td>\n<td><p>Compute b-tensor from trace, anisotropy and asymmetry parameters.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.ornt_mapping\" title=\"dipy.core.gradients.ornt_mapping\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ornt_mapping</span></code></a>(ornt1,\u00a0ornt2)</p></td>\n<td><p>Calculate the mapping needing to get from orn1 to orn2.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.reorient_vectors\" title=\"dipy.core.gradients.reorient_vectors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reorient_vectors</span></code></a>(bvecs,\u00a0current_ornt,\u00a0new_ornt)</p></td>\n<td><p>Change the orientation of gradients or other vectors.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.reorient_on_axis\" title=\"dipy.core.gradients.reorient_on_axis\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reorient_on_axis</span></code></a>(bvecs,\u00a0current_ornt,\u00a0new_ornt)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.orientation_from_string\" title=\"dipy.core.gradients.orientation_from_string\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">orientation_from_string</span></code></a>(string_ornt)</p></td>\n<td><p>Return an array representation of an ornt string.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.gradients.orientation_to_string\" title=\"dipy.core.gradients.orientation_to_string\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">orientation_to_string</span></code></a>(ornt)</p></td>\n<td><p>Return a string representation of a 3d ornt.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.graph\">\n<span id=\"module-core-graph\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.graph</span></code><a class=\"headerlink\" href=\"#module-dipy.core.graph\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>A simple graph class</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.graph.Graph\" title=\"dipy.core.graph.Graph\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Graph</span></code></a>()</p></td>\n<td><p>A simple graph class</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.histeq\">\n<span id=\"module-core-histeq\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.histeq</span></code><a class=\"headerlink\" href=\"#module-dipy.core.histeq\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.histeq.histeq\" title=\"dipy.core.histeq.histeq\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">histeq</span></code></a>(arr[,\u00a0num_bins])</p></td>\n<td><p>Performs an histogram equalization on <code class=\"docutils literal notranslate\"><span class=\"pre\">arr</span></code>.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.ndindex\">\n<span id=\"module-core-ndindex\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.ndindex</span></code><a class=\"headerlink\" href=\"#module-dipy.core.ndindex\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.ndindex.ndindex\" title=\"dipy.core.ndindex.ndindex\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ndindex</span></code></a>(shape)</p></td>\n<td><p>An N-dimensional iterator object to index arrays.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.onetime\">\n<span id=\"module-core-onetime\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.onetime</span></code><a class=\"headerlink\" href=\"#module-dipy.core.onetime\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Descriptor support for NIPY.</p>\n<p>Copyright (c) 2006-2011, NIPY Developers\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><dl class=\"simple\">\n<dt>Redistributions of source code must retain the above copyright</dt><dd><p>notice, this list of conditions and the following disclaimer.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>Redistributions in binary form must reproduce the above</dt><dd><p>copyright notice, this list of conditions and the following\ndisclaimer in the documentation and/or other materials provided\nwith the distribution.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>Neither the name of the NIPY Developers nor the names of any</dt><dd><p>contributors may be used to endorse or promote products derived\nfrom this software without specific prior written permission.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</div></blockquote>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\u201cAS IS\u201d AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n<p>Utilities to support special Python descriptors [1,2], in particular the use of\na useful pattern for properties we call \u2018one time properties\u2019.  These are\nobject attributes which are declared as properties, but become regular\nattributes once they\u2019ve been read the first time.  They can thus be evaluated\nlater in the object\u2019s life cycle, but once evaluated they become normal, static\nattributes with no function call overhead on access or any other constraints.</p>\n<p>A special ResetMixin class is provided to add a .reset() method to users who\nmay want to have their objects capable of resetting these computed properties\nto their \u2018untriggered\u2019 state.</p>\n<section id=\"references\">\n<h3>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>[1] How-To Guide for Descriptors, Raymond\nHettinger. <a class=\"reference external\" href=\"http://users.rcn.com/python/download/Descriptor.htm\">http://users.rcn.com/python/download/Descriptor.htm</a></p>\n<p>[2] Python data model, <a class=\"reference external\" href=\"http://docs.python.org/reference/datamodel.html\">http://docs.python.org/reference/datamodel.html</a></p>\n</section>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.onetime.ResetMixin\" title=\"dipy.core.onetime.ResetMixin\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ResetMixin</span></code></a>()</p></td>\n<td><p>A Mixin class to add a .reset() method to users of OneTimeProperty.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.onetime.OneTimeProperty\" title=\"dipy.core.onetime.OneTimeProperty\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">OneTimeProperty</span></code></a>(func)</p></td>\n<td><p>A descriptor to make special properties that become normal attributes.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.onetime.auto_attr\" title=\"dipy.core.onetime.auto_attr\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">auto_attr</span></code></a>(func)</p></td>\n<td><p>Decorator to create OneTimeProperty attributes.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.optimize\">\n<span id=\"module-core-optimize\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.optimize</span></code><a class=\"headerlink\" href=\"#module-dipy.core.optimize\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>A unified interface for performing and debugging optimization problems.</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer\" title=\"dipy.core.optimize.Optimizer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Optimizer</span></code></a>(fun,\u00a0x0[,\u00a0args,\u00a0method,\u00a0jac,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver\" title=\"dipy.core.optimize.SKLearnLinearSolver\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SKLearnLinearSolver</span></code></a>(*args,\u00a0**kwargs)</p></td>\n<td><p>Provide a sklearn-like uniform interface to algorithms that solve problems\nof the form: <span class=\"math notranslate nohighlight\">\\(y = Ax\\)</span> for <span class=\"math notranslate nohighlight\">\\(x\\)</span>\n\nSub-classes of SKLearnLinearSolver should provide a 'fit' method that have\nthe following signature: <cite>SKLearnLinearSolver.fit(X, y)</cite>, which would set\nan attribute <cite>SKLearnLinearSolver.coef_</cite>, with the shape (X.shape[1],),\nsuch that an estimate of y can be calculated as:\n<cite>y_hat = np.dot(X, SKLearnLinearSolver.coef_.T)</cite></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.optimize.NonNegativeLeastSquares\" title=\"dipy.core.optimize.NonNegativeLeastSquares\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">NonNegativeLeastSquares</span></code></a>(*args,\u00a0**kwargs)</p></td>\n<td><p>A sklearn-like interface to scipy.optimize.nnls</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.optimize.PositiveDefiniteLeastSquares\" title=\"dipy.core.optimize.PositiveDefiniteLeastSquares\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">PositiveDefiniteLeastSquares</span></code></a>(m[,\u00a0A,\u00a0L])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.optimize.spdot\" title=\"dipy.core.optimize.spdot\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">spdot</span></code></a>(A,\u00a0B)</p></td>\n<td><p>The same as np.dot(A, B), except it works even if A or B or both are sparse matrices.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.optimize.sparse_nnls\" title=\"dipy.core.optimize.sparse_nnls\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sparse_nnls</span></code></a>(y,\u00a0X[,\u00a0momentum,\u00a0step_size,\u00a0...])</p></td>\n<td><p>Solve y=Xh for h, using gradient descent, with X a sparse matrix.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.profile\">\n<span id=\"module-core-profile\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.profile</span></code><a class=\"headerlink\" href=\"#module-dipy.core.profile\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Class for profiling cython code</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.profile.Profiler\" title=\"dipy.core.profile.Profiler\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Profiler</span></code></a>([call])</p></td>\n<td><p>Profile python/cython files or functions</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.rng\">\n<span id=\"module-core-rng\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.rng</span></code><a class=\"headerlink\" href=\"#module-dipy.core.rng\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Random number generation utilities.</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.rng.WichmannHill2006\" title=\"dipy.core.rng.WichmannHill2006\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">WichmannHill2006</span></code></a>([ix,\u00a0iy,\u00a0iz,\u00a0it])</p></td>\n<td><p>Wichmann Hill (2006) random number generator.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.rng.WichmannHill1982\" title=\"dipy.core.rng.WichmannHill1982\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">WichmannHill1982</span></code></a>([ix,\u00a0iy,\u00a0iz])</p></td>\n<td><p>Algorithm AS 183 Appl.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.rng.LEcuyer\" title=\"dipy.core.rng.LEcuyer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">LEcuyer</span></code></a>([s1,\u00a0s2])</p></td>\n<td><p>Return a LEcuyer random number generator.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.sphere\">\n<span id=\"module-core-sphere\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.sphere</span></code><a class=\"headerlink\" href=\"#module-dipy.core.sphere\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a>([x,\u00a0y,\u00a0z,\u00a0theta,\u00a0phi,\u00a0xyz,\u00a0faces,\u00a0edges])</p></td>\n<td><p>Points on the unit sphere.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere\" title=\"dipy.core.sphere.HemiSphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">HemiSphere</span></code></a>([x,\u00a0y,\u00a0z,\u00a0theta,\u00a0phi,\u00a0xyz,\u00a0...])</p></td>\n<td><p>Points on the unit sphere.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.faces_from_sphere_vertices\" title=\"dipy.core.sphere.faces_from_sphere_vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">faces_from_sphere_vertices</span></code></a>(vertices)</p></td>\n<td><p>Triangulate a set of vertices on the sphere.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.unique_edges\" title=\"dipy.core.sphere.unique_edges\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unique_edges</span></code></a>(faces[,\u00a0return_mapping])</p></td>\n<td><p>Extract all unique edges from given triangular faces.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.unique_sets\" title=\"dipy.core.sphere.unique_sets\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unique_sets</span></code></a>(sets[,\u00a0return_inverse])</p></td>\n<td><p>Remove duplicate sets.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.disperse_charges\" title=\"dipy.core.sphere.disperse_charges\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">disperse_charges</span></code></a>(hemi,\u00a0iters[,\u00a0const])</p></td>\n<td><p>Models electrostatic repulsion on the unit sphere</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.disperse_charges_alt\" title=\"dipy.core.sphere.disperse_charges_alt\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">disperse_charges_alt</span></code></a>(init_pointset,\u00a0iters[,\u00a0tol])</p></td>\n<td><p>Reimplementation of disperse_charges making use of <cite>scipy.optimize.fmin_slsqp</cite>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.euler_characteristic_check\" title=\"dipy.core.sphere.euler_characteristic_check\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">euler_characteristic_check</span></code></a>(sphere[,\u00a0chi])</p></td>\n<td><p>Checks the euler characteristic of a sphere\n\nIf <span class=\"math notranslate nohighlight\">\\(f\\)</span> = number of faces, <span class=\"math notranslate nohighlight\">\\(e\\)</span> = number_of_edges and <span class=\"math notranslate nohighlight\">\\(v\\)</span> = number of\nvertices, the Euler formula says <span class=\"math notranslate nohighlight\">\\(f-e+v = 2\\)</span> for a mesh on a sphere.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.octahedron_vertices\" title=\"dipy.core.sphere.octahedron_vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">octahedron_vertices</span></code></a></p></td>\n<td><p>ndarray(shape, dtype=float, buffer=None, offset=0,</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.octahedron_faces\" title=\"dipy.core.sphere.octahedron_faces\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">octahedron_faces</span></code></a></p></td>\n<td><p>ndarray(shape, dtype=float, buffer=None, offset=0,</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.icosahedron_vertices\" title=\"dipy.core.sphere.icosahedron_vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">icosahedron_vertices</span></code></a></p></td>\n<td><p>ndarray(shape, dtype=float, buffer=None, offset=0,</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.icosahedron_faces\" title=\"dipy.core.sphere.icosahedron_faces\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">icosahedron_faces</span></code></a></p></td>\n<td><p>ndarray(shape, dtype=float, buffer=None, offset=0,</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.unit_octahedron\" title=\"dipy.core.sphere.unit_octahedron\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unit_octahedron</span></code></a></p></td>\n<td><p>Points on the unit sphere.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.unit_icosahedron\" title=\"dipy.core.sphere.unit_icosahedron\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unit_icosahedron</span></code></a></p></td>\n<td><p>Points on the unit sphere.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere.hemi_icosahedron\" title=\"dipy.core.sphere.hemi_icosahedron\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">hemi_icosahedron</span></code></a></p></td>\n<td><p>Points on the unit sphere.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.sphere_stats\">\n<span id=\"module-core-sphere-stats\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.sphere_stats</span></code><a class=\"headerlink\" href=\"#module-dipy.core.sphere_stats\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Statistics on spheres</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.random_uniform_on_sphere\" title=\"dipy.core.sphere_stats.random_uniform_on_sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">random_uniform_on_sphere</span></code></a>([n,\u00a0coords])</p></td>\n<td><p>Random unit vectors from a uniform distribution on the sphere.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.eigenstats\" title=\"dipy.core.sphere_stats.eigenstats\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">eigenstats</span></code></a>(points[,\u00a0alpha])</p></td>\n<td><p>Principal direction and confidence ellipse\n\nImplements equations in section 6.3.1(ii) of Fisher, Lewis and\nEmbleton, supplemented by equations in section 3.2.5.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.compare_orientation_sets\" title=\"dipy.core.sphere_stats.compare_orientation_sets\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">compare_orientation_sets</span></code></a>(S,\u00a0T)</p></td>\n<td><p>Computes the mean cosine distance of the best match between points of two sets of vectors S and T (angular similarity)</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.angular_similarity\" title=\"dipy.core.sphere_stats.angular_similarity\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">angular_similarity</span></code></a>(S,\u00a0T)</p></td>\n<td><p>Computes the cosine distance of the best match between points of two sets of vectors S and T</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.subdivide_octahedron\">\n<span id=\"module-core-subdivide-octahedron\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.subdivide_octahedron</span></code><a class=\"headerlink\" href=\"#module-dipy.core.subdivide_octahedron\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Create a unit sphere by subdividing all triangles of an octahedron\nrecursively.</p>\n<p>The unit sphere has a radius of 1, which also means that all points in this\nsphere (assumed to have centre at [0, 0, 0]) have an absolute value (modulus)\nof 1. Another feature of the unit sphere is that the unit normals of this\nsphere are exactly the same as the vertices.</p>\n<p>This recursive method will avoid the common problem of the polar singularity,\nproduced by 2d (lon-lat) parameterization methods.</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.create_unit_sphere\" title=\"dipy.core.subdivide_octahedron.create_unit_sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">create_unit_sphere</span></code></a>([recursion_level])</p></td>\n<td><p>Creates a unit sphere by subdividing a unit octahedron.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.create_unit_hemisphere\" title=\"dipy.core.subdivide_octahedron.create_unit_hemisphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">create_unit_hemisphere</span></code></a>([recursion_level])</p></td>\n<td><p>Creates a unit sphere by subdividing a unit octahedron, returns half\nthe sphere.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.core.wavelet\">\n<span id=\"module-core-wavelet\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.wavelet</span></code><a class=\"headerlink\" href=\"#module-dipy.core.wavelet\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.wavelet.cshift3D\" title=\"dipy.core.wavelet.cshift3D\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">cshift3D</span></code></a>(x,\u00a0m,\u00a0d)</p></td>\n<td><p>3D Circular Shift</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.wavelet.permutationinverse\" title=\"dipy.core.wavelet.permutationinverse\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">permutationinverse</span></code></a>(perm)</p></td>\n<td><p>Function generating inverse of the permutation</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.wavelet.afb3D_A\" title=\"dipy.core.wavelet.afb3D_A\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">afb3D_A</span></code></a>(x,\u00a0af,\u00a0d)</p></td>\n<td><p>3D Analysis Filter Bank</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.wavelet.sfb3D_A\" title=\"dipy.core.wavelet.sfb3D_A\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sfb3D_A</span></code></a>(lo,\u00a0hi,\u00a0sf,\u00a0d)</p></td>\n<td><p>3D Synthesis Filter Bank</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.wavelet.sfb3D\" title=\"dipy.core.wavelet.sfb3D\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sfb3D</span></code></a>(lo,\u00a0hi,\u00a0sf1[,\u00a0sf2,\u00a0sf3])</p></td>\n<td><p>3D Synthesis Filter Bank</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.wavelet.afb3D\" title=\"dipy.core.wavelet.afb3D\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">afb3D</span></code></a>(x,\u00a0af1[,\u00a0af2,\u00a0af3])</p></td>\n<td><p>3D Analysis Filter Bank</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.core.wavelet.dwt3D\" title=\"dipy.core.wavelet.dwt3D\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dwt3D</span></code></a>(x,\u00a0J,\u00a0af)</p></td>\n<td><p>3-D Discrete Wavelet Transform</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.core.wavelet.idwt3D\" title=\"dipy.core.wavelet.idwt3D\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">idwt3D</span></code></a>(w,\u00a0J,\u00a0sf)</p></td>\n<td><p>Inverse 3-D Discrete Wavelet Transform</p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"tuple2axes\">\n<h3>_TUPLE2AXES<a class=\"headerlink\" href=\"#tuple2axes\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry._TUPLE2AXES\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">_TUPLE2AXES</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry._TUPLE2AXES\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>dict() -&gt; new empty dictionary\ndict(mapping) -&gt; new dictionary initialized from a mapping object\u2019s</p>\n<blockquote>\n<div><p>(key, value) pairs</p>\n</div></blockquote>\n<dl>\n<dt>dict(iterable) -&gt; new dictionary initialized as if via:</dt><dd><p>d = {}\nfor k, v in iterable:</p>\n<blockquote>\n<div><p>d[k] = v</p>\n</div></blockquote>\n</dd>\n<dt>dict(<a href=\"#id3\"><span class=\"problematic\" id=\"id4\">**</span></a>kwargs) -&gt; new dictionary initialized with the name=value pairs</dt><dd><p>in the keyword argument list.  For example:  dict(one=1, two=2)</p>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n<section id=\"sphere2cart\">\n<h3>sphere2cart<a class=\"headerlink\" href=\"#sphere2cart\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.sphere2cart\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sphere2cart</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">r</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">phi</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.sphere2cart\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical to Cartesian coordinates</p>\n<p>This is the standard physics convention where <cite>theta</cite> is the\ninclination (polar) angle, and <cite>phi</cite> is the azimuth angle.</p>\n<p>Imagine a sphere with center (0,0,0).  Orient it with the z axis\nrunning south-north, the y axis running west-east and the x axis\nfrom posterior to anterior.  <cite>theta</cite> (the inclination angle) is the\nangle to rotate from the z-axis (the zenith) around the y-axis,\ntowards the x axis.  Thus the rotation is counter-clockwise from the\npoint of view of positive y.  <cite>phi</cite> (azimuth) gives the angle of\nrotation around the z-axis towards the y axis.  The rotation is\ncounter-clockwise from the point of view of positive z.</p>\n<p>Equivalently, given a point P on the sphere, with coordinates x, y,\nz, <cite>theta</cite> is the angle between P and the z-axis, and <cite>phi</cite> is\nthe angle between the projection of P onto the XY plane, and the X\naxis.</p>\n<p>Geographical nomenclature designates theta as \u2018co-latitude\u2019, and phi\nas \u2018longitude\u2019</p>\n<section id=\"parameters\">\n<h4>Parameters<a class=\"headerlink\" href=\"#parameters\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>r<span class=\"classifier\">array_like</span></dt><dd><p>radius</p>\n</dd>\n<dt>theta<span class=\"classifier\">array_like</span></dt><dd><p>inclination or polar angle</p>\n</dd>\n<dt>phi<span class=\"classifier\">array_like</span></dt><dd><p>azimuth angle</p>\n</dd>\n</dl>\n</section>\n<section id=\"returns\">\n<h4>Returns<a class=\"headerlink\" href=\"#returns\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x<span class=\"classifier\">array</span></dt><dd><p>x coordinate(s) in Cartesion space</p>\n</dd>\n<dt>y<span class=\"classifier\">array</span></dt><dd><p>y coordinate(s) in Cartesian space</p>\n</dd>\n<dt>z<span class=\"classifier\">array</span></dt><dd><p>z coordinate</p>\n</dd>\n</dl>\n</section>\n<section id=\"notes\">\n<h4>Notes<a class=\"headerlink\" href=\"#notes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>See these pages:</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/Spherical_coordinate_system\">http://en.wikipedia.org/wiki/Spherical_coordinate_system</a></p></li>\n<li><p><a class=\"reference external\" href=\"http://mathworld.wolfram.com/SphericalCoordinates.html\">http://mathworld.wolfram.com/SphericalCoordinates.html</a></p></li>\n</ul>\n<p>for excellent discussion of the many different conventions\npossible.  Here we use the physics conventions, used in the\nwikipedia page.</p>\n<p>Derivations of the formulae are simple. Consider a vector x, y, z of\nlength r (norm of x, y, z).  The inclination angle (theta) can be\nfound from: cos(theta) == z / r -&gt; z == r * cos(theta).  This gives\nthe hypotenuse of the projection onto the XY plane, which we will\ncall Q. Q == r*sin(theta). Now x / Q == cos(phi) -&gt; x == r *\nsin(theta) * cos(phi) and so on.</p>\n<p>We have deliberately named this function <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere2cart</span></code> rather than\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sph2cart</span></code> to distinguish it from the Matlab function of that\nname, because the Matlab function uses an unusual convention for the\nangles that we did not want to replicate.  The Matlab function is\ntrivial to implement with the formulae given in the Matlab help.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"cart2sphere\">\n<h3>cart2sphere<a class=\"headerlink\" href=\"#cart2sphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.cart2sphere\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">cart2sphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.cart2sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite>\n\nSee doc for <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.\n\n<span class=\"math notranslate nohighlight\">\\(0\\le\\theta\\mathrm{(theta)}\\le\\pi\\)</span> and <span class=\"math notranslate nohighlight\">\\(-\\pi\\le\\phi\\mathrm{(phi)}\\le\\pi\\)</span>\n\nParameters\n\u2014\u2014\u2014-\nx : array_like\n   x coordinate in Cartesian space\ny : array_like\n   y coordinate in Cartesian space\nz : array_like\n   z coordinate\n\nReturns\n\u2014\u2014-\nr : array\n   radius\ntheta : array\n   inclination (polar) angle\nphi : array\n   azimuth angle</p>\n</dd></dl>\n\n</section>\n<section id=\"sph2latlon\">\n<h3>sph2latlon<a class=\"headerlink\" href=\"#sph2latlon\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.sph2latlon\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sph2latlon</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">phi</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.sph2latlon\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Convert spherical coordinates to latitude and longitude.</p>\n<section id=\"id5\">\n<h4>Returns<a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>lat, lon<span class=\"classifier\">ndarray</span></dt><dd><p>Latitude and longitude.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"normalized-vector\">\n<h3>normalized_vector<a class=\"headerlink\" href=\"#normalized-vector\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.normalized_vector\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">normalized_vector</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vec</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">-1</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.normalized_vector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return vector divided by its Euclidean (L2) norm</p>\n<p>See <a class=\"reference internal\" href=\"../../glossary/#term-Unit-vector\"><span class=\"xref std std-term\">unit vector</span></a> and <a class=\"reference internal\" href=\"../../glossary/#term-Euclidean-norm\"><span class=\"xref std std-term\">Euclidean norm</span></a></p>\n<section id=\"id6\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>vec : array_like shape (3,)</p>\n</section>\n<section id=\"id7\">\n<h4>Returns<a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>nvec<span class=\"classifier\">array shape (3,)</span></dt><dd><p>vector divided by L2 norm</p>\n</dd>\n</dl>\n</section>\n<section id=\"examples\">\n<h4>Examples<a class=\"headerlink\" href=\"#examples\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">l2n</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">vec</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nvec</span> <span class=\"o\">=</span> <span class=\"n\">normalized_vector</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">l2n</span><span class=\"p\">,</span> <span class=\"n\">nvec</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">normalized_vector</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"vector-norm\">\n<h3>vector_norm<a class=\"headerlink\" href=\"#vector-norm\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.vector_norm\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">vector_norm</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vec</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">-1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">keepdims</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.vector_norm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return vector Euclidean (L2) norm</p>\n<p>See <a class=\"reference internal\" href=\"../../glossary/#term-Unit-vector\"><span class=\"xref std std-term\">unit vector</span></a> and <a class=\"reference internal\" href=\"../../glossary/#term-Euclidean-norm\"><span class=\"xref std std-term\">Euclidean norm</span></a></p>\n<section id=\"id8\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id8\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vec<span class=\"classifier\">array_like</span></dt><dd><p>Vectors to norm.</p>\n</dd>\n<dt>axis<span class=\"classifier\">int</span></dt><dd><p>Axis over which to norm. By default norm over last axis. If <cite>axis</cite> is\nNone, <cite>vec</cite> is flattened then normed.</p>\n</dd>\n<dt>keepdims<span class=\"classifier\">bool</span></dt><dd><p>If True, the output will have the same number of dimensions as <cite>vec</cite>,\nwith shape 1 on <cite>axis</cite>.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id9\">\n<h4>Returns<a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>norm<span class=\"classifier\">array</span></dt><dd><p>Euclidean norms of vectors.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id10\">\n<h4>Examples<a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">77</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 17.,  85.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 17.],</span>\n<span class=\"go\">       [ 85.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">array([  8.,  39.,  77.])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"rodrigues-axis-rotation\">\n<h3>rodrigues_axis_rotation<a class=\"headerlink\" href=\"#rodrigues-axis-rotation\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.rodrigues_axis_rotation\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">rodrigues_axis_rotation</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">r</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.rodrigues_axis_rotation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Rodrigues formula</p>\n<p>Rotation matrix for rotation around axis r for angle theta.</p>\n<p>The rotation matrix is given by the Rodrigues formula:</p>\n<p>R = Id + sin(theta)*Sn + (1-cos(theta))*Sn^2</p>\n<p>with:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>       <span class=\"mi\">0</span>  <span class=\"o\">-</span><span class=\"n\">nz</span>  <span class=\"n\">ny</span>\n<span class=\"n\">Sn</span> <span class=\"o\">=</span>   <span class=\"n\">nz</span>   <span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"n\">nx</span>\n      <span class=\"o\">-</span><span class=\"n\">ny</span>  <span class=\"n\">nx</span>   <span class=\"mi\">0</span>\n</pre></div>\n</div>\n<p>where n = r / ||r||</p>\n<p>In case the angle ||r|| is very small, the above formula may lead\nto numerical instabilities. We instead use a Taylor expansion\naround theta=0:</p>\n<p>R = I + sin(theta)/tetha Sr + (1-cos(theta))/teta2 Sr^2</p>\n<p>leading to:</p>\n<p>R = I + (1-theta2/6)*Sr + (1/2-theta2/24)*Sr^2</p>\n<section id=\"id11\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>r :  array_like shape (3,), axis\ntheta : float, angle in degrees</p>\n</section>\n<section id=\"id12\">\n<h4>Returns<a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>R : array, shape (3,3), rotation matrix</p>\n</section>\n<section id=\"id13\">\n<h4>Examples<a class=\"headerlink\" href=\"#id13\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.geometry</span> <span class=\"kn\">import</span> <span class=\"n\">rodrigues_axis_rotation</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">R</span><span class=\"o\">=</span><span class=\"n\">rodrigues_axis_rotation</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ur</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">,</span><span class=\"n\">u</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rad2deg</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arccos</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">ur</span><span class=\"p\">,</span><span class=\"n\">u</span><span class=\"p\">))))</span>\n<span class=\"go\">40.0</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"nearest-pos-semi-def\">\n<h3>nearest_pos_semi_def<a class=\"headerlink\" href=\"#nearest-pos-semi-def\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.nearest_pos_semi_def\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">nearest_pos_semi_def</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">B</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.nearest_pos_semi_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Least squares positive semi-definite tensor estimation</p>\n<section id=\"id14\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id14\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>B<span class=\"classifier\">(3,3) array_like</span></dt><dd><p>B matrix - symmetric. We do not check the symmetry.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id15\">\n<h4>Returns<a class=\"headerlink\" href=\"#id15\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>npds<span class=\"classifier\">(3,3) array</span></dt><dd><p>Estimated nearest positive semi-definite array to matrix <cite>B</cite>.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id16\">\n<h4>Examples<a class=\"headerlink\" href=\"#id16\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nearest_pos_semi_def</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 0.75,  0.  ,  0.  ],</span>\n<span class=\"go\">       [ 0.  ,  0.75,  0.  ],</span>\n<span class=\"go\">       [ 0.  ,  0.  ,  0.  ]])</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id17\">\n<h4>References<a class=\"headerlink\" href=\"#id17\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id18\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Niethammer M, San Jose Estepar R, Bouix S, Shenton M, Westin CF.\nOn diffusion tensor estimation. Conf Proc IEEE Eng Med Biol Soc.\n2006;1:2622-5. PubMed PMID: 17946125; PubMed Central PMCID:\nPMC2791793.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"sphere-distance\">\n<h3>sphere_distance<a class=\"headerlink\" href=\"#sphere-distance\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.sphere_distance\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sphere_distance</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pts1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pts2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">check_radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.sphere_distance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Distance across sphere surface between <cite>pts1</cite> and <cite>pts2</cite></p>\n<section id=\"id19\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id19\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>pts1<span class=\"classifier\">(N,R) or (R,) array_like</span></dt><dd><p>where N is the number of points and R is the number of\ncoordinates defining a point (<code class=\"docutils literal notranslate\"><span class=\"pre\">R==3</span></code> for 3D)</p>\n</dd>\n<dt>pts2<span class=\"classifier\">(N,R) or (R,) array_like</span></dt><dd><p>where N is the number of points and R is the number of\ncoordinates defining a point (<code class=\"docutils literal notranslate\"><span class=\"pre\">R==3</span></code> for 3D).  It should be\npossible to broadcast <cite>pts1</cite> against <cite>pts2</cite></p>\n</dd>\n<dt>radius<span class=\"classifier\">None or float, optional</span></dt><dd><p>Radius of sphere.  Default is to work out radius from mean of the\nlength of each point vector</p>\n</dd>\n<dt>check_radius<span class=\"classifier\">bool, optional</span></dt><dd><p>If True, check if the points are on the sphere surface - i.e\ncheck if the vector lengths in <cite>pts1</cite> and <cite>pts2</cite> are close to\n<cite>radius</cite>.  Default is True.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id20\">\n<h4>Returns<a class=\"headerlink\" href=\"#id20\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>d<span class=\"classifier\">(N,) or (0,) array</span></dt><dd><p>Distances between corresponding points in <cite>pts1</cite> and <cite>pts2</cite>\nacross the spherical surface, i.e. the great circle distance</p>\n</dd>\n</dl>\n</section>\n<section id=\"see-also\">\n<h4>See Also<a class=\"headerlink\" href=\"#see-also\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>cart_distance : cartesian distance between points\nvector_cosine : cosine of angle between vectors</p>\n</section>\n<section id=\"id21\">\n<h4>Examples<a class=\"headerlink\" href=\"#id21\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.4f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">sphere_distance</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n<span class=\"go\">1.5708</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.4f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">sphere_distance</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n<span class=\"go\">4.7124</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"cart-distance\">\n<h3>cart_distance<a class=\"headerlink\" href=\"#cart-distance\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.cart_distance\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">cart_distance</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pts1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pts2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.cart_distance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Cartesian distance between <cite>pts1</cite> and <cite>pts2</cite></p>\n<p>If either of <cite>pts1</cite> or <cite>pts2</cite> is 2D, then we take the first\ndimension to index points, and the second indexes coordinate.  More\ngenerally, we take the last dimension to be the coordinate\ndimension.</p>\n<section id=\"id22\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id22\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>pts1<span class=\"classifier\">(N,R) or (R,) array_like</span></dt><dd><p>where N is the number of points and R is the number of\ncoordinates defining a point (<code class=\"docutils literal notranslate\"><span class=\"pre\">R==3</span></code> for 3D)</p>\n</dd>\n<dt>pts2<span class=\"classifier\">(N,R) or (R,) array_like</span></dt><dd><p>where N is the number of points and R is the number of\ncoordinates defining a point (<code class=\"docutils literal notranslate\"><span class=\"pre\">R==3</span></code> for 3D).  It should be\npossible to broadcast <cite>pts1</cite> against <cite>pts2</cite></p>\n</dd>\n</dl>\n</section>\n<section id=\"id23\">\n<h4>Returns<a class=\"headerlink\" href=\"#id23\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>d<span class=\"classifier\">(N,) or (0,) array</span></dt><dd><p>Cartesian distances between corresponding points in <cite>pts1</cite> and\n<cite>pts2</cite></p>\n</dd>\n</dl>\n</section>\n<section id=\"id24\">\n<h4>See Also<a class=\"headerlink\" href=\"#id24\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>sphere_distance : distance between points on sphere surface</p>\n</section>\n<section id=\"id25\">\n<h4>Examples<a class=\"headerlink\" href=\"#id25\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cart_distance</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"go\">3.0</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"vector-cosine\">\n<h3>vector_cosine<a class=\"headerlink\" href=\"#vector-cosine\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.vector_cosine\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">vector_cosine</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vecs1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vecs2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.vector_cosine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Cosine of angle between two (sets of) vectors</p>\n<p>The cosine of the angle between two vectors <code class=\"docutils literal notranslate\"><span class=\"pre\">v1</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">v2</span></code> is\ngiven by the inner product of <code class=\"docutils literal notranslate\"><span class=\"pre\">v1</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">v2</span></code> divided by the\nproduct of the vector lengths:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">v_cos</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">inner</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">,</span> <span class=\"n\">v2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">*</span>\n                            <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">)))</span>\n</pre></div>\n</div>\n<section id=\"id26\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id26\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vecs1<span class=\"classifier\">(N, R) or (R,) array_like</span></dt><dd><p>N vectors (as rows) or single vector.  Vectors have R elements.</p>\n</dd>\n<dt>vecs1<span class=\"classifier\">(N, R) or (R,) array_like</span></dt><dd><p>N vectors (as rows) or single vector.  Vectors have R elements.\nIt should be possible to broadcast <cite>vecs1</cite> against <cite>vecs2</cite></p>\n</dd>\n</dl>\n</section>\n<section id=\"id27\">\n<h4>Returns<a class=\"headerlink\" href=\"#id27\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vcos<span class=\"classifier\">(N,) or (0,) array</span></dt><dd><p>Vector cosines.  To get the angles you will need <code class=\"docutils literal notranslate\"><span class=\"pre\">np.arccos</span></code></p>\n</dd>\n</dl>\n</section>\n<section id=\"id28\">\n<h4>Notes<a class=\"headerlink\" href=\"#id28\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>The vector cosine will be the same as the correlation only if all\nthe input vectors have zero mean.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"lambert-equal-area-projection-polar\">\n<h3>lambert_equal_area_projection_polar<a class=\"headerlink\" href=\"#lambert-equal-area-projection-polar\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.lambert_equal_area_projection_polar\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">lambert_equal_area_projection_polar</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">phi</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.lambert_equal_area_projection_polar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Lambert Equal Area Projection from polar sphere to plane\n\nReturn positions in (y1,y2) plane corresponding to the points\nwith polar coordinates (theta, phi) on the unit sphere, under the\nLambert Equal Area Projection mapping (see Mardia and Jupp (2000),\nDirectional Statistics, p. 161).\n\nSee doc for <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere2cart</span></code> for angle conventions\n\n- <span class=\"math notranslate nohighlight\">\\(0 \\le \\theta \\le \\pi\\)</span> and <span class=\"math notranslate nohighlight\">\\(0 \\le \\phi \\le 2 \\pi\\)</span>\n- <span class=\"math notranslate nohighlight\">\\(|(y_1,y_2)| \\le 2\\)</span>\n\nThe Lambert EAP maps the upper hemisphere to the planar disc of radius 1\nand the lower hemisphere to the planar annulus between radii 1 and 2,\nand <em>vice versa</em>.\n\nParameters\n\u2014\u2014\u2014-\ntheta : array_like\n   theta spherical coordinates\nphi : array_like\n   phi spherical coordinates\n\nReturns\n\u2014\u2014-\ny : (N,2) array\n   planar coordinates of points following mapping by Lambert\u2019s EAP.</p>\n</dd></dl>\n\n</section>\n<section id=\"lambert-equal-area-projection-cart\">\n<h3>lambert_equal_area_projection_cart<a class=\"headerlink\" href=\"#lambert-equal-area-projection-cart\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.lambert_equal_area_projection_cart\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">lambert_equal_area_projection_cart</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.lambert_equal_area_projection_cart\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Lambert Equal Area Projection from cartesian vector to plane\n\nReturn positions in <span class=\"math notranslate nohighlight\">\\((y_1,y_2)\\)</span> plane corresponding to the\ndirections of the vectors with cartesian coordinates xyz under the\nLambert Equal Area Projection mapping (see Mardia and Jupp (2000),\nDirectional Statistics, p. 161).\n\nThe Lambert EAP maps the upper hemisphere to the planar disc of radius 1\nand the lower hemisphere to the planar annulus between radii 1 and 2,\nThe Lambert EAP maps the upper hemisphere to the planar disc of radius 1\nand the lower hemisphere to the planar annulus between radii 1 and 2.\nand <em>vice versa</em>.\n\nSee doc for <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere2cart</span></code> for angle conventions\n\nParameters\n\u2014\u2014\u2014-\nx : array_like\n   x coordinate in Cartesion space\ny : array_like\n   y coordinate in Cartesian space\nz : array_like\n   z coordinate\n\nReturns\n\u2014\u2014-\ny : (N,2) array\n   planar coordinates of points following mapping by Lambert\u2019s EAP.</p>\n</dd></dl>\n\n</section>\n<section id=\"euler-matrix\">\n<h3>euler_matrix<a class=\"headerlink\" href=\"#euler-matrix\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.euler_matrix\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">euler_matrix</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ai</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">aj</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ak</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'sxyz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.euler_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return homogeneous rotation matrix from Euler angles and axis sequence.</p>\n<p>Code modified from the work of Christoph Gohlke link provided here\n<a class=\"reference external\" href=\"http://www.lfd.uci.edu/~gohlke/code/transformations.py.html\">http://www.lfd.uci.edu/~gohlke/code/transformations.py.html</a></p>\n<section id=\"id29\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id29\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>ai, aj, ak : Euler\u2019s roll, pitch and yaw angles\naxes : One of 24 axis sequences as string or encoded tuple</p>\n</section>\n<section id=\"id30\">\n<h4>Returns<a class=\"headerlink\" href=\"#id30\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>matrix : ndarray (4, 4)</p>\n<p>Code modified from the work of Christoph Gohlke link provided here\n<a class=\"reference external\" href=\"http://www.lfd.uci.edu/~gohlke/code/transformations.py.html\">http://www.lfd.uci.edu/~gohlke/code/transformations.py.html</a></p>\n</section>\n<section id=\"id31\">\n<h4>Examples<a class=\"headerlink\" href=\"#id31\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">euler_matrix</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;syxz&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"o\">-</span><span class=\"mf\">1.34786452</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">euler_matrix</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"o\">-</span><span class=\"mf\">0.383436184</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ai</span><span class=\"p\">,</span> <span class=\"n\">aj</span><span class=\"p\">,</span> <span class=\"n\">ak</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">4.0</span><span class=\"o\">*</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">axes</span> <span class=\"ow\">in</span> <span class=\"n\">_AXES2TUPLE</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>   <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">euler_matrix</span><span class=\"p\">(</span><span class=\"n\">ai</span><span class=\"p\">,</span> <span class=\"n\">aj</span><span class=\"p\">,</span> <span class=\"n\">ak</span><span class=\"p\">,</span> <span class=\"n\">axes</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">axes</span> <span class=\"ow\">in</span> <span class=\"n\">_TUPLE2AXES</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>   <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">euler_matrix</span><span class=\"p\">(</span><span class=\"n\">ai</span><span class=\"p\">,</span> <span class=\"n\">aj</span><span class=\"p\">,</span> <span class=\"n\">ak</span><span class=\"p\">,</span> <span class=\"n\">axes</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"compose-matrix\">\n<h3>compose_matrix<a class=\"headerlink\" href=\"#compose-matrix\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.compose_matrix\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">compose_matrix</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angles</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">perspective</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.compose_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return 4x4 transformation matrix from sequence of\ntransformations.</p>\n<p>Code modified from the work of Christoph Gohlke link provided here\n<a class=\"reference external\" href=\"http://www.lfd.uci.edu/~gohlke/code/transformations.py.html\">http://www.lfd.uci.edu/~gohlke/code/transformations.py.html</a></p>\n<p>This is the inverse of the <code class=\"docutils literal notranslate\"><span class=\"pre\">decompose_matrix</span></code> function.</p>\n<section id=\"id32\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id32\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>scale<span class=\"classifier\">(3,) array_like</span></dt><dd><p>Scaling factors.</p>\n</dd>\n<dt>shear<span class=\"classifier\">array_like</span></dt><dd><p>Shear factors for x-y, x-z, y-z axes.</p>\n</dd>\n<dt>angles<span class=\"classifier\">array_like</span></dt><dd><p>Euler angles about static x, y, z axes.</p>\n</dd>\n<dt>translate<span class=\"classifier\">array_like</span></dt><dd><p>Translation vector along x, y, z axes.</p>\n</dd>\n<dt>perspective<span class=\"classifier\">array_like</span></dt><dd><p>Perspective partition of matrix.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id33\">\n<h4>Returns<a class=\"headerlink\" href=\"#id33\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>matrix : 4x4 array</p>\n</section>\n<section id=\"id34\">\n<h4>Examples<a class=\"headerlink\" href=\"#id34\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy.core.geometry</span> <span class=\"k\">as</span> <span class=\"nn\">gm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shear</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angles</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">trans</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">persp</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">M0</span> <span class=\"o\">=</span> <span class=\"n\">gm</span><span class=\"o\">.</span><span class=\"n\">compose_matrix</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">shear</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"p\">,</span> <span class=\"n\">trans</span><span class=\"p\">,</span> <span class=\"n\">persp</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"decompose-matrix\">\n<h3>decompose_matrix<a class=\"headerlink\" href=\"#decompose-matrix\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.decompose_matrix\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">decompose_matrix</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">matrix</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.decompose_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return sequence of transformations from transformation matrix.</p>\n<p>Code modified from the excellent work of Christoph Gohlke link provided\nhere: <a class=\"reference external\" href=\"http://www.lfd.uci.edu/~gohlke/code/transformations.py.html\">http://www.lfd.uci.edu/~gohlke/code/transformations.py.html</a></p>\n<section id=\"id35\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id35\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>matrix<span class=\"classifier\">array_like</span></dt><dd><p>Non-degenerate homogeneous transformation matrix</p>\n</dd>\n</dl>\n</section>\n<section id=\"id36\">\n<h4>Returns<a class=\"headerlink\" href=\"#id36\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>scale<span class=\"classifier\">(3,) ndarray</span></dt><dd><p>Three scaling factors.</p>\n</dd>\n<dt>shear<span class=\"classifier\">(3,) ndarray</span></dt><dd><p>Shear factors for x-y, x-z, y-z axes.</p>\n</dd>\n<dt>angles<span class=\"classifier\">(3,) ndarray</span></dt><dd><p>Euler angles about static x, y, z axes.</p>\n</dd>\n<dt>translate<span class=\"classifier\">(3,) ndarray</span></dt><dd><p>Translation vector along x, y, z axes.</p>\n</dd>\n<dt>perspective<span class=\"classifier\">ndarray</span></dt><dd><p>Perspective partition of matrix.</p>\n</dd>\n</dl>\n</section>\n<section id=\"raises\">\n<h4>Raises<a class=\"headerlink\" href=\"#raises\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ValueError</dt><dd><p>If matrix is of wrong type or degenerate.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id37\">\n<h4>Examples<a class=\"headerlink\" href=\"#id37\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T0</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">shear</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"p\">,</span> <span class=\"n\">trans</span><span class=\"p\">,</span> <span class=\"n\">persp</span> <span class=\"o\">=</span> <span class=\"n\">decompose_matrix</span><span class=\"p\">(</span><span class=\"n\">T0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"circumradius\">\n<h3>circumradius<a class=\"headerlink\" href=\"#circumradius\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.circumradius\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">circumradius</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">a</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">c</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.circumradius\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>a, b and c are 3-dimensional vectors which are the vertices of a\ntriangle. The function returns the circumradius of the triangle, i.e\nthe radius of the smallest circle that can contain the triangle. In\nthe degenerate case when the 3 points are collinear it returns\nhalf the distance between the furthest apart points.</p>\n<section id=\"id38\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id38\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>a, b, c<span class=\"classifier\">(3,) array_like</span></dt><dd><p>the three vertices of the triangle</p>\n</dd>\n</dl>\n</section>\n<section id=\"id39\">\n<h4>Returns<a class=\"headerlink\" href=\"#id39\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>circumradius<span class=\"classifier\">float</span></dt><dd><p>the desired circumradius</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"vec2vec-rotmat\">\n<h3>vec2vec_rotmat<a class=\"headerlink\" href=\"#vec2vec-rotmat\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.vec2vec_rotmat\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">vec2vec_rotmat</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">u</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.vec2vec_rotmat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>rotation matrix from 2 unit vectors</p>\n<p>u, v being unit 3d vectors return a 3x3 rotation matrix R than aligns u to\nv.</p>\n<p>In general there are many rotations that will map u to v. If S is any\nrotation using v as an axis then R.S will also map u to v since (S.R)u =\nS(Ru) = Sv = v.  The rotation R returned by vec2vec_rotmat leaves fixed the\nperpendicular to the plane spanned by u and v.</p>\n<p>The transpose of R will align v to u.</p>\n<section id=\"id40\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id40\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>u : array, shape(3,)\nv : array, shape(3,)</p>\n</section>\n<section id=\"id41\">\n<h4>Returns<a class=\"headerlink\" href=\"#id41\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>R : array, shape(3,3)</p>\n</section>\n<section id=\"id42\">\n<h4>Examples<a class=\"headerlink\" href=\"#id42\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.geometry</span> <span class=\"kn\">import</span> <span class=\"n\">vec2vec_rotmat</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">R</span><span class=\"o\">=</span><span class=\"n\">vec2vec_rotmat</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">,</span><span class=\"n\">u</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 0.,  1.,  0.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.,  0.,  0.])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"compose-transformations\">\n<h3>compose_transformations<a class=\"headerlink\" href=\"#compose-transformations\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.compose_transformations\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">compose_transformations</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">mats</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.compose_transformations\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compose multiple 4x4 affine transformations in one 4x4 matrix</p>\n<section id=\"id43\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id43\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>mat1 : array, (4, 4)\nmat2 : array, (4, 4)\n\u2026\nmatN : array, (4, 4)</p>\n</section>\n<section id=\"id44\">\n<h4>Returns<a class=\"headerlink\" href=\"#id44\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>matN x \u2026 x mat2 x mat1 : array, (4, 4)</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"perpendicular-directions\">\n<h3>perpendicular_directions<a class=\"headerlink\" href=\"#perpendicular-directions\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.perpendicular_directions\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">perpendicular_directions</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">30</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">half</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.perpendicular_directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes n evenly spaced perpendicular directions relative to a given\nvector v</p>\n<section id=\"id45\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id45\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>v<span class=\"classifier\">array (3,)</span></dt><dd><p>Array containing the three cartesian coordinates of vector v</p>\n</dd>\n<dt>num<span class=\"classifier\">int, optional</span></dt><dd><p>Number of perpendicular directions to generate</p>\n</dd>\n<dt>half<span class=\"classifier\">bool, optional</span></dt><dd><p>If half is True, perpendicular directions are sampled on half of the\nunit circumference perpendicular to v, otherwive perpendicular\ndirections are sampled on the full circumference. Default of half is\nFalse</p>\n</dd>\n</dl>\n</section>\n<section id=\"id46\">\n<h4>Returns<a class=\"headerlink\" href=\"#id46\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>psamples<span class=\"classifier\">array (n, 3)</span></dt><dd><p>array of vectors perpendicular to v</p>\n</dd>\n</dl>\n</section>\n<section id=\"id47\">\n<h4>Notes<a class=\"headerlink\" href=\"#id47\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Perpendicular directions are estimated using the following two step\nprocedure:</p>\n<blockquote>\n<div><p>1) the perpendicular directions are first sampled in a unit\ncircumference parallel to the plane normal to the x-axis.</p>\n<p>2) Samples are then rotated and aligned to the plane normal to vector\nv. The rotational matrix for this rotation is constructed as reference\nframe basis which axis are the following:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>The first axis is vector v</p></li>\n<li><p>The second axis is defined as the normalized vector given by the</p></li>\n</ul>\n<p>cross product between vector v and the unit vector aligned to the\nx-axis\n- The third axis is defined as the cross product between the\nprevious computed vector and vector v.</p>\n</div></blockquote>\n</div></blockquote>\n<p>Following this two steps, coordinates of the final perpendicular directions\nare given as:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\left [ -\\sin(a_{i}) \\sqrt{{v_{y}}^{2}+{v_{z}}^{2}}\n\\; , \\;\n\\frac{v_{x}v_{y}\\sin(a_{i})-v_{z}\\cos(a_{i})}\n{\\sqrt{{v_{y}}^{2}+{v_{z}}^{2}}}\n\\; , \\;\n\\frac{v_{x}v_{z}\\sin(a_{i})-v_{y}\\cos(a_{i})}\n{\\sqrt{{v_{y}}^{2}+{v_{z}}^{2}}} \\right  ]\\]</div>\n<p>This procedure has a singularity when vector v is aligned to the x-axis. To\nsolve this singularity, perpendicular directions in procedure\u2019s step 1 are\ndefined in the plane normal to y-axis and the second axis of the rotated\nframe of reference is computed as the normalized vector given by the cross\nproduct between vector v and the unit vector aligned to the y-axis.\nFollowing this, the coordinates of the perpendicular directions are given\nas:</p>\n<blockquote>\n<div><p>left [ -frac{left (v_{x}v_{y}sin(a_{i})+v_{z}cos(a_{i}) right )}\n{sqrt{{v_{x}}^{2}+{v_{z}}^{2}}}\n; , ;\nsin(a_{i}) sqrt{{v_{x}}^{2}+{v_{z}}^{2}}\n; , ;\nfrac{v_{y}v_{z}sin(a_{i})+v_{x}cos(a_{i})}\n{sqrt{{v_{x}}^{2}+{v_{z}}^{2}}} right  ]</p>\n</div></blockquote>\n<p>For more details on this calculation, see ` here &lt;<a class=\"reference external\" href=\"http://gsoc2015dipydki.blogspot.it/2015/07/rnh-post-8-computing-perpendicular.html\">http://gsoc2015dipydki.blogspot.it/2015/07/rnh-post-8-computing-perpendicular.html</a>&gt;`_.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"dist-to-corner\">\n<h3>dist_to_corner<a class=\"headerlink\" href=\"#dist-to-corner\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.dist_to_corner\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">dist_to_corner</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.dist_to_corner\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the maximal distance from the center to a corner of a voxel,\ngiven an affine</p>\n<section id=\"id48\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id48\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>affine<span class=\"classifier\">4 by 4 array.</span></dt><dd><p>The spatial transformation from the measurement to the scanner space.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id49\">\n<h4>Returns<a class=\"headerlink\" href=\"#id49\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>dist: float</dt><dd><p>The maximal distance to the corner of a voxel, given voxel size encoded\nin the affine.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"is-hemispherical\">\n<h3>is_hemispherical<a class=\"headerlink\" href=\"#is-hemispherical\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.geometry.is_hemispherical\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.geometry.</span></span><span class=\"sig-name descname\"><span class=\"pre\">is_hemispherical</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vecs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.is_hemispherical\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Test whether all points on a unit sphere lie in the same hemisphere.</p>\n<section id=\"id50\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id50\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vecs<span class=\"classifier\">numpy.ndarray</span></dt><dd><p>2D numpy array with shape (N, 3) where N is the number of points.\nAll points must lie on the unit sphere.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id51\">\n<h4>Returns<a class=\"headerlink\" href=\"#id51\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>is_hemi<span class=\"classifier\">bool</span></dt><dd><p>If True, one can find a hemisphere that contains all the points.\nIf False, then the points do not lie in any hemisphere</p>\n</dd>\n<dt>pole<span class=\"classifier\">numpy.ndarray</span></dt><dd><p>If <cite>is_hemi == True</cite>, then pole is the \u201ccentral\u201d pole of the\ninput vectors. Otherwise, pole is the zero vector.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id52\">\n<h4>References<a class=\"headerlink\" href=\"#id52\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p><a class=\"reference external\" href=\"https://rstudio-pubs-static.s3.amazonaws.com/27121_a22e51b47c544980bad594d5e0bb2d04.html\">https://rstudio-pubs-static.s3.amazonaws.com/27121_a22e51b47c544980bad594d5e0bb2d04.html</a>  # noqa</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"gradienttable\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable\" title=\"dipy.core.gradients.GradientTable\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GradientTable</span></code></a><a class=\"headerlink\" href=\"#gradienttable\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.GradientTable\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">GradientTable</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gradients</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">big_delta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">small_delta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">btens</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Diffusion gradient information</p>\n<section id=\"id53\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id53\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gradients<span class=\"classifier\">array_like (N, 3)</span></dt><dd><p>Diffusion gradients. The direction of each of these vectors corresponds\nto the b-vector, and the length corresponds to the b-value.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float</span></dt><dd><p>Gradients with b-value less than or equal to <cite>b0_threshold</cite> are\nconsidered as b0s i.e. without diffusion weighting.</p>\n</dd>\n</dl>\n</section>\n<section id=\"attributes\">\n<h4>Attributes<a class=\"headerlink\" href=\"#attributes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gradients<span class=\"classifier\">(N,3) ndarray</span></dt><dd><p>diffusion gradients</p>\n</dd>\n<dt>bvals<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>The b-value, or magnitude, of each gradient direction.</p>\n</dd>\n<dt>qvals: (N,) ndarray</dt><dd><p>The q-value for each gradient direction. Needs big and small\ndelta.</p>\n</dd>\n<dt>bvecs<span class=\"classifier\">(N,3) ndarray</span></dt><dd><p>The direction, represented as a unit vector, of each gradient.</p>\n</dd>\n<dt>b0s_mask<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>Boolean array indicating which gradients have no diffusion\nweighting, ie b-value is close to 0.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float</span></dt><dd><p>Gradients with b-value less than or equal to <cite>b0_threshold</cite> are\nconsidered to not have diffusion weighting.</p>\n</dd>\n<dt>btens<span class=\"classifier\">(N,3,3) ndarray</span></dt><dd><p>The b-tensor of each gradient direction.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id54\">\n<h4>See Also<a class=\"headerlink\" href=\"#id54\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>gradient_table</p>\n</section>\n<section id=\"id55\">\n<h4>Notes<a class=\"headerlink\" href=\"#id55\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>The GradientTable object is immutable. Do NOT assign attributes.\nIf you have your gradient table in a bval &amp; bvec format, we recommend\nusing the factory function gradient_table</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.GradientTable.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gradients</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">big_delta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">small_delta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">btens</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructor for GradientTable class</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.GradientTable.b0s_mask\">\n<span class=\"sig-name descname\"><span class=\"pre\">b0s_mask</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.b0s_mask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.GradientTable.bvals\">\n<span class=\"sig-name descname\"><span class=\"pre\">bvals</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.bvals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.GradientTable.bvecs\">\n<span class=\"sig-name descname\"><span class=\"pre\">bvecs</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.GradientTable.gradient_strength\">\n<span class=\"sig-name descname\"><span class=\"pre\">gradient_strength</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.gradient_strength\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.GradientTable.info\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">info</span></span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.GradientTable.qvals\">\n<span class=\"sig-name descname\"><span class=\"pre\">qvals</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.qvals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.GradientTable.tau\">\n<span class=\"sig-name descname\"><span class=\"pre\">tau</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.tau\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"logger\">\n<h3>logger<a class=\"headerlink\" href=\"#logger\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.logger\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">logger</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Instances of the Logger class represent a single logging channel. A\n\u201clogging channel\u201d indicates an area of an application. Exactly how an\n\u201carea\u201d is defined is up to the application developer. Since an\napplication can have any number of areas, logging channels are identified\nby a unique string. Application areas can be nested (e.g. an area\nof \u201cinput processing\u201d might include sub-areas \u201cread CSV files\u201d, \u201cread\nXLS files\u201d and \u201cread Gnumeric files\u201d). To cater for this natural nesting,\nchannel names are organized into a namespace hierarchy where levels are\nseparated by periods, much like the Java or Python package namespace. So\nin the instance given above, channel names might be \u201cinput\u201d for the upper\nlevel, and \u201cinput.csv\u201d, \u201cinput.xls\u201d and \u201cinput.gnu\u201d for the sub-levels.\nThere is no arbitrary limit to the depth of nesting.</p>\n</dd></dl>\n\n</section>\n<section id=\"unique-bvals\">\n<h3>unique_bvals<a class=\"headerlink\" href=\"#unique-bvals\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.unique_bvals\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unique_bvals</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bmag</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rbvals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.unique_bvals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function gives the unique rounded b-values of the data\n\ndipy.core.gradients.unique_bvals is deprecated, Please use dipy.core.gradients.unique_bvals_magnitude instead\n\n* deprecated from version: 1.2\n* Raises &lt;class \u2018dipy.utils.deprecator.ExpiredDeprecationError\u2019&gt; as of version: 1.4\n\nParameters\n\u2014\u2014\u2014-\nbvals : ndarray\n    Array containing the b-values\n\nbmag : int\n    The order of magnitude that the bvalues have to differ to be\n    considered an unique b-value. B-values are also rounded up to\n    this order of magnitude. Default: derive this value from the\n    maximal b-value provided: <span class=\"math notranslate nohighlight\">\\(bmag=log_{10}(max(bvals)) - 1\\)</span>.\n\nrbvals : bool, optional\n    If True function also returns all individual rounded b-values.\n    Default: False\n\nReturns\n\u2014\u2014-\nubvals : ndarray\n    Array containing the rounded unique b-values</p>\n</dd></dl>\n\n</section>\n<section id=\"gradient-table-from-bvals-bvecs\">\n<h3>gradient_table_from_bvals_bvecs<a class=\"headerlink\" href=\"#gradient-table-from-bvals-bvecs\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.gradient_table_from_bvals_bvecs\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">gradient_table_from_bvals_bvecs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">atol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">btens</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.gradient_table_from_bvals_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a GradientTable from a bvals array and a bvecs array</p>\n<section id=\"id56\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id56\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bvals<span class=\"classifier\">array_like (N,)</span></dt><dd><p>The b-value, or magnitude, of each gradient direction.</p>\n</dd>\n<dt>bvecs<span class=\"classifier\">array_like (N, 3)</span></dt><dd><p>The direction, represented as a unit vector, of each gradient.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float</span></dt><dd><p>Gradients with b-value less than or equal to <cite>bo_threshold</cite> are\nconsidered to not have diffusion weighting.</p>\n</dd>\n<dt>atol<span class=\"classifier\">float</span></dt><dd><p>Each vector in <cite>bvecs</cite> must be a unit vectors up to a tolerance of\n<cite>atol</cite>.</p>\n</dd>\n<dt>btens<span class=\"classifier\">can be any of three options</span></dt><dd><ol class=\"arabic simple\">\n<li><p>a string specifying the shape of the encoding tensor for all volumes\nin data. Options: \u2018LTE\u2019, \u2018PTE\u2019, \u2018STE\u2019, \u2018CTE\u2019 corresponding to\nlinear, planar, spherical, and \u201ccigar-shaped\u201d tensor encoding.\nTensors are rotated so that linear and cigar tensors are aligned\nwith the corresponding gradient direction and the planar tensor\u2019s\nnormal is aligned with the corresponding gradient direction.\nMagnitude is scaled to match the b-value.</p></li>\n<li><p>an array of strings of shape (N,), (N, 1), or (1, N) specifying\nencoding tensor shape for each volume separately. N corresponds to\nthe number volumes in data. Options for elements in array: \u2018LTE\u2019,\n\u2018PTE\u2019, \u2018STE\u2019, \u2018CTE\u2019 corresponding to linear, planar, spherical, and\n\u201ccigar-shaped\u201d tensor encoding. Tensors are rotated so that linear\nand cigar tensors are aligned with the corresponding gradient\ndirection and the planar tensor\u2019s normal is aligned with the\ncorresponding gradient direction. Magnitude is scaled to match the\nb-value.</p></li>\n<li><p>an array of shape (N,3,3) specifying the b-tensor of each volume\nexactly. N corresponds to the number volumes in data. No rotation or\nscaling is performed.</p></li>\n</ol>\n</dd>\n</dl>\n</section>\n<section id=\"other-parameters\">\n<h4>Other Parameters<a class=\"headerlink\" href=\"#other-parameters\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt><a href=\"#id57\"><span class=\"problematic\" id=\"id58\">**</span></a>kwargs<span class=\"classifier\">dict</span></dt><dd><p>Other keyword inputs are passed to GradientTable.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id59\">\n<h4>Returns<a class=\"headerlink\" href=\"#id59\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gradients<span class=\"classifier\">GradientTable</span></dt><dd><p>A GradientTable with all the gradient information.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id60\">\n<h4>See Also<a class=\"headerlink\" href=\"#id60\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>GradientTable, gradient_table</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"gradient-table-from-qvals-bvecs\">\n<h3>gradient_table_from_qvals_bvecs<a class=\"headerlink\" href=\"#gradient-table-from-qvals-bvecs\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.gradient_table_from_qvals_bvecs\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">gradient_table_from_qvals_bvecs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">qvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">big_delta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">small_delta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">atol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.gradient_table_from_qvals_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A general function for creating diffusion MR gradients.</p>\n<p>It reads, loads and prepares scanner parameters like the b-values and\nb-vectors so that they can be useful during the reconstruction process.</p>\n<section id=\"id61\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id61\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>qvals<span class=\"classifier\">an array of shape (N,),</span></dt><dd><p>q-value given in 1/mm</p>\n</dd>\n</dl>\n<p>bvecs : can be any of two options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>an array of shape (N, 3) or (3, N) with the b-vectors.</p></li>\n<li><p>a path for the file which contains an array like the previous.</p></li>\n</ol>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>big_delta<span class=\"classifier\">float or array of shape (N,)</span></dt><dd><p>acquisition pulse separation time in seconds</p>\n</dd>\n<dt>small_delta<span class=\"classifier\">float</span></dt><dd><p>acquisition pulse duration time in seconds</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float</span></dt><dd><p>All b-values with values less than or equal to <cite>bo_threshold</cite> are\nconsidered as b0s i.e. without diffusion weighting.</p>\n</dd>\n<dt>atol<span class=\"classifier\">float</span></dt><dd><p>All b-vectors need to be unit vectors up to a tolerance.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id62\">\n<h4>Returns<a class=\"headerlink\" href=\"#id62\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gradients<span class=\"classifier\">GradientTable</span></dt><dd><p>A GradientTable with all the gradient information.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id63\">\n<h4>Examples<a class=\"headerlink\" href=\"#id63\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table_from_qvals_bvecs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qvals</span> <span class=\"o\">=</span> <span class=\"mf\">30.</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">big_delta</span> <span class=\"o\">=</span> <span class=\"mf\">.03</span>  <span class=\"c1\"># pulse separation of 30ms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">small_delta</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>  <span class=\"c1\"># pulse duration of 10ms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qvals</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sq2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table_from_qvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">qvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                                     <span class=\"n\">big_delta</span><span class=\"p\">,</span> <span class=\"n\">small_delta</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id64\">\n<h4>Notes<a class=\"headerlink\" href=\"#id64\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<ol class=\"arabic simple\">\n<li><p>Often b0s (b-values which correspond to images without diffusion\nweighting) have 0 values however in some cases the scanner cannot\nprovide b0s of an exact 0 value and it gives a bit higher values\ne.g. 6 or 12. This is the purpose of the b0_threshold in the __init__.</p></li>\n<li><p>We assume that the minimum number of b-values is 7.</p></li>\n<li><p>B-vectors should be unit vectors.</p></li>\n</ol>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"gradient-table-from-gradient-strength-bvecs\">\n<h3>gradient_table_from_gradient_strength_bvecs<a class=\"headerlink\" href=\"#gradient-table-from-gradient-strength-bvecs\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.gradient_table_from_gradient_strength_bvecs\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">gradient_table_from_gradient_strength_bvecs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gradient_strength</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">big_delta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">small_delta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">atol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.gradient_table_from_gradient_strength_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A general function for creating diffusion MR gradients.</p>\n<p>It reads, loads and prepares scanner parameters like the b-values and\nb-vectors so that they can be useful during the reconstruction process.</p>\n<section id=\"id65\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id65\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gradient_strength<span class=\"classifier\">an array of shape (N,),</span></dt><dd><p>gradient strength given in T/mm</p>\n</dd>\n</dl>\n<p>bvecs : can be any of two options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>an array of shape (N, 3) or (3, N) with the b-vectors.</p></li>\n<li><p>a path for the file which contains an array like the previous.</p></li>\n</ol>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>big_delta<span class=\"classifier\">float or array of shape (N,)</span></dt><dd><p>acquisition pulse separation time in seconds</p>\n</dd>\n<dt>small_delta<span class=\"classifier\">float</span></dt><dd><p>acquisition pulse duration time in seconds</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float</span></dt><dd><p>All b-values with values less than or equal to <cite>bo_threshold</cite> are\nconsidered as b0s i.e. without diffusion weighting.</p>\n</dd>\n<dt>atol<span class=\"classifier\">float</span></dt><dd><p>All b-vectors need to be unit vectors up to a tolerance.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id66\">\n<h4>Returns<a class=\"headerlink\" href=\"#id66\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gradients<span class=\"classifier\">GradientTable</span></dt><dd><p>A GradientTable with all the gradient information.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id67\">\n<h4>Examples<a class=\"headerlink\" href=\"#id67\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>   <span class=\"n\">gradient_table_from_gradient_strength_bvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gradient_strength</span> <span class=\"o\">=</span> <span class=\"mf\">.03e-3</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>  <span class=\"c1\"># clinical strength at 30 mT/m</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">big_delta</span> <span class=\"o\">=</span> <span class=\"mf\">.03</span>  <span class=\"c1\"># pulse separation of 30ms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">small_delta</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>  <span class=\"c1\"># pulse duration of 10ms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gradient_strength</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sq2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table_from_gradient_strength_bvecs</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">gradient_strength</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">,</span> <span class=\"n\">big_delta</span><span class=\"p\">,</span> <span class=\"n\">small_delta</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id68\">\n<h4>Notes<a class=\"headerlink\" href=\"#id68\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<ol class=\"arabic simple\">\n<li><p>Often b0s (b-values which correspond to images without diffusion\nweighting) have 0 values however in some cases the scanner cannot\nprovide b0s of an exact 0 value and it gives a bit higher values\ne.g. 6 or 12. This is the purpose of the b0_threshold in the __init__.</p></li>\n<li><p>We assume that the minimum number of b-values is 7.</p></li>\n<li><p>B-vectors should be unit vectors.</p></li>\n</ol>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"gradient-table\">\n<h3>gradient_table<a class=\"headerlink\" href=\"#gradient-table\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.gradient_table\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">gradient_table</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">big_delta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">small_delta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">atol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">btens</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.gradient_table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A general function for creating diffusion MR gradients.</p>\n<p>It reads, loads and prepares scanner parameters like the b-values and\nb-vectors so that they can be useful during the reconstruction process.</p>\n<section id=\"id69\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id69\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>bvals : can be any of the four options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>an array of shape (N,) or (1, N) or (N, 1) with the b-values.</p></li>\n<li><p>a path for the file which contains an array like the above (1).</p></li>\n<li><p>an array of shape (N, 4) or (4, N). Then this parameter is\nconsidered to be a b-table which contains both bvals and bvecs. In\nthis case the next parameter is skipped.</p></li>\n<li><p>a path for the file which contains an array like the one at (3).</p></li>\n</ol>\n</div></blockquote>\n<p>bvecs : can be any of two options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>an array of shape (N, 3) or (3, N) with the b-vectors.</p></li>\n<li><p>a path for the file which contains an array like the previous.</p></li>\n</ol>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>big_delta<span class=\"classifier\">float</span></dt><dd><p>acquisition pulse separation time in seconds (default None)</p>\n</dd>\n<dt>small_delta<span class=\"classifier\">float</span></dt><dd><p>acquisition pulse duration time in seconds (default None)</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float</span></dt><dd><p>All b-values with values less than or equal to <cite>bo_threshold</cite> are\nconsidered as b0s i.e. without diffusion weighting.</p>\n</dd>\n<dt>atol<span class=\"classifier\">float</span></dt><dd><p>All b-vectors need to be unit vectors up to a tolerance.</p>\n</dd>\n</dl>\n<p>btens : can be any of three options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>a string specifying the shape of the encoding tensor for all volumes\nin data. Options: \u2018LTE\u2019, \u2018PTE\u2019, \u2018STE\u2019, \u2018CTE\u2019 corresponding to\nlinear, planar, spherical, and \u201ccigar-shaped\u201d tensor encoding.\nTensors are rotated so that linear and cigar tensors are aligned\nwith the corresponding gradient direction and the planar tensor\u2019s\nnormal is aligned with the corresponding gradient direction.\nMagnitude is scaled to match the b-value.</p></li>\n<li><p>an array of strings of shape (N,), (N, 1), or (1, N) specifying\nencoding tensor shape for each volume separately. N corresponds to\nthe number volumes in data. Options for elements in array: \u2018LTE\u2019,\n\u2018PTE\u2019, \u2018STE\u2019, \u2018CTE\u2019 corresponding to linear, planar, spherical, and\n\u201ccigar-shaped\u201d tensor encoding. Tensors are rotated so that linear\nand cigar tensors are aligned with the corresponding gradient\ndirection and the planar tensor\u2019s normal is aligned with the\ncorresponding gradient direction. Magnitude is scaled to match the\nb-value.</p></li>\n<li><p>an array of shape (N,3,3) specifying the b-tensor of each volume\nexactly. N corresponds to the number volumes in data. No rotation or\nscaling is performed.</p></li>\n</ol>\n</div></blockquote>\n</section>\n<section id=\"id70\">\n<h4>Returns<a class=\"headerlink\" href=\"#id70\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gradients<span class=\"classifier\">GradientTable</span></dt><dd><p>A GradientTable with all the gradient information.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id71\">\n<h4>Examples<a class=\"headerlink\" href=\"#id71\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span> <span class=\"o\">=</span> <span class=\"mi\">1500</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sq2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id72\">\n<h4>Notes<a class=\"headerlink\" href=\"#id72\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<ol class=\"arabic simple\">\n<li><p>Often b0s (b-values which correspond to images without diffusion\nweighting) have 0 values however in some cases the scanner cannot\nprovide b0s of an exact 0 value and it gives a bit higher values\ne.g. 6 or 12. This is the purpose of the b0_threshold in the __init__.</p></li>\n<li><p>We assume that the minimum number of b-values is 7.</p></li>\n<li><p>B-vectors should be unit vectors.</p></li>\n</ol>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"reorient-bvecs\">\n<h3>reorient_bvecs<a class=\"headerlink\" href=\"#reorient-bvecs\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.reorient_bvecs\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">reorient_bvecs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">atol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.reorient_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reorient the directions in a GradientTable.</p>\n<p>When correcting for motion, rotation of the diffusion-weighted volumes\nmight cause systematic bias in rotationally invariant measures, such as FA\nand MD, and also cause characteristic biases in tractography, unless the\ngradient directions are appropriately reoriented to compensate for this\neffect <a class=\"reference internal\" href=\"#leemans2009\" id=\"id73\"><span>[Leemans2009]</span></a>.</p>\n<section id=\"id74\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id74\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gtab<span class=\"classifier\">GradientTable</span></dt><dd><p>The nominal gradient table with which the data were acquired.</p>\n</dd>\n<dt>affines<span class=\"classifier\">list or ndarray of shape (n, 4, 4) or (n, 3, 3)</span></dt><dd><p>Each entry in this list or array contain either an affine\ntransformation (4,4) or a rotation matrix (3, 3).\nIn both cases, the transformations encode the rotation that was applied\nto the image corresponding to one of the non-zero gradient directions\n(ordered according to their order in <cite>gtab.bvecs[~gtab.b0s_mask]</cite>)</p>\n</dd>\n</dl>\n<p>atol: see gradient_table()</p>\n</section>\n<section id=\"id75\">\n<h4>Returns<a class=\"headerlink\" href=\"#id75\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>gtab : a GradientTable class instance with the reoriented directions</p>\n</section>\n<section id=\"id76\">\n<h4>References<a class=\"headerlink\" href=\"#id76\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"leemans2009\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id73\">Leemans2009</a><span class=\"fn-bracket\">]</span></span>\n<p>The B-Matrix Must Be Rotated When Correcting for\nSubject Motion in DTI Data. Leemans, A. and Jones, D.K. (2009).\nMRM, 61: 1336-1349</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"generate-bvecs\">\n<h3>generate_bvecs<a class=\"headerlink\" href=\"#generate-bvecs\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.generate_bvecs\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">generate_bvecs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">N</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iters</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">5000</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.generate_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generates N bvectors.</p>\n<p>Uses dipy.core.sphere.disperse_charges to model electrostatic repulsion on\na unit sphere.</p>\n<section id=\"id77\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id77\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>N<span class=\"classifier\">int</span></dt><dd><p>The number of bvectors to generate. This should be equal to the number\nof bvals used.</p>\n</dd>\n<dt>iters<span class=\"classifier\">int</span></dt><dd><p>Number of iterations to run.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id78\">\n<h4>Returns<a class=\"headerlink\" href=\"#id78\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bvecs<span class=\"classifier\">(N,3) ndarray</span></dt><dd><p>The generated directions, represented as a unit vector, of each\ngradient.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"round-bvals\">\n<h3>round_bvals<a class=\"headerlink\" href=\"#round-bvals\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.round_bvals\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">round_bvals</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bmag</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.round_bvals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>\u201cThis function rounds the b-values\n\nParameters\n\u2014\u2014\u2014-\nbvals : ndarray\n    Array containing the b-values\n\nbmag : int\n    The order of magnitude to round the b-values. If not given b-values\n    will be rounded relative to the order of magnitude\n    <span class=\"math notranslate nohighlight\">\\(bmag = (bmagmax - 1)\\)</span>, where bmaxmag is the magnitude order of the\n    larger b-value.\n\nReturns\n\u2014\u2014-\nrbvals : ndarray\n    Array containing the rounded b-values</p>\n</dd></dl>\n\n</section>\n<section id=\"unique-bvals-tolerance\">\n<h3>unique_bvals_tolerance<a class=\"headerlink\" href=\"#unique-bvals-tolerance\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.unique_bvals_tolerance\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unique_bvals_tolerance</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.unique_bvals_tolerance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gives the unique b-values of the data, within a tolerance gap</p>\n<p>The b-values must be regrouped in clusters easily separated by a\ndistance greater than the tolerance gap. If all the b-values of a\ncluster fit within the tolerance gap, the highest b-value is kept.</p>\n<section id=\"id79\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id79\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bvals<span class=\"classifier\">ndarray</span></dt><dd><p>Array containing the b-values</p>\n</dd>\n<dt>tol<span class=\"classifier\">int</span></dt><dd><p>The tolerated gap between the b-values to extract\nand the actual b-values.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id80\">\n<h4>Returns<a class=\"headerlink\" href=\"#id80\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ubvals<span class=\"classifier\">ndarray</span></dt><dd><p>Array containing the unique b-values using the median value\nfor each cluster</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"get-bval-indices\">\n<h3>get_bval_indices<a class=\"headerlink\" href=\"#get-bval-indices\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.get_bval_indices\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">get_bval_indices</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bval</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.get_bval_indices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get indices where the b-value is <cite>bval</cite></p>\n<section id=\"id81\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id81\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bvals: ndarray</dt><dd><p>Array containing the b-values</p>\n</dd>\n<dt>bval: float or int</dt><dd><p>b-value to extract indices</p>\n</dd>\n<dt>tol: int</dt><dd><p>The tolerated gap between the b-values to extract\nand the actual b-values.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id82\">\n<h4>Returns<a class=\"headerlink\" href=\"#id82\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Array of indices where the b-value is <cite>bval</cite></p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"unique-bvals-magnitude\">\n<h3>unique_bvals_magnitude<a class=\"headerlink\" href=\"#unique-bvals-magnitude\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.unique_bvals_magnitude\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unique_bvals_magnitude</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bmag</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rbvals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.unique_bvals_magnitude\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function gives the unique rounded b-values of the data\n\nParameters\n\u2014\u2014\u2014-\nbvals : ndarray\n    Array containing the b-values\n\nbmag : int\n    The order of magnitude that the bvalues have to differ to be\n    considered an unique b-value. B-values are also rounded up to\n    this order of magnitude. Default: derive this value from the\n    maximal b-value provided: <span class=\"math notranslate nohighlight\">\\(bmag=log_{10}(max(bvals)) - 1\\)</span>.\n\nrbvals : bool, optional\n    If True function also returns all individual rounded b-values.\n    Default: False\n\nReturns\n\u2014\u2014-\nubvals : ndarray\n    Array containing the rounded unique b-values</p>\n</dd></dl>\n\n</section>\n<section id=\"check-multi-b\">\n<h3>check_multi_b<a class=\"headerlink\" href=\"#check-multi-b\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.check_multi_b\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">check_multi_b</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_zero</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bmag</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.check_multi_b\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if you have enough different b-values in your gradient table\n\nParameters\n\u2014\u2014\u2014-\ngtab : GradientTable class instance.\n\nn_bvals : int\n    The number of different b-values you are checking for.\nnon_zero : bool\n    Whether to check only non-zero bvalues. In this case, we will require\n    at least <cite>n_bvals</cite> <em>non-zero</em> b-values (where non-zero is defined\n    depending on the <cite>gtab</cite> object\u2019s <cite>b0_threshold</cite> attribute)\nbmag : int\n    The order of magnitude of the b-values used. The function will\n    normalize the b-values relative <span class=\"math notranslate nohighlight\">\\(10^{bmag}\\)</span>. Default: derive this\n    value from the maximal b-value provided:\n    <span class=\"math notranslate nohighlight\">\\(bmag=log_{10}(max(bvals)) - 1\\)</span>.\n\nReturns\n\u2014\u2014-\nbool : Whether there are at least <cite>n_bvals</cite> different b-values in the\ngradient table used.</p>\n</dd></dl>\n\n</section>\n<section id=\"btens-to-params\">\n<h3>btens_to_params<a class=\"headerlink\" href=\"#btens-to-params\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.btens_to_params\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">btens_to_params</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">btens</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ztol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-10</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.btens_to_params\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute trace, anisotropy and asymmetry parameters from b-tensors.</p>\n<section id=\"id83\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id83\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>btens<span class=\"classifier\">(3, 3) OR (N, 3, 3) numpy.ndarray</span></dt><dd><p>input b-tensor, or b-tensors, where N = number of b-tensors</p>\n</dd>\n<dt>ztol<span class=\"classifier\">float</span></dt><dd><p>Any parameters smaller than this value are considered to be 0</p>\n</dd>\n</dl>\n</section>\n<section id=\"id84\">\n<h4>Returns<a class=\"headerlink\" href=\"#id84\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bval: numpy.ndarray</dt><dd><p>b-value(s) (trace(s))</p>\n</dd>\n<dt>bdelta: numpy.ndarray</dt><dd><p>normalized tensor anisotropy(s)</p>\n</dd>\n<dt>b_eta: numpy.ndarray</dt><dd><p>tensor asymmetry(s)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id85\">\n<h4>Notes<a class=\"headerlink\" href=\"#id85\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>This function can be used to get b-tensor parameters directly from the\nGradientTable <cite>btens</cite> attribute.</p>\n</section>\n<section id=\"id86\">\n<h4>Examples<a class=\"headerlink\" href=\"#id86\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lte</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bval</span><span class=\"p\">,</span> <span class=\"n\">bdelta</span><span class=\"p\">,</span> <span class=\"n\">b_eta</span> <span class=\"o\">=</span> <span class=\"n\">btens_to_params</span><span class=\"p\">(</span><span class=\"n\">lte</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;bval=</span><span class=\"si\">{}</span><span class=\"s2\">; bdelta=</span><span class=\"si\">{}</span><span class=\"s2\">; b_eta=</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">bdelta</span><span class=\"p\">,</span> <span class=\"n\">bval</span><span class=\"p\">,</span> <span class=\"n\">b_eta</span><span class=\"p\">))</span>\n<span class=\"go\">bval=[ 1.]; bdelta=[ 1.]; b_eta=[ 0.]</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"params-to-btens\">\n<h3>params_to_btens<a class=\"headerlink\" href=\"#params-to-btens\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.params_to_btens\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">params_to_btens</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bval</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bdelta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b_eta</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.params_to_btens\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute b-tensor from trace, anisotropy and asymmetry parameters.</p>\n<section id=\"id87\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id87\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bval: int or float</dt><dd><p>b-value (&gt;= 0)</p>\n</dd>\n<dt>bdelta: int or float</dt><dd><p>normalized tensor anisotropy (&gt;= -0.5 and &lt;= 1)</p>\n</dd>\n<dt>b_eta: int or float</dt><dd><p>tensor asymmetry (&gt;= 0 and &lt;= 1)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id88\">\n<h4>Returns<a class=\"headerlink\" href=\"#id88\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>(3, 3) numpy.ndarray</dt><dd><p>output b-tensor</p>\n</dd>\n</dl>\n</section>\n<section id=\"id89\">\n<h4>Notes<a class=\"headerlink\" href=\"#id89\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Implements eq. 7.11. p. 231 in [1].</p>\n</section>\n<section id=\"id90\">\n<h4>References<a class=\"headerlink\" href=\"#id90\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id91\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<ol class=\"upperalpha simple\" start=\"4\">\n<li><p>Topgaard, NMR methods for studying microscopic diffusion</p></li>\n</ol>\n</aside>\n</aside>\n<p>anisotropy, in: R. Valiullin (Ed.), Diffusion NMR of Confined Systems: Fluid\nTransport in Porous Solids and Heterogeneous Materials, Royal Society of\nChemistry, Cambridge, UK, 2016.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"ornt-mapping\">\n<h3>ornt_mapping<a class=\"headerlink\" href=\"#ornt-mapping\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.ornt_mapping\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ornt_mapping</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ornt1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ornt2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.ornt_mapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the mapping needing to get from orn1 to orn2.</p>\n</dd></dl>\n\n</section>\n<section id=\"reorient-vectors\">\n<h3>reorient_vectors<a class=\"headerlink\" href=\"#reorient-vectors\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.reorient_vectors\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">reorient_vectors</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">current_ornt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_ornt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.reorient_vectors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Change the orientation of gradients or other vectors.</p>\n<p>Moves vectors, storted along axis, from current_ornt to new_ornt. For\nexample the vector [x, y, z] in \u201cRAS\u201d will be [-x, -y, z] in \u201cLPS\u201d.</p>\n<p>R: Right\nA: Anterior\nS: Superior\nL: Left\nP: Posterior\nI: Inferior</p>\n</dd></dl>\n\n</section>\n<section id=\"reorient-on-axis\">\n<h3>reorient_on_axis<a class=\"headerlink\" href=\"#reorient-on-axis\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.reorient_on_axis\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">reorient_on_axis</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">current_ornt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_ornt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.reorient_on_axis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"orientation-from-string\">\n<h3>orientation_from_string<a class=\"headerlink\" href=\"#orientation-from-string\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.orientation_from_string\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">orientation_from_string</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">string_ornt</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.orientation_from_string\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return an array representation of an ornt string.</p>\n</dd></dl>\n\n</section>\n<section id=\"orientation-to-string\">\n<h3>orientation_to_string<a class=\"headerlink\" href=\"#orientation-to-string\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.gradients.orientation_to_string\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">orientation_to_string</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ornt</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.orientation_to_string\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a string representation of a 3d ornt.</p>\n</dd></dl>\n\n</section>\n<section id=\"graph\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.graph.Graph\" title=\"dipy.core.graph.Graph\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Graph</span></code></a><a class=\"headerlink\" href=\"#graph\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.graph.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Graph</span></span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>A simple graph class</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A graph class with nodes and edges :-)</p>\n<p>This class allows us to:</p>\n<ol class=\"arabic simple\">\n<li><p>find the shortest path</p></li>\n<li><p>find all paths</p></li>\n<li><p>add/delete nodes and edges</p></li>\n<li><p>get parent &amp; children nodes</p></li>\n</ol>\n<section id=\"id92\">\n<h4>Examples<a class=\"headerlink\" href=\"#id92\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.graph</span> <span class=\"kn\">import</span> <span class=\"n\">Graph</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">=</span><span class=\"n\">Graph</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s1\">&#39;c&#39;</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s1\">&#39;d&#39;</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;c&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s1\">&#39;c&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;d&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;d&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">up_short</span><span class=\"p\">(</span><span class=\"s1\">&#39;d&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;d&#39;, &#39;b&#39;, &#39;a&#39;]</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.add_edge\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_edge</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">m</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ws</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">wp</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.add_edge\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.add_node\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_node</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">attr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.add_node\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.all_paths\">\n<span class=\"sig-name descname\"><span class=\"pre\">all_paths</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">graph</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.all_paths\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.children\">\n<span class=\"sig-name descname\"><span class=\"pre\">children</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.children\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.del_node\">\n<span class=\"sig-name descname\"><span class=\"pre\">del_node</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.del_node\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.del_node_and_edges\">\n<span class=\"sig-name descname\"><span class=\"pre\">del_node_and_edges</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.del_node_and_edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.down\">\n<span class=\"sig-name descname\"><span class=\"pre\">down</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.down\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.down_short\">\n<span class=\"sig-name descname\"><span class=\"pre\">down_short</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.down_short\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.parents\">\n<span class=\"sig-name descname\"><span class=\"pre\">parents</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.parents\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.shortest_path\">\n<span class=\"sig-name descname\"><span class=\"pre\">shortest_path</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">graph</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.shortest_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.up\">\n<span class=\"sig-name descname\"><span class=\"pre\">up</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.up\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.graph.Graph.up_short\">\n<span class=\"sig-name descname\"><span class=\"pre\">up_short</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.up_short\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"histeq\">\n<h3>histeq<a class=\"headerlink\" href=\"#histeq\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.histeq.histeq\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.histeq.</span></span><span class=\"sig-name descname\"><span class=\"pre\">histeq</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">arr</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_bins</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">256</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.histeq.histeq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs an histogram equalization on <code class=\"docutils literal notranslate\"><span class=\"pre\">arr</span></code>.\nThis was taken from:\n<a class=\"reference external\" href=\"http://www.janeriksolem.net/2009/06/histogram-equalization-with-python-and.html\">http://www.janeriksolem.net/2009/06/histogram-equalization-with-python-and.html</a></p>\n<section id=\"id93\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id93\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>arr<span class=\"classifier\">ndarray</span></dt><dd><p>Image on which to perform histogram equalization.</p>\n</dd>\n<dt>num_bins<span class=\"classifier\">int</span></dt><dd><p>Number of bins used to construct the histogram.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id94\">\n<h4>Returns<a class=\"headerlink\" href=\"#id94\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>result<span class=\"classifier\">ndarray</span></dt><dd><p>Histogram equalized image.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"ndindex\">\n<h3>ndindex<a class=\"headerlink\" href=\"#ndindex\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.ndindex.ndindex\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.ndindex.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ndindex</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shape</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.ndindex.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<section id=\"id95\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id95\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>The dimensions of the array.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id96\">\n<h4>Examples<a class=\"headerlink\" href=\"#id96\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"kn\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"resetmixin\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.onetime.ResetMixin\" title=\"dipy.core.onetime.ResetMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResetMixin</span></code></a><a class=\"headerlink\" href=\"#resetmixin\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.onetime.ResetMixin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.onetime.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ResetMixin</span></span><a class=\"headerlink\" href=\"#dipy.core.onetime.ResetMixin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>A Mixin class to add a .reset() method to users of OneTimeProperty.</p>\n<p>By default, auto attributes once computed, become static.  If they happen\nto depend on other parts of an object and those parts change, their values\nmay now be invalid.</p>\n<p>This class offers a .reset() method that users can call <em>explicitly</em> when\nthey know the state of their objects may have changed and they want to\nensure that <em>all</em> their special attributes should be invalidated.  Once\nreset() is called, all their auto attributes are reset to their\nOneTimeProperty descriptors, and their accessor functions will be triggered\nagain.</p>\n<div class=\"admonition warning\">\n<p class=\"admonition-title\">Warning</p>\n<p>If a class has a set of attributes that are OneTimeProperty, but that\ncan be initialized from any one of them, do NOT use this mixin!  For\ninstance, UniformTimeSeries can be initialized with only sampling_rate\nand t0, sampling_interval and time are auto-computed.  But if you were\nto reset() a UniformTimeSeries, it would lose all 4, and there would be\nthen no way to break the circular dependency chains.</p>\n<p>If this becomes a problem in practice (for our analyzer objects it\nisn\u2019t, as they don\u2019t have the above pattern), we can extend reset() to\ncheck for a _no_reset set of names in the instance which are meant to be\nkept protected.  But for now this is NOT done, so caveat emptor.</p>\n</div>\n<section id=\"id97\">\n<h4>Examples<a class=\"headerlink\" href=\"#id97\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">(</span><span class=\"n\">ResetMixin</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;*** y computation executed ***&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span>\n<span class=\"gp\">...</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">A</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>About to access y twice, the second time no computation is done:\n&gt;&gt;&gt; a.y\n<strong>* y computation executed *</strong>\n5.0\n&gt;&gt;&gt; a.y\n5.0</p>\n<p>Changing x\n&gt;&gt;&gt; a.x = 20</p>\n<p>a.y doesn\u2019t change to 10, since it is a static attribute:\n&gt;&gt;&gt; a.y\n5.0</p>\n<p>We now reset a, and this will then force all auto attributes to recompute\nthe next time we access them:\n&gt;&gt;&gt; a.reset()</p>\n<p>About to access y twice again after reset():\n&gt;&gt;&gt; a.y\n<strong>* y computation executed *</strong>\n10.0\n&gt;&gt;&gt; a.y\n10.0</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.onetime.ResetMixin.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.ResetMixin.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.onetime.ResetMixin.reset\">\n<span class=\"sig-name descname\"><span class=\"pre\">reset</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.ResetMixin.reset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reset all OneTimeProperty attributes that may have fired already.</p>\n</dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"onetimeproperty\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.onetime.OneTimeProperty\" title=\"dipy.core.onetime.OneTimeProperty\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OneTimeProperty</span></code></a><a class=\"headerlink\" href=\"#onetimeproperty\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.onetime.OneTimeProperty\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.onetime.</span></span><span class=\"sig-name descname\"><span class=\"pre\">OneTimeProperty</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">func</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.OneTimeProperty\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>A descriptor to make special properties that become normal attributes.</p>\n<p>This is meant to be used mostly by the auto_attr decorator in this module.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.onetime.OneTimeProperty.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">func</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.OneTimeProperty.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a OneTimeProperty instance.</p>\n<section id=\"id98\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id98\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<blockquote>\n<div><p>func : method</p>\n<p>The method that will be called the first time to compute a value.\nAfterwards, the method\u2019s name will be a standard attribute holding\nthe value of this computation.</p>\n</div></blockquote>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"auto-attr\">\n<h3>auto_attr<a class=\"headerlink\" href=\"#auto-attr\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.onetime.auto_attr\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.onetime.</span></span><span class=\"sig-name descname\"><span class=\"pre\">auto_attr</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">func</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.auto_attr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator to create OneTimeProperty attributes.</p>\n<section id=\"id99\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id99\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<blockquote>\n<div><dl class=\"simple\">\n<dt>func<span class=\"classifier\">method</span></dt><dd><p>The method that will be called the first time to compute a value.\nAfterwards, the method\u2019s name will be a standard attribute holding the\nvalue of this computation.</p>\n</dd>\n</dl>\n</div></blockquote>\n</section>\n<section id=\"id100\">\n<h4>Examples<a class=\"headerlink\" href=\"#id100\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MagicProp</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">99</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MagicProp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"go\">99</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"optimizer\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer\" title=\"dipy.core.optimize.Optimizer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Optimizer</span></code></a><a class=\"headerlink\" href=\"#optimizer\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.Optimizer\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.optimize.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Optimizer</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fun</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'L-BFGS-B'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">jac</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hess</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hessp</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bounds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">constraints</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">callback</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">options</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evolution</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.Optimizer.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fun</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'L-BFGS-B'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">jac</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hess</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hessp</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bounds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">constraints</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">callback</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">options</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evolution</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A class for handling minimization of scalar function of one or more\nvariables.</p>\n<section id=\"id101\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id101\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>fun<span class=\"classifier\">callable</span></dt><dd><p>Objective function.</p>\n</dd>\n<dt>x0<span class=\"classifier\">ndarray</span></dt><dd><p>Initial guess.</p>\n</dd>\n<dt>args<span class=\"classifier\">tuple, optional</span></dt><dd><p>Extra arguments passed to the objective function and its\nderivatives (Jacobian, Hessian).</p>\n</dd>\n<dt>method<span class=\"classifier\">str, optional</span></dt><dd><p>Type of solver.  Should be one of</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>\u2018Nelder-Mead\u2019</p></li>\n<li><p>\u2018Powell\u2019</p></li>\n<li><p>\u2018CG\u2019</p></li>\n<li><p>\u2018BFGS\u2019</p></li>\n<li><p>\u2018Newton-CG\u2019</p></li>\n<li><p>\u2018Anneal\u2019</p></li>\n<li><p>\u2018L-BFGS-B\u2019</p></li>\n<li><p>\u2018TNC\u2019</p></li>\n<li><p>\u2018COBYLA\u2019</p></li>\n<li><p>\u2018SLSQP\u2019</p></li>\n<li><p>\u2018dogleg\u2019</p></li>\n<li><p>\u2018trust-ncg\u2019</p></li>\n</ul>\n</div></blockquote>\n</dd>\n<dt>jac<span class=\"classifier\">bool or callable, optional</span></dt><dd><p>Jacobian of objective function. Only for CG, BFGS, Newton-CG,\ndogleg, trust-ncg.\nIf <cite>jac</cite> is a Boolean and is True, <cite>fun</cite> is assumed to return the\nvalue of Jacobian along with the objective function. If False, the\nJacobian will be estimated numerically.\n<cite>jac</cite> can also be a callable returning the Jacobian of the\nobjective. In this case, it must accept the same arguments\nas <cite>fun</cite>.</p>\n</dd>\n<dt>hess, hessp<span class=\"classifier\">callable, optional</span></dt><dd><p>Hessian of objective function or Hessian of objective function\ntimes an arbitrary vector p.  Only for Newton-CG,\ndogleg, trust-ncg.\nOnly one of <cite>hessp</cite> or <cite>hess</cite> needs to be given.  If <cite>hess</cite> is\nprovided, then <cite>hessp</cite> will be ignored.  If neither <cite>hess</cite> nor\n<cite>hessp</cite> is provided, then the hessian product will be approximated\nusing finite differences on <cite>jac</cite>. <cite>hessp</cite> must compute the Hessian\ntimes an arbitrary vector.</p>\n</dd>\n<dt>bounds<span class=\"classifier\">sequence, optional</span></dt><dd><p>Bounds for variables (only for L-BFGS-B, TNC and SLSQP).\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(min,</span> <span class=\"pre\">max)</span></code> pairs for each element in <code class=\"docutils literal notranslate\"><span class=\"pre\">x</span></code>, defining\nthe bounds on that parameter. Use None for one of <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">max</span></code> when there is no bound in that direction.</p>\n</dd>\n<dt>constraints<span class=\"classifier\">dict or sequence of dict, optional</span></dt><dd><p>Constraints definition (only for COBYLA and SLSQP).\nEach constraint is defined in a dictionary with fields:</p>\n<blockquote>\n<div><dl class=\"simple\">\n<dt>type<span class=\"classifier\">str</span></dt><dd><p>Constraint type: \u2018eq\u2019 for equality, \u2018ineq\u2019 for inequality.</p>\n</dd>\n<dt>fun<span class=\"classifier\">callable</span></dt><dd><p>The function defining the constraint.</p>\n</dd>\n<dt>jac<span class=\"classifier\">callable, optional</span></dt><dd><p>The Jacobian of <cite>fun</cite> (only for SLSQP).</p>\n</dd>\n<dt>args<span class=\"classifier\">sequence, optional</span></dt><dd><p>Extra arguments to be passed to the function and Jacobian.</p>\n</dd>\n</dl>\n</div></blockquote>\n<p>Equality constraint means that the constraint function result is to\nbe zero whereas inequality means that it is to be non-negative.\nNote that COBYLA only supports inequality constraints.</p>\n</dd>\n<dt>tol<span class=\"classifier\">float, optional</span></dt><dd><p>Tolerance for termination. For detailed control, use\nsolver-specific options.</p>\n</dd>\n<dt>callback<span class=\"classifier\">callable, optional</span></dt><dd><p>Called after each iteration, as <code class=\"docutils literal notranslate\"><span class=\"pre\">callback(xk)</span></code>, where <code class=\"docutils literal notranslate\"><span class=\"pre\">xk</span></code> is\nthe current parameter vector. Only available using Scipy &gt;= 0.12.</p>\n</dd>\n<dt>options<span class=\"classifier\">dict, optional</span></dt><dd><p>A dictionary of solver options. All methods accept the following\ngeneric options:</p>\n<blockquote>\n<div><dl class=\"simple\">\n<dt>maxiter<span class=\"classifier\">int</span></dt><dd><p>Maximum number of iterations to perform.</p>\n</dd>\n<dt>disp<span class=\"classifier\">bool</span></dt><dd><p>Set to True to print convergence messages.</p>\n</dd>\n</dl>\n</div></blockquote>\n<p>For method-specific options, see\n<cite>show_options(\u2018minimize\u2019, method)</cite>.</p>\n</dd>\n<dt>evolution<span class=\"classifier\">bool, optional</span></dt><dd><p>save history of x for each iteration. Only available using Scipy\n&gt;= 0.12.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id102\">\n<h4>See Also<a class=\"headerlink\" href=\"#id102\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>scipy.optimize.minimize</p>\n</section>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.Optimizer.evolution\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">evolution</span></span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.evolution\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.Optimizer.fopt\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">fopt</span></span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.fopt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.Optimizer.message\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">message</span></span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.Optimizer.nfev\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">nfev</span></span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.nfev\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.Optimizer.nit\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">nit</span></span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.nit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.Optimizer.print_summary\">\n<span class=\"sig-name descname\"><span class=\"pre\">print_summary</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.print_summary\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.Optimizer.xopt\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">xopt</span></span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.xopt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"sklearnlinearsolver\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver\" title=\"dipy.core.optimize.SKLearnLinearSolver\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SKLearnLinearSolver</span></code></a><a class=\"headerlink\" href=\"#sklearnlinearsolver\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.SKLearnLinearSolver\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.optimize.</span></span><span class=\"sig-name descname\"><span class=\"pre\">SKLearnLinearSolver</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.SKLearnLinearSolver\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Provide a sklearn-like uniform interface to algorithms that solve problems\nof the form: <span class=\"math notranslate nohighlight\">\\(y = Ax\\)</span> for <span class=\"math notranslate nohighlight\">\\(x\\)</span>\n\nSub-classes of SKLearnLinearSolver should provide a \u2018fit\u2019 method that have\nthe following signature: <cite>SKLearnLinearSolver.fit(X, y)</cite>, which would set\nan attribute <cite>SKLearnLinearSolver.coef_</cite>, with the shape (X.shape[1],),\nsuch that an estimate of y can be calculated as:\n<cite>y_hat = np.dot(X, SKLearnLinearSolver.coef_.T)</cite></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.SKLearnLinearSolver.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.SKLearnLinearSolver.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.SKLearnLinearSolver.fit\">\n<em class=\"property\"><span class=\"pre\">abstract</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">fit</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">X</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.SKLearnLinearSolver.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Implement for all derived classes</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.SKLearnLinearSolver.predict\">\n<span class=\"sig-name descname\"><span class=\"pre\">predict</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">X</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.SKLearnLinearSolver.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict using the result of the model</p>\n<section id=\"id103\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id103\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>X<span class=\"classifier\">array-like (n_samples, n_features)</span></dt><dd><p>Samples.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id104\">\n<h4>Returns<a class=\"headerlink\" href=\"#id104\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>C<span class=\"classifier\">array, shape = (n_samples,)</span></dt><dd><p>Predicted values.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"nonnegativeleastsquares\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.optimize.NonNegativeLeastSquares\" title=\"dipy.core.optimize.NonNegativeLeastSquares\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NonNegativeLeastSquares</span></code></a><a class=\"headerlink\" href=\"#nonnegativeleastsquares\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.NonNegativeLeastSquares\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.optimize.</span></span><span class=\"sig-name descname\"><span class=\"pre\">NonNegativeLeastSquares</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.NonNegativeLeastSquares\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver\" title=\"dipy.core.optimize.SKLearnLinearSolver\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SKLearnLinearSolver</span></code></a></p>\n<p>A sklearn-like interface to scipy.optimize.nnls</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.NonNegativeLeastSquares.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.NonNegativeLeastSquares.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.NonNegativeLeastSquares.fit\">\n<span class=\"sig-name descname\"><span class=\"pre\">fit</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">X</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.NonNegativeLeastSquares.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit the NonNegativeLeastSquares linear model to data</p>\n<section id=\"id105\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id105\" title=\"Permalink to this heading\">\u00b6</a></h4>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"positivedefiniteleastsquares\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.optimize.PositiveDefiniteLeastSquares\" title=\"dipy.core.optimize.PositiveDefiniteLeastSquares\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PositiveDefiniteLeastSquares</span></code></a><a class=\"headerlink\" href=\"#positivedefiniteleastsquares\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.PositiveDefiniteLeastSquares\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.optimize.</span></span><span class=\"sig-name descname\"><span class=\"pre\">PositiveDefiniteLeastSquares</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">m</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">A</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">L</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.PositiveDefiniteLeastSquares\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.PositiveDefiniteLeastSquares.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">m</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">A</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">L</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.PositiveDefiniteLeastSquares.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Regularized least squares with linear matrix inequality constraints\n\nGenerate a CVXPY representation of a regularized least squares\noptimization problem subject to linear matrix inequality constraints.\n\nParameters\n\u2014\u2014\u2014-\nm : int\n    Positive int indicating the number of regressors.\nA : array (t = m + k + 1, p, p) (optional)\n    Constraint matrices <span class=\"math notranslate nohighlight\">\\(A\\)</span>.\nL : array (m, m) (optional)\n    Regularization matrix <span class=\"math notranslate nohighlight\">\\(L\\)</span>.\n    Default: None.\n\nNotes\n\u2014\u2013\nThe basic problem is to solve for <span class=\"math notranslate nohighlight\">\\(h\\)</span> the minimization of\n\n<span class=\"math notranslate nohighlight\">\\(c=\\|X h - y\\|^2 + \\|L h\\|^2\\)</span>,\n\nwhere <span class=\"math notranslate nohighlight\">\\(X\\)</span> is an (m, m) upper triangular design matrix and <span class=\"math notranslate nohighlight\">\\(y\\)</span> is a set\nof m measurements, subject to the constraint that\n\n<span class=\"math notranslate nohighlight\">\\(M=A_0+\\sum_{i=0}^{m-1} h_i A_{i+1}+\\sum_{j=0}^{k-1} s_j A_{m+j+1}&gt;0\\)</span>,\n\nwhere <span class=\"math notranslate nohighlight\">\\(s_j\\)</span> are slack variables and where the inequality sign denotes\npositive definiteness of the matrix <span class=\"math notranslate nohighlight\">\\(M\\)</span>. The sparsity pattern and size\nof <span class=\"math notranslate nohighlight\">\\(X\\)</span> and <span class=\"math notranslate nohighlight\">\\(y\\)</span> are fixed, because every design matrix and set of\nmeasurements can be reduced to an equivalent (minimal) formulation of\nthis type.\n\nThis formulation is used here mainly to enforce polynomial\nsum-of-squares constraints on various models, as described in <a href=\"#id191\"><span class=\"problematic\" id=\"id106\">[1]_</span></a>.\n\nReferences\n\u2014\u2014\u2014-\n.. [1] Dela Haije et al. \u201cEnforcing necessary non-negativity constraints\n       for common diffusion MRI models using sum of squares\n       programming\u201d. NeuroImage 209, 2020, 116405.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.PositiveDefiniteLeastSquares.solve\">\n<span class=\"sig-name descname\"><span class=\"pre\">solve</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">design_matrix</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">measurements</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.PositiveDefiniteLeastSquares.solve\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Solve CVXPY problem\n\nSolve a CVXPY problem instance for a given design matrix and a given set\nof observations, and return the optimum.\n\nParameters\n\u2014\u2014\u2014-\ndesign_matrix : array (n, m)\n    Design matrix.\nmeasurements : array (n)\n    Measurements.\ncheck : boolean (optional)\n    If True check whether the unconstrained optimization solution\n    already satisfies the constraints, before running the constrained\n    optimization. This adds overhead, but can avoid unnecessary\n    constrained optimization calls.\n    Default: False\nkwargs : keyword arguments\n    Arguments passed to the CVXPY solve method.\n\nReturns\n\u2014\u2014-\nh : array (m)\n     Estimated optimum for problem variables <span class=\"math notranslate nohighlight\">\\(h\\)</span>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"spdot\">\n<h3>spdot<a class=\"headerlink\" href=\"#spdot\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.spdot\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.optimize.</span></span><span class=\"sig-name descname\"><span class=\"pre\">spdot</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">A</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">B</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.spdot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The same as np.dot(A, B), except it works even if A or B or both\nare sparse matrices.</p>\n<section id=\"id107\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id107\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>A, B : arrays of shape (m, n), (n, k)</p>\n</section>\n<section id=\"id108\">\n<h4>Returns<a class=\"headerlink\" href=\"#id108\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>The matrix product AB. If both A and B are sparse, the result will be a\nsparse matrix. Otherwise, a dense result is returned</p>\n<p>See discussion here:\n<a class=\"reference external\" href=\"http://mail.scipy.org/pipermail/scipy-user/2010-November/027700.html\">http://mail.scipy.org/pipermail/scipy-user/2010-November/027700.html</a></p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"sparse-nnls\">\n<h3>sparse_nnls<a class=\"headerlink\" href=\"#sparse-nnls\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.optimize.sparse_nnls\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.optimize.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sparse_nnls</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">X</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">momentum</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_size</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_neg</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">check_error_iter</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_error_checks</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">converge_on_sse</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.99</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.sparse_nnls\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Solve y=Xh for h, using gradient descent, with X a sparse matrix.</p>\n<section id=\"id109\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id109\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>y<span class=\"classifier\">1-d array of shape (N)</span></dt><dd><p>The data. Needs to be dense.</p>\n</dd>\n<dt>X<span class=\"classifier\">ndarray. May be either sparse or dense. Shape (N, M)</span></dt><dd><p>The regressors</p>\n</dd>\n<dt>momentum<span class=\"classifier\">float, optional (default: 1).</span></dt><dd><p>The persistence of the gradient.</p>\n</dd>\n<dt>step_size<span class=\"classifier\">float, optional (default: 0.01).</span></dt><dd><p>The increment of parameter update in each iteration</p>\n</dd>\n<dt>non_neg<span class=\"classifier\">Boolean, optional (default: True)</span></dt><dd><p>Whether to enforce non-negativity of the solution.</p>\n</dd>\n<dt>check_error_iter<span class=\"classifier\">int (default:10)</span></dt><dd><p>How many rounds to run between error evaluation for\nconvergence-checking.</p>\n</dd>\n<dt>max_error_checks<span class=\"classifier\">int (default: 10)</span></dt><dd><p>Don\u2019t check errors more than this number of times if no improvement in\nr-squared is seen.</p>\n</dd>\n<dt>converge_on_sse<span class=\"classifier\">float (default: 0.99)</span></dt><dd><p>a percentage improvement in SSE that is required each time to say\nthat things are still going well.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id110\">\n<h4>Returns<a class=\"headerlink\" href=\"#id110\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>h_best : The best estimate of the parameters.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"profiler\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.profile.Profiler\" title=\"dipy.core.profile.Profiler\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Profiler</span></code></a><a class=\"headerlink\" href=\"#profiler\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.profile.Profiler\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.profile.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Profiler</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">call</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.profile.Profiler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Profile python/cython files or functions</p>\n<p>If you are profiling cython code you need to add\n# cython: profile=True on the top of your .pyx file</p>\n<p>and for the functions that you do not want to profile you can use\nthis decorator in your cython files</p>\n<p>&#64;cython.profile(False)</p>\n<section id=\"id111\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id111\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>caller : file or function call\nargs : function arguments</p>\n</section>\n<section id=\"id112\">\n<h4>Attributes<a class=\"headerlink\" href=\"#id112\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>stats : function, stats.print_stats(10) will prin the 10 slower functions</p>\n</section>\n<section id=\"id113\">\n<h4>Examples<a class=\"headerlink\" href=\"#id113\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>from dipy.core.profile import Profiler\nimport numpy as np\np=Profiler(np.sum,np.random.rand(1000000,3))\nfname=\u2019test.py\u2019\np=Profiler(fname)\np.print_stats(10)\np.print_stats(\u2018det\u2019)</p>\n</section>\n<section id=\"id114\">\n<h4>References<a class=\"headerlink\" href=\"#id114\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p><a class=\"reference external\" href=\"http://docs.cython.org/src/tutorial/profiling_tutorial.html\">http://docs.cython.org/src/tutorial/profiling_tutorial.html</a>\n<a class=\"reference external\" href=\"http://docs.python.org/library/profile.html\">http://docs.python.org/library/profile.html</a>\n<a class=\"reference external\" href=\"http://packages.python.org/line_profiler/\">http://packages.python.org/line_profiler/</a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.profile.Profiler.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">call</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.profile.Profiler.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.profile.Profiler.print_stats\">\n<span class=\"sig-name descname\"><span class=\"pre\">print_stats</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">N</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.profile.Profiler.print_stats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Print stats for profiling</p>\n<p>You can use it in all different ways developed in pstats\nfor example\nprint_stats(10) will give you the 10 slowest calls\nor\nprint_stats(\u2018function_name\u2019)\nwill give you the stats for all the calls with name \u2018function_name\u2019</p>\n<section id=\"id115\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id115\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<p>N : stats.print_stats argument</p>\n</section>\n</dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"wichmannhill2006\">\n<h3>WichmannHill2006<a class=\"headerlink\" href=\"#wichmannhill2006\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.rng.WichmannHill2006\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.rng.</span></span><span class=\"sig-name descname\"><span class=\"pre\">WichmannHill2006</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100001</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">200002</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iz</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">300003</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">it</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">400004</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.rng.WichmannHill2006\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wichmann Hill (2006) random number generator.</p>\n<p>B.A. Wichmann, I.D. Hill, Generating good pseudo-random numbers,\nComputational Statistics &amp; Data Analysis, Volume 51, Issue 3, 1\nDecember 2006, Pages 1614-1622, ISSN 0167-9473, DOI:\n10.1016/j.csda.2006.05.019.\n(<a class=\"reference external\" href=\"http://www.sciencedirect.com/science/article/B6V8V-4K7F86W-2/2/a3a33291b8264e4c882a8f21b6e43351\">http://www.sciencedirect.com/science/article/B6V8V-4K7F86W-2/2/a3a33291b8264e4c882a8f21b6e43351</a>)\nfor advice on generating many sequences for use together, and on\nalternative algorithms and codes</p>\n<section id=\"id116\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id116\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ix: int</dt><dd><p>First seed value. Should not be null. (default 100001)</p>\n</dd>\n<dt>iy: int</dt><dd><p>Second seed value. Should not be null. (default 200002)</p>\n</dd>\n<dt>iz: int</dt><dd><p>Third seed value. Should not be null. (default 300003)</p>\n</dd>\n<dt>it: int</dt><dd><p>Fourth seed value. Should not be null. (default 400004)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id117\">\n<h4>Returns<a class=\"headerlink\" href=\"#id117\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>r_number<span class=\"classifier\">float</span></dt><dd><p>pseudo-random number uniformly distributed between [0-1]</p>\n</dd>\n</dl>\n</section>\n<section id=\"id118\">\n<h4>Examples<a class=\"headerlink\" href=\"#id118\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core</span> <span class=\"kn\">import</span> <span class=\"n\">rng</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">WichmannHill2006</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"wichmannhill1982\">\n<h3>WichmannHill1982<a class=\"headerlink\" href=\"#wichmannhill1982\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.rng.WichmannHill1982\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.rng.</span></span><span class=\"sig-name descname\"><span class=\"pre\">WichmannHill1982</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100001</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">200002</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iz</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">300003</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.rng.WichmannHill1982\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Algorithm AS 183 Appl. Statist. (1982) vol.31, no.2.</p>\n<p>Returns a pseudo-random number rectangularly distributed\nbetween 0 and 1.   The cycle length is 6.95E+12 (See page 123\nof Applied Statistics (1984) vol.33), not as claimed in the\noriginal article.</p>\n<p>ix, iy and iz should be set to integer values between 1 and\n30000 before the first entry.</p>\n<p>Integer arithmetic up to 5212632 is required.</p>\n<section id=\"id119\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id119\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ix: int</dt><dd><p>First seed value. Should not be null. (default 100001)</p>\n</dd>\n<dt>iy: int</dt><dd><p>Second seed value. Should not be null. (default 200002)</p>\n</dd>\n<dt>iz: int</dt><dd><p>Third seed value. Should not be null. (default 300003)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id120\">\n<h4>Returns<a class=\"headerlink\" href=\"#id120\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>r_number<span class=\"classifier\">float</span></dt><dd><p>pseudo-random number uniformly distributed between [0-1]</p>\n</dd>\n</dl>\n</section>\n<section id=\"id121\">\n<h4>Examples<a class=\"headerlink\" href=\"#id121\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core</span> <span class=\"kn\">import</span> <span class=\"n\">rng</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">WichmannHill1982</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"lecuyer\">\n<h3>LEcuyer<a class=\"headerlink\" href=\"#lecuyer\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.rng.LEcuyer\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.rng.</span></span><span class=\"sig-name descname\"><span class=\"pre\">LEcuyer</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">s1</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100001</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">s2</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">200002</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.rng.LEcuyer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a LEcuyer random number generator.</p>\n<p>Generate uniformly distributed random numbers using the 32-bit\ngenerator from figure 3 of:</p>\n<blockquote>\n<div><p>L\u2019Ecuyer, P. Efficient and portable combined random number\ngenerators, C.A.C.M., vol. 31, 742-749 &amp; 774-?, June 1988.</p>\n</div></blockquote>\n<p>The cycle length is claimed to be 2.30584E+18</p>\n<section id=\"id122\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id122\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>s1: int</dt><dd><p>First seed value. Should not be null. (default 100001)</p>\n</dd>\n<dt>s2: int</dt><dd><p>Second seed value. Should not be null. (default 200002)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id123\">\n<h4>Returns<a class=\"headerlink\" href=\"#id123\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>r_number<span class=\"classifier\">float</span></dt><dd><p>pseudo-random number uniformly distributed between [0-1]</p>\n</dd>\n</dl>\n</section>\n<section id=\"id124\">\n<h4>Examples<a class=\"headerlink\" href=\"#id124\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core</span> <span class=\"kn\">import</span> <span class=\"n\">rng</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">LEcuyer</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"sphere\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a><a class=\"headerlink\" href=\"#sphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Sphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">phi</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">faces</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edges</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>The sphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<section id=\"id125\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id125\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x, y, z<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>theta, phi<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</dd>\n<dt>xyz<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>faces<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</dd>\n<dt>edges<span class=\"classifier\">(N, 2) ndarray</span></dt><dd><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">phi</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">faces</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edges</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere.edges\">\n<span class=\"sig-name descname\"><span class=\"pre\">edges</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere.faces\">\n<span class=\"sig-name descname\"><span class=\"pre\">faces</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere.find_closest\">\n<span class=\"sig-name descname\"><span class=\"pre\">find_closest</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector</p>\n<section id=\"id126\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id126\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like, 3 elements</span></dt><dd><p>A unit vector</p>\n</dd>\n</dl>\n</section>\n<section id=\"id127\">\n<h5>Returns<a class=\"headerlink\" href=\"#id127\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>idx<span class=\"classifier\">int</span></dt><dd><p>The index into the Sphere.vertices array that gives the closest\nvertex (in angle).</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere.subdivide\">\n<span class=\"sig-name descname\"><span class=\"pre\">subdivide</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subdivides each face of the sphere into four new faces.</p>\n<p>New vertices are created at a, b, and c. Then each face [x, y, z] is\ndivided into faces [x, a, c], [y, a, b], [z, b, c], and [a, b, c].</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>      <span class=\"n\">y</span>\n      <span class=\"o\">/</span>\\\n     <span class=\"o\">/</span>  \\\n   <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">____</span>\\<span class=\"n\">b</span>\n   <span class=\"o\">/</span>\\    <span class=\"o\">/</span>\\\n  <span class=\"o\">/</span>  \\  <span class=\"o\">/</span>  \\\n <span class=\"o\">/</span><span class=\"n\">____</span>\\<span class=\"o\">/</span><span class=\"n\">____</span>\\\n<span class=\"n\">x</span>      <span class=\"n\">c</span>     <span class=\"n\">z</span>\n</pre></div>\n</div>\n<section id=\"id128\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id128\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>n<span class=\"classifier\">int, optional</span></dt><dd><p>The number of subdivisions to perform.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id129\">\n<h5>Returns<a class=\"headerlink\" href=\"#id129\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>new_sphere<span class=\"classifier\">Sphere</span></dt><dd><p>The subdivided sphere.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere.vertices\">\n<span class=\"sig-name descname\"><span class=\"pre\">vertices</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere.x\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">x</span></span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.x\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere.y\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">y</span></span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.Sphere.z\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">z</span></span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.z\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"hemisphere\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere\" title=\"dipy.core.sphere.HemiSphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HemiSphere</span></code></a><a class=\"headerlink\" href=\"#hemisphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.HemiSphere\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">HemiSphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">phi</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">faces</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edges</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-05</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>A HemiSphere is similar to a Sphere but it takes antipodal symmetry into\naccount. Antipodal symmetry means that point v on a HemiSphere is the same\nas the point -v. Duplicate points are discarded when constructing a\nHemiSphere (including antipodal duplicates). <cite>edges</cite> and <cite>faces</cite> are\nremapped to the remaining points as closely as possible.</p>\n<p>The HemiSphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<section id=\"id130\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id130\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x, y, z<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>theta, phi<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</dd>\n<dt>xyz<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>faces<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</dd>\n<dt>edges<span class=\"classifier\">(N, 2) ndarray</span></dt><dd><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</dd>\n<dt>tol<span class=\"classifier\">float</span></dt><dd><p>Angle in degrees. Vertices that are less than tol degrees apart are\ntreated as duplicates.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id131\">\n<h4>See Also<a class=\"headerlink\" href=\"#id131\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Sphere</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.HemiSphere.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">phi</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">faces</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edges</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-05</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a HemiSphere from points</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.HemiSphere.faces\">\n<span class=\"sig-name descname\"><span class=\"pre\">faces</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.HemiSphere.find_closest\">\n<span class=\"sig-name descname\"><span class=\"pre\">find_closest</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector,\ntaking into account antipodal symmetry</p>\n<section id=\"id132\">\n<h5>Parameters<a class=\"headerlink\" href=\"#id132\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>xyz<span class=\"classifier\">array-like, 3 elements</span></dt><dd><p>A unit vector</p>\n</dd>\n</dl>\n</section>\n<section id=\"id133\">\n<h5>Returns<a class=\"headerlink\" href=\"#id133\" title=\"Permalink to this heading\">\u00b6</a></h5>\n<dl class=\"simple\">\n<dt>idx<span class=\"classifier\">int</span></dt><dd><p>The index into the Sphere.vertices array that gives the closest\nvertex (in angle).</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.HemiSphere.from_sphere\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_sphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-05</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.from_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create instance from a Sphere</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.HemiSphere.mirror\">\n<span class=\"sig-name descname\"><span class=\"pre\">mirror</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.mirror\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a full Sphere from a HemiSphere</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.HemiSphere.subdivide\">\n<span class=\"sig-name descname\"><span class=\"pre\">subdivide</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a more subdivided HemiSphere</p>\n<p>See Sphere.subdivide for full documentation.</p>\n</dd></dl>\n\n</section>\n</dd></dl>\n\n</section>\n<section id=\"faces-from-sphere-vertices\">\n<h3>faces_from_sphere_vertices<a class=\"headerlink\" href=\"#faces-from-sphere-vertices\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.faces_from_sphere_vertices\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">faces_from_sphere_vertices</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vertices</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.faces_from_sphere_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Triangulate a set of vertices on the sphere.</p>\n<section id=\"id134\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id134\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vertices<span class=\"classifier\">(M, 3) ndarray</span></dt><dd><p>XYZ coordinates of vertices on the sphere.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id135\">\n<h4>Returns<a class=\"headerlink\" href=\"#id135\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>faces<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Indices into vertices; forms triangular faces.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"unique-edges\">\n<h3>unique_edges<a class=\"headerlink\" href=\"#unique-edges\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.unique_edges\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unique_edges</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">faces</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_mapping</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.unique_edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract all unique edges from given triangular faces.</p>\n<section id=\"id136\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id136\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>faces<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Vertex indices forming triangular faces.</p>\n</dd>\n<dt>return_mapping<span class=\"classifier\">bool</span></dt><dd><p>If true, a mapping to the edges of each face is returned.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id137\">\n<h4>Returns<a class=\"headerlink\" href=\"#id137\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>edges<span class=\"classifier\">(N, 2) ndarray</span></dt><dd><p>Unique edges.</p>\n</dd>\n<dt>mapping<span class=\"classifier\">(N, 3)</span></dt><dd><p>For each face, [x, y, z], a mapping to it\u2019s edges [a, b, c].</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>   y\n   /               /               a/    \b\n/                  /                   /__________          x      c     z\n</pre></div>\n</div>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"unique-sets\">\n<h3>unique_sets<a class=\"headerlink\" href=\"#unique-sets\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.unique_sets\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unique_sets</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sets</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_inverse</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.unique_sets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove duplicate sets.</p>\n<section id=\"id138\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id138\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sets<span class=\"classifier\">array (N, k)</span></dt><dd><p>N sets of size k.</p>\n</dd>\n<dt>return_inverse<span class=\"classifier\">bool</span></dt><dd><p>If True, also returns the indices of unique_sets that can be used\nto reconstruct <cite>sets</cite> (the original ordering of each set may not be\npreserved).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id139\">\n<h4>Returns<a class=\"headerlink\" href=\"#id139\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>unique_sets<span class=\"classifier\">array</span></dt><dd><p>Unique sets.</p>\n</dd>\n<dt>inverse<span class=\"classifier\">array (N,)</span></dt><dd><p>The indices to reconstruct <cite>sets</cite> from <cite>unique_sets</cite>.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"disperse-charges\">\n<h3>disperse_charges<a class=\"headerlink\" href=\"#disperse-charges\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.disperse_charges\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">disperse_charges</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hemi</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iters</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">const</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.disperse_charges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Models electrostatic repulsion on the unit sphere</p>\n<p>Places charges on a sphere and simulates the repulsive forces felt by each\none. Allows the charges to move for some number of iterations and returns\ntheir final location as well as the total potential of the system at each\nstep.</p>\n<section id=\"id140\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id140\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>hemi<span class=\"classifier\">HemiSphere</span></dt><dd><p>Points on a unit sphere.</p>\n</dd>\n<dt>iters<span class=\"classifier\">int</span></dt><dd><p>Number of iterations to run.</p>\n</dd>\n<dt>const<span class=\"classifier\">float</span></dt><dd><p>Using a smaller const could provide a more accurate result, but will\nneed more iterations to converge.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id141\">\n<h4>Returns<a class=\"headerlink\" href=\"#id141\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>hemi<span class=\"classifier\">HemiSphere</span></dt><dd><p>Distributed points on a unit sphere.</p>\n</dd>\n<dt>potential<span class=\"classifier\">ndarray</span></dt><dd><p>The electrostatic potential at each iteration. This can be useful to\ncheck if the repulsion converged to a minimum.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id142\">\n<h4>Notes<a class=\"headerlink\" href=\"#id142\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>This function is meant to be used with diffusion imaging so antipodal\nsymmetry is assumed. Therefore, each charge must not only be unique, but if\nthere is a charge at +x, there cannot be a charge at -x. These are treated\nas the same location and because the distance between the two charges will\nbe zero, the result will be unstable.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"disperse-charges-alt\">\n<h3>disperse_charges_alt<a class=\"headerlink\" href=\"#disperse-charges-alt\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.disperse_charges_alt\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">disperse_charges_alt</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">init_pointset</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iters</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.001</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.disperse_charges_alt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reimplementation of disperse_charges making use of\n<cite>scipy.optimize.fmin_slsqp</cite>.</p>\n<section id=\"id143\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id143\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>init_pointset<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Points on a unit sphere.</p>\n</dd>\n<dt>iters<span class=\"classifier\">int</span></dt><dd><p>Number of iterations to run.</p>\n</dd>\n<dt>tol<span class=\"classifier\">float</span></dt><dd><p>Tolerance for the optimization.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id144\">\n<h4>Returns<a class=\"headerlink\" href=\"#id144\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>array-like (N, 3)</dt><dd><p>Distributed points on a unit sphere.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"euler-characteristic-check\">\n<h3>euler_characteristic_check<a class=\"headerlink\" href=\"#euler-characteristic-check\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.euler_characteristic_check\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">euler_characteristic_check</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">chi</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.euler_characteristic_check\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Checks the euler characteristic of a sphere\n\nIf <span class=\"math notranslate nohighlight\">\\(f\\)</span> = number of faces, <span class=\"math notranslate nohighlight\">\\(e\\)</span> = number_of_edges and <span class=\"math notranslate nohighlight\">\\(v\\)</span> = number of\nvertices, the Euler formula says <span class=\"math notranslate nohighlight\">\\(f-e+v = 2\\)</span> for a mesh on a sphere. More\ngenerally, whether <span class=\"math notranslate nohighlight\">\\(f -e + v == \\chi\\)</span> where <span class=\"math notranslate nohighlight\">\\(\\chi\\)</span> is the Euler\ncharacteristic of the mesh.\n\n- Open chain (track) has <span class=\"math notranslate nohighlight\">\\(\\chi=1\\)</span>\n- Closed chain (loop) has <span class=\"math notranslate nohighlight\">\\(\\chi=0\\)</span>\n- Disk has <span class=\"math notranslate nohighlight\">\\(\\chi=1\\)</span>\n- Sphere has <span class=\"math notranslate nohighlight\">\\(\\chi=2\\)</span>\n- HemiSphere has <span class=\"math notranslate nohighlight\">\\(\\chi=1\\)</span>\n\nParameters\n\u2014\u2014\u2014-\nsphere : Sphere\n    A Sphere instance with vertices, edges and faces attributes.\nchi : int, optional\n   The Euler characteristic of the mesh to be checked\n\nReturns\n\u2014\u2014-\ncheck : bool\n   True if the mesh has Euler characteristic <span class=\"math notranslate nohighlight\">\\(\\chi\\)</span>\n\nExamples\n\u2014\u2014\u2013\n&gt;&gt;&gt; euler_characteristic_check(unit_octahedron)\nTrue\n&gt;&gt;&gt; hemisphere = HemiSphere.from_sphere(unit_icosahedron)\n&gt;&gt;&gt; euler_characteristic_check(hemisphere, chi=1)\nTrue</p>\n</dd></dl>\n\n</section>\n<section id=\"octahedron-vertices\">\n<h3>octahedron_vertices<a class=\"headerlink\" href=\"#octahedron-vertices\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.octahedron_vertices\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">octahedron_vertices</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.octahedron_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>ndarray(shape, dtype=float, buffer=None, offset=0,</dt><dd><p>strides=None, order=None)</p>\n</dd>\n</dl>\n<p>An array object represents a multidimensional, homogeneous array\nof fixed-size items.  An associated data-type object describes the\nformat of each element in the array (its byte-order, how many bytes it\noccupies in memory, whether it is an integer, a floating point number,\nor something else, etc.)</p>\n<p>Arrays should be constructed using <cite>array</cite>, <cite>zeros</cite> or <cite>empty</cite> (refer\nto the See Also section below).  The parameters given here refer to\na low-level method (<cite>ndarray(\u2026)</cite>) for instantiating an array.</p>\n<p>For more information, refer to the <cite>numpy</cite> module and examine the\nmethods and attributes of an array.</p>\n<section id=\"id145\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id145\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>(for the __new__ method; see Notes below)</p>\n<dl class=\"simple\">\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of created array.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">data-type, optional</span></dt><dd><p>Any object that can be interpreted as a numpy data type.</p>\n</dd>\n<dt>buffer<span class=\"classifier\">object exposing buffer interface, optional</span></dt><dd><p>Used to fill the array with data.</p>\n</dd>\n<dt>offset<span class=\"classifier\">int, optional</span></dt><dd><p>Offset of array data in buffer.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints, optional</span></dt><dd><p>Strides of data in memory.</p>\n</dd>\n<dt>order<span class=\"classifier\">{\u2018C\u2019, \u2018F\u2019}, optional</span></dt><dd><p>Row-major (C-style) or column-major (Fortran-style) order.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id146\">\n<h4>Attributes<a class=\"headerlink\" href=\"#id146\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>T<span class=\"classifier\">ndarray</span></dt><dd><p>Transpose of the array.</p>\n</dd>\n<dt>data<span class=\"classifier\">buffer</span></dt><dd><p>The array\u2019s elements, in memory.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">dtype object</span></dt><dd><p>Describes the format of the elements in the array.</p>\n</dd>\n<dt>flags<span class=\"classifier\">dict</span></dt><dd><p>Dictionary containing information related to memory use, e.g.,\n\u2018C_CONTIGUOUS\u2019, \u2018OWNDATA\u2019, \u2018WRITEABLE\u2019, etc.</p>\n</dd>\n<dt>flat<span class=\"classifier\">numpy.flatiter object</span></dt><dd><p>Flattened version of the array as an iterator.  The iterator\nallows assignments, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">x.flat</span> <span class=\"pre\">=</span> <span class=\"pre\">3</span></code> (See <cite>ndarray.flat</cite> for\nassignment examples; TODO).</p>\n</dd>\n<dt>imag<span class=\"classifier\">ndarray</span></dt><dd><p>Imaginary part of the array.</p>\n</dd>\n<dt>real<span class=\"classifier\">ndarray</span></dt><dd><p>Real part of the array.</p>\n</dd>\n<dt>size<span class=\"classifier\">int</span></dt><dd><p>Number of elements in the array.</p>\n</dd>\n<dt>itemsize<span class=\"classifier\">int</span></dt><dd><p>The memory use of each array element in bytes.</p>\n</dd>\n<dt>nbytes<span class=\"classifier\">int</span></dt><dd><p>The total number of bytes required to store the array data,\ni.e., <code class=\"docutils literal notranslate\"><span class=\"pre\">itemsize</span> <span class=\"pre\">*</span> <span class=\"pre\">size</span></code>.</p>\n</dd>\n<dt>ndim<span class=\"classifier\">int</span></dt><dd><p>The array\u2019s number of dimensions.</p>\n</dd>\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of the array.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints</span></dt><dd><p>The step-size required to move from one element to the next in\nmemory. For example, a contiguous <code class=\"docutils literal notranslate\"><span class=\"pre\">(3,</span> <span class=\"pre\">4)</span></code> array of type\n<code class=\"docutils literal notranslate\"><span class=\"pre\">int16</span></code> in C-order has strides <code class=\"docutils literal notranslate\"><span class=\"pre\">(8,</span> <span class=\"pre\">2)</span></code>.  This implies that\nto move from element to element in memory requires jumps of 2 bytes.\nTo move from row-to-row, one needs to jump 8 bytes at a time\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">2</span> <span class=\"pre\">*</span> <span class=\"pre\">4</span></code>).</p>\n</dd>\n<dt>ctypes<span class=\"classifier\">ctypes object</span></dt><dd><p>Class containing properties of the array needed for interaction\nwith ctypes.</p>\n</dd>\n<dt>base<span class=\"classifier\">ndarray</span></dt><dd><p>If the array is a view into another array, that array is its <cite>base</cite>\n(unless that array is also a view).  The <cite>base</cite> array is where the\narray data is actually stored.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id147\">\n<h4>See Also<a class=\"headerlink\" href=\"#id147\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>array : Construct an array.\nzeros : Create an array, each element of which is zero.\nempty : Create an array, but leave its allocated memory unchanged (i.e.,</p>\n<blockquote>\n<div><p>it contains \u201cgarbage\u201d).</p>\n</div></blockquote>\n<p>dtype : Create a data-type.\nnumpy.typing.NDArray : An ndarray alias <a class=\"reference external\" href=\"https://docs.python.org/3/glossary.html#term-generic-type\" title=\"(in Python v3.11)\"><span class=\"xref std std-term\">generic</span></a></p>\n<blockquote>\n<div><p>w.r.t. its <cite>dtype.type &lt;numpy.dtype.type&gt;</cite>.</p>\n</div></blockquote>\n</section>\n<section id=\"id148\">\n<h4>Notes<a class=\"headerlink\" href=\"#id148\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>There are two modes of creating an array using <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code>:</p>\n<ol class=\"arabic simple\">\n<li><p>If <cite>buffer</cite> is None, then only <cite>shape</cite>, <cite>dtype</cite>, and <cite>order</cite>\nare used.</p></li>\n<li><p>If <cite>buffer</cite> is an object exposing the buffer interface, then\nall keywords are interpreted.</p></li>\n</ol>\n<p>No <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__</span></code> method is needed because the array is fully initialized\nafter the <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code> method.</p>\n</section>\n<section id=\"id149\">\n<h4>Examples<a class=\"headerlink\" href=\"#id149\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>These examples illustrate the low-level <cite>ndarray</cite> constructor.  Refer\nto the <cite>See Also</cite> section above for easier ways of constructing an\nndarray.</p>\n<p>First mode, <cite>buffer</cite> is None:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([[0.0e+000, 0.0e+000], # random</span>\n<span class=\"go\">       [     nan, 2.5e-323]])</span>\n</pre></div>\n</div>\n<p>Second mode:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,),</span> <span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]),</span>\n<span class=\"gp\">... </span>           <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int_</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">itemsize</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>           <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"c1\"># offset = 1*itemsize, i.e. skip first element</span>\n<span class=\"go\">array([2, 3])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"octahedron-faces\">\n<h3>octahedron_faces<a class=\"headerlink\" href=\"#octahedron-faces\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.octahedron_faces\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">octahedron_faces</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.octahedron_faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>ndarray(shape, dtype=float, buffer=None, offset=0,</dt><dd><p>strides=None, order=None)</p>\n</dd>\n</dl>\n<p>An array object represents a multidimensional, homogeneous array\nof fixed-size items.  An associated data-type object describes the\nformat of each element in the array (its byte-order, how many bytes it\noccupies in memory, whether it is an integer, a floating point number,\nor something else, etc.)</p>\n<p>Arrays should be constructed using <cite>array</cite>, <cite>zeros</cite> or <cite>empty</cite> (refer\nto the See Also section below).  The parameters given here refer to\na low-level method (<cite>ndarray(\u2026)</cite>) for instantiating an array.</p>\n<p>For more information, refer to the <cite>numpy</cite> module and examine the\nmethods and attributes of an array.</p>\n<section id=\"id150\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id150\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>(for the __new__ method; see Notes below)</p>\n<dl class=\"simple\">\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of created array.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">data-type, optional</span></dt><dd><p>Any object that can be interpreted as a numpy data type.</p>\n</dd>\n<dt>buffer<span class=\"classifier\">object exposing buffer interface, optional</span></dt><dd><p>Used to fill the array with data.</p>\n</dd>\n<dt>offset<span class=\"classifier\">int, optional</span></dt><dd><p>Offset of array data in buffer.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints, optional</span></dt><dd><p>Strides of data in memory.</p>\n</dd>\n<dt>order<span class=\"classifier\">{\u2018C\u2019, \u2018F\u2019}, optional</span></dt><dd><p>Row-major (C-style) or column-major (Fortran-style) order.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id151\">\n<h4>Attributes<a class=\"headerlink\" href=\"#id151\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>T<span class=\"classifier\">ndarray</span></dt><dd><p>Transpose of the array.</p>\n</dd>\n<dt>data<span class=\"classifier\">buffer</span></dt><dd><p>The array\u2019s elements, in memory.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">dtype object</span></dt><dd><p>Describes the format of the elements in the array.</p>\n</dd>\n<dt>flags<span class=\"classifier\">dict</span></dt><dd><p>Dictionary containing information related to memory use, e.g.,\n\u2018C_CONTIGUOUS\u2019, \u2018OWNDATA\u2019, \u2018WRITEABLE\u2019, etc.</p>\n</dd>\n<dt>flat<span class=\"classifier\">numpy.flatiter object</span></dt><dd><p>Flattened version of the array as an iterator.  The iterator\nallows assignments, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">x.flat</span> <span class=\"pre\">=</span> <span class=\"pre\">3</span></code> (See <cite>ndarray.flat</cite> for\nassignment examples; TODO).</p>\n</dd>\n<dt>imag<span class=\"classifier\">ndarray</span></dt><dd><p>Imaginary part of the array.</p>\n</dd>\n<dt>real<span class=\"classifier\">ndarray</span></dt><dd><p>Real part of the array.</p>\n</dd>\n<dt>size<span class=\"classifier\">int</span></dt><dd><p>Number of elements in the array.</p>\n</dd>\n<dt>itemsize<span class=\"classifier\">int</span></dt><dd><p>The memory use of each array element in bytes.</p>\n</dd>\n<dt>nbytes<span class=\"classifier\">int</span></dt><dd><p>The total number of bytes required to store the array data,\ni.e., <code class=\"docutils literal notranslate\"><span class=\"pre\">itemsize</span> <span class=\"pre\">*</span> <span class=\"pre\">size</span></code>.</p>\n</dd>\n<dt>ndim<span class=\"classifier\">int</span></dt><dd><p>The array\u2019s number of dimensions.</p>\n</dd>\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of the array.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints</span></dt><dd><p>The step-size required to move from one element to the next in\nmemory. For example, a contiguous <code class=\"docutils literal notranslate\"><span class=\"pre\">(3,</span> <span class=\"pre\">4)</span></code> array of type\n<code class=\"docutils literal notranslate\"><span class=\"pre\">int16</span></code> in C-order has strides <code class=\"docutils literal notranslate\"><span class=\"pre\">(8,</span> <span class=\"pre\">2)</span></code>.  This implies that\nto move from element to element in memory requires jumps of 2 bytes.\nTo move from row-to-row, one needs to jump 8 bytes at a time\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">2</span> <span class=\"pre\">*</span> <span class=\"pre\">4</span></code>).</p>\n</dd>\n<dt>ctypes<span class=\"classifier\">ctypes object</span></dt><dd><p>Class containing properties of the array needed for interaction\nwith ctypes.</p>\n</dd>\n<dt>base<span class=\"classifier\">ndarray</span></dt><dd><p>If the array is a view into another array, that array is its <cite>base</cite>\n(unless that array is also a view).  The <cite>base</cite> array is where the\narray data is actually stored.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id152\">\n<h4>See Also<a class=\"headerlink\" href=\"#id152\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>array : Construct an array.\nzeros : Create an array, each element of which is zero.\nempty : Create an array, but leave its allocated memory unchanged (i.e.,</p>\n<blockquote>\n<div><p>it contains \u201cgarbage\u201d).</p>\n</div></blockquote>\n<p>dtype : Create a data-type.\nnumpy.typing.NDArray : An ndarray alias <a class=\"reference external\" href=\"https://docs.python.org/3/glossary.html#term-generic-type\" title=\"(in Python v3.11)\"><span class=\"xref std std-term\">generic</span></a></p>\n<blockquote>\n<div><p>w.r.t. its <cite>dtype.type &lt;numpy.dtype.type&gt;</cite>.</p>\n</div></blockquote>\n</section>\n<section id=\"id153\">\n<h4>Notes<a class=\"headerlink\" href=\"#id153\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>There are two modes of creating an array using <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code>:</p>\n<ol class=\"arabic simple\">\n<li><p>If <cite>buffer</cite> is None, then only <cite>shape</cite>, <cite>dtype</cite>, and <cite>order</cite>\nare used.</p></li>\n<li><p>If <cite>buffer</cite> is an object exposing the buffer interface, then\nall keywords are interpreted.</p></li>\n</ol>\n<p>No <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__</span></code> method is needed because the array is fully initialized\nafter the <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code> method.</p>\n</section>\n<section id=\"id154\">\n<h4>Examples<a class=\"headerlink\" href=\"#id154\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>These examples illustrate the low-level <cite>ndarray</cite> constructor.  Refer\nto the <cite>See Also</cite> section above for easier ways of constructing an\nndarray.</p>\n<p>First mode, <cite>buffer</cite> is None:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([[0.0e+000, 0.0e+000], # random</span>\n<span class=\"go\">       [     nan, 2.5e-323]])</span>\n</pre></div>\n</div>\n<p>Second mode:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,),</span> <span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]),</span>\n<span class=\"gp\">... </span>           <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int_</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">itemsize</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>           <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"c1\"># offset = 1*itemsize, i.e. skip first element</span>\n<span class=\"go\">array([2, 3])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"icosahedron-vertices\">\n<h3>icosahedron_vertices<a class=\"headerlink\" href=\"#icosahedron-vertices\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.icosahedron_vertices\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">icosahedron_vertices</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.icosahedron_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>ndarray(shape, dtype=float, buffer=None, offset=0,</dt><dd><p>strides=None, order=None)</p>\n</dd>\n</dl>\n<p>An array object represents a multidimensional, homogeneous array\nof fixed-size items.  An associated data-type object describes the\nformat of each element in the array (its byte-order, how many bytes it\noccupies in memory, whether it is an integer, a floating point number,\nor something else, etc.)</p>\n<p>Arrays should be constructed using <cite>array</cite>, <cite>zeros</cite> or <cite>empty</cite> (refer\nto the See Also section below).  The parameters given here refer to\na low-level method (<cite>ndarray(\u2026)</cite>) for instantiating an array.</p>\n<p>For more information, refer to the <cite>numpy</cite> module and examine the\nmethods and attributes of an array.</p>\n<section id=\"id155\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id155\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>(for the __new__ method; see Notes below)</p>\n<dl class=\"simple\">\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of created array.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">data-type, optional</span></dt><dd><p>Any object that can be interpreted as a numpy data type.</p>\n</dd>\n<dt>buffer<span class=\"classifier\">object exposing buffer interface, optional</span></dt><dd><p>Used to fill the array with data.</p>\n</dd>\n<dt>offset<span class=\"classifier\">int, optional</span></dt><dd><p>Offset of array data in buffer.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints, optional</span></dt><dd><p>Strides of data in memory.</p>\n</dd>\n<dt>order<span class=\"classifier\">{\u2018C\u2019, \u2018F\u2019}, optional</span></dt><dd><p>Row-major (C-style) or column-major (Fortran-style) order.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id156\">\n<h4>Attributes<a class=\"headerlink\" href=\"#id156\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>T<span class=\"classifier\">ndarray</span></dt><dd><p>Transpose of the array.</p>\n</dd>\n<dt>data<span class=\"classifier\">buffer</span></dt><dd><p>The array\u2019s elements, in memory.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">dtype object</span></dt><dd><p>Describes the format of the elements in the array.</p>\n</dd>\n<dt>flags<span class=\"classifier\">dict</span></dt><dd><p>Dictionary containing information related to memory use, e.g.,\n\u2018C_CONTIGUOUS\u2019, \u2018OWNDATA\u2019, \u2018WRITEABLE\u2019, etc.</p>\n</dd>\n<dt>flat<span class=\"classifier\">numpy.flatiter object</span></dt><dd><p>Flattened version of the array as an iterator.  The iterator\nallows assignments, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">x.flat</span> <span class=\"pre\">=</span> <span class=\"pre\">3</span></code> (See <cite>ndarray.flat</cite> for\nassignment examples; TODO).</p>\n</dd>\n<dt>imag<span class=\"classifier\">ndarray</span></dt><dd><p>Imaginary part of the array.</p>\n</dd>\n<dt>real<span class=\"classifier\">ndarray</span></dt><dd><p>Real part of the array.</p>\n</dd>\n<dt>size<span class=\"classifier\">int</span></dt><dd><p>Number of elements in the array.</p>\n</dd>\n<dt>itemsize<span class=\"classifier\">int</span></dt><dd><p>The memory use of each array element in bytes.</p>\n</dd>\n<dt>nbytes<span class=\"classifier\">int</span></dt><dd><p>The total number of bytes required to store the array data,\ni.e., <code class=\"docutils literal notranslate\"><span class=\"pre\">itemsize</span> <span class=\"pre\">*</span> <span class=\"pre\">size</span></code>.</p>\n</dd>\n<dt>ndim<span class=\"classifier\">int</span></dt><dd><p>The array\u2019s number of dimensions.</p>\n</dd>\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of the array.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints</span></dt><dd><p>The step-size required to move from one element to the next in\nmemory. For example, a contiguous <code class=\"docutils literal notranslate\"><span class=\"pre\">(3,</span> <span class=\"pre\">4)</span></code> array of type\n<code class=\"docutils literal notranslate\"><span class=\"pre\">int16</span></code> in C-order has strides <code class=\"docutils literal notranslate\"><span class=\"pre\">(8,</span> <span class=\"pre\">2)</span></code>.  This implies that\nto move from element to element in memory requires jumps of 2 bytes.\nTo move from row-to-row, one needs to jump 8 bytes at a time\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">2</span> <span class=\"pre\">*</span> <span class=\"pre\">4</span></code>).</p>\n</dd>\n<dt>ctypes<span class=\"classifier\">ctypes object</span></dt><dd><p>Class containing properties of the array needed for interaction\nwith ctypes.</p>\n</dd>\n<dt>base<span class=\"classifier\">ndarray</span></dt><dd><p>If the array is a view into another array, that array is its <cite>base</cite>\n(unless that array is also a view).  The <cite>base</cite> array is where the\narray data is actually stored.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id157\">\n<h4>See Also<a class=\"headerlink\" href=\"#id157\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>array : Construct an array.\nzeros : Create an array, each element of which is zero.\nempty : Create an array, but leave its allocated memory unchanged (i.e.,</p>\n<blockquote>\n<div><p>it contains \u201cgarbage\u201d).</p>\n</div></blockquote>\n<p>dtype : Create a data-type.\nnumpy.typing.NDArray : An ndarray alias <a class=\"reference external\" href=\"https://docs.python.org/3/glossary.html#term-generic-type\" title=\"(in Python v3.11)\"><span class=\"xref std std-term\">generic</span></a></p>\n<blockquote>\n<div><p>w.r.t. its <cite>dtype.type &lt;numpy.dtype.type&gt;</cite>.</p>\n</div></blockquote>\n</section>\n<section id=\"id158\">\n<h4>Notes<a class=\"headerlink\" href=\"#id158\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>There are two modes of creating an array using <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code>:</p>\n<ol class=\"arabic simple\">\n<li><p>If <cite>buffer</cite> is None, then only <cite>shape</cite>, <cite>dtype</cite>, and <cite>order</cite>\nare used.</p></li>\n<li><p>If <cite>buffer</cite> is an object exposing the buffer interface, then\nall keywords are interpreted.</p></li>\n</ol>\n<p>No <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__</span></code> method is needed because the array is fully initialized\nafter the <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code> method.</p>\n</section>\n<section id=\"id159\">\n<h4>Examples<a class=\"headerlink\" href=\"#id159\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>These examples illustrate the low-level <cite>ndarray</cite> constructor.  Refer\nto the <cite>See Also</cite> section above for easier ways of constructing an\nndarray.</p>\n<p>First mode, <cite>buffer</cite> is None:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([[0.0e+000, 0.0e+000], # random</span>\n<span class=\"go\">       [     nan, 2.5e-323]])</span>\n</pre></div>\n</div>\n<p>Second mode:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,),</span> <span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]),</span>\n<span class=\"gp\">... </span>           <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int_</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">itemsize</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>           <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"c1\"># offset = 1*itemsize, i.e. skip first element</span>\n<span class=\"go\">array([2, 3])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"icosahedron-faces\">\n<h3>icosahedron_faces<a class=\"headerlink\" href=\"#icosahedron-faces\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.icosahedron_faces\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">icosahedron_faces</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.icosahedron_faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>ndarray(shape, dtype=float, buffer=None, offset=0,</dt><dd><p>strides=None, order=None)</p>\n</dd>\n</dl>\n<p>An array object represents a multidimensional, homogeneous array\nof fixed-size items.  An associated data-type object describes the\nformat of each element in the array (its byte-order, how many bytes it\noccupies in memory, whether it is an integer, a floating point number,\nor something else, etc.)</p>\n<p>Arrays should be constructed using <cite>array</cite>, <cite>zeros</cite> or <cite>empty</cite> (refer\nto the See Also section below).  The parameters given here refer to\na low-level method (<cite>ndarray(\u2026)</cite>) for instantiating an array.</p>\n<p>For more information, refer to the <cite>numpy</cite> module and examine the\nmethods and attributes of an array.</p>\n<section id=\"id160\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id160\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>(for the __new__ method; see Notes below)</p>\n<dl class=\"simple\">\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of created array.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">data-type, optional</span></dt><dd><p>Any object that can be interpreted as a numpy data type.</p>\n</dd>\n<dt>buffer<span class=\"classifier\">object exposing buffer interface, optional</span></dt><dd><p>Used to fill the array with data.</p>\n</dd>\n<dt>offset<span class=\"classifier\">int, optional</span></dt><dd><p>Offset of array data in buffer.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints, optional</span></dt><dd><p>Strides of data in memory.</p>\n</dd>\n<dt>order<span class=\"classifier\">{\u2018C\u2019, \u2018F\u2019}, optional</span></dt><dd><p>Row-major (C-style) or column-major (Fortran-style) order.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id161\">\n<h4>Attributes<a class=\"headerlink\" href=\"#id161\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>T<span class=\"classifier\">ndarray</span></dt><dd><p>Transpose of the array.</p>\n</dd>\n<dt>data<span class=\"classifier\">buffer</span></dt><dd><p>The array\u2019s elements, in memory.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">dtype object</span></dt><dd><p>Describes the format of the elements in the array.</p>\n</dd>\n<dt>flags<span class=\"classifier\">dict</span></dt><dd><p>Dictionary containing information related to memory use, e.g.,\n\u2018C_CONTIGUOUS\u2019, \u2018OWNDATA\u2019, \u2018WRITEABLE\u2019, etc.</p>\n</dd>\n<dt>flat<span class=\"classifier\">numpy.flatiter object</span></dt><dd><p>Flattened version of the array as an iterator.  The iterator\nallows assignments, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">x.flat</span> <span class=\"pre\">=</span> <span class=\"pre\">3</span></code> (See <cite>ndarray.flat</cite> for\nassignment examples; TODO).</p>\n</dd>\n<dt>imag<span class=\"classifier\">ndarray</span></dt><dd><p>Imaginary part of the array.</p>\n</dd>\n<dt>real<span class=\"classifier\">ndarray</span></dt><dd><p>Real part of the array.</p>\n</dd>\n<dt>size<span class=\"classifier\">int</span></dt><dd><p>Number of elements in the array.</p>\n</dd>\n<dt>itemsize<span class=\"classifier\">int</span></dt><dd><p>The memory use of each array element in bytes.</p>\n</dd>\n<dt>nbytes<span class=\"classifier\">int</span></dt><dd><p>The total number of bytes required to store the array data,\ni.e., <code class=\"docutils literal notranslate\"><span class=\"pre\">itemsize</span> <span class=\"pre\">*</span> <span class=\"pre\">size</span></code>.</p>\n</dd>\n<dt>ndim<span class=\"classifier\">int</span></dt><dd><p>The array\u2019s number of dimensions.</p>\n</dd>\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of the array.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints</span></dt><dd><p>The step-size required to move from one element to the next in\nmemory. For example, a contiguous <code class=\"docutils literal notranslate\"><span class=\"pre\">(3,</span> <span class=\"pre\">4)</span></code> array of type\n<code class=\"docutils literal notranslate\"><span class=\"pre\">int16</span></code> in C-order has strides <code class=\"docutils literal notranslate\"><span class=\"pre\">(8,</span> <span class=\"pre\">2)</span></code>.  This implies that\nto move from element to element in memory requires jumps of 2 bytes.\nTo move from row-to-row, one needs to jump 8 bytes at a time\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">2</span> <span class=\"pre\">*</span> <span class=\"pre\">4</span></code>).</p>\n</dd>\n<dt>ctypes<span class=\"classifier\">ctypes object</span></dt><dd><p>Class containing properties of the array needed for interaction\nwith ctypes.</p>\n</dd>\n<dt>base<span class=\"classifier\">ndarray</span></dt><dd><p>If the array is a view into another array, that array is its <cite>base</cite>\n(unless that array is also a view).  The <cite>base</cite> array is where the\narray data is actually stored.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id162\">\n<h4>See Also<a class=\"headerlink\" href=\"#id162\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>array : Construct an array.\nzeros : Create an array, each element of which is zero.\nempty : Create an array, but leave its allocated memory unchanged (i.e.,</p>\n<blockquote>\n<div><p>it contains \u201cgarbage\u201d).</p>\n</div></blockquote>\n<p>dtype : Create a data-type.\nnumpy.typing.NDArray : An ndarray alias <a class=\"reference external\" href=\"https://docs.python.org/3/glossary.html#term-generic-type\" title=\"(in Python v3.11)\"><span class=\"xref std std-term\">generic</span></a></p>\n<blockquote>\n<div><p>w.r.t. its <cite>dtype.type &lt;numpy.dtype.type&gt;</cite>.</p>\n</div></blockquote>\n</section>\n<section id=\"id163\">\n<h4>Notes<a class=\"headerlink\" href=\"#id163\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>There are two modes of creating an array using <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code>:</p>\n<ol class=\"arabic simple\">\n<li><p>If <cite>buffer</cite> is None, then only <cite>shape</cite>, <cite>dtype</cite>, and <cite>order</cite>\nare used.</p></li>\n<li><p>If <cite>buffer</cite> is an object exposing the buffer interface, then\nall keywords are interpreted.</p></li>\n</ol>\n<p>No <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__</span></code> method is needed because the array is fully initialized\nafter the <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code> method.</p>\n</section>\n<section id=\"id164\">\n<h4>Examples<a class=\"headerlink\" href=\"#id164\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>These examples illustrate the low-level <cite>ndarray</cite> constructor.  Refer\nto the <cite>See Also</cite> section above for easier ways of constructing an\nndarray.</p>\n<p>First mode, <cite>buffer</cite> is None:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([[0.0e+000, 0.0e+000], # random</span>\n<span class=\"go\">       [     nan, 2.5e-323]])</span>\n</pre></div>\n</div>\n<p>Second mode:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,),</span> <span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]),</span>\n<span class=\"gp\">... </span>           <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int_</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">itemsize</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>           <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"c1\"># offset = 1*itemsize, i.e. skip first element</span>\n<span class=\"go\">array([2, 3])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"unit-octahedron\">\n<h3>unit_octahedron<a class=\"headerlink\" href=\"#unit-octahedron\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.unit_octahedron\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unit_octahedron</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.unit_octahedron\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Points on the unit sphere.</p>\n<p>The sphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<section id=\"id165\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id165\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x, y, z<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>theta, phi<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</dd>\n<dt>xyz<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>faces<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</dd>\n<dt>edges<span class=\"classifier\">(N, 2) ndarray</span></dt><dd><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"unit-icosahedron\">\n<h3>unit_icosahedron<a class=\"headerlink\" href=\"#unit-icosahedron\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.unit_icosahedron\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unit_icosahedron</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.unit_icosahedron\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Points on the unit sphere.</p>\n<p>The sphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<section id=\"id166\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id166\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x, y, z<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>theta, phi<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</dd>\n<dt>xyz<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>faces<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</dd>\n<dt>edges<span class=\"classifier\">(N, 2) ndarray</span></dt><dd><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"hemi-icosahedron\">\n<h3>hemi_icosahedron<a class=\"headerlink\" href=\"#hemi-icosahedron\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere.hemi_icosahedron\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere.</span></span><span class=\"sig-name descname\"><span class=\"pre\">hemi_icosahedron</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.hemi_icosahedron\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Points on the unit sphere.</p>\n<p>A HemiSphere is similar to a Sphere but it takes antipodal symmetry into\naccount. Antipodal symmetry means that point v on a HemiSphere is the same\nas the point -v. Duplicate points are discarded when constructing a\nHemiSphere (including antipodal duplicates). <cite>edges</cite> and <cite>faces</cite> are\nremapped to the remaining points as closely as possible.</p>\n<p>The HemiSphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<section id=\"id167\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id167\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x, y, z<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>theta, phi<span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</dd>\n<dt>xyz<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt>faces<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</dd>\n<dt>edges<span class=\"classifier\">(N, 2) ndarray</span></dt><dd><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</dd>\n<dt>tol<span class=\"classifier\">float</span></dt><dd><p>Angle in degrees. Vertices that are less than tol degrees apart are\ntreated as duplicates.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id168\">\n<h4>See Also<a class=\"headerlink\" href=\"#id168\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Sphere</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"random-uniform-on-sphere\">\n<h3>random_uniform_on_sphere<a class=\"headerlink\" href=\"#random-uniform-on-sphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere_stats.random_uniform_on_sphere\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere_stats.</span></span><span class=\"sig-name descname\"><span class=\"pre\">random_uniform_on_sphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">coords</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'xyz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.random_uniform_on_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Random unit vectors from a uniform distribution on the sphere.\n\nParameters\n\u2014\u2014\u2014-\nn : int\n    Number of random vectors\ncoords : {\u2018xyz\u2019, \u2018radians\u2019, \u2018degrees\u2019}\n    \u2018xyz\u2019 for cartesian form\n    \u2018radians\u2019 for spherical form in rads\n    \u2018degrees\u2019 for spherical form in degrees\n\nNotes\n\u2014\u2013\nThe uniform distribution on the sphere, parameterized by spherical\ncoordinates <span class=\"math notranslate nohighlight\">\\((\\theta, \\phi)\\)</span>, should verify <span class=\"math notranslate nohighlight\">\\(\\phi\\sim U[0,2\\pi]\\)</span>, while\n<span class=\"math notranslate nohighlight\">\\(z=\\cos(\\theta)\\sim U[-1,1]\\)</span>.\n\nReferences\n\u2014\u2014\u2014-\n.. [1] <a class=\"reference external\" href=\"http://mathworld.wolfram.com/SpherePointPicking.html\">http://mathworld.wolfram.com/SpherePointPicking.html</a>.\n\nReturns\n\u2014\u2014-\nX : array, shape (n,3) if coords=\u2019xyz\u2019 or shape (n,2) otherwise\n    Uniformly distributed vectors on the unit sphere.\n\nExamples\n\u2014\u2014\u2013\n&gt;&gt;&gt; from dipy.core.sphere_stats import random_uniform_on_sphere\n&gt;&gt;&gt; X = random_uniform_on_sphere(4, \u2018radians\u2019)\n&gt;&gt;&gt; X.shape == (4, 2)\nTrue\n&gt;&gt;&gt; X = random_uniform_on_sphere(4, \u2018xyz\u2019)\n&gt;&gt;&gt; X.shape == (4, 3)\nTrue</p>\n</dd></dl>\n\n</section>\n<section id=\"eigenstats\">\n<h3>eigenstats<a class=\"headerlink\" href=\"#eigenstats\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere_stats.eigenstats\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere_stats.</span></span><span class=\"sig-name descname\"><span class=\"pre\">eigenstats</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.05</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.eigenstats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Principal direction and confidence ellipse\n\nImplements equations in section 6.3.1(ii) of Fisher, Lewis and\nEmbleton, supplemented by equations in section 3.2.5.\n\nParameters\n\u2014\u2014\u2014-\npoints : array_like (N,3)\n    array of points on the sphere of radius 1 in <span class=\"math notranslate nohighlight\">\\(\\mathbb{R}^3\\)</span>\nalpha : real or None\n    1 minus the coverage for the confidence ellipsoid, e.g. 0.05 for 95%\n    coverage.\n\nReturns\n\u2014\u2014-\ncentre : vector (3,)\n    centre of ellipsoid\nb1 : vector (2,)\n    lengths of semi-axes of ellipsoid</p>\n</dd></dl>\n\n</section>\n<section id=\"compare-orientation-sets\">\n<h3>compare_orientation_sets<a class=\"headerlink\" href=\"#compare-orientation-sets\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere_stats.compare_orientation_sets\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere_stats.</span></span><span class=\"sig-name descname\"><span class=\"pre\">compare_orientation_sets</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">T</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.compare_orientation_sets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the mean cosine distance of the best match between\npoints of two sets of vectors S and T (angular similarity)</p>\n<section id=\"id169\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id169\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>S<span class=\"classifier\">array, shape (m,d)</span></dt><dd><p>First set of vectors.</p>\n</dd>\n<dt>T<span class=\"classifier\">array, shape (n,d)</span></dt><dd><p>Second set of vectors.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id170\">\n<h4>Returns<a class=\"headerlink\" href=\"#id170\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>max_mean_cosine<span class=\"classifier\">float</span></dt><dd><p>Maximum mean cosine distance.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id171\">\n<h4>Examples<a class=\"headerlink\" href=\"#id171\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.sphere_stats</span> <span class=\"kn\">import</span> <span class=\"n\">compare_orientation_sets</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">compare_orientation_sets</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">1.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">compare_orientation_sets</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">1.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.sphere_stats</span> <span class=\"kn\">import</span> <span class=\"n\">compare_orientation_sets</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">compare_orientation_sets</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">1.0</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"angular-similarity\">\n<h3>angular_similarity<a class=\"headerlink\" href=\"#angular-similarity\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.sphere_stats.angular_similarity\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.sphere_stats.</span></span><span class=\"sig-name descname\"><span class=\"pre\">angular_similarity</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">T</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.angular_similarity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the cosine distance of the best match between\npoints of two sets of vectors S and T</p>\n<section id=\"id172\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id172\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>S : array, shape (m,d)\nT : array, shape (n,d)</p>\n</section>\n<section id=\"id173\">\n<h4>Returns<a class=\"headerlink\" href=\"#id173\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>max_cosine_distance:float</p>\n</section>\n<section id=\"id174\">\n<h4>Examples<a class=\"headerlink\" href=\"#id174\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.sphere_stats</span> <span class=\"kn\">import</span> <span class=\"n\">angular_similarity</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">2.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">2.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">2.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">3.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">2.7071067811865475</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">1.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">0.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">]])</span>\n</pre></div>\n</div>\n<p>Now we use <code class=\"docutils literal notranslate\"><span class=\"pre\">print</span></code> to reduce the precision of of the printed output\n(so the doctests don\u2019t detect unimportant differences)</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.12f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">0.707106781187</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.12f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">0.707106781187</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.12f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">0.707106781187</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"create-unit-sphere\">\n<h3>create_unit_sphere<a class=\"headerlink\" href=\"#create-unit-sphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.subdivide_octahedron.create_unit_sphere\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.subdivide_octahedron.</span></span><span class=\"sig-name descname\"><span class=\"pre\">create_unit_sphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">recursion_level</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.create_unit_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a unit sphere by subdividing a unit octahedron.\n\nStarts with a unit octahedron and subdivides the faces, projecting the\nresulting points onto the surface of a unit sphere.\n\nParameters\n\u2014\u2014\u2014-\nrecursion_level : int\n    Level of subdivision, recursion_level=1 will return an octahedron,\n    anything bigger will return a more subdivided sphere. The sphere will\n    have <span class=\"math notranslate nohighlight\">\\(4^recursion_level+2\\)</span> vertices.\n\nReturns\n\u2014\u2014-\nSphere :\n    The unit sphere.\n\nSee Also\n\u2014\u2014\u2013\ncreate_unit_hemisphere, Sphere</p>\n</dd></dl>\n\n</section>\n<section id=\"create-unit-hemisphere\">\n<h3>create_unit_hemisphere<a class=\"headerlink\" href=\"#create-unit-hemisphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.subdivide_octahedron.create_unit_hemisphere\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.subdivide_octahedron.</span></span><span class=\"sig-name descname\"><span class=\"pre\">create_unit_hemisphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">recursion_level</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.create_unit_hemisphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a unit sphere by subdividing a unit octahedron, returns half\nthe sphere.\n\nParameters\n\u2014\u2014\u2014-\nrecursion_level : int\n    Level of subdivision, recursion_level=1 will return an octahedron,\n    anything bigger will return a more subdivided sphere. The sphere will\n    have <span class=\"math notranslate nohighlight\">\\((4^recursion_level+2)/2\\)</span> vertices.\n\nReturns\n\u2014\u2014-\nHemiSphere :\n    Half of a unit sphere.\n\nSee Also\n\u2014\u2014\u2013\ncreate_unit_sphere, Sphere, HemiSphere</p>\n</dd></dl>\n\n</section>\n<section id=\"cshift3d\">\n<h3>cshift3D<a class=\"headerlink\" href=\"#cshift3d\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.wavelet.cshift3D\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.wavelet.</span></span><span class=\"sig-name descname\"><span class=\"pre\">cshift3D</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">m</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">d</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.wavelet.cshift3D\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>3D Circular Shift</p>\n<section id=\"id175\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id175\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x<span class=\"classifier\">3D ndarray</span></dt><dd><p>N1 by N2 by N3 array</p>\n</dd>\n<dt>m<span class=\"classifier\">int</span></dt><dd><p>amount of shift</p>\n</dd>\n<dt>d<span class=\"classifier\">int</span></dt><dd><p>dimension of shift (d = 1,2,3)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id176\">\n<h4>Returns<a class=\"headerlink\" href=\"#id176\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>y<span class=\"classifier\">3D ndarray</span></dt><dd><p>array x will be shifed by m samples down\nalong dimension d</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"permutationinverse\">\n<h3>permutationinverse<a class=\"headerlink\" href=\"#permutationinverse\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.wavelet.permutationinverse\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.wavelet.</span></span><span class=\"sig-name descname\"><span class=\"pre\">permutationinverse</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">perm</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.wavelet.permutationinverse\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Function generating inverse of the permutation</p>\n<section id=\"id177\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id177\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>perm : 1D array</p>\n</section>\n<section id=\"id178\">\n<h4>Returns<a class=\"headerlink\" href=\"#id178\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>inverse<span class=\"classifier\">1D array</span></dt><dd><p>permutation inverse of the input</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"afb3d-a\">\n<h3>afb3D_A<a class=\"headerlink\" href=\"#afb3d-a\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.wavelet.afb3D_A\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.wavelet.</span></span><span class=\"sig-name descname\"><span class=\"pre\">afb3D_A</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">af</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">d</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.wavelet.afb3D_A\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>3D Analysis Filter Bank</dt><dd><p>(along one dimension only)</p>\n</dd>\n</dl>\n<section id=\"id179\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id179\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x<span class=\"classifier\">3D ndarray</span></dt><dd><dl class=\"simple\">\n<dt>N1xN2xN2 matrix, where min(N1,N2,N3) &gt; 2*length(filter)</dt><dd><p>(Ni are even)</p>\n</dd>\n</dl>\n</dd>\n<dt>af<span class=\"classifier\">2D ndarray</span></dt><dd><p>analysis filter for the columns\naf[:, 1] - lowpass filter\naf[:, 2] - highpass filter</p>\n</dd>\n<dt>d<span class=\"classifier\">int</span></dt><dd><p>dimension of filtering (d = 1, 2 or 3)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id180\">\n<h4>Returns<a class=\"headerlink\" href=\"#id180\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>lo<span class=\"classifier\">1D array</span></dt><dd><p>lowpass subbands</p>\n</dd>\n<dt>hi<span class=\"classifier\">1D array</span></dt><dd><p>highpass subbands</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"sfb3d-a\">\n<h3>sfb3D_A<a class=\"headerlink\" href=\"#sfb3d-a\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.wavelet.sfb3D_A\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.wavelet.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sfb3D_A</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">lo</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hi</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">d</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.wavelet.sfb3D_A\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>3D Synthesis Filter Bank</dt><dd><p>(along single dimension only)</p>\n</dd>\n</dl>\n<section id=\"id181\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id181\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>lo<span class=\"classifier\">1D array</span></dt><dd><p>lowpass subbands</p>\n</dd>\n<dt>hi<span class=\"classifier\">1D array</span></dt><dd><p>highpass subbands</p>\n</dd>\n<dt>sf<span class=\"classifier\">2D ndarray</span></dt><dd><p>synthesis filters</p>\n</dd>\n<dt>d<span class=\"classifier\">int</span></dt><dd><p>dimension of filtering</p>\n</dd>\n</dl>\n</section>\n<section id=\"id182\">\n<h4>Returns<a class=\"headerlink\" href=\"#id182\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>y<span class=\"classifier\">3D ndarray</span></dt><dd><p>the N1xN2xN3 matrix</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"sfb3d\">\n<h3>sfb3D<a class=\"headerlink\" href=\"#sfb3d\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.wavelet.sfb3D\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.wavelet.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sfb3D</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">lo</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hi</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sf1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sf2</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sf3</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.wavelet.sfb3D\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>3D Synthesis Filter Bank</p>\n<section id=\"id183\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id183\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>lo<span class=\"classifier\">1D array</span></dt><dd><p>lowpass subbands</p>\n</dd>\n<dt>hi<span class=\"classifier\">1D array</span></dt><dd><p>highpass subbands</p>\n</dd>\n<dt>sfi<span class=\"classifier\">2D ndarray</span></dt><dd><p>synthesis filters for dimension i</p>\n</dd>\n</dl>\n</section>\n<section id=\"id184\">\n<h4>Returns<a class=\"headerlink\" href=\"#id184\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>y<span class=\"classifier\">3D ndarray</span></dt><dd><p>output array</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"afb3d\">\n<h3>afb3D<a class=\"headerlink\" href=\"#afb3d\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.wavelet.afb3D\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.wavelet.</span></span><span class=\"sig-name descname\"><span class=\"pre\">afb3D</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">af1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">af2</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">af3</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.wavelet.afb3D\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>3D Analysis Filter Bank</p>\n<section id=\"id185\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id185\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x<span class=\"classifier\">3D ndarray</span></dt><dd><p>N1 by N2 by N3 array matrix, where\n1) N1, N2, N3 all even\n2) N1 &gt;= 2*len(af1)\n3) N2 &gt;= 2*len(af2)\n4) N3 &gt;= 2*len(af3)</p>\n</dd>\n<dt>afi<span class=\"classifier\">2D ndarray</span></dt><dd><p>analysis filters for dimension i\nafi[:, 1] - lowpass filter\nafi[:, 2] - highpass filter</p>\n</dd>\n</dl>\n</section>\n<section id=\"id186\">\n<h4>Returns<a class=\"headerlink\" href=\"#id186\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>lo<span class=\"classifier\">1D array</span></dt><dd><p>lowpass subband</p>\n</dd>\n<dt>hi<span class=\"classifier\">1D array</span></dt><dd><p>highpass subbands, h[d]- d = 1..7</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"dwt3d\">\n<h3>dwt3D<a class=\"headerlink\" href=\"#dwt3d\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.wavelet.dwt3D\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.wavelet.</span></span><span class=\"sig-name descname\"><span class=\"pre\">dwt3D</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">J</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">af</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.wavelet.dwt3D\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>3-D Discrete Wavelet Transform</p>\n<section id=\"id187\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id187\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>x<span class=\"classifier\">3D ndarray</span></dt><dd><p>N1 x N2 x N3 matrix\n1) Ni all even\n2) min(Ni) &gt;= 2^(J-1)*length(af)</p>\n</dd>\n<dt>J<span class=\"classifier\">int</span></dt><dd><p>number of stages</p>\n</dd>\n<dt>af<span class=\"classifier\">2D ndarray</span></dt><dd><p>analysis filters</p>\n</dd>\n</dl>\n</section>\n<section id=\"id188\">\n<h4>Returns<a class=\"headerlink\" href=\"#id188\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>w<span class=\"classifier\">cell array</span></dt><dd><p>wavelet coefficients</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"idwt3d\">\n<h3>idwt3D<a class=\"headerlink\" href=\"#idwt3d\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.core.wavelet.idwt3D\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.core.wavelet.</span></span><span class=\"sig-name descname\"><span class=\"pre\">idwt3D</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">w</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">J</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sf</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.wavelet.idwt3D\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Inverse 3-D Discrete Wavelet Transform</p>\n<section id=\"id189\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id189\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>w<span class=\"classifier\">cell array</span></dt><dd><p>wavelet coefficient</p>\n</dd>\n<dt>J<span class=\"classifier\">int</span></dt><dd><p>number of stages</p>\n</dd>\n<dt>sf<span class=\"classifier\">2D ndarray</span></dt><dd><p>synthesis filters</p>\n</dd>\n</dl>\n</section>\n<section id=\"id190\">\n<h4>Returns<a class=\"headerlink\" href=\"#id190\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>y<span class=\"classifier\">3D ndarray</span></dt><dd><p>output array</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>", "N", "next"], ["reference/dipy.boots", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">boots</span></code>", "P", "previous"]], "sourcename": "reference/dipy.core.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.geometry\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.geometry</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.gradients\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.gradients</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.graph\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.graph</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.histeq\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.histeq</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.ndindex\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.ndindex</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.onetime\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.onetime</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.optimize\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.optimize</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.profile\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.profile</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.rng\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.rng</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.sphere\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.sphere</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.sphere_stats\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.sphere_stats</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.subdivide_octahedron\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.subdivide_octahedron</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.wavelet\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.wavelet</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#tuple2axes\">_TUPLE2AXES</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry._TUPLE2AXES\"><code class=\"docutils literal notranslate\"><span class=\"pre\">_TUPLE2AXES()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sphere2cart\">sphere2cart</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.sphere2cart\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sphere2cart()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#cart2sphere\">cart2sphere</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.cart2sphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cart2sphere()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sph2latlon\">sph2latlon</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.sph2latlon\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sph2latlon()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#normalized-vector\">normalized_vector</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.normalized_vector\"><code class=\"docutils literal notranslate\"><span class=\"pre\">normalized_vector()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#vector-norm\">vector_norm</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.vector_norm\"><code class=\"docutils literal notranslate\"><span class=\"pre\">vector_norm()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#rodrigues-axis-rotation\">rodrigues_axis_rotation</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.rodrigues_axis_rotation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">rodrigues_axis_rotation()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#nearest-pos-semi-def\">nearest_pos_semi_def</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.nearest_pos_semi_def\"><code class=\"docutils literal notranslate\"><span class=\"pre\">nearest_pos_semi_def()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sphere-distance\">sphere_distance</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.sphere_distance\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_distance()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#cart-distance\">cart_distance</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.cart_distance\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cart_distance()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#vector-cosine\">vector_cosine</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.vector_cosine\"><code class=\"docutils literal notranslate\"><span class=\"pre\">vector_cosine()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#lambert-equal-area-projection-polar\">lambert_equal_area_projection_polar</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.lambert_equal_area_projection_polar\"><code class=\"docutils literal notranslate\"><span class=\"pre\">lambert_equal_area_projection_polar()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#lambert-equal-area-projection-cart\">lambert_equal_area_projection_cart</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.lambert_equal_area_projection_cart\"><code class=\"docutils literal notranslate\"><span class=\"pre\">lambert_equal_area_projection_cart()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#euler-matrix\">euler_matrix</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.euler_matrix\"><code class=\"docutils literal notranslate\"><span class=\"pre\">euler_matrix()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#compose-matrix\">compose_matrix</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.compose_matrix\"><code class=\"docutils literal notranslate\"><span class=\"pre\">compose_matrix()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#decompose-matrix\">decompose_matrix</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.decompose_matrix\"><code class=\"docutils literal notranslate\"><span class=\"pre\">decompose_matrix()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#circumradius\">circumradius</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.circumradius\"><code class=\"docutils literal notranslate\"><span class=\"pre\">circumradius()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#vec2vec-rotmat\">vec2vec_rotmat</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.vec2vec_rotmat\"><code class=\"docutils literal notranslate\"><span class=\"pre\">vec2vec_rotmat()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#compose-transformations\">compose_transformations</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.compose_transformations\"><code class=\"docutils literal notranslate\"><span class=\"pre\">compose_transformations()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#perpendicular-directions\">perpendicular_directions</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.perpendicular_directions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">perpendicular_directions()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dist-to-corner\">dist_to_corner</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.dist_to_corner\"><code class=\"docutils literal notranslate\"><span class=\"pre\">dist_to_corner()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#is-hemispherical\">is_hemispherical</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.geometry.is_hemispherical\"><code class=\"docutils literal notranslate\"><span class=\"pre\">is_hemispherical()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#gradienttable\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GradientTable</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.b0s_mask\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable.b0s_mask()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.bvals\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable.bvals()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.bvecs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable.bvecs()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.gradient_strength\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable.gradient_strength()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.info\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable.info</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.qvals\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable.qvals()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.tau\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GradientTable.tau()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#logger\">logger</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.logger\"><code class=\"docutils literal notranslate\"><span class=\"pre\">logger()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unique-bvals\">unique_bvals</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.unique_bvals\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unique_bvals()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#gradient-table-from-bvals-bvecs\">gradient_table_from_bvals_bvecs</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table_from_bvals_bvecs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">gradient_table_from_bvals_bvecs()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#gradient-table-from-qvals-bvecs\">gradient_table_from_qvals_bvecs</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table_from_qvals_bvecs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">gradient_table_from_qvals_bvecs()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#gradient-table-from-gradient-strength-bvecs\">gradient_table_from_gradient_strength_bvecs</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table_from_gradient_strength_bvecs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">gradient_table_from_gradient_strength_bvecs()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#gradient-table\">gradient_table</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table\"><code class=\"docutils literal notranslate\"><span class=\"pre\">gradient_table()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reorient-bvecs\">reorient_bvecs</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.reorient_bvecs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reorient_bvecs()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#generate-bvecs\">generate_bvecs</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.generate_bvecs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">generate_bvecs()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#round-bvals\">round_bvals</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.round_bvals\"><code class=\"docutils literal notranslate\"><span class=\"pre\">round_bvals()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unique-bvals-tolerance\">unique_bvals_tolerance</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.unique_bvals_tolerance\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unique_bvals_tolerance()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#get-bval-indices\">get_bval_indices</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.get_bval_indices\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_bval_indices()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unique-bvals-magnitude\">unique_bvals_magnitude</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.unique_bvals_magnitude\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unique_bvals_magnitude()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#check-multi-b\">check_multi_b</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.check_multi_b\"><code class=\"docutils literal notranslate\"><span class=\"pre\">check_multi_b()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#btens-to-params\">btens_to_params</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.btens_to_params\"><code class=\"docutils literal notranslate\"><span class=\"pre\">btens_to_params()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#params-to-btens\">params_to_btens</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.params_to_btens\"><code class=\"docutils literal notranslate\"><span class=\"pre\">params_to_btens()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ornt-mapping\">ornt_mapping</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.ornt_mapping\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ornt_mapping()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reorient-vectors\">reorient_vectors</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.reorient_vectors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reorient_vectors()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reorient-on-axis\">reorient_on_axis</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.reorient_on_axis\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reorient_on_axis()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#orientation-from-string\">orientation_from_string</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.orientation_from_string\"><code class=\"docutils literal notranslate\"><span class=\"pre\">orientation_from_string()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#orientation-to-string\">orientation_to_string</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.gradients.orientation_to_string\"><code class=\"docutils literal notranslate\"><span class=\"pre\">orientation_to_string()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#graph\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Graph</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.add_edge\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.add_edge()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.add_node\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.add_node()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.all_paths\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.all_paths()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.children\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.children()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.del_node\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.del_node()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.del_node_and_edges\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.del_node_and_edges()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.down\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.down()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.down_short\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.down_short()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.parents\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.parents()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.shortest_path\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.shortest_path()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.up\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.up()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.up_short\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Graph.up_short()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#histeq\">histeq</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.histeq.histeq\"><code class=\"docutils literal notranslate\"><span class=\"pre\">histeq()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ndindex\">ndindex</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.ndindex.ndindex\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ndindex()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#resetmixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResetMixin</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.onetime.ResetMixin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ResetMixin</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.onetime.ResetMixin.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ResetMixin.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.onetime.ResetMixin.reset\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ResetMixin.reset()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#onetimeproperty\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OneTimeProperty</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.onetime.OneTimeProperty\"><code class=\"docutils literal notranslate\"><span class=\"pre\">OneTimeProperty</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.onetime.OneTimeProperty.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">OneTimeProperty.__init__()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#auto-attr\">auto_attr</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.onetime.auto_attr\"><code class=\"docutils literal notranslate\"><span class=\"pre\">auto_attr()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#optimizer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Optimizer</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Optimizer</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Optimizer.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer.evolution\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Optimizer.evolution</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer.fopt\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Optimizer.fopt</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer.message\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Optimizer.message</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer.nfev\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Optimizer.nfev</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer.nit\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Optimizer.nit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer.print_summary\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Optimizer.print_summary()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer.xopt\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Optimizer.xopt</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sklearnlinearsolver\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SKLearnLinearSolver</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SKLearnLinearSolver</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SKLearnLinearSolver.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver.fit\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SKLearnLinearSolver.fit()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver.predict\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SKLearnLinearSolver.predict()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#nonnegativeleastsquares\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NonNegativeLeastSquares</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.NonNegativeLeastSquares\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NonNegativeLeastSquares</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.NonNegativeLeastSquares.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NonNegativeLeastSquares.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.NonNegativeLeastSquares.fit\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NonNegativeLeastSquares.fit()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#positivedefiniteleastsquares\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PositiveDefiniteLeastSquares</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.PositiveDefiniteLeastSquares\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PositiveDefiniteLeastSquares</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.PositiveDefiniteLeastSquares.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PositiveDefiniteLeastSquares.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.PositiveDefiniteLeastSquares.solve\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PositiveDefiniteLeastSquares.solve()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#spdot\">spdot</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.spdot\"><code class=\"docutils literal notranslate\"><span class=\"pre\">spdot()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sparse-nnls\">sparse_nnls</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.optimize.sparse_nnls\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sparse_nnls()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#profiler\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Profiler</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.profile.Profiler\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Profiler</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.profile.Profiler.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Profiler.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.profile.Profiler.print_stats\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Profiler.print_stats()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#wichmannhill2006\">WichmannHill2006</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.rng.WichmannHill2006\"><code class=\"docutils literal notranslate\"><span class=\"pre\">WichmannHill2006()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#wichmannhill1982\">WichmannHill1982</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.rng.WichmannHill1982\"><code class=\"docutils literal notranslate\"><span class=\"pre\">WichmannHill1982()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#lecuyer\">LEcuyer</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.rng.LEcuyer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LEcuyer()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.edges\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere.edges()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.faces\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere.faces()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.find_closest\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere.find_closest()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.subdivide\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere.subdivide()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.vertices\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere.vertices()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.x\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere.x</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.y\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere.y</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.z\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sphere.z</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#hemisphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HemiSphere</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.faces\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.faces()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.find_closest\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.find_closest()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.from_sphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.from_sphere()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.mirror\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.mirror()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.subdivide\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.subdivide()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#faces-from-sphere-vertices\">faces_from_sphere_vertices</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.faces_from_sphere_vertices\"><code class=\"docutils literal notranslate\"><span class=\"pre\">faces_from_sphere_vertices()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unique-edges\">unique_edges</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.unique_edges\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unique_edges()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unique-sets\">unique_sets</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.unique_sets\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unique_sets()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#disperse-charges\">disperse_charges</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.disperse_charges\"><code class=\"docutils literal notranslate\"><span class=\"pre\">disperse_charges()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#disperse-charges-alt\">disperse_charges_alt</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.disperse_charges_alt\"><code class=\"docutils literal notranslate\"><span class=\"pre\">disperse_charges_alt()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#euler-characteristic-check\">euler_characteristic_check</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.euler_characteristic_check\"><code class=\"docutils literal notranslate\"><span class=\"pre\">euler_characteristic_check()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#octahedron-vertices\">octahedron_vertices</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.octahedron_vertices\"><code class=\"docutils literal notranslate\"><span class=\"pre\">octahedron_vertices()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#octahedron-faces\">octahedron_faces</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.octahedron_faces\"><code class=\"docutils literal notranslate\"><span class=\"pre\">octahedron_faces()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#icosahedron-vertices\">icosahedron_vertices</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.icosahedron_vertices\"><code class=\"docutils literal notranslate\"><span class=\"pre\">icosahedron_vertices()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#icosahedron-faces\">icosahedron_faces</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.icosahedron_faces\"><code class=\"docutils literal notranslate\"><span class=\"pre\">icosahedron_faces()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unit-octahedron\">unit_octahedron</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.unit_octahedron\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unit_octahedron()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unit-icosahedron\">unit_icosahedron</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.unit_icosahedron\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unit_icosahedron()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#hemi-icosahedron\">hemi_icosahedron</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere.hemi_icosahedron\"><code class=\"docutils literal notranslate\"><span class=\"pre\">hemi_icosahedron()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#random-uniform-on-sphere\">random_uniform_on_sphere</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.random_uniform_on_sphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">random_uniform_on_sphere()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#eigenstats\">eigenstats</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.eigenstats\"><code class=\"docutils literal notranslate\"><span class=\"pre\">eigenstats()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#compare-orientation-sets\">compare_orientation_sets</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.compare_orientation_sets\"><code class=\"docutils literal notranslate\"><span class=\"pre\">compare_orientation_sets()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#angular-similarity\">angular_similarity</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.angular_similarity\"><code class=\"docutils literal notranslate\"><span class=\"pre\">angular_similarity()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#create-unit-sphere\">create_unit_sphere</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.create_unit_sphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">create_unit_sphere()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#create-unit-hemisphere\">create_unit_hemisphere</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.create_unit_hemisphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">create_unit_hemisphere()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#cshift3d\">cshift3D</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.wavelet.cshift3D\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cshift3D()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#permutationinverse\">permutationinverse</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.wavelet.permutationinverse\"><code class=\"docutils literal notranslate\"><span class=\"pre\">permutationinverse()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#afb3d-a\">afb3D_A</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.wavelet.afb3D_A\"><code class=\"docutils literal notranslate\"><span class=\"pre\">afb3D_A()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sfb3d-a\">sfb3D_A</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.wavelet.sfb3D_A\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sfb3D_A()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sfb3d\">sfb3D</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.wavelet.sfb3D\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sfb3D()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#afb3d\">afb3D</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.wavelet.afb3D\"><code class=\"docutils literal notranslate\"><span class=\"pre\">afb3D()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dwt3d\">dwt3D</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.wavelet.dwt3D\"><code class=\"docutils literal notranslate\"><span class=\"pre\">dwt3D()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#idwt3d\">idwt3D</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.core.wavelet.idwt3D\"><code class=\"docutils literal notranslate\"><span class=\"pre\">idwt3D()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.core", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}