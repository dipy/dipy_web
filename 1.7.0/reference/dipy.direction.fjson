{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.denoise/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>"}, "next": {"link": "../dipy.io/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "meta": {}, "body": "<section id=\"module-dipy.direction\">\n<span id=\"direction\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code><a class=\"headerlink\" href=\"#module-dipy.direction\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n<section id=\"module-dipy.direction.peaks\">\n<span id=\"module-direction-peaks\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.peaks</span></code><a class=\"headerlink\" href=\"#module-dipy.direction.peaks\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.PeaksAndMetrics\" title=\"dipy.direction.peaks.PeaksAndMetrics\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions_nl\" title=\"dipy.direction.peaks.peak_directions_nl\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peak_directions_nl</span></code></a>(sphere_eval[,\u00a0...])</p></td>\n<td><p>Non Linear Direction Finder.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions\" title=\"dipy.direction.peaks.peak_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peak_directions</span></code></a>(odf,\u00a0sphere[,\u00a0...])</p></td>\n<td><p>Get the directions of odf peaks.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.peaks_from_model\" title=\"dipy.direction.peaks.peaks_from_model\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peaks_from_model</span></code></a>(model,\u00a0data,\u00a0sphere,\u00a0...[,\u00a0...])</p></td>\n<td><p>Fit the model to data and computes peaks and metrics</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.reshape_peaks_for_visualization\" title=\"dipy.direction.peaks.reshape_peaks_for_visualization\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reshape_peaks_for_visualization</span></code></a>(peaks)</p></td>\n<td><p>Reshape peaks for visualization.</p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"peaksandmetrics\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.peaks.PeaksAndMetrics\" title=\"dipy.direction.peaks.PeaksAndMetrics\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a><a class=\"headerlink\" href=\"#peaksandmetrics\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.direction.peaks.PeaksAndMetrics\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.direction.peaks.</span></span><span class=\"sig-name descname\"><span class=\"pre\">PeaksAndMetrics</span></span><a class=\"headerlink\" href=\"#dipy.direction.peaks.PeaksAndMetrics\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EuDXDirectionGetter</span></code></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.direction.peaks.PeaksAndMetrics.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.PeaksAndMetrics.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"peak-directions-nl\">\n<h3>peak_directions_nl<a class=\"headerlink\" href=\"#peak-directions-nl\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.direction.peaks.peak_directions_nl\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.direction.peaks.</span></span><span class=\"sig-name descname\"><span class=\"pre\">peak_directions_nl</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere_eval</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">relative_peak_threshold=0.25</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_separation_angle=25</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere=&lt;dipy.core.sphere.HemiSphere</span> <span class=\"pre\">object&gt;</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xtol=1e-07</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.peak_directions_nl\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Non Linear Direction Finder.</p>\n<section id=\"parameters\">\n<h4>Parameters<a class=\"headerlink\" href=\"#parameters\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sphere_eval<span class=\"classifier\">callable</span></dt><dd><p>A function which can be evaluated on a sphere.</p>\n</dd>\n<dt>relative_peak_threshold<span class=\"classifier\">float</span></dt><dd><p>Only return peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code> where m\nis the largest peak.</p>\n</dd>\n<dt>min_separation_angle<span class=\"classifier\">float in [0, 90]</span></dt><dd><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</dd>\n<dt>sphere<span class=\"classifier\">Sphere</span></dt><dd><p>A discrete Sphere. The points on the sphere will be used for initial\nestimate of maximums.</p>\n</dd>\n<dt>xtol<span class=\"classifier\">float</span></dt><dd><p>Relative tolerance for optimization.</p>\n</dd>\n</dl>\n</section>\n<section id=\"returns\">\n<h4>Returns<a class=\"headerlink\" href=\"#returns\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>directions<span class=\"classifier\">array (N, 3)</span></dt><dd><p>Points on the sphere corresponding to N local maxima on the sphere.</p>\n</dd>\n<dt>values<span class=\"classifier\">array (N,)</span></dt><dd><p>Value of sphere_eval at each point on directions.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"peak-directions\">\n<h3>peak_directions<a class=\"headerlink\" href=\"#peak-directions\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.direction.peaks.peak_directions\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.direction.peaks.</span></span><span class=\"sig-name descname\"><span class=\"pre\">peak_directions</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">odf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">relative_peak_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_separation_angle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">25</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_symmetric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.peak_directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the directions of odf peaks.</p>\n<p>Peaks are defined as points on the odf that are greater than at least one\nneighbor and greater than or equal to all neighbors. Peaks are sorted in\ndescending order by their values then filtered based on their relative size\nand spacing on the sphere. An odf may have 0 peaks, for example if the odf\nis perfectly isotropic.</p>\n<section id=\"id1\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>odf<span class=\"classifier\">1d ndarray</span></dt><dd><p>The odf function evaluated on the vertices of <cite>sphere</cite></p>\n</dd>\n<dt>sphere<span class=\"classifier\">Sphere</span></dt><dd><p>The Sphere providing discrete directions for evaluation.</p>\n</dd>\n<dt>relative_peak_threshold<span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Only peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">+</span> <span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">scale</span></code> are\nkept, where <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">=</span> <span class=\"pre\">max(0,</span> <span class=\"pre\">odf.min())</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">scale</span> <span class=\"pre\">=</span> <span class=\"pre\">odf.max()</span> <span class=\"pre\">-</span> <span class=\"pre\">min</span></code>.</p>\n</dd>\n<dt>min_separation_angle<span class=\"classifier\">float in [0, 90]</span></dt><dd><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</dd>\n<dt>is_symmetric<span class=\"classifier\">bool, optional</span></dt><dd><p>If True, v is considered equal to -v.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id2\">\n<h4>Returns<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>directions<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>N vertices for sphere, one for each peak</p>\n</dd>\n<dt>values<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak values</p>\n</dd>\n<dt>indices<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak indices of the directions on the sphere</p>\n</dd>\n</dl>\n</section>\n<section id=\"notes\">\n<h4>Notes<a class=\"headerlink\" href=\"#notes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>If the odf has any negative values, they will be clipped to zeros.</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"peaks-from-model\">\n<h3>peaks_from_model<a class=\"headerlink\" href=\"#peaks-from-model\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.direction.peaks.peaks_from_model\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.direction.peaks.</span></span><span class=\"sig-name descname\"><span class=\"pre\">peaks_from_model</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">relative_peak_threshold</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_separation_angle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_odf</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_sh</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gfa_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">normalize_peaks</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_basis_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">npeaks</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">B</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">invB</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parallel</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_processes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.peaks_from_model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit the model to data and computes peaks and metrics</p>\n<section id=\"id3\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>model<span class=\"classifier\">a model instance</span></dt><dd><p><cite>model</cite> will be used to fit the data.</p>\n</dd>\n<dt>data<span class=\"classifier\">ndarray</span></dt><dd><p>Diffusion data.</p>\n</dd>\n<dt>sphere<span class=\"classifier\">Sphere</span></dt><dd><p>The Sphere providing discrete directions for evaluation.</p>\n</dd>\n<dt>relative_peak_threshold<span class=\"classifier\">float</span></dt><dd><p>Only return peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code> where m\nis the largest peak.</p>\n</dd>\n<dt>min_separation_angle<span class=\"classifier\">float in [0, 90] The minimum distance between</span></dt><dd><p>directions. If two peaks are too close only the larger of the two is\nreturned.</p>\n</dd>\n<dt>mask<span class=\"classifier\">array, optional</span></dt><dd><p>If <cite>mask</cite> is provided, voxels that are False in <cite>mask</cite> are skipped and\nno peaks are returned.</p>\n</dd>\n<dt>return_odf<span class=\"classifier\">bool</span></dt><dd><p>If True, the odfs are returned.</p>\n</dd>\n<dt>return_sh<span class=\"classifier\">bool</span></dt><dd><p>If True, the odf as spherical harmonics coefficients is returned</p>\n</dd>\n<dt>gfa_thr<span class=\"classifier\">float</span></dt><dd><p>Voxels with gfa less than <cite>gfa_thr</cite> are skipped, no peaks are returned.</p>\n</dd>\n<dt>normalize_peaks<span class=\"classifier\">bool</span></dt><dd><p>If true, all peak values are calculated relative to <cite>max(odf)</cite>.</p>\n</dd>\n<dt>sh_order<span class=\"classifier\">int, optional</span></dt><dd><p>Maximum SH order in the SH fit.  For <cite>sh_order</cite>, there will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients (default 8).</p>\n</dd>\n<dt>sh_basis_type<span class=\"classifier\">{None, \u2018tournier07\u2019, \u2018descoteaux07\u2019}</span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> for the default DIPY basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> for the Tournier 2007 <a class=\"footnote-reference brackets\" href=\"#id8\" id=\"id4\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></a> basis, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> for the Descoteaux 2007 <a class=\"footnote-reference brackets\" href=\"#id7\" id=\"id5\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></a> basis\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code>).</p>\n</dd>\n<dt>npeaks<span class=\"classifier\">int</span></dt><dd><p>Maximum number of peaks found (default 5 peaks).</p>\n</dd>\n<dt>B<span class=\"classifier\">ndarray, optional</span></dt><dd><p>Matrix that transforms spherical harmonics to spherical function\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sf</span> <span class=\"pre\">=</span> <span class=\"pre\">np.dot(sh,</span> <span class=\"pre\">B)</span></code>.</p>\n</dd>\n<dt>invB<span class=\"classifier\">ndarray, optional</span></dt><dd><p>Inverse of B.</p>\n</dd>\n<dt>parallel: bool</dt><dd><p>If True, use multiprocessing to compute peaks and metric\n(default False). Temporary files are saved in the default temporary\ndirectory of the system. It can be changed using <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span> <span class=\"pre\">tempfile</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">tempfile.tempdir</span> <span class=\"pre\">=</span> <span class=\"pre\">'/path/to/tempdir'</span></code>.</p>\n</dd>\n<dt>num_processes: int, optional</dt><dd><p>If <cite>parallel</cite> is True, the number of subprocesses to use\n(default multiprocessing.cpu_count()). If &lt; 0 the maximal number of\ncores minus <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code> is used (enter -1 to use as many\ncores as possible). 0 raises an error.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id6\">\n<h4>Returns<a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>pam<span class=\"classifier\">PeaksAndMetrics</span></dt><dd><p>An object with <code class=\"docutils literal notranslate\"><span class=\"pre\">gfa</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">peak_directions</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">peak_values</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">peak_indices</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">odf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">shm_coeffs</span></code> as attributes</p>\n</dd>\n</dl>\n</section>\n<section id=\"references\">\n<h4>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id7\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id5\">1</a><span class=\"fn-bracket\">]</span></span>\n<p>Descoteaux, M., Angelino, E., Fitzgibbons, S. and Deriche, R.\nRegularized, Fast, and Robust Analytical Q-ball Imaging.\nMagn. Reson. Med. 2007;58:497-510.</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id8\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id4\">2</a><span class=\"fn-bracket\">]</span></span>\n<p>Tournier J.D., Calamante F. and Connelly A. Robust determination\nof the fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical deconvolution.\nNeuroImage. 2007;35(4):1459-1472.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"reshape-peaks-for-visualization\">\n<h3>reshape_peaks_for_visualization<a class=\"headerlink\" href=\"#reshape-peaks-for-visualization\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.direction.peaks.reshape_peaks_for_visualization\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.direction.peaks.</span></span><span class=\"sig-name descname\"><span class=\"pre\">reshape_peaks_for_visualization</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">peaks</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.reshape_peaks_for_visualization\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reshape peaks for visualization.</p>\n<p>Reshape and convert to float32 a set of peaks for visualisation with mrtrix\nor the fibernavigator.</p>\n<section id=\"id9\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>peaks: nd array (\u2026, N, 3) or PeaksAndMetrics object</dt><dd><p>The peaks to be reshaped and converted to float32.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id10\">\n<h4>Returns<a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>peaks : nd array (\u2026, 3*N)</p>\n</section>\n</dd></dl>\n\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.io", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "N", "next"], ["reference/dipy.denoise", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>", "P", "previous"]], "sourcename": "reference/dipy.direction.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.direction.peaks\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.peaks</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#peaksandmetrics\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.direction.peaks.PeaksAndMetrics\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.direction.peaks.PeaksAndMetrics.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics.__init__()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#peak-directions-nl\">peak_directions_nl</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions_nl\"><code class=\"docutils literal notranslate\"><span class=\"pre\">peak_directions_nl()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#peak-directions\">peak_directions</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">peak_directions()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#peaks-from-model\">peaks_from_model</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.direction.peaks.peaks_from_model\"><code class=\"docutils literal notranslate\"><span class=\"pre\">peaks_from_model()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reshape-peaks-for-visualization\">reshape_peaks_for_visualization</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.direction.peaks.reshape_peaks_for_visualization\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reshape_peaks_for_visualization()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.direction", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}