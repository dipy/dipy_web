{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.sims/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>"}, "next": {"link": "../dipy.tracking/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "meta": {}, "body": "<section id=\"module-dipy.stats\">\n<span id=\"stats\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code><a class=\"headerlink\" href=\"#module-dipy.stats\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n<section id=\"module-dipy.stats.analysis\">\n<span id=\"module-stats-analysis\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats.analysis</span></code><a class=\"headerlink\" href=\"#module-dipy.stats.analysis\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.stats.analysis.peak_values\" title=\"dipy.stats.analysis.peak_values\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peak_values</span></code></a>(bundle,\u00a0peaks,\u00a0dt,\u00a0pname,\u00a0bname,\u00a0...)</p></td>\n<td><p>Peak_values function finds the generalized fractional anisotropy (gfa)</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.stats.analysis.anatomical_measures\" title=\"dipy.stats.analysis.anatomical_measures\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">anatomical_measures</span></code></a>(bundle,\u00a0metric,\u00a0dt,\u00a0...)</p></td>\n<td><p>Calculates dti measure (eg: FA, MD) per point on streamlines and</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.stats.analysis.assignment_map\" title=\"dipy.stats.analysis.assignment_map\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">assignment_map</span></code></a>(target_bundle,\u00a0model_bundle,\u00a0...)</p></td>\n<td><p>Calculates assignment maps of the target bundle with reference to model bundle centroids.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.stats.analysis.gaussian_weights\" title=\"dipy.stats.analysis.gaussian_weights\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gaussian_weights</span></code></a>(bundle[,\u00a0n_points,\u00a0...])</p></td>\n<td><p>Calculate weights for each streamline/node in a bundle, based on a Mahalanobis distance from the core the bundle, at that node (mean, per default).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.stats.analysis.afq_profile\" title=\"dipy.stats.analysis.afq_profile\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">afq_profile</span></code></a>(data,\u00a0bundle,\u00a0affine[,\u00a0...])</p></td>\n<td><p>Calculates a summarized profile of data for a bundle or tract along its length.</p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"peak-values\">\n<h3>peak_values<a class=\"headerlink\" href=\"#peak-values\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.stats.analysis.peak_values\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.stats.analysis.</span></span><span class=\"sig-name descname\"><span class=\"pre\">peak_values</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">peaks</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">subject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ind</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dir_name</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.stats.analysis.peak_values\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>Peak_values function finds the generalized fractional anisotropy (gfa)</dt><dd><p>and quantitative anisotropy (qa) values from peaks object (eg: csa) for\nevery point on a streamline used while tracking and saves it in hd5\nfile.</p>\n</dd>\n</dl>\n<section id=\"parameters\">\n<h4>Parameters<a class=\"headerlink\" href=\"#parameters\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bundle<span class=\"classifier\">string</span></dt><dd><p>Name of bundle being analyzed</p>\n</dd>\n<dt>peaks<span class=\"classifier\">peaks</span></dt><dd><p>contains peak directions and values</p>\n</dd>\n<dt>dt<span class=\"classifier\">DataFrame</span></dt><dd><p>DataFrame to be populated</p>\n</dd>\n<dt>pname<span class=\"classifier\">string</span></dt><dd><p>Name of the dti metric</p>\n</dd>\n<dt>bname<span class=\"classifier\">string</span></dt><dd><p>Name of bundle being analyzed.</p>\n</dd>\n<dt>subject<span class=\"classifier\">string</span></dt><dd><p>subject number as a string (e.g. 10001)</p>\n</dd>\n<dt>group_id<span class=\"classifier\">integer</span></dt><dd><p>which group subject belongs to 1 patient and 0 for control</p>\n</dd>\n<dt>ind<span class=\"classifier\">integer list</span></dt><dd><p>ind tells which disk number a point belong.</p>\n</dd>\n<dt>dir_name<span class=\"classifier\">string</span></dt><dd><p>path of output directory</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"anatomical-measures\">\n<h3>anatomical_measures<a class=\"headerlink\" href=\"#anatomical-measures\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.stats.analysis.anatomical_measures\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.stats.analysis.</span></span><span class=\"sig-name descname\"><span class=\"pre\">anatomical_measures</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metric</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">subject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ind</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dir_name</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.stats.analysis.anatomical_measures\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>Calculates dti measure (eg: FA, MD) per point on streamlines and</dt><dd><p>save it in hd5 file.</p>\n</dd>\n</dl>\n<section id=\"id1\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bundle<span class=\"classifier\">string</span></dt><dd><p>Name of bundle being analyzed</p>\n</dd>\n<dt>metric<span class=\"classifier\">matrix of float values</span></dt><dd><p>dti metric e.g. FA, MD</p>\n</dd>\n<dt>dt<span class=\"classifier\">DataFrame</span></dt><dd><p>DataFrame to be populated</p>\n</dd>\n<dt>pname<span class=\"classifier\">string</span></dt><dd><p>Name of the dti metric</p>\n</dd>\n<dt>bname<span class=\"classifier\">string</span></dt><dd><p>Name of bundle being analyzed.</p>\n</dd>\n<dt>subject<span class=\"classifier\">string</span></dt><dd><p>subject number as a string (e.g. 10001)</p>\n</dd>\n<dt>group_id<span class=\"classifier\">integer</span></dt><dd><p>which group subject belongs to 1 for patient and 0 control</p>\n</dd>\n<dt>ind<span class=\"classifier\">integer list</span></dt><dd><p>ind tells which disk number a point belong.</p>\n</dd>\n<dt>dir_name<span class=\"classifier\">string</span></dt><dd><p>path of output directory</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"assignment-map\">\n<h3>assignment_map<a class=\"headerlink\" href=\"#assignment-map\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.stats.analysis.assignment_map\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.stats.analysis.</span></span><span class=\"sig-name descname\"><span class=\"pre\">assignment_map</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target_bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">no_disks</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.stats.analysis.assignment_map\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates assignment maps of the target bundle with reference to\nmodel bundle centroids.</p>\n<section id=\"id2\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>target_bundle<span class=\"classifier\">streamlines</span></dt><dd><p>target bundle extracted from subject data in common space</p>\n</dd>\n<dt>model_bundle<span class=\"classifier\">streamlines</span></dt><dd><p>atlas bundle used as reference</p>\n</dd>\n<dt>no_disks<span class=\"classifier\">integer, optional</span></dt><dd><p>Number of disks used for dividing bundle into disks. (Default 100)</p>\n</dd>\n</dl>\n</section>\n<section id=\"references\">\n<h4>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"chandio2020\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Chandio2020<span class=\"fn-bracket\">]</span></span>\n<p>Chandio, B.Q., Risacher, S.L., Pestilli, F., Bullock, D.,</p>\n</div>\n</div>\n<p>Yeh, FC., Koudoro, S., Rokem, A., Harezlak, J., and Garyfallidis, E.\nBundle analytics, a computational framework for investigating the\nshapes and profiles of brain pathways across populations.\nSci Rep 10, 17149 (2020)</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"gaussian-weights\">\n<h3>gaussian_weights<a class=\"headerlink\" href=\"#gaussian-weights\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.stats.analysis.gaussian_weights\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.stats.analysis.</span></span><span class=\"sig-name descname\"><span class=\"pre\">gaussian_weights</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_points=100</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_mahalnobis=False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stat=&lt;function</span> <span class=\"pre\">mean&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.stats.analysis.gaussian_weights\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate weights for each streamline/node in a bundle, based on a\nMahalanobis distance from the core the bundle, at that node (mean, per\ndefault).</p>\n<section id=\"id3\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>bundle<span class=\"classifier\">Streamlines</span></dt><dd><p>The streamlines to weight.</p>\n</dd>\n<dt>n_points<span class=\"classifier\">int, optional</span></dt><dd><p>The number of points to resample to. <em>If the `bundle` is an array, this\ninput is ignored</em>. Default: 100.</p>\n</dd>\n<dt>return_mahalanobis<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to return the Mahalanobis distance instead of the weights.\nDefault: False.</p>\n</dd>\n<dt>stat<span class=\"classifier\">callable, optional.</span></dt><dd><p>The statistic used to calculate the central tendency of streamlines in\neach node. Can be one of {<cite>np.mean</cite>, <cite>np.median</cite>} or other functions\nthat have similar API. Default: <cite>np.mean</cite></p>\n</dd>\n</dl>\n</section>\n<section id=\"returns\">\n<h4>Returns<a class=\"headerlink\" href=\"#returns\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>w<span class=\"classifier\">array of shape (n_streamlines, n_points)</span></dt><dd><p>Weights for each node in each streamline, calculated as its relative\ninverse of the Mahalanobis distance, relative to the distribution of\ncoordinates at that node position across streamlines.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"afq-profile\">\n<h3>afq_profile<a class=\"headerlink\" href=\"#afq-profile\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.stats.analysis.afq_profile\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.stats.analysis.</span></span><span class=\"sig-name descname\"><span class=\"pre\">afq_profile</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_points=100</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">profile_stat=&lt;function</span> <span class=\"pre\">average&gt;</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">orient_by=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">weights=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">**weights_kwarg</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.stats.analysis.afq_profile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates a summarized profile of data for a bundle or tract\nalong its length.</p>\n<p>Follows the approach outlined in <a class=\"reference internal\" href=\"../../examples_built/17_streamline_analysis/afq_tract_profiles/#yeatman2012\" id=\"id4\"><span>[Yeatman2012]</span></a>.</p>\n<section id=\"id5\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data<span class=\"classifier\">3D volume</span></dt><dd><p>The statistic to sample with the streamlines.</p>\n</dd>\n<dt>bundle<span class=\"classifier\">StreamLines class instance</span></dt><dd><dl class=\"simple\">\n<dt>The collection of streamlines (possibly already resampled into an array</dt><dd><p>for each to have the same length) with which we are resampling. See\nNote below about orienting the streamlines.</p>\n</dd>\n</dl>\n</dd>\n<dt>affine<span class=\"classifier\">array_like (4, 4)</span></dt><dd><p>The mapping from voxel coordinates to streamline points.\nThe voxel_to_rasmm matrix, typically from a NIFTI file.</p>\n</dd>\n<dt>n_points: int, optional</dt><dd><p>The number of points to sample along the bundle. Default: 100.</p>\n</dd>\n<dt>orient_by: streamline, optional.</dt><dd><p>A streamline to use as a standard to orient all of the streamlines in\nthe bundle according to.</p>\n</dd>\n<dt>weights<span class=\"classifier\">1D array or 2D array or callable (optional)</span></dt><dd><p>Weight each streamline (1D) or each node (2D) when calculating the\ntract-profiles. Must sum to 1 across streamlines (in each node if\nrelevant). If callable, this is a function that calculates weights.</p>\n</dd>\n<dt>profile_stat<span class=\"classifier\">callable</span></dt><dd><p>The statistic used to average the profile across streamlines.\nIf weights is not None, this must take weights as a keyword argument.\nThe default, np.average, is the same as np.mean but takes weights\nas a keyword argument.</p>\n</dd>\n<dt>weights_kwarg<span class=\"classifier\">key-word arguments</span></dt><dd><p>Additional key-word arguments to pass to the weight-calculating\nfunction. Only to be used if weights is a callable.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id6\">\n<h4>Returns<a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>ndarray<span class=\"classifier\">a 1D array with the profile of <cite>data</cite> along the length of</span></dt><dd><p><cite>bundle</cite></p>\n</dd>\n</dl>\n</section>\n<section id=\"notes\">\n<h4>Notes<a class=\"headerlink\" href=\"#notes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Before providing a bundle as input to this function, you will need to make\nsure that the streamlines in the bundle are all oriented in the same\norientation relative to the bundle (use <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">orient_by_streamline()</span></code>).</p>\n</section>\n<section id=\"id7\">\n<h4>References<a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"yeatman2012\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id4\">Yeatman2012</a><span class=\"fn-bracket\">]</span></span>\n<p>Yeatman, Jason D., Robert F. Dougherty,\nNathaniel J. Myall, Brian A. Wandell, and Heidi M. Feldman. 2012.\n\u201cTract Profiles of White Matter Properties: Automating Fiber-Tract\nQuantification\u201d PloS One 7 (11): e49790.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.tracking", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "N", "next"], ["reference/dipy.sims", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "P", "previous"]], "sourcename": "reference/dipy.stats.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.stats.analysis\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats.analysis</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#peak-values\">peak_values</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.stats.analysis.peak_values\"><code class=\"docutils literal notranslate\"><span class=\"pre\">peak_values()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#anatomical-measures\">anatomical_measures</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.stats.analysis.anatomical_measures\"><code class=\"docutils literal notranslate\"><span class=\"pre\">anatomical_measures()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#assignment-map\">assignment_map</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.stats.analysis.assignment_map\"><code class=\"docutils literal notranslate\"><span class=\"pre\">assignment_map()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#gaussian-weights\">gaussian_weights</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.stats.analysis.gaussian_weights\"><code class=\"docutils literal notranslate\"><span class=\"pre\">gaussian_weights()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#afq-profile\">afq_profile</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.stats.analysis.afq_profile\"><code class=\"docutils literal notranslate\"><span class=\"pre\">afq_profile()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.stats", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}