{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.viz/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>"}, "next": {"link": "../../reference_cmd/", "title": "Command Line Utilities Reference"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>", "meta": {}, "body": "<section id=\"module-dipy.workflows\">\n<span id=\"workflows\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n<section id=\"module-dipy.workflows.align\">\n<span id=\"module-workflows-align\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.align</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.align\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.align.ResliceFlow\" title=\"dipy.workflows.align.ResliceFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ResliceFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.align.SlrWithQbxFlow\" title=\"dipy.workflows.align.SlrWithQbxFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SlrWithQbxFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.align.ImageRegistrationFlow\" title=\"dipy.workflows.align.ImageRegistrationFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ImageRegistrationFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p>The registration workflow allows the user to use only one type of registration (such as center of mass or rigid body registration only).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.align.ApplyTransformFlow\" title=\"dipy.workflows.align.ApplyTransformFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ApplyTransformFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.align.SynRegistrationFlow\" title=\"dipy.workflows.align.SynRegistrationFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SynRegistrationFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.align.MotionCorrectionFlow\" title=\"dipy.workflows.align.MotionCorrectionFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">MotionCorrectionFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p>The Motion Correction workflow allows the user to align between-volumes DWI dataset.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.align.BundleWarpFlow\" title=\"dipy.workflows.align.BundleWarpFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BundleWarpFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.align.check_dimensions\" title=\"dipy.workflows.align.check_dimensions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">check_dimensions</span></code></a>(static,\u00a0moving)</p></td>\n<td><p>Check the dimensions of the input images.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.base\">\n<span id=\"module-workflows-base\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.base</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.base\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser\" title=\"dipy.workflows.base.IntrospectiveArgumentParser\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser</span></code></a>([prog,\u00a0usage,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.base.get_args_default\" title=\"dipy.workflows.base.get_args_default\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_args_default</span></code></a>(func)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.base.none_or_dtype\" title=\"dipy.workflows.base.none_or_dtype\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">none_or_dtype</span></code></a>(dtype)</p></td>\n<td><p>Check None presence before type casting.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.combined_workflow\">\n<span id=\"module-workflows-combined-workflow\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.combined_workflow</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.combined_workflow\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow\" title=\"dipy.workflows.combined_workflow.CombinedWorkflow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">CombinedWorkflow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.denoise\">\n<span id=\"module-workflows-denoise\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.denoise</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.denoise\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.denoise.Patch2SelfFlow\" title=\"dipy.workflows.denoise.Patch2SelfFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Patch2SelfFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.denoise.NLMeansFlow\" title=\"dipy.workflows.denoise.NLMeansFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">NLMeansFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.denoise.LPCAFlow\" title=\"dipy.workflows.denoise.LPCAFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">LPCAFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.denoise.MPPCAFlow\" title=\"dipy.workflows.denoise.MPPCAFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">MPPCAFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.denoise.GibbsRingingFlow\" title=\"dipy.workflows.denoise.GibbsRingingFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">GibbsRingingFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.docstring_parser\">\n<span id=\"module-workflows-docstring-parser\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.docstring_parser</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.docstring_parser\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>This was taken directly from the file docscrape.py of numpydoc package.</p>\n<p>Copyright (C) 2008 Stefan van der Walt &lt;<a class=\"reference external\" href=\"mailto:stefan&#37;&#52;&#48;mentat&#46;za&#46;net\">stefan<span>&#64;</span>mentat<span>&#46;</span>za<span>&#46;</span>net</a>&gt;,\nPauli Virtanen &lt;<a class=\"reference external\" href=\"mailto:pav&#37;&#52;&#48;iki&#46;fi\">pav<span>&#64;</span>iki<span>&#46;</span>fi</a>&gt;</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.</p></li>\n<li><p>Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in\nthe documentation and/or other materials provided with the\ndistribution.</p></li>\n</ol>\n</div></blockquote>\n<p>THIS SOFTWARE IS PROVIDED BY THE AUTHOR <a href=\"#id1\"><span class=\"problematic\" id=\"id2\">``</span></a>AS IS\u2019\u2019 AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\nIN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader\" title=\"dipy.workflows.docstring_parser.Reader\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Reader</span></code></a>(data)</p></td>\n<td><p>A line-based string reader.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.NumpyDocString\" title=\"dipy.workflows.docstring_parser.NumpyDocString\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">NumpyDocString</span></code></a>(docstring[,\u00a0config])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.dedent_lines\" title=\"dipy.workflows.docstring_parser.dedent_lines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dedent_lines</span></code></a>(lines)</p></td>\n<td><p>Deindent a list of lines maximally</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.flow_runner\">\n<span id=\"module-workflows-flow-runner\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.flow_runner</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.flow_runner\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.flow_runner.get_level\" title=\"dipy.workflows.flow_runner.get_level\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_level</span></code></a>(lvl)</p></td>\n<td><p>Transforms the logging level passed on the commandline into a proper logging level name.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.flow_runner.run_flow\" title=\"dipy.workflows.flow_runner.run_flow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">run_flow</span></code></a>(flow)</p></td>\n<td><p>Wraps the process of building an argparser that reflects the workflow that we want to run along with some generic parameters like logging, force and output strategies.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.io\">\n<span id=\"module-workflows-io\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.io</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.io\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.io.IoInfoFlow\" title=\"dipy.workflows.io.IoInfoFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">IoInfoFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.io.FetchFlow\" title=\"dipy.workflows.io.FetchFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">FetchFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.io.SplitFlow\" title=\"dipy.workflows.io.SplitFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SplitFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.mask\">\n<span id=\"module-workflows-mask\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.mask</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.mask\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.mask.MaskFlow\" title=\"dipy.workflows.mask.MaskFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">MaskFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.multi_io\">\n<span id=\"module-workflows-multi-io\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.multi_io</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.multi_io\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator\" title=\"dipy.workflows.multi_io.IOIterator\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">IOIterator</span></code></a>([output_strategy,\u00a0mix_names])</p></td>\n<td><p>Create output filenames that work nicely with multiple input files from multiple directories (processing multiple subjects with one command)</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.common_start\" title=\"dipy.workflows.multi_io.common_start\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">common_start</span></code></a>(sa,\u00a0sb)</p></td>\n<td><p>Return the longest common substring from the beginning of sa and sb.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.slash_to_under\" title=\"dipy.workflows.multi_io.slash_to_under\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">slash_to_under</span></code></a>(dir_str)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.connect_output_paths\" title=\"dipy.workflows.multi_io.connect_output_paths\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">connect_output_paths</span></code></a>(inputs,\u00a0out_dir,\u00a0out_files)</p></td>\n<td><p>Generate a list of output files paths based on input files and output strategies.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.concatenate_inputs\" title=\"dipy.workflows.multi_io.concatenate_inputs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">concatenate_inputs</span></code></a>(multi_inputs)</p></td>\n<td><p>Concatenate list of inputs.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.basename_without_extension\" title=\"dipy.workflows.multi_io.basename_without_extension\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">basename_without_extension</span></code></a>(fname)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.io_iterator\" title=\"dipy.workflows.multi_io.io_iterator\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">io_iterator</span></code></a>(inputs,\u00a0out_dir,\u00a0fnames[,\u00a0...])</p></td>\n<td><p>Create an IOIterator from the parameters.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.io_iterator_\" title=\"dipy.workflows.multi_io.io_iterator_\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">io_iterator_</span></code></a>(frame,\u00a0fnc[,\u00a0output_strategy,\u00a0...])</p></td>\n<td><p>Create an IOIterator using introspection.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.reconst\">\n<span id=\"module-workflows-reconst\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.reconst</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.reconst\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow\" title=\"dipy.workflows.reconst.ReconstMAPMRIFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ReconstMAPMRIFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDtiFlow\" title=\"dipy.workflows.reconst.ReconstDtiFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ReconstDtiFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSDFlow\" title=\"dipy.workflows.reconst.ReconstCSDFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ReconstCSDFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSAFlow\" title=\"dipy.workflows.reconst.ReconstCSAFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ReconstCSAFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDkiFlow\" title=\"dipy.workflows.reconst.ReconstDkiFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ReconstDkiFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstIvimFlow\" title=\"dipy.workflows.reconst.ReconstIvimFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ReconstIvimFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow\" title=\"dipy.workflows.reconst.ReconstRUMBAFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ReconstRUMBAFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.segment\">\n<span id=\"module-workflows-segment\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.segment</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.segment\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.segment.MedianOtsuFlow\" title=\"dipy.workflows.segment.MedianOtsuFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">MedianOtsuFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.segment.RecoBundlesFlow\" title=\"dipy.workflows.segment.RecoBundlesFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">RecoBundlesFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.segment.LabelsBundlesFlow\" title=\"dipy.workflows.segment.LabelsBundlesFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">LabelsBundlesFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.segment.EVACPlusFlow\" title=\"dipy.workflows.segment.EVACPlusFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EVACPlusFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.stats\">\n<span id=\"module-workflows-stats\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.stats</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.stats\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.stats.SNRinCCFlow\" title=\"dipy.workflows.stats.SNRinCCFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SNRinCCFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow\" title=\"dipy.workflows.stats.BundleAnalysisTractometryFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BundleAnalysisTractometryFlow</span></code></a>([...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow\" title=\"dipy.workflows.stats.LinearMixedModelsFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">LinearMixedModelsFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleShapeAnalysis\" title=\"dipy.workflows.stats.BundleShapeAnalysis\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BundleShapeAnalysis</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.stats.buan_bundle_profiles\" title=\"dipy.workflows.stats.buan_bundle_profiles\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">buan_bundle_profiles</span></code></a>(model_bundle_folder,\u00a0...)</p></td>\n<td><p>Applies statistical analysis on bundles and saves the results in a directory specified by <code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.tracking\">\n<span id=\"module-workflows-tracking\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.tracking</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.tracking\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow\" title=\"dipy.workflows.tracking.LocalFiberTrackingPAMFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">LocalFiberTrackingPAMFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow\" title=\"dipy.workflows.tracking.PFTrackingPAMFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">PFTrackingPAMFlow</span></code></a>([output_strategy,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.viz\">\n<span id=\"module-workflows-viz\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.viz</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.viz\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.viz.HorizonFlow\" title=\"dipy.workflows.viz.HorizonFlow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">HorizonFlow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.workflows.workflow\">\n<span id=\"module-workflows-workflow\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.workflow</span></code><a class=\"headerlink\" href=\"#module-dipy.workflows.workflow\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a>([output_strategy,\u00a0mix_names,\u00a0...])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"resliceflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.align.ResliceFlow\" title=\"dipy.workflows.align.ResliceFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResliceFlow</span></code></a><a class=\"headerlink\" href=\"#resliceflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ResliceFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.align.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ResliceFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ResliceFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ResliceFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ResliceFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ResliceFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ResliceFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ResliceFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_vox_size</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'constant'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_processes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_resliced</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'resliced.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ResliceFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reslice data with new voxel resolution defined by <code class=\"docutils literal notranslate\"><span class=\"pre\">new_vox_sz</span></code></p>\n<section id=\"parameters\">\n<h4>Parameters<a class=\"headerlink\" href=\"#parameters\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>new_vox_size<span class=\"classifier\">variable float</span></dt><dd><p>new voxel size.</p>\n</dd>\n<dt>order<span class=\"classifier\">int, optional</span></dt><dd><p>order of interpolation, from 0 to 5, for resampling/reslicing,\n0 nearest interpolation, 1 trilinear etc.. if you don\u2019t want any\nsmoothing 0 is the option you need.</p>\n</dd>\n<dt>mode<span class=\"classifier\">string, optional</span></dt><dd><p>Points outside the boundaries of the input are filled according\nto the given mode \u2018constant\u2019, \u2018nearest\u2019, \u2018reflect\u2019 or \u2018wrap\u2019.</p>\n</dd>\n<dt>cval<span class=\"classifier\">float, optional</span></dt><dd><p>Value used for points outside the boundaries of the input if\nmode=\u2019constant\u2019.</p>\n</dd>\n<dt>num_processes<span class=\"classifier\">int, optional</span></dt><dd><p>Split the calculation to a pool of children processes. This only\napplies to 4D <cite>data</cite> arrays. Default is 1. If &lt; 0 the maximal\nnumber of cores minus <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code> is used (enter -1 to\nuse as many cores as possible). 0 raises an error.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_resliced<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the resliced dataset to be saved.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"slrwithqbxflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.align.SlrWithQbxFlow\" title=\"dipy.workflows.align.SlrWithQbxFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SlrWithQbxFlow</span></code></a><a class=\"headerlink\" href=\"#slrwithqbxflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.SlrWithQbxFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.align.</span></span><span class=\"sig-name descname\"><span class=\"pre\">SlrWithQbxFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.SlrWithQbxFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.SlrWithQbxFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.SlrWithQbxFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.SlrWithQbxFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.SlrWithQbxFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.SlrWithQbxFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">static_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">moving_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'affine'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rm_small_clusters</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">qbx_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(40,</span> <span class=\"pre\">30,</span> <span class=\"pre\">20,</span> <span class=\"pre\">15)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_threads</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">greater_than</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">less_than</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">250</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nb_pts</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">progressive</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_moved</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'moved.trk'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'affine.txt'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_stat_centroids</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'static_centroids.trk'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_moving_centroids</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'moving_centroids.trk'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_moved_centroids</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'moved_centroids.trk'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.SlrWithQbxFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Streamline-based linear registration.</p>\n<p>For efficiency we apply the registration on cluster centroids and\nremove small clusters.</p>\n<section id=\"id3\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>static_files : string\nmoving_files : string\nx0 : string, optional</p>\n<blockquote>\n<div><p>rigid, similarity or affine transformation model.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>rm_small_clusters<span class=\"classifier\">int, optional</span></dt><dd><p>Remove clusters that have less than <cite>rm_small_clusters</cite>.</p>\n</dd>\n<dt>qbx_thr<span class=\"classifier\">variable int, optional</span></dt><dd><p>Thresholds for QuickBundlesX.</p>\n</dd>\n<dt>num_threads<span class=\"classifier\">int, optional</span></dt><dd><p>Number of threads to be used for OpenMP parallelization. If None\n(default) the value of OMP_NUM_THREADS environment variable is\nused if it is set, otherwise all available threads are used. If\n&lt; 0 the maximal number of threads minus <a href=\"#id107\"><span class=\"problematic\" id=\"id108\">|num_threads + 1|</span></a> is used\n(enter -1 to use as many threads as possible). 0 raises an error.\nOnly metrics using OpenMP will use this variable.</p>\n</dd>\n<dt>greater_than<span class=\"classifier\">int, optional</span></dt><dd><p>Keep streamlines that have length greater than\nthis value.</p>\n</dd>\n<dt>less_than<span class=\"classifier\">int, optional</span></dt><dd><p>Keep streamlines have length less than this value.</p>\n</dd>\n<dt>nb_pts<span class=\"classifier\">int, optional</span></dt><dd><p>Number of points for discretizing each streamline.</p>\n</dd>\n</dl>\n<p>progressive : boolean, optional\nout_dir : string, optional</p>\n<blockquote>\n<div><p>Output directory. (default current directory)</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>out_moved<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of moved tractogram.</p>\n</dd>\n<dt>out_affine<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of affine for SLR transformation.</p>\n</dd>\n<dt>out_stat_centroids<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of static centroids.</p>\n</dd>\n<dt>out_moving_centroids<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of moving centroids.</p>\n</dd>\n<dt>out_moved_centroids<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of moved centroids.</p>\n</dd>\n</dl>\n</section>\n<section id=\"notes\">\n<h4>Notes<a class=\"headerlink\" href=\"#notes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>The order of operations is the following. First short or long\nstreamlines are removed. Second the tractogram or a random selection\nof the tractogram is clustered with QuickBundlesX. Then SLR\n<a class=\"reference internal\" href=\"../../examples_built/20_registration/bundle_registration/#garyfallidis15\" id=\"id4\"><span>[Garyfallidis15]</span></a> is applied.</p>\n</section>\n<section id=\"references\">\n<h4>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"garyfallidis15\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id4\">Garyfallidis15</a><span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis et al. \u201cRobust and efficient linear</p>\n</div>\n</div>\n<p>registration of white-matter fascicles in the space of\nstreamlines\u201d, NeuroImage, 117, 124\u2013140, 2015</p>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"garyfallidis14\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis14<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis et al., \u201cDirect native-space fiber</p>\n</div>\n</div>\n<p>bundle alignment for group comparisons\u201d, ISMRM, 2014.</p>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"garyfallidis17\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis17<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis et al. Recognition of white matter</p>\n</div>\n</div>\n<p>bundles using local and global streamline-based registration\nand clustering, NeuroImage, 2017.</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"imageregistrationflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.align.ImageRegistrationFlow\" title=\"dipy.workflows.align.ImageRegistrationFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ImageRegistrationFlow</span></code></a><a class=\"headerlink\" href=\"#imageregistrationflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ImageRegistrationFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.align.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ImageRegistrationFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ImageRegistrationFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<p>The registration workflow allows the user to use only one type of\nregistration (such as center of mass or rigid body registration only).</p>\n<p>Alternatively, a registration can be done in a progressive manner.\nFor example, using affine registration with progressive set to \u2018True\u2019\nwill involve center of mass, translation, rigid body and full affine\nregistration. Whereas, when progressive is False the registration will\ninclude only center of mass and affine registration. The progressive\nregistration will be slower but will improve the quality.</p>\n<p>This can be controlled by using the progressive flag (True by default).</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ImageRegistrationFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ImageRegistrationFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ImageRegistrationFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">static_image_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">moving_image_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">transform</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'affine'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nbins</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">32</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sampling_prop</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mi'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">level_iters</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(10000,</span> <span class=\"pre\">1000,</span> <span class=\"pre\">100)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sigmas</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(3.0,</span> <span class=\"pre\">1.0,</span> <span class=\"pre\">0.0)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">factors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(4,</span> <span class=\"pre\">2,</span> <span class=\"pre\">1)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">progressive</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_moved</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'moved.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'affine.txt'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_quality</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'quality_metric.txt'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ImageRegistrationFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><section id=\"id5\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>static_image_files<span class=\"classifier\">string</span></dt><dd><p>Path to the static image file.</p>\n</dd>\n<dt>moving_image_files<span class=\"classifier\">string</span></dt><dd><p>Path to the moving image file.</p>\n</dd>\n<dt>transform<span class=\"classifier\">string, optional</span></dt><dd><p>com: center of mass, trans: translation, rigid: rigid body,\nrigid_isoscaling: rigid body + isotropic scaling, rigid_scaling:\nrigid body + scaling, affine: full affine including translation,\nrotation, shearing and scaling.</p>\n</dd>\n<dt>nbins<span class=\"classifier\">int, optional</span></dt><dd><p>Number of bins to discretize the joint and marginal PDF.</p>\n</dd>\n<dt>sampling_prop<span class=\"classifier\">int, optional</span></dt><dd><dl class=\"simple\">\n<dt>Number ([0-100]) of voxels for calculating the PDF.</dt><dd><p>\u2018None\u2019 implies all voxels.</p>\n</dd>\n</dl>\n</dd>\n<dt>metric<span class=\"classifier\">string, optional</span></dt><dd><p>Similarity metric for gathering mutual information).</p>\n</dd>\n<dt>level_iters<span class=\"classifier\">variable int, optional</span></dt><dd><dl>\n<dt>The number of iterations at each scale of the scale space.</dt><dd><p><cite>level_iters[0]</cite> corresponds to the coarsest scale,\n<cite>level_iters[-1]</cite> the finest, where n is the length of the</p>\n<blockquote>\n<div><p>sequence.</p>\n</div></blockquote>\n</dd>\n</dl>\n</dd>\n<dt>sigmas<span class=\"classifier\">variable floats, optional</span></dt><dd><dl class=\"simple\">\n<dt>Custom smoothing parameter to build the scale space (one parameter</dt><dd><p>for each scale).</p>\n</dd>\n</dl>\n</dd>\n<dt>factors<span class=\"classifier\">variable floats, optional</span></dt><dd><dl class=\"simple\">\n<dt>Custom scale factors to build the scale space (one factor for each</dt><dd><p>scale).</p>\n</dd>\n</dl>\n</dd>\n<dt>progressive<span class=\"classifier\">boolean, optional</span></dt><dd><p>Enable/Disable the progressive registration.</p>\n</dd>\n<dt>save_metric<span class=\"classifier\">boolean, optional</span></dt><dd><p>If true, quality assessment metric are saved in\n\u2018quality_metric.txt\u2019.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><dl class=\"simple\">\n<dt>Directory to save the transformed image and the affine matrix</dt><dd><p>(default current directory).</p>\n</dd>\n</dl>\n</dd>\n<dt>out_moved<span class=\"classifier\">string, optional</span></dt><dd><p>Name for the saved transformed image.</p>\n</dd>\n<dt>out_affine<span class=\"classifier\">string, optional</span></dt><dd><p>Name for the saved affine matrix.</p>\n</dd>\n<dt>out_quality<span class=\"classifier\">string, optional</span></dt><dd><dl class=\"simple\">\n<dt>Name of the file containing the saved quality</dt><dd><p>metric.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"applytransformflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.align.ApplyTransformFlow\" title=\"dipy.workflows.align.ApplyTransformFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ApplyTransformFlow</span></code></a><a class=\"headerlink\" href=\"#applytransformflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ApplyTransformFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.align.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ApplyTransformFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ApplyTransformFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ApplyTransformFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ApplyTransformFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.ApplyTransformFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">static_image_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">moving_image_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">transform_map_file</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">transform_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'affine'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_file</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'transformed.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.ApplyTransformFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><section id=\"id6\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>static_image_files<span class=\"classifier\">string</span></dt><dd><p>Path of the static image file.</p>\n</dd>\n<dt>moving_image_files<span class=\"classifier\">string</span></dt><dd><p>Path of the moving image(s). It can be a single image or a\nfolder containing multiple images.</p>\n</dd>\n<dt>transform_map_file<span class=\"classifier\">string</span></dt><dd><p>For the affine case, it should be a text(<a href=\"#id7\"><span class=\"problematic\" id=\"id8\">*</span></a>.txt) file containing\nthe affine matrix. For the diffeomorphic case,\nit should be a nifti file containing the mapping displacement\nfield in each voxel with this shape (x, y, z, 3, 2).</p>\n</dd>\n<dt>transform_type<span class=\"classifier\">string, optional</span></dt><dd><p>Select the transformation type to apply between \u2018affine\u2019 or\n\u2018diffeomorphic\u2019.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Directory to save the transformed files (default current directory).</p>\n</dd>\n<dt>out_file<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the transformed file.\nIt is recommended to use the flag \u2013mix-names to\nprevent the output files from being overwritten.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"synregistrationflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.align.SynRegistrationFlow\" title=\"dipy.workflows.align.SynRegistrationFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SynRegistrationFlow</span></code></a><a class=\"headerlink\" href=\"#synregistrationflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.SynRegistrationFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.align.</span></span><span class=\"sig-name descname\"><span class=\"pre\">SynRegistrationFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.SynRegistrationFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.SynRegistrationFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.SynRegistrationFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.SynRegistrationFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">static_image_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">moving_image_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">prealign_file</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inv_static</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">level_iters</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(10,</span> <span class=\"pre\">10,</span> <span class=\"pre\">5)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'cc'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mopt_sigma_diff</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mopt_radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mopt_smooth</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mopt_inner_iter</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mopt_q_levels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">256</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mopt_double_gradient</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mopt_step_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_length</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.25</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ss_sigma_factor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opt_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-05</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inv_iter</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inv_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.001</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_warped</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'warped_moved.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_inv_static</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'inc_static.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'displacement_field.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.SynRegistrationFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><section id=\"id9\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>static_image_files<span class=\"classifier\">string</span></dt><dd><p>Path of the static image file.</p>\n</dd>\n<dt>moving_image_files<span class=\"classifier\">string</span></dt><dd><p>Path to the moving image file.</p>\n</dd>\n<dt>prealign_file<span class=\"classifier\">string, optional</span></dt><dd><dl class=\"simple\">\n<dt>The text file containing pre alignment information via an</dt><dd><p>affine matrix.</p>\n</dd>\n</dl>\n</dd>\n<dt>inv_static<span class=\"classifier\">boolean, optional</span></dt><dd><p>Apply the inverse mapping to the static image.</p>\n</dd>\n<dt>level_iters<span class=\"classifier\">variable int, optional</span></dt><dd><p>The number of iterations at each level of the gaussian pyramid.</p>\n</dd>\n<dt>metric<span class=\"classifier\">string, optional</span></dt><dd><p>The metric to be used.\nmetric available: cc (Cross Correlation), ssd (Sum Squared\nDifference), em (Expectation-Maximization).</p>\n</dd>\n<dt>mopt_sigma_diff<span class=\"classifier\">float, optional</span></dt><dd><p>Metric option applied on Cross correlation (CC).\nThe standard deviation of the Gaussian smoothing kernel to be\napplied to the update field at each iteration.</p>\n</dd>\n<dt>mopt_radius<span class=\"classifier\">int, optional</span></dt><dd><p>Metric option applied on Cross correlation (CC).\nthe radius of the squared (cubic) neighborhood at each voxel to\nbe considered to compute the cross correlation.</p>\n</dd>\n<dt>mopt_smooth<span class=\"classifier\">float, optional</span></dt><dd><p>Metric option applied on Sum Squared Difference (SSD) and\nExpectation Maximization (EM). Smoothness parameter, the\nlarger the value the smoother the deformation field.\n(default 1.0 for EM, 4.0 for SSD)</p>\n</dd>\n<dt>mopt_inner_iter<span class=\"classifier\">int, optional</span></dt><dd><p>Metric option applied on Sum Squared Difference (SSD) and\nExpectation Maximization (EM). This is number of iterations to be\nperformed at each level of the multi-resolution Gauss-Seidel\noptimization algorithm (this is not the number of steps per\nGaussian Pyramid level, that parameter must be set for the\noptimizer, not the metric). Default 5 for EM, 10 for SSD.</p>\n</dd>\n<dt>mopt_q_levels<span class=\"classifier\">int, optional</span></dt><dd><p>Metric option applied on Expectation Maximization (EM).\nNumber of quantization levels (Default: 256 for EM)</p>\n</dd>\n<dt>mopt_double_gradient<span class=\"classifier\">bool, optional</span></dt><dd><p>Metric option applied on Expectation Maximization (EM).\nif True, the gradient of the expected static image under the moving\nmodality will be added to the gradient of the moving image,\nsimilarly, the gradient of the expected moving image under the\nstatic modality will be added to the gradient of the static image.</p>\n</dd>\n<dt>mopt_step_type<span class=\"classifier\">string, optional</span></dt><dd><p>Metric option applied on Sum Squared Difference (SSD) and\nExpectation Maximization (EM). The optimization schedule to be\nused in the multi-resolution Gauss-Seidel optimization algorithm\n(not used if Demons Step is selected). Possible value:\n(\u2018gauss_newton\u2019, \u2018demons\u2019). default: \u2018gauss_newton\u2019 for EM,\n\u2018demons\u2019 for SSD.</p>\n</dd>\n<dt>step_length<span class=\"classifier\">float, optional</span></dt><dd><dl class=\"simple\">\n<dt>the length of the maximum displacement vector of the update</dt><dd><p>displacement field at each iteration.</p>\n</dd>\n</dl>\n</dd>\n<dt>ss_sigma_factor<span class=\"classifier\">float, optional</span></dt><dd><dl class=\"simple\">\n<dt>parameter of the scale-space smoothing kernel. For example, the</dt><dd><p>std. dev. of the kernel will be factor*(2^i) in the isotropic case\nwhere i = 0, 1, \u2026, n_scales is the scale.</p>\n</dd>\n</dl>\n</dd>\n<dt>opt_tol<span class=\"classifier\">float, optional</span></dt><dd><dl class=\"simple\">\n<dt>the optimization will stop when the estimated derivative of the</dt><dd><p>energy profile w.r.t. time falls below this threshold.</p>\n</dd>\n</dl>\n</dd>\n<dt>inv_iter<span class=\"classifier\">int, optional</span></dt><dd><dl class=\"simple\">\n<dt>the number of iterations to be performed by the displacement field</dt><dd><p>inversion algorithm.</p>\n</dd>\n</dl>\n</dd>\n<dt>inv_tol<span class=\"classifier\">float, optional</span></dt><dd><dl class=\"simple\">\n<dt>the displacement field inversion algorithm will stop iterating</dt><dd><p>when the inversion error falls below this threshold.</p>\n</dd>\n</dl>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Directory to save the transformed files (default current directory).</p>\n</dd>\n<dt>out_warped<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the warped file.</p>\n</dd>\n<dt>out_inv_static<span class=\"classifier\">string, optional</span></dt><dd><dl class=\"simple\">\n<dt>Name of the file to save the static image after applying the</dt><dd><p>inverse mapping.</p>\n</dd>\n</dl>\n</dd>\n<dt>out_field<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the file to save the diffeomorphic map.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"motioncorrectionflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.align.MotionCorrectionFlow\" title=\"dipy.workflows.align.MotionCorrectionFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MotionCorrectionFlow</span></code></a><a class=\"headerlink\" href=\"#motioncorrectionflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.MotionCorrectionFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.align.</span></span><span class=\"sig-name descname\"><span class=\"pre\">MotionCorrectionFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.MotionCorrectionFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<p>The Motion Correction workflow allows the user to align between-volumes\nDWI dataset.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.MotionCorrectionFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.MotionCorrectionFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.MotionCorrectionFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvalues_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvectors_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_moved</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'moved.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'affine.txt'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.MotionCorrectionFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><section id=\"id10\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bvalues_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>bvectors_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvectors files. This path may contain wildcards to use\nmultiple bvectors files at once.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to find b0 volumes.</p>\n</dd>\n<dt>bvecs_tol<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to check that norm(bvec) = 1 +/- bvecs_tol\nb-vectors are unit vectors</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><dl class=\"simple\">\n<dt>Directory to save the transformed image and the affine matrix</dt><dd><p>(default current directory).</p>\n</dd>\n</dl>\n</dd>\n<dt>out_moved<span class=\"classifier\">string, optional</span></dt><dd><p>Name for the saved transformed image.</p>\n</dd>\n<dt>out_affine<span class=\"classifier\">string, optional</span></dt><dd><p>Name for the saved affine matrix.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"bundlewarpflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.align.BundleWarpFlow\" title=\"dipy.workflows.align.BundleWarpFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BundleWarpFlow</span></code></a><a class=\"headerlink\" href=\"#bundlewarpflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.BundleWarpFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.align.</span></span><span class=\"sig-name descname\"><span class=\"pre\">BundleWarpFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.BundleWarpFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.BundleWarpFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.BundleWarpFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.BundleWarpFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.BundleWarpFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.BundleWarpFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">static_file</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">moving_file</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dist</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.3</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">beta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_iter</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">15</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_linear_moved</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'linearly_moved.trk'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_nonlinear_moved</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'nonlinearly_moved.trk'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_warp_transform</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'warp_transform.npy'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_warp_kernel</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'warp_kernel.npy'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dist</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'distance_matrix.npy'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_matched_pairs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'matched_pairs.npy'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.BundleWarpFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>BundleWarp: streamline-based nonlinear registration.</p>\n<p>BundleWarp is nonrigid registration method for deformable registration\nof white matter tracts.</p>\n<section id=\"id11\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>static_file<span class=\"classifier\">string</span></dt><dd><p>Path to the static (reference) .trk file.</p>\n</dd>\n<dt>moving_file<span class=\"classifier\">string</span></dt><dd><p>Path to the moving (target to be registered) .trk file.</p>\n</dd>\n<dt>dist<span class=\"classifier\">string, optional</span></dt><dd><p>Path to the precalculated distance matrix file.</p>\n</dd>\n<dt>alpha<span class=\"classifier\">float, optional</span></dt><dd><p>Represents the trade-off between regularizing the deformation and\nhaving points match very closely. Lower value of alpha means high\ndeformations. It is represented with \u03bb in BundleWarp paper. NOTE:\nsetting alpha&lt;=0.01 will result in highly deformable registration\nthat could extremely modify the original anatomy of the moving\nbundle. (default 0.3)</p>\n</dd>\n<dt>beta<span class=\"classifier\">int, optional</span></dt><dd><p>Represents the strength of the interaction between points\nGaussian kernel size. (default 20)</p>\n</dd>\n<dt>max_iter<span class=\"classifier\">int, optional</span></dt><dd><p>Maximum number of iterations for deformation process in ml-CPD\nmethod. (default 15)</p>\n</dd>\n<dt>affine<span class=\"classifier\">boolean, optional</span></dt><dd><p>If False, use rigid registration as starting point. (default True)</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_linear_moved<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of linearly moved bundle.</p>\n</dd>\n<dt>out_nonlinear_moved<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of nonlinearly moved (warped) bundle.</p>\n</dd>\n<dt>out_warp_transform<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of warp transformations generated by BundleWarp.</p>\n</dd>\n<dt>out_warp_kernel<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of regularization gaussian kernel generated by BundleWarp.</p>\n</dd>\n<dt>out_dist<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of MDF distance matrix.</p>\n</dd>\n<dt>out_matched_pairs<span class=\"classifier\">string, optional</span></dt><dd><p>Filename of matched pairs; treamline correspondences between two\nbundles.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id12\">\n<h4>References<a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<blockquote>\n<div><div class=\"citation\" id=\"chandio2023\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Chandio2023<span class=\"fn-bracket\">]</span></span>\n<p>Chandio et al. \u201cBundleWarp, streamline-based nonlinear\nregistration of white matter tracts.\u201d bioRxiv (2023): 2023-01.</p>\n</div>\n</div>\n</div></blockquote>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"check-dimensions\">\n<h3>check_dimensions<a class=\"headerlink\" href=\"#check-dimensions\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.align.check_dimensions\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.align.</span></span><span class=\"sig-name descname\"><span class=\"pre\">check_dimensions</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">static</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">moving</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.align.check_dimensions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check the dimensions of the input images.</p>\n<section id=\"id13\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id13\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>static<span class=\"classifier\">2D or 3D array</span></dt><dd><p>the image to be used as reference during optimization.</p>\n</dd>\n<dt>moving: 2D or 3D array</dt><dd><p>the image to be used as \u201cmoving\u201d during optimization. It is\nnecessary to pre-align the moving image to ensure its domain\nlies inside the domain of the deformation fields. This is assumed\nto be accomplished by \u201cpre-aligning\u201d the moving image towards the\nstatic using an affine transformation given by the\n\u2018starting_affine\u2019 matrix.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"introspectiveargumentparser\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser\" title=\"dipy.workflows.base.IntrospectiveArgumentParser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser</span></code></a><a class=\"headerlink\" href=\"#introspectiveargumentparser\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.base.</span></span><span class=\"sig-name descname\"><span class=\"pre\">IntrospectiveArgumentParser</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">prog=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">usage=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">epilog=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parents=()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">formatter_class=&lt;class</span> <span class=\"pre\">'argparse.RawTextHelpFormatter'&gt;</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">prefix_chars='-'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fromfile_prefix_chars=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">argument_default=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">conflict_handler='resolve'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">add_help=True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ArgumentParser</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">prog=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">usage=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">epilog=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parents=()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">formatter_class=&lt;class</span> <span class=\"pre\">'argparse.RawTextHelpFormatter'&gt;</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">prefix_chars='-'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fromfile_prefix_chars=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">argument_default=None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">conflict_handler='resolve'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">add_help=True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Augmenting the argument parser to allow automatic creation of\narguments from workflows</p>\n<section id=\"id14\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id14\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>prog<span class=\"classifier\">None</span></dt><dd><p>The name of the program. (default: sys.argv[0])</p>\n</dd>\n<dt>usage<span class=\"classifier\">None</span></dt><dd><p>A usage message. (default: auto-generated from arguments)</p>\n</dd>\n<dt>description<span class=\"classifier\">str</span></dt><dd><p>A description of what the program does.</p>\n</dd>\n<dt>epilog<span class=\"classifier\">str</span></dt><dd><p>Text following the argument descriptions.</p>\n</dd>\n<dt>parents<span class=\"classifier\">list</span></dt><dd><p>Parsers whose arguments should be copied into this one.</p>\n</dd>\n<dt>formatter_class<span class=\"classifier\">obj</span></dt><dd><p>HelpFormatter class for printing help messages.</p>\n</dd>\n<dt>prefix_chars<span class=\"classifier\">str</span></dt><dd><p>Characters that prefix optional arguments.</p>\n</dd>\n<dt>fromfile_prefix_chars<span class=\"classifier\">None</span></dt><dd><p>Characters that prefix files containing additional arguments.</p>\n</dd>\n<dt>argument_default<span class=\"classifier\">None</span></dt><dd><p>The default value for all arguments.</p>\n</dd>\n<dt>conflict_handler<span class=\"classifier\">str</span></dt><dd><p>String indicating how to handle conflicts.</p>\n</dd>\n<dt>add_help<span class=\"classifier\">bool</span></dt><dd><p>Add a -h/-help option.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.add_description\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_description</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.add_description\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_epilogue</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_sub_flow_args</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sub_flows</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Take an array of workflow objects and use introspection to extract\nthe parameters, types and docstrings of their run method. Only the\noptional input parameters are extracted for these as they are treated\nas sub workflows.</p>\n<section id=\"id15\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id15\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sub_flows<span class=\"classifier\">array of dipy.workflows.workflow.Workflow</span></dt><dd><p>Workflows to inspect.</p>\n</dd>\n</dl>\n</section>\n<section id=\"returns\">\n<h4>Returns<a class=\"headerlink\" href=\"#returns\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>sub_flow_optionals : dictionary of all sub workflow optional parameters</p>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.add_workflow\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_workflow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">workflow</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.add_workflow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Take a workflow object and use introspection to extract the\nparameters, types and docstrings of its run method. Then add these\nparameters to the current arparser\u2019s own params to parse. If the\nworkflow is of type combined_workflow, the optional input parameters\nof its sub workflows will also be added.</p>\n<section id=\"id16\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id16\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>workflow<span class=\"classifier\">dipy.workflows.workflow.Workflow</span></dt><dd><p>Workflow from which to infer parameters.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id17\">\n<h4>Returns<a class=\"headerlink\" href=\"#id17\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>sub_flow_optionals : dictionary of all sub workflow optional parameters</p>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_flow_args</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">namespace</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the parsed arguments as a dictionary that will be used\nas a workflow\u2019s run method arguments.</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">optional_parameters</span></span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.output_parameters\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">output_parameters</span></span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.output_parameters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">positional_parameters</span></span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.show_argument\">\n<span class=\"sig-name descname\"><span class=\"pre\">show_argument</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dest</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.show_argument\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.IntrospectiveArgumentParser.update_argument\">\n<span class=\"sig-name descname\"><span class=\"pre\">update_argument</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.update_argument\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"get-args-default\">\n<h3>get_args_default<a class=\"headerlink\" href=\"#get-args-default\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.get_args_default\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.base.</span></span><span class=\"sig-name descname\"><span class=\"pre\">get_args_default</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">func</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.get_args_default\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"none-or-dtype\">\n<h3>none_or_dtype<a class=\"headerlink\" href=\"#none-or-dtype\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.base.none_or_dtype\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.base.</span></span><span class=\"sig-name descname\"><span class=\"pre\">none_or_dtype</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dtype</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.base.none_or_dtype\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check None presence before type casting.</p>\n</dd></dl>\n\n</section>\n<section id=\"combinedworkflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow\" title=\"dipy.workflows.combined_workflow.CombinedWorkflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CombinedWorkflow</span></code></a><a class=\"headerlink\" href=\"#combinedworkflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.combined_workflow.CombinedWorkflow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.combined_workflow.</span></span><span class=\"sig-name descname\"><span class=\"pre\">CombinedWorkflow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'append'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.combined_workflow.CombinedWorkflow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'append'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow that combines multiple workflows.\nThe workflow combined together are referred as sub flows in this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_optionals</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">flow</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the sub flow\u2019s optional arguments merged with those passed\nas params in kwargs.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_sub_runs</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a list of tuples\n(sub flow name, sub flow run method, sub flow short name)\nto be used in the sub flow parameters extraction.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow\">\n<span class=\"sig-name descname\"><span class=\"pre\">run_sub_flow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">flow</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Runs the sub flow with the optional parameters passed via the\ncommand line. This is a convenience method to make sub flow running\nmore intuitive on the concrete CombinedWorkflow side.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_sub_flows_optionals</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opts</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sets the self._optionals variable with all sub flow arguments\nthat were passed in the commandline.</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"patch2selfflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.denoise.Patch2SelfFlow\" title=\"dipy.workflows.denoise.Patch2SelfFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Patch2SelfFlow</span></code></a><a class=\"headerlink\" href=\"#patch2selfflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.Patch2SelfFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.denoise.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Patch2SelfFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.Patch2SelfFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.Patch2SelfFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.Patch2SelfFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.Patch2SelfFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.Patch2SelfFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.Patch2SelfFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bval_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'ols'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_denoising</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clip_negative_vals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shift_intensity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_denoised</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dwi_patch2self.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.Patch2SelfFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow for Patch2Self denoising method.</p>\n<p>It applies patch2self denoising on each file found by \u2018globing\u2019\n<code class=\"docutils literal notranslate\"><span class=\"pre\">input_file</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">bval_file</span></code>. It saves the results in a directory\nspecified by <code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id18\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id18\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bval_files<span class=\"classifier\">string</span></dt><dd><p>bval file associated with the diffusion data.</p>\n</dd>\n<dt>model<span class=\"classifier\">string, or initialized linear model object.</span></dt><dd><p>This will determine the algorithm used to solve the set of linear\nequations underlying this model. If it is a string it needs to be\none of the following: {\u2018ols\u2019, \u2018ridge\u2019, \u2018lasso\u2019}. Otherwise,\nit can be an object that inherits from\n<cite>dipy.optimize.SKLearnLinearSolver</cite> or an object with a similar\ninterface from Scikit-Learn:\n<cite>sklearn.linear_model.LinearRegression</cite>,\n<cite>sklearn.linear_model.Lasso</cite> or <cite>sklearn.linear_model.Ridge</cite>\nand other objects that inherit from <cite>sklearn.base.RegressorMixin</cite>.\nDefault: \u2018ols\u2019.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">int, optional</span></dt><dd><p>Threshold for considering volumes as b0.</p>\n</dd>\n<dt>alpha<span class=\"classifier\">float, optional</span></dt><dd><p>Regularization parameter only for ridge regression model.</p>\n</dd>\n<dt>verbose<span class=\"classifier\">bool, optional</span></dt><dd><p>Show progress of Patch2Self and time taken.</p>\n</dd>\n<dt>b0_denoising<span class=\"classifier\">bool, optional</span></dt><dd><p>Skips denoising b0 volumes if set to False.</p>\n</dd>\n<dt>clip_negative_vals<span class=\"classifier\">bool, optional</span></dt><dd><p>Sets negative values after denoising to 0 using <cite>np.clip</cite>.</p>\n</dd>\n<dt>shift_intensity<span class=\"classifier\">bool, optional</span></dt><dd><p>Shifts the distribution of intensities per volume to give\nnon-negative values</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory (default current directory)</p>\n</dd>\n<dt>out_denoised<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the resulting denoised volume\n(default: dwi_patch2self.nii.gz)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id19\">\n<h4>References<a class=\"headerlink\" href=\"#id19\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"fadnavis20\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Fadnavis20<span class=\"fn-bracket\">]</span></span>\n<p>S. Fadnavis, J. Batson, E. Garyfallidis, Patch2Self:\nDenoising Diffusion MRI with Self-supervised Learning,\nAdvances in Neural Information Processing Systems 33 (2020)</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"nlmeansflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.denoise.NLMeansFlow\" title=\"dipy.workflows.denoise.NLMeansFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NLMeansFlow</span></code></a><a class=\"headerlink\" href=\"#nlmeansflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.NLMeansFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.denoise.</span></span><span class=\"sig-name descname\"><span class=\"pre\">NLMeansFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.NLMeansFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.NLMeansFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.NLMeansFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.NLMeansFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.NLMeansFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.NLMeansFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sigma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">patch_radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">block_radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rician</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_denoised</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dwi_nlmeans.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.NLMeansFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow wrapping the nlmeans denoising method.</p>\n<p>It applies nlmeans denoise on each file found by \u2018globing\u2019\n<code class=\"docutils literal notranslate\"><span class=\"pre\">input_files</span></code> and saves the results in a directory specified by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id20\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id20\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>sigma<span class=\"classifier\">float, optional</span></dt><dd><p>Sigma parameter to pass to the nlmeans algorithm.</p>\n</dd>\n<dt>patch_radius<span class=\"classifier\">int, optional</span></dt><dd><p>patch size is <code class=\"docutils literal notranslate\"><span class=\"pre\">2</span> <span class=\"pre\">x</span> <span class=\"pre\">patch_radius</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code>.</p>\n</dd>\n<dt>block_radius<span class=\"classifier\">int, optional</span></dt><dd><p>block size is <code class=\"docutils literal notranslate\"><span class=\"pre\">2</span> <span class=\"pre\">x</span> <span class=\"pre\">block_radius</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code>.</p>\n</dd>\n<dt>rician<span class=\"classifier\">bool, optional</span></dt><dd><p>If True the noise is estimated as Rician, otherwise Gaussian noise\nis assumed.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_denoised<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the resulting denoised volume.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id21\">\n<h4>References<a class=\"headerlink\" href=\"#id21\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"descoteaux08\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Descoteaux08<span class=\"fn-bracket\">]</span></span>\n<p>Descoteaux, Maxime and Wiest-Daessl\u00e9, Nicolas and</p>\n</div>\n</div>\n<p>Prima, Sylvain and Barillot, Christian and Deriche, Rachid.\nImpact of Rician Adapted Non-Local Means Filtering on\nHARDI, MICCAI 2008</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"lpcaflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.denoise.LPCAFlow\" title=\"dipy.workflows.denoise.LPCAFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LPCAFlow</span></code></a><a class=\"headerlink\" href=\"#lpcaflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.LPCAFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.denoise.</span></span><span class=\"sig-name descname\"><span class=\"pre\">LPCAFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.LPCAFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.LPCAFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.LPCAFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.LPCAFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.LPCAFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.LPCAFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvalues_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvectors_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sigma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">patch_radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pca_method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'eig'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tau_factor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2.3</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_denoised</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dwi_lpca.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.LPCAFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow wrapping LPCA denoising method.</p>\n<section id=\"id22\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id22\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl>\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bvalues_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>bvectors_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvectors files. This path may contain wildcards to use\nmultiple bvectors files at once.</p>\n</dd>\n<dt>sigma<span class=\"classifier\">float, optional</span></dt><dd><p>Standard deviation of the noise estimated from the data.\nDefault 0: it means sigma value estimation with the Manjon2013\nalgorithm <a href=\"#id109\"><span class=\"problematic\" id=\"id23\">[3]_</span></a>.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to find b0 volumes.</p>\n</dd>\n<dt>bvecs_tol<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to check that norm(bvec) = 1 +/- bvecs_tol\nb-vectors are unit vectors.</p>\n</dd>\n<dt>patch_radius<span class=\"classifier\">int, optional</span></dt><dd><p>The radius of the local patch to be taken around each voxel (in\nvoxels) For example, for a patch radius with value 2, and assuming\nthe input image is a 3D image, the denoising will take place in\nblocks of 5x5x5 voxels.</p>\n</dd>\n<dt>pca_method<span class=\"classifier\">string, optional</span></dt><dd><p>Use either eigenvalue decomposition (\u2018eig\u2019) or singular value\ndecomposition (\u2018svd\u2019) for principal component analysis. The default\nmethod is \u2018eig\u2019 which is faster. However, occasionally \u2018svd\u2019 might\nbe more accurate.</p>\n</dd>\n<dt>tau_factor<span class=\"classifier\">float, optional</span></dt><dd><p>Thresholding of PCA eigenvalues is done by nulling out eigenvalues\nthat are smaller than:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\tau = (\\tau_{factor} \\sigma)^2\\]</div>\n<p>tau_{factor} can be change to adjust the relationship between the\nnoise standard deviation and the threshold tau. If tau_{factor}\nis set to None, it will be automatically calculated using the\nMarcenko-Pastur distribution <a href=\"#id110\"><span class=\"problematic\" id=\"id24\">[2]_</span></a>.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_denoised<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the resulting denoised volume.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id25\">\n<h4>References<a class=\"headerlink\" href=\"#id25\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id26\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Veraart J, Novikov DS, Christiaens D, Ades-aron B, Sijbers,</p>\n</aside>\n</aside>\n<p>Fieremans E, 2016. Denoising of Diffusion MRI using random\nmatrix theory. Neuroimage 142:394-406.\ndoi: 10.1016/j.neuroimage.2016.08.016</p>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id27\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Veraart J, Fieremans E, Novikov DS. 2016. Diffusion MRI noise</p>\n</aside>\n</aside>\n<p>mapping using random matrix theory. Magnetic Resonance in\nMedicine.\ndoi: 10.1002/mrm.26059.</p>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id28\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>3<span class=\"fn-bracket\">]</span></span>\n<p>Manjon JV, Coupe P, Concha L, Buades A, Collins DL (2013)</p>\n</aside>\n</aside>\n<p>Diffusion Weighted Image Denoising Using Overcomplete Local\nPCA. PLoS ONE 8(9): e73021.\n<a class=\"reference external\" href=\"https://doi.org/10.1371/journal.pone.0073021\">https://doi.org/10.1371/journal.pone.0073021</a></p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"mppcaflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.denoise.MPPCAFlow\" title=\"dipy.workflows.denoise.MPPCAFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MPPCAFlow</span></code></a><a class=\"headerlink\" href=\"#mppcaflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.MPPCAFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.denoise.</span></span><span class=\"sig-name descname\"><span class=\"pre\">MPPCAFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.MPPCAFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.MPPCAFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.MPPCAFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.MPPCAFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.MPPCAFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.MPPCAFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">patch_radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pca_method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'eig'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_sigma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_denoised</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dwi_mppca.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_sigma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dwi_sigma.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.MPPCAFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow wrapping Marcenko-Pastur PCA denoising method.</p>\n<section id=\"id29\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id29\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>patch_radius<span class=\"classifier\">variable int, optional</span></dt><dd><p>The radius of the local patch to be taken around each voxel (in\nvoxels) For example, for a patch radius with value 2, and assuming\nthe input image is a 3D image, the denoising will take place in\nblocks of 5x5x5 voxels.</p>\n</dd>\n<dt>pca_method<span class=\"classifier\">string, optional</span></dt><dd><p>Use either eigenvalue decomposition (\u2018eig\u2019) or singular value\ndecomposition (\u2018svd\u2019) for principal component analysis. The default\nmethod is \u2018eig\u2019 which is faster. However, occasionally \u2018svd\u2019 might\nbe more accurate.</p>\n</dd>\n<dt>return_sigma<span class=\"classifier\">bool, optional</span></dt><dd><p>If true, a noise standard deviation estimate based on the\nMarcenko-Pastur distribution is returned <a href=\"#id111\"><span class=\"problematic\" id=\"id30\">[2]_</span></a>.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_denoised<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the resulting denoised volume.</p>\n</dd>\n<dt>out_sigma<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the resulting sigma volume.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id31\">\n<h4>References<a class=\"headerlink\" href=\"#id31\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id32\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Veraart J, Novikov DS, Christiaens D, Ades-aron B, Sijbers,</p>\n</aside>\n</aside>\n<p>Fieremans E, 2016. Denoising of Diffusion MRI using random matrix\ntheory. Neuroimage 142:394-406.\ndoi: 10.1016/j.neuroimage.2016.08.016</p>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id33\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Veraart J, Fieremans E, Novikov DS. 2016. Diffusion MRI noise</p>\n</aside>\n</aside>\n<p>mapping using random matrix theory. Magnetic Resonance in Medicine.\ndoi: 10.1002/mrm.26059.</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"gibbsringingflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.denoise.GibbsRingingFlow\" title=\"dipy.workflows.denoise.GibbsRingingFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GibbsRingingFlow</span></code></a><a class=\"headerlink\" href=\"#gibbsringingflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.GibbsRingingFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.denoise.</span></span><span class=\"sig-name descname\"><span class=\"pre\">GibbsRingingFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.GibbsRingingFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.GibbsRingingFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.GibbsRingingFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.GibbsRingingFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.GibbsRingingFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.denoise.GibbsRingingFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slice_axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_points</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">3</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_processes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_unring</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dwi_unring.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.denoise.GibbsRingingFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow for applying Gibbs Ringing method.</p>\n<section id=\"id34\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id34\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>slice_axis<span class=\"classifier\">int, optional</span></dt><dd><p>Data axis corresponding to the number of acquired slices.\nCould be (0, 1, or 2): for example, a value of 2 would mean the\nthird axis.</p>\n</dd>\n<dt>n_points<span class=\"classifier\">int, optional</span></dt><dd><p>Number of neighbour points to access local TV (see note).</p>\n</dd>\n<dt>num_processes<span class=\"classifier\">int or None, optional</span></dt><dd><p>Split the calculation to a pool of children processes. Only\napplies to 3D or 4D <cite>data</cite> arrays. Default is 1. If &lt; 0 the maximal\nnumber of cores minus <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code> is used (enter -1 to\nuse as many cores as possible). 0 raises an error.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_unring<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the resulting denoised volume.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id35\">\n<h4>References<a class=\"headerlink\" href=\"#id35\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id36\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Neto Henriques, R., 2018. Advanced Methods for Diffusion MRI</p>\n</aside>\n</aside>\n<p>Data Analysis and their Application to the Healthy Ageing Brain\n(Doctoral thesis). <a class=\"reference external\" href=\"https://doi.org/10.17863/CAM.29356\">https://doi.org/10.17863/CAM.29356</a></p>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id37\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Kellner E, Dhital B, Kiselev VG, Reisert M. Gibbs-ringing</p>\n</aside>\n</aside>\n<p>artifact removal based on local subvoxel-shifts. Magn Reson Med. 2016\ndoi: 10.1002/mrm.26054.</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"reader\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader\" title=\"dipy.workflows.docstring_parser.Reader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Reader</span></code></a><a class=\"headerlink\" href=\"#reader\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.docstring_parser.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Reader</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>A line-based string reader.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\n<div><dl class=\"simple\">\n<dt>data<span class=\"classifier\">str</span></dt><dd><p>String with lines separated by \u2018</p>\n</dd>\n</dl>\n</div></blockquote>\n<p>\u2018.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.eof\">\n<span class=\"sig-name descname\"><span class=\"pre\">eof</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.eof\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.is_empty\">\n<span class=\"sig-name descname\"><span class=\"pre\">is_empty</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.is_empty\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.peek\">\n<span class=\"sig-name descname\"><span class=\"pre\">peek</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.peek\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.read\">\n<span class=\"sig-name descname\"><span class=\"pre\">read</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.read\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.read_to_condition\">\n<span class=\"sig-name descname\"><span class=\"pre\">read_to_condition</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">condition_func</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.read_to_condition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.read_to_next_empty_line\">\n<span class=\"sig-name descname\"><span class=\"pre\">read_to_next_empty_line</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.read_to_next_empty_line\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line\">\n<span class=\"sig-name descname\"><span class=\"pre\">read_to_next_unindented_line</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.reset\">\n<span class=\"sig-name descname\"><span class=\"pre\">reset</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.reset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line\">\n<span class=\"sig-name descname\"><span class=\"pre\">seek_next_non_empty_line</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"numpydocstring\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.NumpyDocString\" title=\"dipy.workflows.docstring_parser.NumpyDocString\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NumpyDocString</span></code></a><a class=\"headerlink\" href=\"#numpydocstring\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.NumpyDocString\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.docstring_parser.</span></span><span class=\"sig-name descname\"><span class=\"pre\">NumpyDocString</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">docstring</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">{}</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.NumpyDocString\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.NumpyDocString.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">docstring</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">{}</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.NumpyDocString.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"dedent-lines\">\n<h3>dedent_lines<a class=\"headerlink\" href=\"#dedent-lines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.docstring_parser.dedent_lines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.docstring_parser.</span></span><span class=\"sig-name descname\"><span class=\"pre\">dedent_lines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">lines</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.docstring_parser.dedent_lines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Deindent a list of lines maximally</p>\n</dd></dl>\n\n</section>\n<section id=\"get-level\">\n<h3>get_level<a class=\"headerlink\" href=\"#get-level\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.flow_runner.get_level\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.flow_runner.</span></span><span class=\"sig-name descname\"><span class=\"pre\">get_level</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">lvl</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.flow_runner.get_level\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Transforms the logging level passed on the commandline into a proper\nlogging level name.</p>\n</dd></dl>\n\n</section>\n<section id=\"run-flow\">\n<h3>run_flow<a class=\"headerlink\" href=\"#run-flow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.flow_runner.run_flow\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.flow_runner.</span></span><span class=\"sig-name descname\"><span class=\"pre\">run_flow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">flow</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.flow_runner.run_flow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps the process of building an argparser that reflects the workflow\nthat we want to run along with some generic parameters like logging,\nforce and output strategies. The resulting parameters are then fed to\nthe workflow\u2019s run method.</p>\n</dd></dl>\n\n</section>\n<section id=\"ioinfoflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.io.IoInfoFlow\" title=\"dipy.workflows.io.IoInfoFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IoInfoFlow</span></code></a><a class=\"headerlink\" href=\"#ioinfoflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.IoInfoFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">IoInfoFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.IoInfoFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.IoInfoFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.IoInfoFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.IoInfoFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.IoInfoFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.IoInfoFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bshell_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.IoInfoFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Provides useful information about different files used in\nmedical imaging. Any number of input files can be provided. The\nprogram identifies the type of file by its extension.</p>\n<section id=\"id38\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id38\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">variable string</span></dt><dd><p>Any number of Nifti1, bvals or bvecs files.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to find b0 volumes.</p>\n</dd>\n<dt>bvecs_tol<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to check that norm(bvec) = 1 +/- bvecs_tol\nb-vectors are unit vectors.</p>\n</dd>\n<dt>bshell_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold for distinguishing b-values in different shells.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"fetchflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.io.FetchFlow\" title=\"dipy.workflows.io.FetchFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FetchFlow</span></code></a><a class=\"headerlink\" href=\"#fetchflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.FetchFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">FetchFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.FetchFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.FetchFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.FetchFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.FetchFlow.get_fetcher_datanames\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_fetcher_datanames</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.FetchFlow.get_fetcher_datanames\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets available dataset and function names.</p>\n<section id=\"id39\">\n<h4>Returns<a class=\"headerlink\" href=\"#id39\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>available_data: dict</dt><dd><p>Available dataset and function names.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.FetchFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.FetchFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.FetchFlow.load_module\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">load_module</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">module_path</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.FetchFlow.load_module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load / reload an external module.</p>\n<section id=\"id40\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id40\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>module_path: string</dt><dd><p>the path to the module relative to the main script</p>\n</dd>\n</dl>\n</section>\n<section id=\"id41\">\n<h4>Returns<a class=\"headerlink\" href=\"#id41\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>module: module object</p>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.FetchFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_names</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.FetchFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Download files to folder and check their md5 checksums.</p>\n<p>To see all available datasets, please type \u201clist\u201d in data_names.</p>\n<section id=\"id42\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id42\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data_names<span class=\"classifier\">variable string</span></dt><dd><p>Any number of Nifti1, bvals or bvecs files.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"splitflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.io.SplitFlow\" title=\"dipy.workflows.io.SplitFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SplitFlow</span></code></a><a class=\"headerlink\" href=\"#splitflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.SplitFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">SplitFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.SplitFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.SplitFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.SplitFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.SplitFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.SplitFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.io.SplitFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vol_idx</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_split</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'split.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.io.SplitFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Splits the input 4D file and extracts the required 3D volume.</p>\n<section id=\"id43\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id43\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">variable string</span></dt><dd><p>Any number of Nifti1 files</p>\n</dd>\n</dl>\n<p>vol_idx : int, optional\nout_dir : string, optional</p>\n<blockquote>\n<div><p>Output directory. (default current directory)</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>out_split<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the resulting split volume</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"maskflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.mask.MaskFlow\" title=\"dipy.workflows.mask.MaskFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MaskFlow</span></code></a><a class=\"headerlink\" href=\"#maskflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.mask.MaskFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.mask.</span></span><span class=\"sig-name descname\"><span class=\"pre\">MaskFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.mask.MaskFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.mask.MaskFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.mask.MaskFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.mask.MaskFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.mask.MaskFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.mask.MaskFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">lb</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ub</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">inf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_mask</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mask.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.mask.MaskFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow for creating a binary mask</p>\n<section id=\"id44\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id44\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to image to be masked.</p>\n</dd>\n<dt>lb<span class=\"classifier\">float</span></dt><dd><p>Lower bound value.</p>\n</dd>\n<dt>ub<span class=\"classifier\">float, optional</span></dt><dd><p>Upper bound value.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_mask<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the masked file.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"ioiterator\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator\" title=\"dipy.workflows.multi_io.IOIterator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOIterator</span></code></a><a class=\"headerlink\" href=\"#ioiterator\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.IOIterator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.multi_io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">IOIterator</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.IOIterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Create output filenames that work nicely with multiple input files from\nmultiple directories (processing multiple subjects with one command)</p>\n<p>Use information from input files, out_dir and out_fnames to generate\ncorrect outputs which can come from long lists of multiple or single\ninputs.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.IOIterator.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.IOIterator.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.IOIterator.create_directories\">\n<span class=\"sig-name descname\"><span class=\"pre\">create_directories</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.IOIterator.create_directories\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.IOIterator.create_outputs\">\n<span class=\"sig-name descname\"><span class=\"pre\">create_outputs</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.IOIterator.create_outputs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.IOIterator.file_existence_check\">\n<span class=\"sig-name descname\"><span class=\"pre\">file_existence_check</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">args</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.IOIterator.file_existence_check\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.IOIterator.set_inputs\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_inputs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.IOIterator.set_inputs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.IOIterator.set_out_dir\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_out_dir</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.IOIterator.set_out_dir\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.IOIterator.set_out_fnames\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_out_fnames</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.IOIterator.set_out_fnames\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.IOIterator.set_output_keys\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_output_keys</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.IOIterator.set_output_keys\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"common-start\">\n<h3>common_start<a class=\"headerlink\" href=\"#common-start\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.common_start\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.multi_io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">common_start</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sa</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sb</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.common_start\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the longest common substring from the beginning of sa and sb.</p>\n</dd></dl>\n\n</section>\n<section id=\"slash-to-under\">\n<h3>slash_to_under<a class=\"headerlink\" href=\"#slash-to-under\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.slash_to_under\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.multi_io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">slash_to_under</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dir_str</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.slash_to_under\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"connect-output-paths\">\n<h3>connect_output_paths<a class=\"headerlink\" href=\"#connect-output-paths\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.connect_output_paths\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.multi_io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">connect_output_paths</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inputs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.connect_output_paths\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate a list of output files paths based on input files and\noutput strategies.</p>\n<section id=\"id45\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id45\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>inputs<span class=\"classifier\">array</span></dt><dd><p>List of input paths.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string</span></dt><dd><p>The output directory.</p>\n</dd>\n<dt>out_files<span class=\"classifier\">array</span></dt><dd><p>List of output files.</p>\n</dd>\n<dt>output_strategy<span class=\"classifier\">string, optional</span></dt><dd><dl class=\"simple\">\n<dt>Which strategy to use to generate the output paths.</dt><dd><p>\u2018append\u2019: Add out_dir to the path of the input.\n\u2018prepend\u2019: Add the input path directory tree to out_dir.\n\u2018absolute\u2019: Put directly in out_dir.</p>\n</dd>\n</dl>\n</dd>\n<dt>mix_names<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether or not prepend a string composed of a mix of the input\nnames to the final output name.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id46\">\n<h4>Returns<a class=\"headerlink\" href=\"#id46\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<blockquote>\n<div><p>A list of output file paths.</p>\n</div></blockquote>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"concatenate-inputs\">\n<h3>concatenate_inputs<a class=\"headerlink\" href=\"#concatenate-inputs\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.concatenate_inputs\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.multi_io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">concatenate_inputs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">multi_inputs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.concatenate_inputs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Concatenate list of inputs.</p>\n</dd></dl>\n\n</section>\n<section id=\"basename-without-extension\">\n<h3>basename_without_extension<a class=\"headerlink\" href=\"#basename-without-extension\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.basename_without_extension\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.multi_io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">basename_without_extension</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.basename_without_extension\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</section>\n<section id=\"io-iterator\">\n<h3>io_iterator<a class=\"headerlink\" href=\"#io-iterator\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.io_iterator\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.multi_io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">io_iterator</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inputs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fnames</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.io_iterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an IOIterator from the parameters.</p>\n<section id=\"id47\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id47\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>inputs<span class=\"classifier\">array</span></dt><dd><p>List of input files.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string</span></dt><dd><p>Output directory.</p>\n</dd>\n<dt>fnames<span class=\"classifier\">array</span></dt><dd><p>File names of all outputs to be created.</p>\n</dd>\n<dt>output_strategy<span class=\"classifier\">string, optional</span></dt><dd><p>Controls the behavior of the IOIterator for output paths.</p>\n</dd>\n<dt>mix_names<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether or not to append a mix of input names at the beginning.</p>\n</dd>\n<dt>out_keys<span class=\"classifier\">list, optional</span></dt><dd><p>Output parameter names.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id48\">\n<h4>Returns<a class=\"headerlink\" href=\"#id48\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<blockquote>\n<div><p>Properly instantiated IOIterator object.</p>\n</div></blockquote>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"id49\">\n<h3><a href=\"#id112\"><span class=\"problematic\" id=\"id113\">io_iterator_</span></a><a class=\"headerlink\" href=\"#id49\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.multi_io.io_iterator_\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.multi_io.</span></span><span class=\"sig-name descname\"><span class=\"pre\">io_iterator_</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">frame</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fnc</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.multi_io.io_iterator_\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an IOIterator using introspection.</p>\n<section id=\"id50\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id50\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>frame<span class=\"classifier\">frameobject</span></dt><dd><p>Contains the info about the current local variables values.</p>\n</dd>\n<dt>fnc<span class=\"classifier\">function</span></dt><dd><p>The function to inspect</p>\n</dd>\n<dt>output_strategy<span class=\"classifier\">string</span></dt><dd><p>Controls the behavior of the IOIterator for output paths.</p>\n</dd>\n<dt>mix_names<span class=\"classifier\">bool</span></dt><dd><p>Whether or not to append a mix of input names at the beginning.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id51\">\n<h4>Returns<a class=\"headerlink\" href=\"#id51\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<blockquote>\n<div><p>Properly instantiated IOIterator object.</p>\n</div></blockquote>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"reconstmapmriflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow\" title=\"dipy.workflows.reconst.ReconstMAPMRIFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstMAPMRIFlow</span></code></a><a class=\"headerlink\" href=\"#reconstmapmriflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstMAPMRIFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.reconst.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ReconstMAPMRIFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstMAPMRIFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstMAPMRIFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">small_delta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">big_delta</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">laplacian</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">positivity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bval_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2000</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_metrics</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">laplacian_weighting</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.05</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radial_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">6</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_rtop</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rtop.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_lapnorm</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'lapnorm.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_msd</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'msd.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_qiv</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'qiv.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_rtap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rtap.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_rtpp</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rtpp.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_ng</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'ng.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_perng</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'perng.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_parng</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'parng.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow for fitting the MAPMRI model (with optional Laplacian\nregularization). Generates rtop, lapnorm, msd, qiv, rtap, rtpp,\nnon-gaussian (ng), parallel ng, perpendicular ng saved in a nifti\nformat in input files provided by <cite>data_files</cite> and saves the nifti\nfiles to an output directory specified by <cite>out_dir</cite>.</p>\n<p>In order for the MAPMRI workflow to work in the way\nintended either the Laplacian or positivity or both must\nbe set to True.</p>\n<section id=\"id52\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id52\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volume.</p>\n</dd>\n<dt>bvals_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bval files.</p>\n</dd>\n<dt>bvecs_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvec files.</p>\n</dd>\n<dt>small_delta<span class=\"classifier\">float</span></dt><dd><p>Small delta value used in generation of gradient table of provided\nbval and bvec.</p>\n</dd>\n<dt>big_delta<span class=\"classifier\">float</span></dt><dd><p>Big delta value used in generation of gradient table of provided\nbval and bvec.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to find b0 volumes.</p>\n</dd>\n<dt>laplacian<span class=\"classifier\">bool, optional</span></dt><dd><p>Regularize using the Laplacian of the MAP-MRI basis.</p>\n</dd>\n<dt>positivity<span class=\"classifier\">bool, optional</span></dt><dd><p>Constrain the propagator to be positive.</p>\n</dd>\n<dt>bval_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Sets the b-value threshold to be used in the scale factor\nestimation. In order for the estimated non-Gaussianity to have\nmeaning this value should set to a lower value (b&lt;2000 s/mm^2)\nsuch that the scale factors are estimated on signal points that\nreasonably represent the spins at Gaussian diffusion.</p>\n</dd>\n<dt>save_metrics<span class=\"classifier\">variable string, optional</span></dt><dd><p>List of metrics to save.\nPossible values: rtop, laplacian_signal, msd, qiv, rtap, rtpp,\nng, perng, parng</p>\n</dd>\n<dt>laplacian_weighting<span class=\"classifier\">float, optional</span></dt><dd><p>Weighting value used in fitting the MAPMRI model in the Laplacian\nand both model types.</p>\n</dd>\n<dt>radial_order<span class=\"classifier\">unsigned int, optional</span></dt><dd><p>Even value used to set the order of the basis.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default: current directory)</p>\n</dd>\n<dt>out_rtop<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the rtop to be saved.</p>\n</dd>\n<dt>out_lapnorm<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the norm of Laplacian signal to be saved.</p>\n</dd>\n<dt>out_msd<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the msd to be saved.</p>\n</dd>\n<dt>out_qiv<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the qiv to be saved.</p>\n</dd>\n<dt>out_rtap<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the rtap to be saved.</p>\n</dd>\n<dt>out_rtpp<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the rtpp to be saved.</p>\n</dd>\n<dt>out_ng<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the Non-Gaussianity to be saved.</p>\n</dd>\n<dt>out_perng<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the Non-Gaussianity perpendicular to be saved.</p>\n</dd>\n<dt>out_parng<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the Non-Gaussianity parallel to be saved.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"reconstdtiflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDtiFlow\" title=\"dipy.workflows.reconst.ReconstDtiFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstDtiFlow</span></code></a><a class=\"headerlink\" href=\"#reconstdtiflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDtiFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.reconst.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ReconstDtiFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDtiFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDtiFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDtiFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_fitted_tensor</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bval</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvec</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fit_method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'WLS'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">optional_args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDtiFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDtiFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDtiFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvalues_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvectors_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fit_method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'WLS'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sigma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_metrics</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_tensor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'tensors.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_fa</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'fa.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_ga</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'ga.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_rgb</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rgb.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_md</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'md.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_ad</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'ad.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_rd</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rd.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mode.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_evec</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'evecs.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_eval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'evals.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nifti_tensor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDtiFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow for tensor reconstruction and for computing DTI metrics.\nusing Weighted Least-Squares.\nPerforms a tensor reconstruction on the files by \u2018globing\u2019\n<code class=\"docutils literal notranslate\"><span class=\"pre\">input_files</span></code> and saves the DTI metrics in a directory specified by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id53\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id53\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bvalues_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>bvectors_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvectors files. This path may contain wildcards to use\nmultiple bvectors files at once.</p>\n</dd>\n<dt>mask_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input masks. This path may contain wildcards to use\nmultiple masks at once.</p>\n</dd>\n<dt>fit_method<span class=\"classifier\">string, optional</span></dt><dd><p>can be one of the following:\n\u2018WLS\u2019 for weighted least squares\n\u2018LS\u2019 or \u2018OLS\u2019 for ordinary least squares\n\u2018NLLS\u2019 for non-linear least-squares\n\u2018RT\u2019 or \u2018restore\u2019 or \u2018RESTORE\u2019 for RESTORE robust tensor fitting</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to find b0 volumes.</p>\n</dd>\n<dt>bvecs_tol<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to check that norm(bvec) = 1 +/- bvecs_tol</p>\n</dd>\n<dt>sigma<span class=\"classifier\">float, optional</span></dt><dd><p>An estimate of the variance. <a class=\"footnote-reference brackets\" href=\"#id60\" id=\"id54\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>5<span class=\"fn-bracket\">]</span></a> recommend to use\n1.5267 * std(background_noise), where background_noise is estimated\nfrom some part of the image known to contain no signal (only noise)\nb-vectors are unit vectors.</p>\n</dd>\n<dt>save_metrics<span class=\"classifier\">variable string, optional</span></dt><dd><p>List of metrics to save.\nPossible values: fa, ga, rgb, md, ad, rd, mode, tensor, evec, eval</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_tensor<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the tensors volume to be saved.\nPer default, this will be saved following the nifti standard:\nwith the tensor elements as Dxx, Dxy, Dyy, Dxz, Dyz, Dzz on the\nlast (5th) dimension of the volume (shape: (i, j, k, 1, 6)). If\n<cite>nifti_tensor</cite> is False, this will be saved in an alternate format\nthat is used by other software (e.g., FSL): a\n4-dimensional volume (shape (i, j, k, 6)) with Dxx, Dxy, Dxz, Dyy,\nDyz, Dzz on the last dimension.</p>\n</dd>\n<dt>out_fa<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the fractional anisotropy volume to be saved.</p>\n</dd>\n<dt>out_ga<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the geodesic anisotropy volume to be saved.</p>\n</dd>\n<dt>out_rgb<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the color fa volume to be saved.</p>\n</dd>\n<dt>out_md<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the mean diffusivity volume to be saved.</p>\n</dd>\n<dt>out_ad<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the axial diffusivity volume to be saved.</p>\n</dd>\n<dt>out_rd<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the radial diffusivity volume to be saved.</p>\n</dd>\n<dt>out_mode<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the mode volume to be saved.</p>\n</dd>\n<dt>out_evec<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the eigenvectors volume to be saved.</p>\n</dd>\n<dt>out_eval<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the eigenvalues to be saved.</p>\n</dd>\n<dt>nifti_tensor<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether the tensor is saved in the standard Nifti format or in an\nalternate format\nthat is used by other software (e.g., FSL): a\n4-dimensional volume (shape (i, j, k, 6)) with\nDxx, Dxy, Dxz, Dyy, Dyz, Dzz on the last dimension.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id55\">\n<h4>References<a class=\"headerlink\" href=\"#id55\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id56\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Basser, P.J., Mattiello, J., LeBihan, D., 1994. Estimation of\nthe effective self-diffusion tensor from the NMR spin echo. J Magn\nReson B 103, 247-254.</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id57\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Basser, P., Pierpaoli, C., 1996. Microstructural and\nphysiological features of tissues elucidated by quantitative\ndiffusion-tensor MRI.  Journal of Magnetic Resonance 111, 209-219.</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id58\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>3<span class=\"fn-bracket\">]</span></span>\n<p>Lin-Ching C., Jones D.K., Pierpaoli, C. 2005. RESTORE: Robust\nestimation of tensors by outlier rejection. MRM 53: 1088-1095</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id59\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>4<span class=\"fn-bracket\">]</span></span>\n<p>hung, SW., Lu, Y., Henry, R.G., 2006. Comparison of bootstrap\napproaches for estimation of uncertainties of DTI parameters.\nNeuroImage 33, 531-541.</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id60\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id54\">5</a><span class=\"fn-bracket\">]</span></span>\n<p>Chang, L-C, Jones, DK and Pierpaoli, C (2005). RESTORE: robust\nestimation of tensors by outlier rejection. MRM, 53: 1088-95.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"reconstcsdflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSDFlow\" title=\"dipy.workflows.reconst.ReconstCSDFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstCSDFlow</span></code></a><a class=\"headerlink\" href=\"#reconstcsdflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstCSDFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.reconst.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ReconstCSDFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstCSDFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstCSDFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstCSDFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstCSDFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstCSDFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstCSDFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvalues_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvectors_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi_center</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi_radii</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fa_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.7</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">frf</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extract_pam_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">odf_to_sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parallel</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_processes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_pam</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks.pam5'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_shm</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'shm.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_peaks_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks_dirs.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_peaks_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks_values.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_peaks_indices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks_indices.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_gfa</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'gfa.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstCSDFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constrained spherical deconvolution</p>\n<section id=\"id61\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id61\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bvalues_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>bvectors_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvectors files. This path may contain wildcards to use\nmultiple bvectors files at once.</p>\n</dd>\n<dt>mask_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input masks. This path may contain wildcards to use\nmultiple masks at once. (default: No mask used)</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to find b0 volumes.</p>\n</dd>\n<dt>bvecs_tol<span class=\"classifier\">float, optional</span></dt><dd><p>Bvecs should be unit vectors.</p>\n</dd>\n<dt>roi_center<span class=\"classifier\">variable int, optional</span></dt><dd><p>Center of ROI in data. If center is None, it is assumed that it is\nthe center of the volume with shape <cite>data.shape[:3]</cite>.</p>\n</dd>\n<dt>roi_radii<span class=\"classifier\">int or array-like, optional</span></dt><dd><p>radii of cuboid ROI in voxels.</p>\n</dd>\n<dt>fa_thr<span class=\"classifier\">float, optional</span></dt><dd><p>FA threshold for calculating the response function.</p>\n</dd>\n<dt>frf<span class=\"classifier\">variable float, optional</span></dt><dd><p>Fiber response function can be for example inputted as 15 4 4\n(from the command line) or [15, 4, 4] from a Python script to be\nconverted to float and multiplied by 10**-4 . If None\nthe fiber response function will be computed automatically.</p>\n</dd>\n<dt>extract_pam_values<span class=\"classifier\">bool, optional</span></dt><dd><p>Save or not to save pam volumes as single nifti files.</p>\n</dd>\n<dt>sh_order<span class=\"classifier\">int, optional</span></dt><dd><p>Spherical harmonics order used in the CSA fit.</p>\n</dd>\n<dt>odf_to_sh_order<span class=\"classifier\">int, optional</span></dt><dd><p>Spherical harmonics order used for peak_from_model to compress\nthe ODF to spherical harmonics coefficients.</p>\n</dd>\n<dt>parallel<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to use parallelization in peak-finding during the\ncalibration procedure.</p>\n</dd>\n<dt>num_processes<span class=\"classifier\">int, optional</span></dt><dd><p>If <cite>parallel</cite> is True, the number of subprocesses to use\n(default multiprocessing.cpu_count()). If &lt; 0 the maximal number\nof cores minus <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code> is used (enter -1 to use as\nmany cores as possible). 0 raises an error.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_pam<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks volume to be saved.</p>\n</dd>\n<dt>out_shm<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the spherical harmonics volume to be saved.</p>\n</dd>\n<dt>out_peaks_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks directions volume to be saved.</p>\n</dd>\n<dt>out_peaks_values<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks values volume to be saved.</p>\n</dd>\n<dt>out_peaks_indices<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks indices volume to be saved.</p>\n</dd>\n<dt>out_gfa<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the generalized FA volume to be saved.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id62\">\n<h4>References<a class=\"headerlink\" href=\"#id62\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id63\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Tournier, J.D., et al. NeuroImage 2007. Robust determination of\nthe fibre orientation distribution in diffusion MRI: Non-negativity\nconstrained super-resolved spherical deconvolution.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"reconstcsaflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSAFlow\" title=\"dipy.workflows.reconst.ReconstCSAFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstCSAFlow</span></code></a><a class=\"headerlink\" href=\"#reconstcsaflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstCSAFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.reconst.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ReconstCSAFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstCSAFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstCSAFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstCSAFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstCSAFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstCSAFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstCSAFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvalues_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvectors_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">6</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">odf_to_sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extract_pam_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parallel</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_processes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_pam</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks.pam5'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_shm</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'shm.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_peaks_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks_dirs.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_peaks_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks_values.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_peaks_indices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks_indices.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_gfa</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'gfa.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstCSAFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constant Solid Angle.</p>\n<section id=\"id64\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id64\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bvalues_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>bvectors_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvectors files. This path may contain wildcards to use\nmultiple bvectors files at once.</p>\n</dd>\n<dt>mask_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input masks. This path may contain wildcards to use\nmultiple masks at once. (default: No mask used)</p>\n</dd>\n<dt>sh_order<span class=\"classifier\">int, optional</span></dt><dd><p>Spherical harmonics order used in the CSA fit.</p>\n</dd>\n<dt>odf_to_sh_order<span class=\"classifier\">int, optional</span></dt><dd><p>Spherical harmonics order used for peak_from_model to compress\nthe ODF to spherical harmonics coefficients.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to find b0 volumes.</p>\n</dd>\n<dt>bvecs_tol<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used so that norm(bvec)=1.</p>\n</dd>\n<dt>extract_pam_values<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether or not to save pam volumes as single nifti files.</p>\n</dd>\n<dt>parallel<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to use parallelization in peak-finding during the\ncalibration procedure.</p>\n</dd>\n<dt>num_processes<span class=\"classifier\">int, optional</span></dt><dd><p>If <cite>parallel</cite> is True, the number of subprocesses to use\n(default multiprocessing.cpu_count()). If &lt; 0 the maximal number\nof cores minus <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code> is used (enter -1 to use as\nmany cores as possible). 0 raises an error.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_pam<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks volume to be saved.</p>\n</dd>\n<dt>out_shm<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the spherical harmonics volume to be saved.</p>\n</dd>\n<dt>out_peaks_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks directions volume to be saved.</p>\n</dd>\n<dt>out_peaks_values<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks values volume to be saved.</p>\n</dd>\n<dt>out_peaks_indices<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks indices volume to be saved.</p>\n</dd>\n<dt>out_gfa<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the generalized FA volume to be saved.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id65\">\n<h4>References<a class=\"headerlink\" href=\"#id65\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id66\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Aganj, I., et al. 2009. ODF Reconstruction in Q-Ball Imaging\nwith Solid Angle Consideration.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"reconstdkiflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDkiFlow\" title=\"dipy.workflows.reconst.ReconstDkiFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstDkiFlow</span></code></a><a class=\"headerlink\" href=\"#reconstdkiflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDkiFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.reconst.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ReconstDkiFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDkiFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDkiFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDkiFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_fitted_tensor</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bval</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvec</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fit_method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'WLS'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">optional_args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDkiFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDkiFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstDkiFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvalues_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvectors_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fit_method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'WLS'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sigma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_metrics</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dt_tensor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dti_tensors.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_fa</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'fa.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_ga</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'ga.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_rgb</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rgb.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_md</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'md.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_ad</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'ad.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_rd</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rd.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mode.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_evec</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'evecs.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_eval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'evals.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dk_tensor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dki_tensors.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_mk</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mk.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_ak</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'ak.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_rk</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rk.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstDkiFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow for Diffusion Kurtosis reconstruction and for computing\nDKI metrics. Performs a DKI reconstruction on the files by \u2018globing\u2019\n<code class=\"docutils literal notranslate\"><span class=\"pre\">input_files</span></code> and saves the DKI metrics in a directory specified by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id67\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id67\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bvalues_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>bvectors_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>mask_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input masks. This path may contain wildcards to use\nmultiple masks at once. (default: No mask used)</p>\n</dd>\n<dt>fit_method<span class=\"classifier\">string, optional</span></dt><dd><p>can be one of the following:\n\u2018OLS\u2019 or \u2018ULLS\u2019 for ordinary least squares\n\u2018WLS\u2019 or \u2018UWLLS\u2019 for weighted ordinary least squares</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to find b0 volumes.</p>\n</dd>\n<dt>sigma<span class=\"classifier\">float, optional</span></dt><dd><p>An estimate of the variance. <a href=\"#id114\"><span class=\"problematic\" id=\"id68\">[3]_</span></a> recommend to use\n1.5267 * std(background_noise), where background_noise is estimated\nfrom some part of the image known to contain no signal (only noise)</p>\n</dd>\n<dt>save_metrics<span class=\"classifier\">variable string, optional</span></dt><dd><p>List of metrics to save.\nPossible values: fa, ga, rgb, md, ad, rd, mode, tensor, evec, eval</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_dt_tensor<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the tensors volume to be saved.</p>\n</dd>\n<dt>out_dk_tensor<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the tensors volume to be saved.</p>\n</dd>\n<dt>out_fa<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the fractional anisotropy volume to be saved.</p>\n</dd>\n<dt>out_ga<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the geodesic anisotropy volume to be saved.</p>\n</dd>\n<dt>out_rgb<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the color fa volume to be saved.</p>\n</dd>\n<dt>out_md<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the mean diffusivity volume to be saved.</p>\n</dd>\n<dt>out_ad<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the axial diffusivity volume to be saved.</p>\n</dd>\n<dt>out_rd<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the radial diffusivity volume to be saved.</p>\n</dd>\n<dt>out_mode<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the mode volume to be saved.</p>\n</dd>\n<dt>out_evec<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the eigenvectors volume to be saved.</p>\n</dd>\n<dt>out_eval<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the eigenvalues to be saved.</p>\n</dd>\n<dt>out_mk<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the mean kurtosis to be saved.</p>\n</dd>\n<dt>out_ak<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the axial kurtosis to be saved.</p>\n</dd>\n<dt>out_rk<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the radial kurtosis to be saved.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id69\">\n<h4>References<a class=\"headerlink\" href=\"#id69\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id70\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Tabesh, A., Jensen, J.H., Ardekani, B.A., Helpern, J.A., 2011.\nEstimation of tensors and tensor-derived measures in diffusional\nkurtosis imaging. Magn Reson Med. 65(3), 823-836</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id71\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Jensen, Jens H., Joseph A. Helpern, Anita Ramani, Hanzhang Lu,\nand Kyle Kaczynski. 2005. Diffusional Kurtosis Imaging: The\nQuantification of Non-Gaussian Water Diffusion by Means of Magnetic\nResonance Imaging. MRM 53 (6):1432-40.</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id72\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>3<span class=\"fn-bracket\">]</span></span>\n<p>Chang, L-C, Jones, DK and Pierpaoli, C (2005). RESTORE: robust\nestimation of tensors by outlier rejection. MRM, 53: 1088-95.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"reconstivimflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstIvimFlow\" title=\"dipy.workflows.reconst.ReconstIvimFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstIvimFlow</span></code></a><a class=\"headerlink\" href=\"#reconstivimflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstIvimFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.reconst.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ReconstIvimFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstIvimFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstIvimFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstIvimFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_fitted_ivim</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bval</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvec</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstIvimFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstIvimFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstIvimFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvalues_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvectors_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">split_b_D</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">400</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">split_b_S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">200</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_metrics</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_S0_predicted</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'S0_predicted.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_perfusion_fraction</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'perfusion_fraction.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_D_star</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'D_star.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_D</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'D.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstIvimFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow for Intra-voxel Incoherent Motion reconstruction and for\ncomputing IVIM metrics. Performs a IVIM reconstruction on the files\nby \u2018globing\u2019 <code class=\"docutils literal notranslate\"><span class=\"pre\">input_files</span></code> and saves the IVIM metrics in a directory\nspecified by <code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id73\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id73\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bvalues_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>bvectors_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>mask_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input masks. This path may contain wildcards to use\nmultiple masks at once. (default: No mask used)</p>\n</dd>\n<dt>split_b_D<span class=\"classifier\">int, optional</span></dt><dd><p>Value to split the bvals to estimate D for the two-stage process of\nfitting.</p>\n</dd>\n<dt>split_b_S0<span class=\"classifier\">int, optional</span></dt><dd><p>Value to split the bvals to estimate S0 for the two-stage process\nof fitting.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">int, optional</span></dt><dd><p>Threshold value for the b0 bval.</p>\n</dd>\n<dt>save_metrics<span class=\"classifier\">variable string, optional</span></dt><dd><p>List of metrics to save.\nPossible values: S0_predicted, perfusion_fraction, D_star, D</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_S0_predicted<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the S0 signal estimated to be saved.</p>\n</dd>\n<dt>out_perfusion_fraction<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the estimated volume fractions to be saved.</p>\n</dd>\n<dt>out_D_star<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the estimated pseudo-diffusion parameter to be saved.</p>\n</dd>\n<dt>out_D<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the estimated diffusion parameter to be saved.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id74\">\n<h4>References<a class=\"headerlink\" href=\"#id74\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"stejskal65\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Stejskal65<span class=\"fn-bracket\">]</span></span>\n<p>Stejskal, E. O.; Tanner, J. E. (1 January 1965).\n\u201cSpin Diffusion Measurements: Spin Echoes in the\nPresence of a Time-Dependent Field Gradient\u201d. The\nJournal of Chemical Physics 42 (1): 288.\nBibcode: 1965JChPh..42..288S. doi:10.1063/1.1695690.</p>\n</div>\n<div class=\"citation\" id=\"lebihan84\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>LeBihan84<span class=\"fn-bracket\">]</span></span>\n<p>Le Bihan, Denis, et al. \u201cSeparation of diffusion\nand perfusion in intravoxel incoherent motion MR\nimaging.\u201d Radiology 168.2 (1988): 497-505.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"reconstrumbaflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow\" title=\"dipy.workflows.reconst.ReconstRUMBAFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstRUMBAFlow</span></code></a><a class=\"headerlink\" href=\"#reconstrumbaflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstRUMBAFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.reconst.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ReconstRUMBAFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstRUMBAFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.reconst.ReconstRUMBAFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvalues_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvectors_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b0_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi_center</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi_radii</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fa_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.7</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extract_pam_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">odf_to_sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parallel</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_processes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gm_response</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0008</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">csf_response</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.003</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_iter</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">600</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">recon_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'smf'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_coils</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">R</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">voxelwise</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_tv</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'repulsion724'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">relative_peak_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_separation_angle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">25</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">npeaks</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_pam</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks.pam5'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_shm</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'shm.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_peaks_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks_dirs.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_peaks_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks_values.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_peaks_indices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'peaks_indices.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_gfa</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'gfa.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reconstruct the fiber local orientations using the Robust and\nUnbiased Model-BAsed Spherical Deconvolution (RUMBA-SD) <a href=\"#id115\"><span class=\"problematic\" id=\"id75\">[1]_</span></a> model. The\nfiber response function (FRF) is computed using the single-shell,\nsingle-tissue model, and the voxel-wise fitting procedure is used for\nRUMBA-SD.</p>\n<section id=\"id76\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id76\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bvalues_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvalues files. This path may contain wildcards to use\nmultiple bvalues files at once.</p>\n</dd>\n<dt>bvectors_files<span class=\"classifier\">string</span></dt><dd><p>Path to the bvectors files. This path may contain wildcards to use\nmultiple bvectors files at once.</p>\n</dd>\n<dt>mask_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input masks. This path may contain wildcards to use\nmultiple masks at once.</p>\n</dd>\n<dt>b0_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold used to find b0 volumes.</p>\n</dd>\n<dt>bvecs_tol<span class=\"classifier\">float, optional</span></dt><dd><p>Bvecs should be unit vectors.</p>\n</dd>\n<dt>roi_center<span class=\"classifier\">variable int, optional</span></dt><dd><p>Center of ROI in data. If center is None, it is assumed that it is\nthe center of the volume with shape <cite>data.shape[:3]</cite>.</p>\n</dd>\n<dt>roi_radii<span class=\"classifier\">int or array-like, optional</span></dt><dd><p>radii of cuboid ROI in voxels.</p>\n</dd>\n<dt>fa_thr<span class=\"classifier\">float, optional</span></dt><dd><p>FA threshold to compute the WM response function.</p>\n</dd>\n<dt>extract_pam_values<span class=\"classifier\">bool, optional</span></dt><dd><p>Save or not to save pam volumes as single nifti files.</p>\n</dd>\n<dt>sh_order<span class=\"classifier\">int, optional</span></dt><dd><p>Spherical harmonics order used in the CSA fit.</p>\n</dd>\n<dt>odf_to_sh_order<span class=\"classifier\">int, optional</span></dt><dd><p>Spherical harmonics order used for peak_from_model to compress\nthe ODF to spherical harmonics coefficients.</p>\n</dd>\n<dt>parallel<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to use parallelization in peak-finding during the\ncalibration procedure.</p>\n</dd>\n<dt>num_processes<span class=\"classifier\">int, optional</span></dt><dd><p>If <cite>parallel</cite> is True, the number of subprocesses to use\n(default multiprocessing.cpu_count()). If &lt; 0 the maximal number\nof cores minus <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code> is used (enter -1 to use as\nmany cores as possible). 0 raises an error.</p>\n</dd>\n<dt>gm_response<span class=\"classifier\">float, optional</span></dt><dd><p>Mean diffusivity for GM compartment. If <cite>None</cite>, then grey\nmatter volume fraction is not computed.</p>\n</dd>\n<dt>csf_response<span class=\"classifier\">float, optional</span></dt><dd><p>Mean diffusivity for CSF compartment. If <cite>None</cite>, then CSF\nvolume fraction is not computed.</p>\n</dd>\n<dt>n_iter<span class=\"classifier\">int, optional</span></dt><dd><p>Number of iterations for fODF estimation. Must be a positive int.</p>\n</dd>\n<dt>recon_type<span class=\"classifier\">str, optional</span></dt><dd><p>MRI reconstruction method type: spatial matched filter (<cite>smf</cite>) or\nsum-of-squares (<cite>sos</cite>). SMF reconstruction generates Rician noise\nwhile SoS reconstruction generates Noncentral Chi noise.</p>\n</dd>\n<dt>n_coils<span class=\"classifier\">int, optional</span></dt><dd><p>Number of coils in MRI scanner \u2013 only relevant in SoS\nreconstruction. Must be a positive int. Default: 1</p>\n</dd>\n<dt>R<span class=\"classifier\">int, optional</span></dt><dd><p>Acceleration factor of the acquisition. For SIEMENS,\nR = iPAT factor. For GE, R = ASSET factor. For PHILIPS,\nR = SENSE factor. Typical values are 1 or 2. Must be a positive\ninteger.</p>\n</dd>\n<dt>voxelwise<span class=\"classifier\">bool, optional</span></dt><dd><p>If true, performs a voxelwise fit. If false, performs a global fit\non the entire brain at once. The global fit requires a 4D brain\nvolume in <cite>fit</cite>.</p>\n</dd>\n<dt>use_tv<span class=\"classifier\">bool, optional</span></dt><dd><p>If true, applies total variation regularization. This only takes\neffect in a global fit (<cite>voxelwise</cite> is set to <cite>False</cite>). TV can only\nbe applied to 4D brain volumes with no singleton dimensions.</p>\n</dd>\n<dt>sphere_name<span class=\"classifier\">str, optional</span></dt><dd><p>Sphere name on which to reconstruct the fODFs.</p>\n</dd>\n<dt>verbose<span class=\"classifier\">bool, optional</span></dt><dd><p>If true, logs updates on estimated signal-to-noise ratio after each\niteration. This only takes effect in a global fit (<cite>voxelwise</cite> is\nset to <cite>False</cite>).</p>\n</dd>\n<dt>relative_peak_threshold<span class=\"classifier\">float, optional</span></dt><dd><dl class=\"simple\">\n<dt>Only return peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code></dt><dd><p>where m is the largest peak.</p>\n</dd>\n</dl>\n</dd>\n<dt>min_separation_angle<span class=\"classifier\">float, optional</span></dt><dd><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</dd>\n<dt>npeaks<span class=\"classifier\">int, optional</span></dt><dd><p>Maximum number of peaks returned for a given voxel.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_pam<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks volume to be saved.</p>\n</dd>\n<dt>out_shm<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the spherical harmonics volume to be saved.</p>\n</dd>\n<dt>out_peaks_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks directions volume to be saved.</p>\n</dd>\n<dt>out_peaks_values<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks values volume to be saved.</p>\n</dd>\n<dt>out_peaks_indices<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the peaks indices volume to be saved.</p>\n</dd>\n<dt>out_gfa<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the generalized FA volume to be saved.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id77\">\n<h4>References<a class=\"headerlink\" href=\"#id77\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id78\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Canales-Rodr\u00edguez, E. J., Daducci, A., Sotiropoulos, S. N.,\nCaruyer, E., Aja-Fern\u00e1ndez, S., Radua, J., Mendizabal, J. M. Y.,\nIturria-Medina, Y., Melie-Garc\u00eda, L., Alem\u00e1n-G\u00f3mez, Y.,\nThiran, J.-P., Sarr\u00f3, S., Pomarol-Clotet, E., &amp; Salvador, R.\n(2015). Spherical Deconvolution of Multichannel Diffusion MRI\nData with Non-Gaussian Noise Models and Spatial Regularization.\nPLOS ONE, 10(10), e0138910.\n<a class=\"reference external\" href=\"https://doi.org/10.1371/journal.pone.0138910\">https://doi.org/10.1371/journal.pone.0138910</a></p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"medianotsuflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.segment.MedianOtsuFlow\" title=\"dipy.workflows.segment.MedianOtsuFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MedianOtsuFlow</span></code></a><a class=\"headerlink\" href=\"#medianotsuflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.MedianOtsuFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.segment.</span></span><span class=\"sig-name descname\"><span class=\"pre\">MedianOtsuFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.MedianOtsuFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.MedianOtsuFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.MedianOtsuFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.MedianOtsuFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.MedianOtsuFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.MedianOtsuFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_masked</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">median_radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">numpass</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">autocrop</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vol_idx</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dilate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_mask</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'brain_mask.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_masked</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dwi_masked.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.MedianOtsuFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow wrapping the median_otsu segmentation method.</p>\n<p>Applies median_otsu segmentation on each file found by \u2018globing\u2019\n<code class=\"docutils literal notranslate\"><span class=\"pre\">input_files</span></code> and saves the results in a directory specified by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id79\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id79\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>save_masked<span class=\"classifier\">bool, optional</span></dt><dd><p>Save mask.</p>\n</dd>\n<dt>median_radius<span class=\"classifier\">int, optional</span></dt><dd><p>Radius (in voxels) of the applied median filter.</p>\n</dd>\n<dt>numpass<span class=\"classifier\">int, optional</span></dt><dd><p>Number of pass of the median filter.</p>\n</dd>\n<dt>autocrop<span class=\"classifier\">bool, optional</span></dt><dd><p>If True, the masked input_volumes will also be cropped using the\nbounding box defined by the masked data. For example, if diffusion\nimages are of 1x1x1 (mm^3) or higher resolution auto-cropping could\nreduce their size in memory and speed up some of the analysis.</p>\n</dd>\n<dt>vol_idx<span class=\"classifier\">variable int, optional</span></dt><dd><p>1D array representing indices of <code class=\"docutils literal notranslate\"><span class=\"pre\">axis=-1</span></code> of a 4D\n<cite>input_volume</cite>. From the command line use something like\n<cite>3 4 5 6</cite>. From script use something like <cite>[3, 4, 5, 6]</cite>. This\ninput is required for 4D volumes.</p>\n</dd>\n<dt>dilate<span class=\"classifier\">int, optional</span></dt><dd><p>number of iterations for binary dilation.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_mask<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the mask volume to be saved.</p>\n</dd>\n<dt>out_masked<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the masked volume to be saved.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"recobundlesflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.segment.RecoBundlesFlow\" title=\"dipy.workflows.segment.RecoBundlesFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RecoBundlesFlow</span></code></a><a class=\"headerlink\" href=\"#recobundlesflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.RecoBundlesFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.segment.</span></span><span class=\"sig-name descname\"><span class=\"pre\">RecoBundlesFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.RecoBundlesFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.RecoBundlesFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.RecoBundlesFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.RecoBundlesFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.RecoBundlesFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.RecoBundlesFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_bundle_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">greater_than</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">less_than</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1000000</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">no_slr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clust_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">15.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reduction_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">15.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reduction_distance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mdf'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_clust_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pruning_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pruning_distance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mdf'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_metric</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'symmetric'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_transform</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'similarity'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">slr_matrix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'small'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">r_reduction_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">12.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">r_pruning_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">6.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">no_r_slr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_recognized_transf</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'recognized.trk'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_recognized_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'labels.npy'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.RecoBundlesFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Recognize bundles</p>\n<section id=\"id80\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id80\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamline_files<span class=\"classifier\">string</span></dt><dd><p>The path of streamline files where you want to recognize bundles.</p>\n</dd>\n<dt>model_bundle_files<span class=\"classifier\">string</span></dt><dd><p>The path of model bundle files.</p>\n</dd>\n<dt>greater_than<span class=\"classifier\">int, optional</span></dt><dd><p>Keep streamlines that have length greater than\nthis value in mm.</p>\n</dd>\n<dt>less_than<span class=\"classifier\">int, optional</span></dt><dd><p>Keep streamlines have length less than this value\nin mm.</p>\n</dd>\n<dt>no_slr<span class=\"classifier\">bool, optional</span></dt><dd><p>Don\u2019t enable local Streamline-based Linear\nRegistration.</p>\n</dd>\n<dt>clust_thr<span class=\"classifier\">float, optional</span></dt><dd><p>MDF distance threshold for all streamlines.</p>\n</dd>\n<dt>reduction_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Reduce search space by (mm).</p>\n</dd>\n<dt>reduction_distance<span class=\"classifier\">string, optional</span></dt><dd><p>Reduction distance type can be mdf or mam.</p>\n</dd>\n<dt>model_clust_thr<span class=\"classifier\">float, optional</span></dt><dd><p>MDF distance threshold for the model bundles.</p>\n</dd>\n<dt>pruning_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Pruning after matching.</p>\n</dd>\n<dt>pruning_distance<span class=\"classifier\">string, optional</span></dt><dd><p>Pruning distance type can be mdf or mam.</p>\n</dd>\n<dt>slr_metric<span class=\"classifier\">string, optional</span></dt><dd><p>Options are None, symmetric, asymmetric or diagonal.</p>\n</dd>\n<dt>slr_transform<span class=\"classifier\">string, optional</span></dt><dd><p>Transformation allowed. translation, rigid, similarity or scaling.</p>\n</dd>\n<dt>slr_matrix<span class=\"classifier\">string, optional</span></dt><dd><p>Options are \u2018nano\u2019, \u2018tiny\u2019, \u2018small\u2019, \u2018medium\u2019, \u2018large\u2019, \u2018huge\u2019.</p>\n</dd>\n<dt>refine<span class=\"classifier\">bool, optional</span></dt><dd><p>Enable refine recognized bundle.</p>\n</dd>\n<dt>r_reduction_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Refine reduce search space by (mm).</p>\n</dd>\n<dt>r_pruning_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Refine pruning after matching.</p>\n</dd>\n<dt>no_r_slr<span class=\"classifier\">bool, optional</span></dt><dd><p>Don\u2019t enable Refine local Streamline-based Linear\nRegistration.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_recognized_transf<span class=\"classifier\">string, optional</span></dt><dd><p>Recognized bundle in the space of the model bundle.</p>\n</dd>\n<dt>out_recognized_labels<span class=\"classifier\">string, optional</span></dt><dd><p>Indices of recognized bundle in the original tractogram.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id81\">\n<h4>References<a class=\"headerlink\" href=\"#id81\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id82\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis17<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis et al. Recognition of white matter\nbundles using local and global streamline-based registration and\nclustering, Neuroimage, 2017.</p>\n</div>\n<div class=\"citation\" id=\"chandio2020\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Chandio2020<span class=\"fn-bracket\">]</span></span>\n<p>Chandio, B.Q., Risacher, S.L., Pestilli, F.,</p>\n</div>\n</div>\n<p>Bullock, D., Yeh, FC., Koudoro, S., Rokem, A., Harezlak, J., and\nGaryfallidis, E. Bundle analytics, a computational framework for\ninvestigating the shapes and profiles of brain pathways across\npopulations. Sci Rep 10, 17149 (2020)</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"labelsbundlesflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.segment.LabelsBundlesFlow\" title=\"dipy.workflows.segment.LabelsBundlesFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LabelsBundlesFlow</span></code></a><a class=\"headerlink\" href=\"#labelsbundlesflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.LabelsBundlesFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.segment.</span></span><span class=\"sig-name descname\"><span class=\"pre\">LabelsBundlesFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.LabelsBundlesFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.LabelsBundlesFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.LabelsBundlesFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.LabelsBundlesFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.LabelsBundlesFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.LabelsBundlesFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamline_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">labels_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_bundle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'recognized_orig.trk'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.LabelsBundlesFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract bundles using existing indices (labels)</p>\n<section id=\"id83\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id83\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamline_files<span class=\"classifier\">string</span></dt><dd><p>The path of streamline files where you want to recognize bundles.</p>\n</dd>\n<dt>labels_files<span class=\"classifier\">string</span></dt><dd><p>The path of model bundle files.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_bundle<span class=\"classifier\">string, optional</span></dt><dd><p>Recognized bundle in the space of the model bundle.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id84\">\n<h4>References<a class=\"headerlink\" href=\"#id84\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id85\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Garyfallidis17<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis et al. Recognition of white matter\nbundles using local and global streamline-based registration and\nclustering, Neuroimage, 2017.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"evacplusflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.segment.EVACPlusFlow\" title=\"dipy.workflows.segment.EVACPlusFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EVACPlusFlow</span></code></a><a class=\"headerlink\" href=\"#evacplusflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.EVACPlusFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.segment.</span></span><span class=\"sig-name descname\"><span class=\"pre\">EVACPlusFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.EVACPlusFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.EVACPlusFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.EVACPlusFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.EVACPlusFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.EVACPlusFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.segment.EVACPlusFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_masked</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_mask</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'brain_mask.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_masked</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dwi_masked.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.segment.EVACPlusFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract brain using EVAC+</p>\n<section id=\"id86\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id86\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>input_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input volumes. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>save_masked<span class=\"classifier\">bool, optional</span></dt><dd><p>Save mask.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_mask<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the mask volume to be saved.</p>\n</dd>\n<dt>out_masked<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the masked volume to be saved.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id87\">\n<h4>References<a class=\"headerlink\" href=\"#id87\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"park2022\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Park2022<span class=\"fn-bracket\">]</span></span>\n<p>Park, J.S., Fadnavis, S., &amp; Garyfallidis, E. (2022).</p>\n</div>\n</div>\n<p>EVAC+: Multi-scale V-net with Deep Feature\nCRF Layers for Brain Extraction.</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"snrinccflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.stats.SNRinCCFlow\" title=\"dipy.workflows.stats.SNRinCCFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SNRinCCFlow</span></code></a><a class=\"headerlink\" href=\"#snrinccflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.SNRinCCFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.stats.</span></span><span class=\"sig-name descname\"><span class=\"pre\">SNRinCCFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.SNRinCCFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.SNRinCCFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.SNRinCCFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.SNRinCCFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.SNRinCCFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.SNRinCCFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask_file</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(0.6,</span> <span class=\"pre\">1,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0.1,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0.1)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_file</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'product.json'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_mask_cc</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'cc.nii.gz'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_mask_noise</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mask_noise.nii.gz'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.SNRinCCFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the signal-to-noise ratio in the corpus callosum.</p>\n<section id=\"id88\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id88\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data_files<span class=\"classifier\">string</span></dt><dd><p>Path to the dwi.nii.gz file. This path may contain wildcards to\nprocess multiple inputs at once.</p>\n</dd>\n<dt>bvals_files<span class=\"classifier\">string</span></dt><dd><p>Path of bvals.</p>\n</dd>\n<dt>bvecs_files<span class=\"classifier\">string</span></dt><dd><p>Path of bvecs.</p>\n</dd>\n<dt>mask_file<span class=\"classifier\">string</span></dt><dd><p>Path of a brain mask file.</p>\n</dd>\n<dt>bbox_threshold<span class=\"classifier\">variable float, optional</span></dt><dd><p>Threshold for bounding box, values separated with commas for ex.\n[0.6,1,0,0.1,0,0.1].</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Where the resulting file will be saved. (default current directory)</p>\n</dd>\n<dt>out_file<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the result file to be saved.</p>\n</dd>\n<dt>out_mask_cc<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the CC mask volume to be saved.</p>\n</dd>\n<dt>out_mask_noise<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the mask noise volume to be saved.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"bundleanalysistractometryflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow\" title=\"dipy.workflows.stats.BundleAnalysisTractometryFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BundleAnalysisTractometryFlow</span></code></a><a class=\"headerlink\" href=\"#bundleanalysistractometryflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.BundleAnalysisTractometryFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.stats.</span></span><span class=\"sig-name descname\"><span class=\"pre\">BundleAnalysisTractometryFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.BundleAnalysisTractometryFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.BundleAnalysisTractometryFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_bundle_folder</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">subject_folder</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">no_disks</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow of bundle analytics.</p>\n<p>Applies statistical analysis on bundles of subjects and saves the\nresults in a directory specified by <code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id89\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id89\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>model_bundle_folder<span class=\"classifier\">string</span></dt><dd><p>Path to the input model bundle files. This path may\ncontain wildcards to process multiple inputs at once.</p>\n</dd>\n<dt>subject_folder<span class=\"classifier\">string</span></dt><dd><p>Path to the input subject folder. This path may contain\nwildcards to process multiple inputs at once.</p>\n</dd>\n<dt>no_disks<span class=\"classifier\">integer, optional</span></dt><dd><p>Number of disks used for dividing bundle into disks.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id90\">\n<h4>References<a class=\"headerlink\" href=\"#id90\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id91\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Chandio2020<span class=\"fn-bracket\">]</span></span>\n<p>Chandio, B.Q., Risacher, S.L., Pestilli, F.,</p>\n</div>\n</div>\n<p>Bullock, D., Yeh, FC., Koudoro, S., Rokem, A., Harezlak, J., and\nGaryfallidis, E. Bundle analytics, a computational framework for\ninvestigating the shapes and profiles of brain pathways across\npopulations. Sci Rep 10, 17149 (2020)</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"linearmixedmodelsflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow\" title=\"dipy.workflows.stats.LinearMixedModelsFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LinearMixedModelsFlow</span></code></a><a class=\"headerlink\" href=\"#linearmixedmodelsflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.LinearMixedModelsFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.stats.</span></span><span class=\"sig-name descname\"><span class=\"pre\">LinearMixedModelsFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.LinearMixedModelsFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_metric_name</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Splits the path string and returns name of anatomical measure\n(eg: fa), bundle name eg(AF_L) and bundle name with metric name\n(eg: AF_L_fa)</p>\n<section id=\"id92\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id92\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>path<span class=\"classifier\">string</span></dt><dd><p>Path to the input metric files. This path may\ncontain wildcards to process multiple inputs at once.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.LinearMixedModelsFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.LinearMixedModelsFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">h5_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">no_disks</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow of linear Mixed Models.</p>\n<p>Applies linear Mixed Models on bundles of subjects and saves the\nresults in a directory specified by <code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id93\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id93\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>h5_files<span class=\"classifier\">string</span></dt><dd><p>Path to the input metric files. This path may\ncontain wildcards to process multiple inputs at once.</p>\n</dd>\n<dt>no_disks<span class=\"classifier\">integer, optional</span></dt><dd><p>Number of disks used for dividing bundle into disks.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot\">\n<span class=\"sig-name descname\"><span class=\"pre\">save_lmm_plot</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plot_file</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Saves LMM plot with segment/disk number on x-axis and\n-log10(pvalues) on y-axis in out_dir folder.</p>\n<section id=\"id94\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id94\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>plot_file<span class=\"classifier\">string</span></dt><dd><p>Path to the plot file. This path may\ncontain wildcards to process multiple inputs at once.</p>\n</dd>\n<dt>title<span class=\"classifier\">string</span></dt><dd><p>Title for the plot.</p>\n</dd>\n</dl>\n<p>bundle_name : string\nx : list</p>\n<blockquote>\n<div><p>list containing segment/disk number for x-axis.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>y<span class=\"classifier\">list</span></dt><dd><p>list containing -log10(pvalues) per segment/disk number for y-axis.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"bundleshapeanalysis\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleShapeAnalysis\" title=\"dipy.workflows.stats.BundleShapeAnalysis\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BundleShapeAnalysis</span></code></a><a class=\"headerlink\" href=\"#bundleshapeanalysis\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.BundleShapeAnalysis\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.stats.</span></span><span class=\"sig-name descname\"><span class=\"pre\">BundleShapeAnalysis</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.BundleShapeAnalysis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.BundleShapeAnalysis.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.BundleShapeAnalysis.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.BundleShapeAnalysis.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.BundleShapeAnalysis.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.BundleShapeAnalysis.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">subject_folder</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clust_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(5,</span> <span class=\"pre\">3,</span> <span class=\"pre\">1.5)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">6</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.BundleShapeAnalysis.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow of bundle analytics.</p>\n<p>Applies bundle shape similarity analysis on bundles of subjects and\nsaves the results in a directory specified by <code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id95\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id95\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>subject_folder<span class=\"classifier\">string</span></dt><dd><p>Path to the input subject folder. This path may contain\nwildcards to process multiple inputs at once.</p>\n</dd>\n<dt>clust_thr<span class=\"classifier\">variable float, optional</span></dt><dd><p>list of bundle clustering thresholds used in QuickBundlesX.</p>\n</dd>\n<dt>threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Bundle shape similarity threshold.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id96\">\n<h4>References<a class=\"headerlink\" href=\"#id96\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id97\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Chandio2020<span class=\"fn-bracket\">]</span></span>\n<p>Chandio, B.Q., Risacher, S.L., Pestilli, F.,</p>\n</div>\n</div>\n<p>Bullock, D., Yeh, FC., Koudoro, S., Rokem, A., Harezlak, J., and\nGaryfallidis, E. Bundle analytics, a computational framework for\ninvestigating the shapes and profiles of brain pathways across\npopulations. Sci Rep 10, 17149 (2020)</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"buan-bundle-profiles\">\n<h3>buan_bundle_profiles<a class=\"headerlink\" href=\"#buan-bundle-profiles\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.stats.buan_bundle_profiles\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.stats.</span></span><span class=\"sig-name descname\"><span class=\"pre\">buan_bundle_profiles</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">model_bundle_folder</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bundle_folder</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">orig_bundle_folder</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metric_folder</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">subject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">no_disks</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.stats.buan_bundle_profiles\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies statistical analysis on bundles and saves the results\nin a directory specified by <code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>.</p>\n<section id=\"id98\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id98\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>model_bundle_folder<span class=\"classifier\">string</span></dt><dd><p>Path to the input model bundle files. This path may contain\nwildcards to process multiple inputs at once.</p>\n</dd>\n<dt>bundle_folder<span class=\"classifier\">string</span></dt><dd><p>Path to the input bundle files in common space. This path may\ncontain wildcards to process multiple inputs at once.</p>\n</dd>\n<dt>orig_folder<span class=\"classifier\">string</span></dt><dd><p>Path to the input bundle files in native space. This path may\ncontain wildcards to process multiple inputs at once.</p>\n</dd>\n<dt>metric_folder<span class=\"classifier\">string</span></dt><dd><p>Path to the input dti metric or/and peak files. It will be used as\nmetric for statistical analysis of bundles.</p>\n</dd>\n<dt>group_id<span class=\"classifier\">integer</span></dt><dd><p>what group subject belongs to either 0 for control or 1 for patient.</p>\n</dd>\n<dt>subject<span class=\"classifier\">string</span></dt><dd><p>subject id e.g. 10001.</p>\n</dd>\n<dt>no_disks<span class=\"classifier\">integer, optional</span></dt><dd><p>Number of disks used for dividing bundle into disks.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id99\">\n<h4>References<a class=\"headerlink\" href=\"#id99\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"id100\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Chandio2020<span class=\"fn-bracket\">]</span></span>\n<p>Chandio, B.Q., Risacher, S.L., Pestilli, F., Bullock, D.,</p>\n</div>\n</div>\n<p>Yeh, FC., Koudoro, S., Rokem, A., Harezlak, J., and Garyfallidis, E.\nBundle analytics, a computational framework for investigating the\nshapes and profiles of brain pathways across populations.\nSci Rep 10, 17149 (2020)</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"localfibertrackingpamflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow\" title=\"dipy.workflows.tracking.LocalFiberTrackingPAMFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LocalFiberTrackingPAMFlow</span></code></a><a class=\"headerlink\" href=\"#localfibertrackingpamflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.tracking.LocalFiberTrackingPAMFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.tracking.</span></span><span class=\"sig-name descname\"><span class=\"pre\">LocalFiberTrackingPAMFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.tracking.LocalFiberTrackingPAMFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pam_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stopping_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seeding_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_binary_mask</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stopping_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seed_density</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_size</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tracking_method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'eudx'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pmf_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_angle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">30.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_tractogram</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'tractogram.trk'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_seeds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow for Local Fiber Tracking.</p>\n<p>This workflow use a saved peaks and metrics (PAM) file as input.</p>\n<section id=\"id101\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id101\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>pam_files<span class=\"classifier\">string</span></dt><dd><dl class=\"simple\">\n<dt>Path to the peaks and metrics files. This path may contain</dt><dd><p>wildcards to use multiple masks at once.</p>\n</dd>\n</dl>\n</dd>\n<dt>stopping_files<span class=\"classifier\">string</span></dt><dd><p>Path to images (e.g. FA) used for stopping criterion for tracking.</p>\n</dd>\n<dt>seeding_files<span class=\"classifier\">string</span></dt><dd><p>A binary image showing where we need to seed for tracking.</p>\n</dd>\n<dt>use_binary_mask<span class=\"classifier\">bool, optional</span></dt><dd><p>If True, uses a binary stopping criterion. If the provided\n<cite>stopping_files</cite> are not binary, <cite>stopping_thr</cite> will be used to\nbinarize the images.</p>\n</dd>\n<dt>stopping_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold applied to stopping volume\u2019s data to identify where\ntracking has to stop.</p>\n</dd>\n<dt>seed_density<span class=\"classifier\">int, optional</span></dt><dd><dl class=\"simple\">\n<dt>Number of seeds per dimension inside voxel.</dt><dd><p>For example, seed_density of 2 means 8 regularly distributed\npoints in the voxel. And seed density of 1 means 1 point at the\ncenter of the voxel.</p>\n</dd>\n</dl>\n</dd>\n<dt>step_size<span class=\"classifier\">float, optional</span></dt><dd><p>Step size (in mm) used for tracking.</p>\n</dd>\n<dt>tracking_method<span class=\"classifier\">string, optional</span></dt><dd><dl class=\"simple\">\n<dt>Select direction getter strategy :</dt><dd><ul class=\"simple\">\n<li><p>\u201ceudx\u201d (Uses the peaks saved in the pam_files)</p></li>\n<li><p>\u201cdeterministic\u201d or \u201cdet\u201d for a deterministic tracking\n(Uses the sh saved in the pam_files, default)</p></li>\n<li><p>\u201cprobabilistic\u201d or \u201cprob\u201d for a Probabilistic tracking\n(Uses the sh saved in the pam_files)</p></li>\n<li><p>\u201cclosestpeaks\u201d or \u201ccp\u201d for a ClosestPeaks tracking\n(Uses the sh saved in the pam_files)</p></li>\n</ul>\n</dd>\n</dl>\n</dd>\n<dt>pmf_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold for ODF functions.</p>\n</dd>\n<dt>max_angle<span class=\"classifier\">float, optional</span></dt><dd><p>Maximum angle between streamline segments (range [0, 90]).</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_tractogram<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the tractogram file to be saved.</p>\n</dd>\n<dt>save_seeds<span class=\"classifier\">bool, optional</span></dt><dd><p>If true, save the seeds associated to their streamline\nin the \u2018data_per_streamline\u2019 Tractogram dictionary using\n\u2018seeds\u2019 as the key.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id102\">\n<h4>References<a class=\"headerlink\" href=\"#id102\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Garyfallidis, University of Cambridge, PhD thesis 2012.\nAmirbekian, University of California San Francisco, PhD thesis 2017.</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"pftrackingpamflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow\" title=\"dipy.workflows.tracking.PFTrackingPAMFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PFTrackingPAMFlow</span></code></a><a class=\"headerlink\" href=\"#pftrackingpamflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.tracking.PFTrackingPAMFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.tracking.</span></span><span class=\"sig-name descname\"><span class=\"pre\">PFTrackingPAMFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.tracking.PFTrackingPAMFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.tracking.PFTrackingPAMFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pam_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">wm_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gm_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">csf_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seeding_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_size</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seed_density</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pmf_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_angle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pft_back</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pft_front</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pft_count</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">15</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_tractogram</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'tractogram.trk'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">save_seeds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Workflow for Particle Filtering Tracking.</p>\n<p>This workflow use a saved peaks and metrics (PAM) file as input.</p>\n<section id=\"id103\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id103\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>pam_files<span class=\"classifier\">string</span></dt><dd><dl class=\"simple\">\n<dt>Path to the peaks and metrics files. This path may contain</dt><dd><p>wildcards to use multiple masks at once.</p>\n</dd>\n</dl>\n</dd>\n<dt>wm_files<span class=\"classifier\">string</span></dt><dd><p>Path to white matter partial volume estimate for tracking (CMC).</p>\n</dd>\n<dt>gm_files<span class=\"classifier\">string</span></dt><dd><p>Path to grey matter partial volume estimate for tracking (CMC).</p>\n</dd>\n<dt>csf_files<span class=\"classifier\">string</span></dt><dd><p>Path to cerebrospinal fluid partial volume estimate for tracking\n(CMC).</p>\n</dd>\n<dt>seeding_files<span class=\"classifier\">string</span></dt><dd><p>A binary image showing where we need to seed for tracking.</p>\n</dd>\n<dt>step_size<span class=\"classifier\">float, optional</span></dt><dd><p>Step size (in mm) used for tracking.</p>\n</dd>\n<dt>seed_density<span class=\"classifier\">int, optional</span></dt><dd><dl class=\"simple\">\n<dt>Number of seeds per dimension inside voxel.</dt><dd><p>For example, seed_density of 2 means 8 regularly distributed\npoints in the voxel. And seed density of 1 means 1 point at the\ncenter of the voxel.</p>\n</dd>\n</dl>\n</dd>\n<dt>pmf_threshold<span class=\"classifier\">float, optional</span></dt><dd><p>Threshold for ODF functions.</p>\n</dd>\n<dt>max_angle<span class=\"classifier\">float, optional</span></dt><dd><p>Maximum angle between streamline segments (range [0, 90]).</p>\n</dd>\n<dt>pft_back<span class=\"classifier\">float, optional</span></dt><dd><p>Distance in mm to back track before starting the particle filtering\ntractography. The total particle filtering\ntractography distance is equal to back_tracking_dist +\nfront_tracking_dist.</p>\n</dd>\n<dt>pft_front<span class=\"classifier\">float, optional</span></dt><dd><p>Distance in mm to run the particle filtering tractography after the\nthe back track distance. The total particle filtering\ntractography distance is equal to back_tracking_dist +\nfront_tracking_dist.</p>\n</dd>\n<dt>pft_count<span class=\"classifier\">int, optional</span></dt><dd><p>Number of particles to use in the particle filter.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">string, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_tractogram<span class=\"classifier\">string, optional</span></dt><dd><p>Name of the tractogram file to be saved.</p>\n</dd>\n<dt>save_seeds<span class=\"classifier\">bool, optional</span></dt><dd><p>If true, save the seeds associated to their streamline\nin the \u2018data_per_streamline\u2019 Tractogram dictionary using\n\u2018seeds\u2019 as the key.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id104\">\n<h4>References<a class=\"headerlink\" href=\"#id104\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Girard, G., Whittingstall, K., Deriche, R., &amp; Descoteaux, M. Towards\nquantitative connectivity analysis: reducing tractography biases.\nNeuroImage, 98, 266-278, 2014.</p>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"horizonflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.viz.HorizonFlow\" title=\"dipy.workflows.viz.HorizonFlow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HorizonFlow</span></code></a><a class=\"headerlink\" href=\"#horizonflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.viz.HorizonFlow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.viz.</span></span><span class=\"sig-name descname\"><span class=\"pre\">HorizonFlow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.viz.HorizonFlow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.viz.HorizonFlow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.viz.HorizonFlow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.viz.HorizonFlow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.viz.HorizonFlow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.viz.HorizonFlow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_files</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cluster</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cluster_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">15.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">random_colors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">length_gt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">length_lt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1000</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clusters_gt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clusters_lt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100000000</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">native_coords</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stealth</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">emergency_header</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'icbm_2009a'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bg_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">disable_order_transparency</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">buan</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">buan_thr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">buan_highlight</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(1,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi_images</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roi_colors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(1,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out_stealth_png</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'tmp.png'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.viz.HorizonFlow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Interactive medical visualization - Invert the Horizon!</p>\n<p>Interact with any number of .trk, .tck or .dpy tractograms and anatomy\nfiles .nii or .nii.gz. Cluster streamlines on loading.</p>\n<section id=\"id105\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id105\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>input_files : variable string\ncluster : bool, optional</p>\n<blockquote>\n<div><p>Enable QuickBundlesX clustering.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>cluster_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Distance threshold used for clustering. Default value 15.0 for\nsmall animal brains you may need to use something smaller such\nas 2.0. The distance is in mm. For this parameter to be active\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cluster</span></code> should be enabled.</p>\n</dd>\n<dt>random_colors<span class=\"classifier\">variable str, optional</span></dt><dd><p>Given multiple tractograms and/or ROIs then each tractogram and/or\nROI will be shown with different color. If no value is provided,\nboth the tractograms and the ROIs will have a different random\ncolor generated from a distinguishable colormap. If the effect\nshould only be applied to one of the 2 types, then use the\noptions \u2018tracts\u2019 and \u2018rois\u2019 for the tractograms and the ROIs\nrespectively.</p>\n</dd>\n<dt>length_gt<span class=\"classifier\">float, optional</span></dt><dd><p>Clusters with average length greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">length_gt</span></code> amount\nin mm will be shown.</p>\n</dd>\n<dt>length_lt<span class=\"classifier\">float, optional</span></dt><dd><p>Clusters with average length less than <code class=\"docutils literal notranslate\"><span class=\"pre\">length_lt</span></code> amount in\nmm will be shown.</p>\n</dd>\n<dt>clusters_gt<span class=\"classifier\">int, optional</span></dt><dd><p>Clusters with size greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">clusters_gt</span></code> will be shown.</p>\n</dd>\n<dt>clusters_lt<span class=\"classifier\">int, optional</span></dt><dd><p>Clusters with size less than <code class=\"docutils literal notranslate\"><span class=\"pre\">clusters_gt</span></code> will be shown.</p>\n</dd>\n<dt>native_coords<span class=\"classifier\">bool, optional</span></dt><dd><p>Show results in native coordinates.</p>\n</dd>\n<dt>stealth<span class=\"classifier\">bool, optional</span></dt><dd><p>Do not use interactive mode just save figure.</p>\n</dd>\n<dt>emergency_header<span class=\"classifier\">str, optional</span></dt><dd><p>If no anatomy reference is provided an emergency header is\nprovided. Current options \u2018icbm_2009a\u2019 and \u2018icbm_2009c\u2019.</p>\n</dd>\n<dt>bg_color<span class=\"classifier\">variable float, optional</span></dt><dd><p>Define the background color of the scene. Colors can be defined\nwith 1 or 3 values and should be between [0-1].</p>\n</dd>\n<dt>disable_order_transparency<span class=\"classifier\">bool, optional</span></dt><dd><p>Use depth peeling to sort transparent objects.\nIf True also enables anti-aliasing.</p>\n</dd>\n<dt>buan<span class=\"classifier\">bool, optional</span></dt><dd><p>Enables BUAN framework visualization.</p>\n</dd>\n<dt>buan_thr<span class=\"classifier\">float, optional</span></dt><dd><p>Uses the threshold value to highlight segments on the\nbundle which have pvalues less than this threshold.</p>\n</dd>\n<dt>buan_highlight<span class=\"classifier\">variable float, optional</span></dt><dd><p>Define the bundle highlight area color. Colors can be defined\nwith 1 or 3 values and should be between [0-1].\nFor example, a value of (1, 0, 0) would mean the red color.</p>\n</dd>\n<dt>roi_images<span class=\"classifier\">bool, optional</span></dt><dd><p>Displays binary images as contours.</p>\n</dd>\n<dt>roi_colors<span class=\"classifier\">variable float, optional</span></dt><dd><p>Define the color for the roi images. Colors can be defined\nwith 1 or 3 values and should be between [0-1]. For example, a\nvalue of (1, 0, 0) would mean the red color.</p>\n</dd>\n<dt>out_dir<span class=\"classifier\">str, optional</span></dt><dd><p>Output directory. (default current directory)</p>\n</dd>\n<dt>out_stealth_png<span class=\"classifier\">str, optional</span></dt><dd><p>Filename of saved picture.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id106\">\n<h4>References<a class=\"headerlink\" href=\"#id106\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"horizon-ismrm19\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>Horizon_ISMRM19<span class=\"fn-bracket\">]</span></span>\n<p>Garyfallidis E., M-A. Cote, B.Q. Chandio,\nS. Fadnavis, J. Guaje, R. Aggarwal, E. St-Onge, K.S. Juneja,\nS. Koudoro, D. Reagan, DIPY Horizon: fast, modular, unified and\nadaptive visualization, Proceedings of: International Society of\nMagnetic Resonance in Medicine (ISMRM), Montreal, Canada, 2019.</p>\n</div>\n</div>\n</section>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"workflow\">\n<h3><a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\" title=\"dipy.workflows.workflow.Workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a><a class=\"headerlink\" href=\"#workflow\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.workflow.Workflow\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.workflows.workflow.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Workflow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.workflow.Workflow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.workflow.Workflow.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'absolute'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mix_names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.workflow.Workflow.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the basic workflow object.</p>\n<p>This object takes care of any workflow operation that is common to all\nthe workflows. Every new workflow should extend this class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.workflow.Workflow.get_io_iterator\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_io_iterator</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.workflow.Workflow.get_io_iterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an iterator for IO.</p>\n<p>Use a couple of inspection tricks to build an IOIterator using the\nprevious frame (values of local variables and other contextuals) and\nthe run method\u2019s docstring.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.workflow.Workflow.get_short_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.workflow.Workflow.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return A short name for the workflow used to subdivide.</p>\n<p>The short name is used by CombinedWorkflows and the argparser to\nsubdivide the commandline parameters avoiding the trouble of having\nsubworkflows parameters with the same name.</p>\n<p>For example, a combined workflow with dti reconstruction and csd\nreconstruction might en up with the b0_threshold parameter. Using short\nnames, we will have dti.b0_threshold and csd.b0_threshold available.</p>\n<p>Returns class name by default but it is strongly advised to set it to\nsomething shorter and easier to write on commandline.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.workflow.Workflow.get_sub_runs\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_sub_runs</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.workflow.Workflow.get_sub_runs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return No sub runs since this is a simple workflow.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.workflow.Workflow.manage_output_overwrite\">\n<span class=\"sig-name descname\"><span class=\"pre\">manage_output_overwrite</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.workflow.Workflow.manage_output_overwrite\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if a file will be overwritten upon processing the inputs.</p>\n<p>If it is bound to happen, an action is taken depending on\nself._force_overwrite (or \u2013force via command line). A log message is\noutput independently of the outcome to tell the user something\nhappened.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.workflows.workflow.Workflow.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.workflows.workflow.Workflow.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute the workflow.</p>\n<p>Since this is an abstract class, raise exception if this code is\nreached (not implemented in child class or literally called on this\nclass)</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference_cmd/index", "Command Line Utilities Reference", "N", "next"], ["reference/dipy.viz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "P", "previous"]], "sourcename": "reference/dipy.workflows.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.align\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.align</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.base\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.base</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.combined_workflow\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.combined_workflow</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.denoise\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.denoise</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.docstring_parser\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.docstring_parser</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.flow_runner\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.flow_runner</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.io\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.io</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.mask\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.mask</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.multi_io\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.multi_io</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.reconst\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.reconst</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.segment\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.segment</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.stats\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.stats</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.tracking\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.tracking</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.viz\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.viz</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.workflows.workflow\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows.workflow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#resliceflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResliceFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ResliceFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ResliceFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ResliceFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ResliceFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ResliceFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ResliceFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ResliceFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ResliceFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#slrwithqbxflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SlrWithQbxFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.SlrWithQbxFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SlrWithQbxFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.SlrWithQbxFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SlrWithQbxFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.SlrWithQbxFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SlrWithQbxFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.SlrWithQbxFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SlrWithQbxFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#imageregistrationflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ImageRegistrationFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ImageRegistrationFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ImageRegistrationFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ImageRegistrationFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ImageRegistrationFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ImageRegistrationFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ImageRegistrationFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#applytransformflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ApplyTransformFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ApplyTransformFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ApplyTransformFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ApplyTransformFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ApplyTransformFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.ApplyTransformFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ApplyTransformFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#synregistrationflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SynRegistrationFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.SynRegistrationFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SynRegistrationFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.SynRegistrationFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SynRegistrationFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.SynRegistrationFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SynRegistrationFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#motioncorrectionflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MotionCorrectionFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.MotionCorrectionFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MotionCorrectionFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.MotionCorrectionFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MotionCorrectionFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.MotionCorrectionFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MotionCorrectionFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bundlewarpflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BundleWarpFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.BundleWarpFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleWarpFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.BundleWarpFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleWarpFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.BundleWarpFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleWarpFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.BundleWarpFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleWarpFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#check-dimensions\">check_dimensions</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.align.check_dimensions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">check_dimensions()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#introspectiveargumentparser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.add_description\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.add_description()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.add_epilogue()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.add_sub_flow_args()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.add_workflow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.add_workflow()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.get_flow_args()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.optional_parameters</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.output_parameters\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.output_parameters</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.positional_parameters</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.show_argument\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.show_argument()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.IntrospectiveArgumentParser.update_argument\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntrospectiveArgumentParser.update_argument()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#get-args-default\">get_args_default</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.get_args_default\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_args_default()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#none-or-dtype\">none_or_dtype</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.base.none_or_dtype\"><code class=\"docutils literal notranslate\"><span class=\"pre\">none_or_dtype()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#combinedworkflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CombinedWorkflow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CombinedWorkflow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CombinedWorkflow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CombinedWorkflow.get_optionals()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CombinedWorkflow.get_sub_runs()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CombinedWorkflow.run_sub_flow()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CombinedWorkflow.set_sub_flows_optionals()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#patch2selfflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Patch2SelfFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.Patch2SelfFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Patch2SelfFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.Patch2SelfFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Patch2SelfFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.Patch2SelfFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Patch2SelfFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.Patch2SelfFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Patch2SelfFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#nlmeansflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NLMeansFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.NLMeansFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NLMeansFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.NLMeansFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NLMeansFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.NLMeansFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NLMeansFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.NLMeansFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NLMeansFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#lpcaflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LPCAFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.LPCAFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LPCAFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.LPCAFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LPCAFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.LPCAFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LPCAFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.LPCAFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LPCAFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#mppcaflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MPPCAFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.MPPCAFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MPPCAFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.MPPCAFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MPPCAFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.MPPCAFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MPPCAFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.MPPCAFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MPPCAFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#gibbsringingflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GibbsRingingFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.GibbsRingingFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GibbsRingingFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.GibbsRingingFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GibbsRingingFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.GibbsRingingFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GibbsRingingFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.denoise.GibbsRingingFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GibbsRingingFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Reader</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.eof\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.eof()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.is_empty\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.is_empty()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.peek\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.peek()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.read\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.read()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.read_to_condition\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.read_to_condition()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.read_to_next_empty_line\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.read_to_next_empty_line()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.read_to_next_unindented_line()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.reset\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.reset()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reader.seek_next_non_empty_line()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#numpydocstring\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NumpyDocString</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.NumpyDocString\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NumpyDocString</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.NumpyDocString.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NumpyDocString.__init__()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dedent-lines\">dedent_lines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.docstring_parser.dedent_lines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">dedent_lines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#get-level\">get_level</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.flow_runner.get_level\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_level()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#run-flow\">run_flow</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.flow_runner.run_flow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">run_flow()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ioinfoflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IoInfoFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.IoInfoFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IoInfoFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.IoInfoFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IoInfoFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.IoInfoFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IoInfoFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.IoInfoFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IoInfoFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#fetchflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FetchFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.FetchFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FetchFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.FetchFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FetchFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.FetchFlow.get_fetcher_datanames\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FetchFlow.get_fetcher_datanames()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.FetchFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FetchFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.FetchFlow.load_module\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FetchFlow.load_module()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.FetchFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FetchFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#splitflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SplitFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.SplitFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SplitFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.SplitFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SplitFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.SplitFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SplitFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.io.SplitFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SplitFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#maskflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MaskFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.mask.MaskFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MaskFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.mask.MaskFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MaskFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.mask.MaskFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MaskFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.mask.MaskFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MaskFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ioiterator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOIterator</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IOIterator</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IOIterator.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator.create_directories\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IOIterator.create_directories()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator.create_outputs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IOIterator.create_outputs()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator.file_existence_check\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IOIterator.file_existence_check()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator.set_inputs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IOIterator.set_inputs()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator.set_out_dir\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IOIterator.set_out_dir()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator.set_out_fnames\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IOIterator.set_out_fnames()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.IOIterator.set_output_keys\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IOIterator.set_output_keys()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#common-start\">common_start</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.common_start\"><code class=\"docutils literal notranslate\"><span class=\"pre\">common_start()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#slash-to-under\">slash_to_under</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.slash_to_under\"><code class=\"docutils literal notranslate\"><span class=\"pre\">slash_to_under()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#connect-output-paths\">connect_output_paths</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.connect_output_paths\"><code class=\"docutils literal notranslate\"><span class=\"pre\">connect_output_paths()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#concatenate-inputs\">concatenate_inputs</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.concatenate_inputs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">concatenate_inputs()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#basename-without-extension\">basename_without_extension</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.basename_without_extension\"><code class=\"docutils literal notranslate\"><span class=\"pre\">basename_without_extension()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#io-iterator\">io_iterator</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.io_iterator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">io_iterator()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id49\">io_iterator_</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.multi_io.io_iterator_\"><code class=\"docutils literal notranslate\"><span class=\"pre\">io_iterator_()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reconstmapmriflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstMAPMRIFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstMAPMRIFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstMAPMRIFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstMAPMRIFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstMAPMRIFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstMAPMRIFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reconstdtiflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstDtiFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDtiFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDtiFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDtiFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDtiFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDtiFlow.get_fitted_tensor()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDtiFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDtiFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDtiFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDtiFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reconstcsdflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstCSDFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSDFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstCSDFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSDFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstCSDFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSDFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstCSDFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSDFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstCSDFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reconstcsaflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstCSAFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSAFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstCSAFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSAFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstCSAFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSAFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstCSAFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstCSAFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstCSAFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reconstdkiflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstDkiFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDkiFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDkiFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDkiFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDkiFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDkiFlow.get_fitted_tensor()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDkiFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDkiFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstDkiFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstDkiFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reconstivimflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstIvimFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstIvimFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstIvimFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstIvimFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstIvimFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstIvimFlow.get_fitted_ivim()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstIvimFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstIvimFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstIvimFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstIvimFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reconstrumbaflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstRUMBAFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstRUMBAFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstRUMBAFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstRUMBAFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.reconst.ReconstRUMBAFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ReconstRUMBAFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#medianotsuflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MedianOtsuFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.MedianOtsuFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MedianOtsuFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.MedianOtsuFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MedianOtsuFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.MedianOtsuFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MedianOtsuFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.MedianOtsuFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MedianOtsuFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#recobundlesflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RecoBundlesFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.RecoBundlesFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RecoBundlesFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.RecoBundlesFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RecoBundlesFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.RecoBundlesFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RecoBundlesFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.RecoBundlesFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RecoBundlesFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#labelsbundlesflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LabelsBundlesFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.LabelsBundlesFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LabelsBundlesFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.LabelsBundlesFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LabelsBundlesFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.LabelsBundlesFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LabelsBundlesFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.LabelsBundlesFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LabelsBundlesFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#evacplusflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EVACPlusFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.EVACPlusFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EVACPlusFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.EVACPlusFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EVACPlusFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.EVACPlusFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EVACPlusFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.segment.EVACPlusFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EVACPlusFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#snrinccflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SNRinCCFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.SNRinCCFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SNRinCCFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.SNRinCCFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SNRinCCFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.SNRinCCFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SNRinCCFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.SNRinCCFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SNRinCCFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bundleanalysistractometryflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BundleAnalysisTractometryFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleAnalysisTractometryFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleAnalysisTractometryFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleAnalysisTractometryFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleAnalysisTractometryFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleAnalysisTractometryFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#linearmixedmodelsflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LinearMixedModelsFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearMixedModelsFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearMixedModelsFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearMixedModelsFlow.get_metric_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearMixedModelsFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearMixedModelsFlow.run()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearMixedModelsFlow.save_lmm_plot()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bundleshapeanalysis\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BundleShapeAnalysis</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleShapeAnalysis\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleShapeAnalysis</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleShapeAnalysis.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleShapeAnalysis.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleShapeAnalysis.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleShapeAnalysis.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.BundleShapeAnalysis.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BundleShapeAnalysis.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#buan-bundle-profiles\">buan_bundle_profiles</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.stats.buan_bundle_profiles\"><code class=\"docutils literal notranslate\"><span class=\"pre\">buan_bundle_profiles()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#localfibertrackingpamflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LocalFiberTrackingPAMFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LocalFiberTrackingPAMFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LocalFiberTrackingPAMFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LocalFiberTrackingPAMFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LocalFiberTrackingPAMFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#pftrackingpamflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PFTrackingPAMFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PFTrackingPAMFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PFTrackingPAMFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PFTrackingPAMFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.tracking.PFTrackingPAMFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PFTrackingPAMFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#horizonflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HorizonFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.viz.HorizonFlow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HorizonFlow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.viz.HorizonFlow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HorizonFlow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.viz.HorizonFlow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HorizonFlow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.viz.HorizonFlow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HorizonFlow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#workflow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Workflow</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Workflow.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow.get_io_iterator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Workflow.get_io_iterator()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow.get_short_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Workflow.get_short_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow.get_sub_runs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Workflow.get_sub_runs()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow.manage_output_overwrite\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Workflow.manage_output_overwrite()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.workflows.workflow.Workflow.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Workflow.run()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.workflows", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}