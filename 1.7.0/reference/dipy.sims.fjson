{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.segment/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>"}, "next": {"link": "../dipy.stats/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "meta": {}, "body": "<section id=\"module-dipy.sims\">\n<span id=\"sims\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code><a class=\"headerlink\" href=\"#module-dipy.sims\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n<section id=\"module-dipy.sims.phantom\">\n<span id=\"module-sims-phantom\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims.phantom</span></code><a class=\"headerlink\" href=\"#module-dipy.sims.phantom\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.phantom.add_noise\" title=\"dipy.sims.phantom.add_noise\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_noise</span></code></a>(vol[,\u00a0snr,\u00a0S0,\u00a0noise_type])</p></td>\n<td><p>Add noise of specified distribution to a 4D array.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.phantom.diff2eigenvectors\" title=\"dipy.sims.phantom.diff2eigenvectors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">diff2eigenvectors</span></code></a>(dx,\u00a0dy,\u00a0dz)</p></td>\n<td><p>numerical derivatives 2 eigenvectors</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.phantom.orbital_phantom\" title=\"dipy.sims.phantom.orbital_phantom\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">orbital_phantom</span></code></a>([gtab,\u00a0evals,\u00a0func,\u00a0t,\u00a0...])</p></td>\n<td><p>Create a phantom based on a 3-D orbit <code class=\"docutils literal notranslate\"><span class=\"pre\">f(t)</span> <span class=\"pre\">-&gt;</span> <span class=\"pre\">(x,y,z)</span></code>.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.sims.voxel\">\n<span id=\"module-sims-voxel\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims.voxel</span></code><a class=\"headerlink\" href=\"#module-dipy.sims.voxel\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.diffusion_evals\" title=\"dipy.sims.voxel.diffusion_evals\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">diffusion_evals</span></code></a></p></td>\n<td><p>ndarray(shape, dtype=float, buffer=None, offset=0,</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.add_noise\" title=\"dipy.sims.voxel.add_noise\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_noise</span></code></a>(signal,\u00a0snr,\u00a0S0[,\u00a0noise_type])</p></td>\n<td><p>Add noise of specified distribution to the signal from a single voxel.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.sticks_and_ball\" title=\"dipy.sims.voxel.sticks_and_ball\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sticks_and_ball</span></code></a>(gtab[,\u00a0d,\u00a0S0,\u00a0angles,\u00a0...])</p></td>\n<td><p>Simulate the signal for a Sticks &amp; Ball model.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.callaghan_perpendicular\" title=\"dipy.sims.voxel.callaghan_perpendicular\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">callaghan_perpendicular</span></code></a>(q,\u00a0radius)</p></td>\n<td><p>Calculates the perpendicular diffusion signal E(q) in a cylinder of radius R using the Soderman model <a href=\"#id99\"><span class=\"problematic\" id=\"id1\">[1]_</span></a>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.gaussian_parallel\" title=\"dipy.sims.voxel.gaussian_parallel\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gaussian_parallel</span></code></a>(q,\u00a0tau[,\u00a0D])</p></td>\n<td><p>Calculates the parallel Gaussian diffusion signal.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.cylinders_and_ball_soderman\" title=\"dipy.sims.voxel.cylinders_and_ball_soderman\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">cylinders_and_ball_soderman</span></code></a>(gtab,\u00a0tau[,\u00a0...])</p></td>\n<td><p>Calculates the three-dimensional signal attenuation E(q) originating from within a cylinder of radius R using the Soderman approximation <a href=\"#id100\"><span class=\"problematic\" id=\"id2\">[1]_</span></a>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor\" title=\"dipy.sims.voxel.single_tensor\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">single_tensor</span></code></a>(gtab[,\u00a0S0,\u00a0evals,\u00a0evecs,\u00a0snr])</p></td>\n<td><p>Simulate diffusion-weighted signals with a single tensor.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor\" title=\"dipy.sims.voxel.multi_tensor\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">multi_tensor</span></code></a>(gtab,\u00a0mevals[,\u00a0S0,\u00a0angles,\u00a0...])</p></td>\n<td><p>Simulate a Multi-Tensor signal.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_dki\" title=\"dipy.sims.voxel.multi_tensor_dki\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">multi_tensor_dki</span></code></a>(gtab,\u00a0mevals[,\u00a0S0,\u00a0angles,\u00a0...])</p></td>\n<td><p>Simulate the diffusion-weight signal, diffusion and kurtosis tensors based on the DKI model</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.kurtosis_element\" title=\"dipy.sims.voxel.kurtosis_element\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">kurtosis_element</span></code></a>(D_comps,\u00a0frac,\u00a0ind_i,\u00a0...)</p></td>\n<td><p>Computes the diffusion kurtosis tensor element (with indexes i, j, k and l) based on the individual diffusion tensor components of a multicompartmental model.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.dki_signal\" title=\"dipy.sims.voxel.dki_signal\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dki_signal</span></code></a>(gtab,\u00a0dt,\u00a0kt[,\u00a0S0,\u00a0snr])</p></td>\n<td><p>Simulated signal based on the diffusion and diffusion kurtosis tensors of a single voxel.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor_odf\" title=\"dipy.sims.voxel.single_tensor_odf\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">single_tensor_odf</span></code></a>(r[,\u00a0evals,\u00a0evecs])</p></td>\n<td><p>Simulated ODF with a single tensor.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.all_tensor_evecs\" title=\"dipy.sims.voxel.all_tensor_evecs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">all_tensor_evecs</span></code></a>(e0)</p></td>\n<td><p>Given the principle tensor axis, return the array of all eigenvectors column-wise (or, the rotation matrix that orientates the tensor).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_odf\" title=\"dipy.sims.voxel.multi_tensor_odf\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">multi_tensor_odf</span></code></a>(odf_verts,\u00a0mevals,\u00a0angles,\u00a0...)</p></td>\n<td><p>Simulate a Multi-Tensor ODF.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor_rtop\" title=\"dipy.sims.voxel.single_tensor_rtop\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">single_tensor_rtop</span></code></a>([evals,\u00a0tau])</p></td>\n<td><p>Simulate a Single-Tensor rtop.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_rtop\" title=\"dipy.sims.voxel.multi_tensor_rtop\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">multi_tensor_rtop</span></code></a>(mf[,\u00a0mevals,\u00a0tau])</p></td>\n<td><p>Simulate a Multi-Tensor rtop.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor_pdf\" title=\"dipy.sims.voxel.single_tensor_pdf\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">single_tensor_pdf</span></code></a>(r[,\u00a0evals,\u00a0evecs,\u00a0tau])</p></td>\n<td><p>Simulated ODF with a single tensor.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_pdf\" title=\"dipy.sims.voxel.multi_tensor_pdf\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">multi_tensor_pdf</span></code></a>(pdf_points,\u00a0mevals,\u00a0angles,\u00a0...)</p></td>\n<td><p>Simulate a Multi-Tensor ODF.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor_msd\" title=\"dipy.sims.voxel.single_tensor_msd\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">single_tensor_msd</span></code></a>([evals,\u00a0tau])</p></td>\n<td><p>Simulate a Multi-Tensor rtop.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_msd\" title=\"dipy.sims.voxel.multi_tensor_msd\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">multi_tensor_msd</span></code></a>(mf[,\u00a0mevals,\u00a0tau])</p></td>\n<td><p>Simulate a Multi-Tensor rtop.</p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"add-noise\">\n<h3>add_noise<a class=\"headerlink\" href=\"#add-noise\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.phantom.add_noise\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.phantom.</span></span><span class=\"sig-name descname\"><span class=\"pre\">add_noise</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vol</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">snr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">noise_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rician'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.phantom.add_noise\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add noise of specified distribution to a 4D array.</p>\n<section id=\"parameters\">\n<h4>Parameters<a class=\"headerlink\" href=\"#parameters\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vol<span class=\"classifier\">array, shape (X,Y,Z,W)</span></dt><dd><p>Diffusion measurements in <cite>W</cite> directions at each <code class=\"docutils literal notranslate\"><span class=\"pre\">(X,</span> <span class=\"pre\">Y,</span> <span class=\"pre\">Z)</span></code> voxel\nposition.</p>\n</dd>\n<dt>snr<span class=\"classifier\">float, optional</span></dt><dd><p>The desired signal-to-noise ratio.  (See notes below.)</p>\n</dd>\n<dt>S0<span class=\"classifier\">float, optional</span></dt><dd><p>Reference signal for specifying <cite>snr</cite> (defaults to 1).</p>\n</dd>\n<dt>noise_type<span class=\"classifier\">string, optional</span></dt><dd><p>The distribution of noise added. Can be either \u2018gaussian\u2019 for Gaussian\ndistributed noise, \u2018rician\u2019 for Rice-distributed noise (default) or\n\u2018rayleigh\u2019 for a Rayleigh distribution.</p>\n</dd>\n</dl>\n</section>\n<section id=\"returns\">\n<h4>Returns<a class=\"headerlink\" href=\"#returns\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>vol<span class=\"classifier\">array, same shape as vol</span></dt><dd><p>Volume with added noise.</p>\n</dd>\n</dl>\n</section>\n<section id=\"notes\">\n<h4>Notes<a class=\"headerlink\" href=\"#notes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>SNR is defined here, following <a href=\"#id101\"><span class=\"problematic\" id=\"id3\">[1]_</span></a>, as <code class=\"docutils literal notranslate\"><span class=\"pre\">S0</span> <span class=\"pre\">/</span> <span class=\"pre\">sigma</span></code>, where <code class=\"docutils literal notranslate\"><span class=\"pre\">sigma</span></code> is\nthe standard deviation of the two Gaussian distributions forming the real\nand imaginary components of the Rician noise distribution (see <a href=\"#id102\"><span class=\"problematic\" id=\"id4\">[2]_</span></a>).</p>\n</section>\n<section id=\"references\">\n<h4>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id5\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Descoteaux, Angelino, Fitzgibbons and Deriche (2007) Regularized,\nfast and robust q-ball imaging. MRM, 58: 497-510</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id6\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Gudbjartson and Patz (2008). The Rician distribution of noisy MRI\ndata. MRM 34: 910-914.</p>\n</aside>\n</aside>\n</section>\n<section id=\"examples\">\n<h4>Examples<a class=\"headerlink\" href=\"#examples\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">signal</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">800</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">signal_w_noise</span> <span class=\"o\">=</span> <span class=\"n\">add_noise</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">snr</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">noise_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;rician&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"diff2eigenvectors\">\n<h3>diff2eigenvectors<a class=\"headerlink\" href=\"#diff2eigenvectors\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.phantom.diff2eigenvectors\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.phantom.</span></span><span class=\"sig-name descname\"><span class=\"pre\">diff2eigenvectors</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dx</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dy</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.phantom.diff2eigenvectors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>numerical derivatives 2 eigenvectors</p>\n</dd></dl>\n\n</section>\n<section id=\"orbital-phantom\">\n<h3>orbital_phantom<a class=\"headerlink\" href=\"#orbital-phantom\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.phantom.orbital_phantom\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.phantom.</span></span><span class=\"sig-name descname\"><span class=\"pre\">orbital_phantom</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([0.0015,</span> <span class=\"pre\">0.0004,</span> <span class=\"pre\">0.0004])</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">func</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">t</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([0.,</span> <span class=\"pre\">0.00628947,</span> <span class=\"pre\">0.01257895,</span> <span class=\"pre\">0.01886842,</span> <span class=\"pre\">0.0251579,</span> <span class=\"pre\">0.03144737,</span> <span class=\"pre\">0.03773685,</span> <span class=\"pre\">0.04402632,</span> <span class=\"pre\">0.0503158,</span> <span class=\"pre\">0.05660527,</span> <span class=\"pre\">0.06289475,</span> <span class=\"pre\">0.06918422,</span> <span class=\"pre\">0.0754737,</span> <span class=\"pre\">0.08176317,</span> <span class=\"pre\">0.08805265,</span> <span class=\"pre\">0.09434212,</span> <span class=\"pre\">0.1006316,</span> <span class=\"pre\">0.10692107,</span> <span class=\"pre\">0.11321055,</span> <span class=\"pre\">0.11950002,</span> <span class=\"pre\">0.1257895,</span> <span class=\"pre\">0.13207897,</span> <span class=\"pre\">0.13836845,</span> <span class=\"pre\">0.14465792,</span> <span class=\"pre\">0.15094739,</span> <span class=\"pre\">0.15723687,</span> <span class=\"pre\">0.16352634,</span> <span class=\"pre\">0.16981582,</span> <span class=\"pre\">0.17610529,</span> <span class=\"pre\">0.18239477,</span> <span class=\"pre\">0.18868424,</span> <span class=\"pre\">0.19497372,</span> <span class=\"pre\">0.20126319,</span> <span class=\"pre\">0.20755267,</span> <span class=\"pre\">0.21384214,</span> <span class=\"pre\">0.22013162,</span> <span class=\"pre\">0.22642109,</span> <span class=\"pre\">0.23271057,</span> <span class=\"pre\">0.23900004,</span> <span class=\"pre\">0.24528952,</span> <span class=\"pre\">0.25157899,</span> <span class=\"pre\">0.25786847,</span> <span class=\"pre\">0.26415794,</span> <span class=\"pre\">0.27044742,</span> <span class=\"pre\">0.27673689,</span> <span class=\"pre\">0.28302637,</span> <span class=\"pre\">0.28931584,</span> <span class=\"pre\">0.29560531,</span> <span class=\"pre\">0.30189479,</span> <span class=\"pre\">0.30818426,</span> <span class=\"pre\">0.31447374,</span> <span class=\"pre\">0.32076321,</span> <span class=\"pre\">0.32705269,</span> <span class=\"pre\">0.33334216,</span> <span class=\"pre\">0.33963164,</span> <span class=\"pre\">0.34592111,</span> <span class=\"pre\">0.35221059,</span> <span class=\"pre\">0.35850006,</span> <span class=\"pre\">0.36478954,</span> <span class=\"pre\">0.37107901,</span> <span class=\"pre\">0.37736849,</span> <span class=\"pre\">0.38365796,</span> <span class=\"pre\">0.38994744,</span> <span class=\"pre\">0.39623691,</span> <span class=\"pre\">0.40252639,</span> <span class=\"pre\">0.40881586,</span> <span class=\"pre\">0.41510534,</span> <span class=\"pre\">0.42139481,</span> <span class=\"pre\">0.42768429,</span> <span class=\"pre\">0.43397376,</span> <span class=\"pre\">0.44026323,</span> <span class=\"pre\">0.44655271,</span> <span class=\"pre\">0.45284218,</span> <span class=\"pre\">0.45913166,</span> <span class=\"pre\">0.46542113,</span> <span class=\"pre\">0.47171061,</span> <span class=\"pre\">0.47800008,</span> <span class=\"pre\">0.48428956,</span> <span class=\"pre\">0.49057903,</span> <span class=\"pre\">0.49686851,</span> <span class=\"pre\">0.50315798,</span> <span class=\"pre\">0.50944746,</span> <span class=\"pre\">0.51573693,</span> <span class=\"pre\">0.52202641,</span> <span class=\"pre\">0.52831588,</span> <span class=\"pre\">0.53460536,</span> <span class=\"pre\">0.54089483,</span> <span class=\"pre\">0.54718431,</span> <span class=\"pre\">0.55347378,</span> <span class=\"pre\">0.55976326,</span> <span class=\"pre\">0.56605273,</span> <span class=\"pre\">0.57234221,</span> <span class=\"pre\">0.57863168,</span> <span class=\"pre\">0.58492115,</span> <span class=\"pre\">0.59121063,</span> <span class=\"pre\">0.5975001,</span> <span class=\"pre\">0.60378958,</span> <span class=\"pre\">0.61007905,</span> <span class=\"pre\">0.61636853,</span> <span class=\"pre\">0.622658,</span> <span class=\"pre\">0.62894748,</span> <span class=\"pre\">0.63523695,</span> <span class=\"pre\">0.64152643,</span> <span class=\"pre\">0.6478159,</span> <span class=\"pre\">0.65410538,</span> <span class=\"pre\">0.66039485,</span> <span class=\"pre\">0.66668433,</span> <span class=\"pre\">0.6729738,</span> <span class=\"pre\">0.67926328,</span> <span class=\"pre\">0.68555275,</span> <span class=\"pre\">0.69184223,</span> <span class=\"pre\">0.6981317,</span> <span class=\"pre\">0.70442118,</span> <span class=\"pre\">0.71071065,</span> <span class=\"pre\">0.71700013,</span> <span class=\"pre\">0.7232896,</span> <span class=\"pre\">0.72957907,</span> <span class=\"pre\">0.73586855,</span> <span class=\"pre\">0.74215802,</span> <span class=\"pre\">0.7484475,</span> <span class=\"pre\">0.75473697,</span> <span class=\"pre\">0.76102645,</span> <span class=\"pre\">0.76731592,</span> <span class=\"pre\">0.7736054,</span> <span class=\"pre\">0.77989487,</span> <span class=\"pre\">0.78618435,</span> <span class=\"pre\">0.79247382,</span> <span class=\"pre\">0.7987633,</span> <span class=\"pre\">0.80505277,</span> <span class=\"pre\">0.81134225,</span> <span class=\"pre\">0.81763172,</span> <span class=\"pre\">0.8239212,</span> <span class=\"pre\">0.83021067,</span> <span class=\"pre\">0.83650015,</span> <span class=\"pre\">0.84278962,</span> <span class=\"pre\">0.8490791,</span> <span class=\"pre\">0.85536857,</span> <span class=\"pre\">0.86165805,</span> <span class=\"pre\">0.86794752,</span> <span class=\"pre\">0.87423699,</span> <span class=\"pre\">0.88052647,</span> <span class=\"pre\">0.88681594,</span> <span class=\"pre\">0.89310542,</span> <span class=\"pre\">0.89939489,</span> <span class=\"pre\">0.90568437,</span> <span class=\"pre\">0.91197384,</span> <span class=\"pre\">0.91826332,</span> <span class=\"pre\">0.92455279,</span> <span class=\"pre\">0.93084227,</span> <span class=\"pre\">0.93713174,</span> <span class=\"pre\">0.94342122,</span> <span class=\"pre\">0.94971069,</span> <span class=\"pre\">0.95600017,</span> <span class=\"pre\">0.96228964,</span> <span class=\"pre\">0.96857912,</span> <span class=\"pre\">0.97486859,</span> <span class=\"pre\">0.98115807,</span> <span class=\"pre\">0.98744754,</span> <span class=\"pre\">0.99373702,</span> <span class=\"pre\">1.00002649,</span> <span class=\"pre\">1.00631597,</span> <span class=\"pre\">1.01260544,</span> <span class=\"pre\">1.01889491,</span> <span class=\"pre\">1.02518439,</span> <span class=\"pre\">1.03147386,</span> <span class=\"pre\">1.03776334,</span> <span class=\"pre\">1.04405281,</span> <span class=\"pre\">1.05034229,</span> <span class=\"pre\">1.05663176,</span> <span class=\"pre\">1.06292124,</span> <span class=\"pre\">1.06921071,</span> <span class=\"pre\">1.07550019,</span> <span class=\"pre\">1.08178966,</span> <span class=\"pre\">1.08807914,</span> <span class=\"pre\">1.09436861,</span> <span class=\"pre\">1.10065809,</span> <span class=\"pre\">1.10694756,</span> <span class=\"pre\">1.11323704,</span> <span class=\"pre\">1.11952651,</span> <span class=\"pre\">1.12581599,</span> <span class=\"pre\">1.13210546,</span> <span class=\"pre\">1.13839494,</span> <span class=\"pre\">1.14468441,</span> <span class=\"pre\">1.15097389,</span> <span class=\"pre\">1.15726336,</span> <span class=\"pre\">1.16355283,</span> <span class=\"pre\">1.16984231,</span> <span class=\"pre\">1.17613178,</span> <span class=\"pre\">1.18242126,</span> <span class=\"pre\">1.18871073,</span> <span class=\"pre\">1.19500021,</span> <span class=\"pre\">1.20128968,</span> <span class=\"pre\">1.20757916,</span> <span class=\"pre\">1.21386863,</span> <span class=\"pre\">1.22015811,</span> <span class=\"pre\">1.22644758,</span> <span class=\"pre\">1.23273706,</span> <span class=\"pre\">1.23902653,</span> <span class=\"pre\">1.24531601,</span> <span class=\"pre\">1.25160548,</span> <span class=\"pre\">1.25789496,</span> <span class=\"pre\">1.26418443,</span> <span class=\"pre\">1.27047391,</span> <span class=\"pre\">1.27676338,</span> <span class=\"pre\">1.28305286,</span> <span class=\"pre\">1.28934233,</span> <span class=\"pre\">1.29563181,</span> <span class=\"pre\">1.30192128,</span> <span class=\"pre\">1.30821075,</span> <span class=\"pre\">1.31450023,</span> <span class=\"pre\">1.3207897,</span> <span class=\"pre\">1.32707918,</span> <span class=\"pre\">1.33336865,</span> <span class=\"pre\">1.33965813,</span> <span class=\"pre\">1.3459476,</span> <span class=\"pre\">1.35223708,</span> <span class=\"pre\">1.35852655,</span> <span class=\"pre\">1.36481603,</span> <span class=\"pre\">1.3711055,</span> <span class=\"pre\">1.37739498,</span> <span class=\"pre\">1.38368445,</span> <span class=\"pre\">1.38997393,</span> <span class=\"pre\">1.3962634,</span> <span class=\"pre\">1.40255288,</span> <span class=\"pre\">1.40884235,</span> <span class=\"pre\">1.41513183,</span> <span class=\"pre\">1.4214213,</span> <span class=\"pre\">1.42771078,</span> <span class=\"pre\">1.43400025,</span> <span class=\"pre\">1.44028973,</span> <span class=\"pre\">1.4465792,</span> <span class=\"pre\">1.45286867,</span> <span class=\"pre\">1.45915815,</span> <span class=\"pre\">1.46544762,</span> <span class=\"pre\">1.4717371,</span> <span class=\"pre\">1.47802657,</span> <span class=\"pre\">1.48431605,</span> <span class=\"pre\">1.49060552,</span> <span class=\"pre\">1.496895,</span> <span class=\"pre\">1.50318447,</span> <span class=\"pre\">1.50947395,</span> <span class=\"pre\">1.51576342,</span> <span class=\"pre\">1.5220529,</span> <span class=\"pre\">1.52834237,</span> <span class=\"pre\">1.53463185,</span> <span class=\"pre\">1.54092132,</span> <span class=\"pre\">1.5472108,</span> <span class=\"pre\">1.55350027,</span> <span class=\"pre\">1.55978975,</span> <span class=\"pre\">1.56607922,</span> <span class=\"pre\">1.5723687,</span> <span class=\"pre\">1.57865817,</span> <span class=\"pre\">1.58494765,</span> <span class=\"pre\">1.59123712,</span> <span class=\"pre\">1.59752659,</span> <span class=\"pre\">1.60381607,</span> <span class=\"pre\">1.61010554,</span> <span class=\"pre\">1.61639502,</span> <span class=\"pre\">1.62268449,</span> <span class=\"pre\">1.62897397,</span> <span class=\"pre\">1.63526344,</span> <span class=\"pre\">1.64155292,</span> <span class=\"pre\">1.64784239,</span> <span class=\"pre\">1.65413187,</span> <span class=\"pre\">1.66042134,</span> <span class=\"pre\">1.66671082,</span> <span class=\"pre\">1.67300029,</span> <span class=\"pre\">1.67928977,</span> <span class=\"pre\">1.68557924,</span> <span class=\"pre\">1.69186872,</span> <span class=\"pre\">1.69815819,</span> <span class=\"pre\">1.70444767,</span> <span class=\"pre\">1.71073714,</span> <span class=\"pre\">1.71702662,</span> <span class=\"pre\">1.72331609,</span> <span class=\"pre\">1.72960557,</span> <span class=\"pre\">1.73589504,</span> <span class=\"pre\">1.74218451,</span> <span class=\"pre\">1.74847399,</span> <span class=\"pre\">1.75476346,</span> <span class=\"pre\">1.76105294,</span> <span class=\"pre\">1.76734241,</span> <span class=\"pre\">1.77363189,</span> <span class=\"pre\">1.77992136,</span> <span class=\"pre\">1.78621084,</span> <span class=\"pre\">1.79250031,</span> <span class=\"pre\">1.79878979,</span> <span class=\"pre\">1.80507926,</span> <span class=\"pre\">1.81136874,</span> <span class=\"pre\">1.81765821,</span> <span class=\"pre\">1.82394769,</span> <span class=\"pre\">1.83023716,</span> <span class=\"pre\">1.83652664,</span> <span class=\"pre\">1.84281611,</span> <span class=\"pre\">1.84910559,</span> <span class=\"pre\">1.85539506,</span> <span class=\"pre\">1.86168454,</span> <span class=\"pre\">1.86797401,</span> <span class=\"pre\">1.87426349,</span> <span class=\"pre\">1.88055296,</span> <span class=\"pre\">1.88684243,</span> <span class=\"pre\">1.89313191,</span> <span class=\"pre\">1.89942138,</span> <span class=\"pre\">1.90571086,</span> <span class=\"pre\">1.91200033,</span> <span class=\"pre\">1.91828981,</span> <span class=\"pre\">1.92457928,</span> <span class=\"pre\">1.93086876,</span> <span class=\"pre\">1.93715823,</span> <span class=\"pre\">1.94344771,</span> <span class=\"pre\">1.94973718,</span> <span class=\"pre\">1.95602666,</span> <span class=\"pre\">1.96231613,</span> <span class=\"pre\">1.96860561,</span> <span class=\"pre\">1.97489508,</span> <span class=\"pre\">1.98118456,</span> <span class=\"pre\">1.98747403,</span> <span class=\"pre\">1.99376351,</span> <span class=\"pre\">2.00005298,</span> <span class=\"pre\">2.00634246,</span> <span class=\"pre\">2.01263193,</span> <span class=\"pre\">2.01892141,</span> <span class=\"pre\">2.02521088,</span> <span class=\"pre\">2.03150035,</span> <span class=\"pre\">2.03778983,</span> <span class=\"pre\">2.0440793,</span> <span class=\"pre\">2.05036878,</span> <span class=\"pre\">2.05665825,</span> <span class=\"pre\">2.06294773,</span> <span class=\"pre\">2.0692372,</span> <span class=\"pre\">2.07552668,</span> <span class=\"pre\">2.08181615,</span> <span class=\"pre\">2.08810563,</span> <span class=\"pre\">2.0943951,</span> <span class=\"pre\">2.10068458,</span> <span class=\"pre\">2.10697405,</span> <span class=\"pre\">2.11326353,</span> <span class=\"pre\">2.119553,</span> <span class=\"pre\">2.12584248,</span> <span class=\"pre\">2.13213195,</span> <span class=\"pre\">2.13842143,</span> <span class=\"pre\">2.1447109,</span> <span class=\"pre\">2.15100038,</span> <span class=\"pre\">2.15728985,</span> <span class=\"pre\">2.16357932,</span> <span class=\"pre\">2.1698688,</span> <span class=\"pre\">2.17615827,</span> <span class=\"pre\">2.18244775,</span> <span class=\"pre\">2.18873722,</span> <span class=\"pre\">2.1950267,</span> <span class=\"pre\">2.20131617,</span> <span class=\"pre\">2.20760565,</span> <span class=\"pre\">2.21389512,</span> <span class=\"pre\">2.2201846,</span> <span class=\"pre\">2.22647407,</span> <span class=\"pre\">2.23276355,</span> <span class=\"pre\">2.23905302,</span> <span class=\"pre\">2.2453425,</span> <span class=\"pre\">2.25163197,</span> <span class=\"pre\">2.25792145,</span> <span class=\"pre\">2.26421092,</span> <span class=\"pre\">2.2705004,</span> <span class=\"pre\">2.27678987,</span> <span class=\"pre\">2.28307935,</span> <span class=\"pre\">2.28936882,</span> <span class=\"pre\">2.2956583,</span> <span class=\"pre\">2.30194777,</span> <span class=\"pre\">2.30823724,</span> <span class=\"pre\">2.31452672,</span> <span class=\"pre\">2.32081619,</span> <span class=\"pre\">2.32710567,</span> <span class=\"pre\">2.33339514,</span> <span class=\"pre\">2.33968462,</span> <span class=\"pre\">2.34597409,</span> <span class=\"pre\">2.35226357,</span> <span class=\"pre\">2.35855304,</span> <span class=\"pre\">2.36484252,</span> <span class=\"pre\">2.37113199,</span> <span class=\"pre\">2.37742147,</span> <span class=\"pre\">2.38371094,</span> <span class=\"pre\">2.39000042,</span> <span class=\"pre\">2.39628989,</span> <span class=\"pre\">2.40257937,</span> <span class=\"pre\">2.40886884,</span> <span class=\"pre\">2.41515832,</span> <span class=\"pre\">2.42144779,</span> <span class=\"pre\">2.42773727,</span> <span class=\"pre\">2.43402674,</span> <span class=\"pre\">2.44031622,</span> <span class=\"pre\">2.44660569,</span> <span class=\"pre\">2.45289516,</span> <span class=\"pre\">2.45918464,</span> <span class=\"pre\">2.46547411,</span> <span class=\"pre\">2.47176359,</span> <span class=\"pre\">2.47805306,</span> <span class=\"pre\">2.48434254,</span> <span class=\"pre\">2.49063201,</span> <span class=\"pre\">2.49692149,</span> <span class=\"pre\">2.50321096,</span> <span class=\"pre\">2.50950044,</span> <span class=\"pre\">2.51578991,</span> <span class=\"pre\">2.52207939,</span> <span class=\"pre\">2.52836886,</span> <span class=\"pre\">2.53465834,</span> <span class=\"pre\">2.54094781,</span> <span class=\"pre\">2.54723729,</span> <span class=\"pre\">2.55352676,</span> <span class=\"pre\">2.55981624,</span> <span class=\"pre\">2.56610571,</span> <span class=\"pre\">2.57239519,</span> <span class=\"pre\">2.57868466,</span> <span class=\"pre\">2.58497414,</span> <span class=\"pre\">2.59126361,</span> <span class=\"pre\">2.59755308,</span> <span class=\"pre\">2.60384256,</span> <span class=\"pre\">2.61013203,</span> <span class=\"pre\">2.61642151,</span> <span class=\"pre\">2.62271098,</span> <span class=\"pre\">2.62900046,</span> <span class=\"pre\">2.63528993,</span> <span class=\"pre\">2.64157941,</span> <span class=\"pre\">2.64786888,</span> <span class=\"pre\">2.65415836,</span> <span class=\"pre\">2.66044783,</span> <span class=\"pre\">2.66673731,</span> <span class=\"pre\">2.67302678,</span> <span class=\"pre\">2.67931626,</span> <span class=\"pre\">2.68560573,</span> <span class=\"pre\">2.69189521,</span> <span class=\"pre\">2.69818468,</span> <span class=\"pre\">2.70447416,</span> <span class=\"pre\">2.71076363,</span> <span class=\"pre\">2.71705311,</span> <span class=\"pre\">2.72334258,</span> <span class=\"pre\">2.72963206,</span> <span class=\"pre\">2.73592153,</span> <span class=\"pre\">2.742211,</span> <span class=\"pre\">2.74850048,</span> <span class=\"pre\">2.75478995,</span> <span class=\"pre\">2.76107943,</span> <span class=\"pre\">2.7673689,</span> <span class=\"pre\">2.77365838,</span> <span class=\"pre\">2.77994785,</span> <span class=\"pre\">2.78623733,</span> <span class=\"pre\">2.7925268,</span> <span class=\"pre\">2.79881628,</span> <span class=\"pre\">2.80510575,</span> <span class=\"pre\">2.81139523,</span> <span class=\"pre\">2.8176847,</span> <span class=\"pre\">2.82397418,</span> <span class=\"pre\">2.83026365,</span> <span class=\"pre\">2.83655313,</span> <span class=\"pre\">2.8428426,</span> <span class=\"pre\">2.84913208,</span> <span class=\"pre\">2.85542155,</span> <span class=\"pre\">2.86171103,</span> <span class=\"pre\">2.8680005,</span> <span class=\"pre\">2.87428998,</span> <span class=\"pre\">2.88057945,</span> <span class=\"pre\">2.88686892,</span> <span class=\"pre\">2.8931584,</span> <span class=\"pre\">2.89944787,</span> <span class=\"pre\">2.90573735,</span> <span class=\"pre\">2.91202682,</span> <span class=\"pre\">2.9183163,</span> <span class=\"pre\">2.92460577,</span> <span class=\"pre\">2.93089525,</span> <span class=\"pre\">2.93718472,</span> <span class=\"pre\">2.9434742,</span> <span class=\"pre\">2.94976367,</span> <span class=\"pre\">2.95605315,</span> <span class=\"pre\">2.96234262,</span> <span class=\"pre\">2.9686321,</span> <span class=\"pre\">2.97492157,</span> <span class=\"pre\">2.98121105,</span> <span class=\"pre\">2.98750052,</span> <span class=\"pre\">2.99379,</span> <span class=\"pre\">3.00007947,</span> <span class=\"pre\">3.00636895,</span> <span class=\"pre\">3.01265842,</span> <span class=\"pre\">3.0189479,</span> <span class=\"pre\">3.02523737,</span> <span class=\"pre\">3.03152684,</span> <span class=\"pre\">3.03781632,</span> <span class=\"pre\">3.04410579,</span> <span class=\"pre\">3.05039527,</span> <span class=\"pre\">3.05668474,</span> <span class=\"pre\">3.06297422,</span> <span class=\"pre\">3.06926369,</span> <span class=\"pre\">3.07555317,</span> <span class=\"pre\">3.08184264,</span> <span class=\"pre\">3.08813212,</span> <span class=\"pre\">3.09442159,</span> <span class=\"pre\">3.10071107,</span> <span class=\"pre\">3.10700054,</span> <span class=\"pre\">3.11329002,</span> <span class=\"pre\">3.11957949,</span> <span class=\"pre\">3.12586897,</span> <span class=\"pre\">3.13215844,</span> <span class=\"pre\">3.13844792,</span> <span class=\"pre\">3.14473739,</span> <span class=\"pre\">3.15102687,</span> <span class=\"pre\">3.15731634,</span> <span class=\"pre\">3.16360582,</span> <span class=\"pre\">3.16989529,</span> <span class=\"pre\">3.17618476,</span> <span class=\"pre\">3.18247424,</span> <span class=\"pre\">3.18876371,</span> <span class=\"pre\">3.19505319,</span> <span class=\"pre\">3.20134266,</span> <span class=\"pre\">3.20763214,</span> <span class=\"pre\">3.21392161,</span> <span class=\"pre\">3.22021109,</span> <span class=\"pre\">3.22650056,</span> <span class=\"pre\">3.23279004,</span> <span class=\"pre\">3.23907951,</span> <span class=\"pre\">3.24536899,</span> <span class=\"pre\">3.25165846,</span> <span class=\"pre\">3.25794794,</span> <span class=\"pre\">3.26423741,</span> <span class=\"pre\">3.27052689,</span> <span class=\"pre\">3.27681636,</span> <span class=\"pre\">3.28310584,</span> <span class=\"pre\">3.28939531,</span> <span class=\"pre\">3.29568479,</span> <span class=\"pre\">3.30197426,</span> <span class=\"pre\">3.30826374,</span> <span class=\"pre\">3.31455321,</span> <span class=\"pre\">3.32084268,</span> <span class=\"pre\">3.32713216,</span> <span class=\"pre\">3.33342163,</span> <span class=\"pre\">3.33971111,</span> <span class=\"pre\">3.34600058,</span> <span class=\"pre\">3.35229006,</span> <span class=\"pre\">3.35857953,</span> <span class=\"pre\">3.36486901,</span> <span class=\"pre\">3.37115848,</span> <span class=\"pre\">3.37744796,</span> <span class=\"pre\">3.38373743,</span> <span class=\"pre\">3.39002691,</span> <span class=\"pre\">3.39631638,</span> <span class=\"pre\">3.40260586,</span> <span class=\"pre\">3.40889533,</span> <span class=\"pre\">3.41518481,</span> <span class=\"pre\">3.42147428,</span> <span class=\"pre\">3.42776376,</span> <span class=\"pre\">3.43405323,</span> <span class=\"pre\">3.44034271,</span> <span class=\"pre\">3.44663218,</span> <span class=\"pre\">3.45292166,</span> <span class=\"pre\">3.45921113,</span> <span class=\"pre\">3.4655006,</span> <span class=\"pre\">3.47179008,</span> <span class=\"pre\">3.47807955,</span> <span class=\"pre\">3.48436903,</span> <span class=\"pre\">3.4906585,</span> <span class=\"pre\">3.49694798,</span> <span class=\"pre\">3.50323745,</span> <span class=\"pre\">3.50952693,</span> <span class=\"pre\">3.5158164,</span> <span class=\"pre\">3.52210588,</span> <span class=\"pre\">3.52839535,</span> <span class=\"pre\">3.53468483,</span> <span class=\"pre\">3.5409743,</span> <span class=\"pre\">3.54726378,</span> <span class=\"pre\">3.55355325,</span> <span class=\"pre\">3.55984273,</span> <span class=\"pre\">3.5661322,</span> <span class=\"pre\">3.57242168,</span> <span class=\"pre\">3.57871115,</span> <span class=\"pre\">3.58500063,</span> <span class=\"pre\">3.5912901,</span> <span class=\"pre\">3.59757958,</span> <span class=\"pre\">3.60386905,</span> <span class=\"pre\">3.61015852,</span> <span class=\"pre\">3.616448,</span> <span class=\"pre\">3.62273747,</span> <span class=\"pre\">3.62902695,</span> <span class=\"pre\">3.63531642,</span> <span class=\"pre\">3.6416059,</span> <span class=\"pre\">3.64789537,</span> <span class=\"pre\">3.65418485,</span> <span class=\"pre\">3.66047432,</span> <span class=\"pre\">3.6667638,</span> <span class=\"pre\">3.67305327,</span> <span class=\"pre\">3.67934275,</span> <span class=\"pre\">3.68563222,</span> <span class=\"pre\">3.6919217,</span> <span class=\"pre\">3.69821117,</span> <span class=\"pre\">3.70450065,</span> <span class=\"pre\">3.71079012,</span> <span class=\"pre\">3.7170796,</span> <span class=\"pre\">3.72336907,</span> <span class=\"pre\">3.72965855,</span> <span class=\"pre\">3.73594802,</span> <span class=\"pre\">3.7422375,</span> <span class=\"pre\">3.74852697,</span> <span class=\"pre\">3.75481644,</span> <span class=\"pre\">3.76110592,</span> <span class=\"pre\">3.76739539,</span> <span class=\"pre\">3.77368487,</span> <span class=\"pre\">3.77997434,</span> <span class=\"pre\">3.78626382,</span> <span class=\"pre\">3.79255329,</span> <span class=\"pre\">3.79884277,</span> <span class=\"pre\">3.80513224,</span> <span class=\"pre\">3.81142172,</span> <span class=\"pre\">3.81771119,</span> <span class=\"pre\">3.82400067,</span> <span class=\"pre\">3.83029014,</span> <span class=\"pre\">3.83657962,</span> <span class=\"pre\">3.84286909,</span> <span class=\"pre\">3.84915857,</span> <span class=\"pre\">3.85544804,</span> <span class=\"pre\">3.86173752,</span> <span class=\"pre\">3.86802699,</span> <span class=\"pre\">3.87431647,</span> <span class=\"pre\">3.88060594,</span> <span class=\"pre\">3.88689542,</span> <span class=\"pre\">3.89318489,</span> <span class=\"pre\">3.89947436,</span> <span class=\"pre\">3.90576384,</span> <span class=\"pre\">3.91205331,</span> <span class=\"pre\">3.91834279,</span> <span class=\"pre\">3.92463226,</span> <span class=\"pre\">3.93092174,</span> <span class=\"pre\">3.93721121,</span> <span class=\"pre\">3.94350069,</span> <span class=\"pre\">3.94979016,</span> <span class=\"pre\">3.95607964,</span> <span class=\"pre\">3.96236911,</span> <span class=\"pre\">3.96865859,</span> <span class=\"pre\">3.97494806,</span> <span class=\"pre\">3.98123754,</span> <span class=\"pre\">3.98752701,</span> <span class=\"pre\">3.99381649,</span> <span class=\"pre\">4.00010596,</span> <span class=\"pre\">4.00639544,</span> <span class=\"pre\">4.01268491,</span> <span class=\"pre\">4.01897439,</span> <span class=\"pre\">4.02526386,</span> <span class=\"pre\">4.03155334,</span> <span class=\"pre\">4.03784281,</span> <span class=\"pre\">4.04413228,</span> <span class=\"pre\">4.05042176,</span> <span class=\"pre\">4.05671123,</span> <span class=\"pre\">4.06300071,</span> <span class=\"pre\">4.06929018,</span> <span class=\"pre\">4.07557966,</span> <span class=\"pre\">4.08186913,</span> <span class=\"pre\">4.08815861,</span> <span class=\"pre\">4.09444808,</span> <span class=\"pre\">4.10073756,</span> <span class=\"pre\">4.10702703,</span> <span class=\"pre\">4.11331651,</span> <span class=\"pre\">4.11960598,</span> <span class=\"pre\">4.12589546,</span> <span class=\"pre\">4.13218493,</span> <span class=\"pre\">4.13847441,</span> <span class=\"pre\">4.14476388,</span> <span class=\"pre\">4.15105336,</span> <span class=\"pre\">4.15734283,</span> <span class=\"pre\">4.16363231,</span> <span class=\"pre\">4.16992178,</span> <span class=\"pre\">4.17621126,</span> <span class=\"pre\">4.18250073,</span> <span class=\"pre\">4.1887902,</span> <span class=\"pre\">4.19507968,</span> <span class=\"pre\">4.20136915,</span> <span class=\"pre\">4.20765863,</span> <span class=\"pre\">4.2139481,</span> <span class=\"pre\">4.22023758,</span> <span class=\"pre\">4.22652705,</span> <span class=\"pre\">4.23281653,</span> <span class=\"pre\">4.239106,</span> <span class=\"pre\">4.24539548,</span> <span class=\"pre\">4.25168495,</span> <span class=\"pre\">4.25797443,</span> <span class=\"pre\">4.2642639,</span> <span class=\"pre\">4.27055338,</span> <span class=\"pre\">4.27684285,</span> <span class=\"pre\">4.28313233,</span> <span class=\"pre\">4.2894218,</span> <span class=\"pre\">4.29571128,</span> <span class=\"pre\">4.30200075,</span> <span class=\"pre\">4.30829023,</span> <span class=\"pre\">4.3145797,</span> <span class=\"pre\">4.32086918,</span> <span class=\"pre\">4.32715865,</span> <span class=\"pre\">4.33344812,</span> <span class=\"pre\">4.3397376,</span> <span class=\"pre\">4.34602707,</span> <span class=\"pre\">4.35231655,</span> <span class=\"pre\">4.35860602,</span> <span class=\"pre\">4.3648955,</span> <span class=\"pre\">4.37118497,</span> <span class=\"pre\">4.37747445,</span> <span class=\"pre\">4.38376392,</span> <span class=\"pre\">4.3900534,</span> <span class=\"pre\">4.39634287,</span> <span class=\"pre\">4.40263235,</span> <span class=\"pre\">4.40892182,</span> <span class=\"pre\">4.4152113,</span> <span class=\"pre\">4.42150077,</span> <span class=\"pre\">4.42779025,</span> <span class=\"pre\">4.43407972,</span> <span class=\"pre\">4.4403692,</span> <span class=\"pre\">4.44665867,</span> <span class=\"pre\">4.45294815,</span> <span class=\"pre\">4.45923762,</span> <span class=\"pre\">4.4655271,</span> <span class=\"pre\">4.47181657,</span> <span class=\"pre\">4.47810604,</span> <span class=\"pre\">4.48439552,</span> <span class=\"pre\">4.49068499,</span> <span class=\"pre\">4.49697447,</span> <span class=\"pre\">4.50326394,</span> <span class=\"pre\">4.50955342,</span> <span class=\"pre\">4.51584289,</span> <span class=\"pre\">4.52213237,</span> <span class=\"pre\">4.52842184,</span> <span class=\"pre\">4.53471132,</span> <span class=\"pre\">4.54100079,</span> <span class=\"pre\">4.54729027,</span> <span class=\"pre\">4.55357974,</span> <span class=\"pre\">4.55986922,</span> <span class=\"pre\">4.56615869,</span> <span class=\"pre\">4.57244817,</span> <span class=\"pre\">4.57873764,</span> <span class=\"pre\">4.58502712,</span> <span class=\"pre\">4.59131659,</span> <span class=\"pre\">4.59760607,</span> <span class=\"pre\">4.60389554,</span> <span class=\"pre\">4.61018502,</span> <span class=\"pre\">4.61647449,</span> <span class=\"pre\">4.62276396,</span> <span class=\"pre\">4.62905344,</span> <span class=\"pre\">4.63534291,</span> <span class=\"pre\">4.64163239,</span> <span class=\"pre\">4.64792186,</span> <span class=\"pre\">4.65421134,</span> <span class=\"pre\">4.66050081,</span> <span class=\"pre\">4.66679029,</span> <span class=\"pre\">4.67307976,</span> <span class=\"pre\">4.67936924,</span> <span class=\"pre\">4.68565871,</span> <span class=\"pre\">4.69194819,</span> <span class=\"pre\">4.69823766,</span> <span class=\"pre\">4.70452714,</span> <span class=\"pre\">4.71081661,</span> <span class=\"pre\">4.71710609,</span> <span class=\"pre\">4.72339556,</span> <span class=\"pre\">4.72968504,</span> <span class=\"pre\">4.73597451,</span> <span class=\"pre\">4.74226399,</span> <span class=\"pre\">4.74855346,</span> <span class=\"pre\">4.75484294,</span> <span class=\"pre\">4.76113241,</span> <span class=\"pre\">4.76742188,</span> <span class=\"pre\">4.77371136,</span> <span class=\"pre\">4.78000083,</span> <span class=\"pre\">4.78629031,</span> <span class=\"pre\">4.79257978,</span> <span class=\"pre\">4.79886926,</span> <span class=\"pre\">4.80515873,</span> <span class=\"pre\">4.81144821,</span> <span class=\"pre\">4.81773768,</span> <span class=\"pre\">4.82402716,</span> <span class=\"pre\">4.83031663,</span> <span class=\"pre\">4.83660611,</span> <span class=\"pre\">4.84289558,</span> <span class=\"pre\">4.84918506,</span> <span class=\"pre\">4.85547453,</span> <span class=\"pre\">4.86176401,</span> <span class=\"pre\">4.86805348,</span> <span class=\"pre\">4.87434296,</span> <span class=\"pre\">4.88063243,</span> <span class=\"pre\">4.88692191,</span> <span class=\"pre\">4.89321138,</span> <span class=\"pre\">4.89950086,</span> <span class=\"pre\">4.90579033,</span> <span class=\"pre\">4.9120798,</span> <span class=\"pre\">4.91836928,</span> <span class=\"pre\">4.92465875,</span> <span class=\"pre\">4.93094823,</span> <span class=\"pre\">4.9372377,</span> <span class=\"pre\">4.94352718,</span> <span class=\"pre\">4.94981665,</span> <span class=\"pre\">4.95610613,</span> <span class=\"pre\">4.9623956,</span> <span class=\"pre\">4.96868508,</span> <span class=\"pre\">4.97497455,</span> <span class=\"pre\">4.98126403,</span> <span class=\"pre\">4.9875535,</span> <span class=\"pre\">4.99384298,</span> <span class=\"pre\">5.00013245,</span> <span class=\"pre\">5.00642193,</span> <span class=\"pre\">5.0127114,</span> <span class=\"pre\">5.01900088,</span> <span class=\"pre\">5.02529035,</span> <span class=\"pre\">5.03157983,</span> <span class=\"pre\">5.0378693,</span> <span class=\"pre\">5.04415878,</span> <span class=\"pre\">5.05044825,</span> <span class=\"pre\">5.05673772,</span> <span class=\"pre\">5.0630272,</span> <span class=\"pre\">5.06931667,</span> <span class=\"pre\">5.07560615,</span> <span class=\"pre\">5.08189562,</span> <span class=\"pre\">5.0881851,</span> <span class=\"pre\">5.09447457,</span> <span class=\"pre\">5.10076405,</span> <span class=\"pre\">5.10705352,</span> <span class=\"pre\">5.113343,</span> <span class=\"pre\">5.11963247,</span> <span class=\"pre\">5.12592195,</span> <span class=\"pre\">5.13221142,</span> <span class=\"pre\">5.1385009,</span> <span class=\"pre\">5.14479037,</span> <span class=\"pre\">5.15107985,</span> <span class=\"pre\">5.15736932,</span> <span class=\"pre\">5.1636588,</span> <span class=\"pre\">5.16994827,</span> <span class=\"pre\">5.17623775,</span> <span class=\"pre\">5.18252722,</span> <span class=\"pre\">5.1888167,</span> <span class=\"pre\">5.19510617,</span> <span class=\"pre\">5.20139564,</span> <span class=\"pre\">5.20768512,</span> <span class=\"pre\">5.21397459,</span> <span class=\"pre\">5.22026407,</span> <span class=\"pre\">5.22655354,</span> <span class=\"pre\">5.23284302,</span> <span class=\"pre\">5.23913249,</span> <span class=\"pre\">5.24542197,</span> <span class=\"pre\">5.25171144,</span> <span class=\"pre\">5.25800092,</span> <span class=\"pre\">5.26429039,</span> <span class=\"pre\">5.27057987,</span> <span class=\"pre\">5.27686934,</span> <span class=\"pre\">5.28315882,</span> <span class=\"pre\">5.28944829,</span> <span class=\"pre\">5.29573777,</span> <span class=\"pre\">5.30202724,</span> <span class=\"pre\">5.30831672,</span> <span class=\"pre\">5.31460619,</span> <span class=\"pre\">5.32089567,</span> <span class=\"pre\">5.32718514,</span> <span class=\"pre\">5.33347462,</span> <span class=\"pre\">5.33976409,</span> <span class=\"pre\">5.34605356,</span> <span class=\"pre\">5.35234304,</span> <span class=\"pre\">5.35863251,</span> <span class=\"pre\">5.36492199,</span> <span class=\"pre\">5.37121146,</span> <span class=\"pre\">5.37750094,</span> <span class=\"pre\">5.38379041,</span> <span class=\"pre\">5.39007989,</span> <span class=\"pre\">5.39636936,</span> <span class=\"pre\">5.40265884,</span> <span class=\"pre\">5.40894831,</span> <span class=\"pre\">5.41523779,</span> <span class=\"pre\">5.42152726,</span> <span class=\"pre\">5.42781674,</span> <span class=\"pre\">5.43410621,</span> <span class=\"pre\">5.44039569,</span> <span class=\"pre\">5.44668516,</span> <span class=\"pre\">5.45297464,</span> <span class=\"pre\">5.45926411,</span> <span class=\"pre\">5.46555359,</span> <span class=\"pre\">5.47184306,</span> <span class=\"pre\">5.47813254,</span> <span class=\"pre\">5.48442201,</span> <span class=\"pre\">5.49071148,</span> <span class=\"pre\">5.49700096,</span> <span class=\"pre\">5.50329043,</span> <span class=\"pre\">5.50957991,</span> <span class=\"pre\">5.51586938,</span> <span class=\"pre\">5.52215886,</span> <span class=\"pre\">5.52844833,</span> <span class=\"pre\">5.53473781,</span> <span class=\"pre\">5.54102728,</span> <span class=\"pre\">5.54731676,</span> <span class=\"pre\">5.55360623,</span> <span class=\"pre\">5.55989571,</span> <span class=\"pre\">5.56618518,</span> <span class=\"pre\">5.57247466,</span> <span class=\"pre\">5.57876413,</span> <span class=\"pre\">5.58505361,</span> <span class=\"pre\">5.59134308,</span> <span class=\"pre\">5.59763256,</span> <span class=\"pre\">5.60392203,</span> <span class=\"pre\">5.61021151,</span> <span class=\"pre\">5.61650098,</span> <span class=\"pre\">5.62279046,</span> <span class=\"pre\">5.62907993,</span> <span class=\"pre\">5.6353694,</span> <span class=\"pre\">5.64165888,</span> <span class=\"pre\">5.64794835,</span> <span class=\"pre\">5.65423783,</span> <span class=\"pre\">5.6605273,</span> <span class=\"pre\">5.66681678,</span> <span class=\"pre\">5.67310625,</span> <span class=\"pre\">5.67939573,</span> <span class=\"pre\">5.6856852,</span> <span class=\"pre\">5.69197468,</span> <span class=\"pre\">5.69826415,</span> <span class=\"pre\">5.70455363,</span> <span class=\"pre\">5.7108431,</span> <span class=\"pre\">5.71713258,</span> <span class=\"pre\">5.72342205,</span> <span class=\"pre\">5.72971153,</span> <span class=\"pre\">5.736001,</span> <span class=\"pre\">5.74229048,</span> <span class=\"pre\">5.74857995,</span> <span class=\"pre\">5.75486943,</span> <span class=\"pre\">5.7611589,</span> <span class=\"pre\">5.76744838,</span> <span class=\"pre\">5.77373785,</span> <span class=\"pre\">5.78002732,</span> <span class=\"pre\">5.7863168,</span> <span class=\"pre\">5.79260627,</span> <span class=\"pre\">5.79889575,</span> <span class=\"pre\">5.80518522,</span> <span class=\"pre\">5.8114747,</span> <span class=\"pre\">5.81776417,</span> <span class=\"pre\">5.82405365,</span> <span class=\"pre\">5.83034312,</span> <span class=\"pre\">5.8366326,</span> <span class=\"pre\">5.84292207,</span> <span class=\"pre\">5.84921155,</span> <span class=\"pre\">5.85550102,</span> <span class=\"pre\">5.8617905,</span> <span class=\"pre\">5.86807997,</span> <span class=\"pre\">5.87436945,</span> <span class=\"pre\">5.88065892,</span> <span class=\"pre\">5.8869484,</span> <span class=\"pre\">5.89323787,</span> <span class=\"pre\">5.89952735,</span> <span class=\"pre\">5.90581682,</span> <span class=\"pre\">5.9121063,</span> <span class=\"pre\">5.91839577,</span> <span class=\"pre\">5.92468524,</span> <span class=\"pre\">5.93097472,</span> <span class=\"pre\">5.93726419,</span> <span class=\"pre\">5.94355367,</span> <span class=\"pre\">5.94984314,</span> <span class=\"pre\">5.95613262,</span> <span class=\"pre\">5.96242209,</span> <span class=\"pre\">5.96871157,</span> <span class=\"pre\">5.97500104,</span> <span class=\"pre\">5.98129052,</span> <span class=\"pre\">5.98757999,</span> <span class=\"pre\">5.99386947,</span> <span class=\"pre\">6.00015894,</span> <span class=\"pre\">6.00644842,</span> <span class=\"pre\">6.01273789,</span> <span class=\"pre\">6.01902737,</span> <span class=\"pre\">6.02531684,</span> <span class=\"pre\">6.03160632,</span> <span class=\"pre\">6.03789579,</span> <span class=\"pre\">6.04418527,</span> <span class=\"pre\">6.05047474,</span> <span class=\"pre\">6.05676422,</span> <span class=\"pre\">6.06305369,</span> <span class=\"pre\">6.06934316,</span> <span class=\"pre\">6.07563264,</span> <span class=\"pre\">6.08192211,</span> <span class=\"pre\">6.08821159,</span> <span class=\"pre\">6.09450106,</span> <span class=\"pre\">6.10079054,</span> <span class=\"pre\">6.10708001,</span> <span class=\"pre\">6.11336949,</span> <span class=\"pre\">6.11965896,</span> <span class=\"pre\">6.12594844,</span> <span class=\"pre\">6.13223791,</span> <span class=\"pre\">6.13852739,</span> <span class=\"pre\">6.14481686,</span> <span class=\"pre\">6.15110634,</span> <span class=\"pre\">6.15739581,</span> <span class=\"pre\">6.16368529,</span> <span class=\"pre\">6.16997476,</span> <span class=\"pre\">6.17626424,</span> <span class=\"pre\">6.18255371,</span> <span class=\"pre\">6.18884319,</span> <span class=\"pre\">6.19513266,</span> <span class=\"pre\">6.20142214,</span> <span class=\"pre\">6.20771161,</span> <span class=\"pre\">6.21400108,</span> <span class=\"pre\">6.22029056,</span> <span class=\"pre\">6.22658003,</span> <span class=\"pre\">6.23286951,</span> <span class=\"pre\">6.23915898,</span> <span class=\"pre\">6.24544846,</span> <span class=\"pre\">6.25173793,</span> <span class=\"pre\">6.25802741,</span> <span class=\"pre\">6.26431688,</span> <span class=\"pre\">6.27060636,</span> <span class=\"pre\">6.27689583,</span> <span class=\"pre\">6.28318531])</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">datashape</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(64,</span> <span class=\"pre\">64,</span> <span class=\"pre\">64,</span> <span class=\"pre\">65)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(32,</span> <span class=\"pre\">32,</span> <span class=\"pre\">32)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(25,</span> <span class=\"pre\">25,</span> <span class=\"pre\">25)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angles</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([0.,</span> <span class=\"pre\">0.2026834,</span> <span class=\"pre\">0.40536679,</span> <span class=\"pre\">0.60805019,</span> <span class=\"pre\">0.81073359,</span> <span class=\"pre\">1.01341699,</span> <span class=\"pre\">1.21610038,</span> <span class=\"pre\">1.41878378,</span> <span class=\"pre\">1.62146718,</span> <span class=\"pre\">1.82415057,</span> <span class=\"pre\">2.02683397,</span> <span class=\"pre\">2.22951737,</span> <span class=\"pre\">2.43220076,</span> <span class=\"pre\">2.63488416,</span> <span class=\"pre\">2.83756756,</span> <span class=\"pre\">3.04025096,</span> <span class=\"pre\">3.24293435,</span> <span class=\"pre\">3.44561775,</span> <span class=\"pre\">3.64830115,</span> <span class=\"pre\">3.85098454,</span> <span class=\"pre\">4.05366794,</span> <span class=\"pre\">4.25635134,</span> <span class=\"pre\">4.45903473,</span> <span class=\"pre\">4.66171813,</span> <span class=\"pre\">4.86440153,</span> <span class=\"pre\">5.06708493,</span> <span class=\"pre\">5.26976832,</span> <span class=\"pre\">5.47245172,</span> <span class=\"pre\">5.67513512,</span> <span class=\"pre\">5.87781851,</span> <span class=\"pre\">6.08050191,</span> <span class=\"pre\">6.28318531])</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radii</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([0.2,</span> <span class=\"pre\">0.56,</span> <span class=\"pre\">0.92,</span> <span class=\"pre\">1.28,</span> <span class=\"pre\">1.64,</span> <span class=\"pre\">2.])</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">snr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.phantom.orbital_phantom\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a phantom based on a 3-D orbit <code class=\"docutils literal notranslate\"><span class=\"pre\">f(t)</span> <span class=\"pre\">-&gt;</span> <span class=\"pre\">(x,y,z)</span></code>.</p>\n<section id=\"id7\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gtab<span class=\"classifier\">GradientTable</span></dt><dd><p>Gradient table of measurement directions.</p>\n</dd>\n<dt>evals<span class=\"classifier\">array, shape (3,)</span></dt><dd><p>Tensor eigenvalues.</p>\n</dd>\n<dt>func<span class=\"classifier\">user defined function f(t)-&gt;(x,y,z)</span></dt><dd><p>It could be desirable for <code class=\"docutils literal notranslate\"><span class=\"pre\">-1=&lt;x,y,z</span> <span class=\"pre\">&lt;=1</span></code>.\nIf None creates a circular orbit.</p>\n</dd>\n<dt>t<span class=\"classifier\">array, shape (K,)</span></dt><dd><p>Represents time for the orbit. Default is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">np.linspace(0,</span> <span class=\"pre\">2</span> <span class=\"pre\">*</span> <span class=\"pre\">np.pi,</span> <span class=\"pre\">1000)</span></code>.</p>\n</dd>\n<dt>datashape<span class=\"classifier\">array, shape (X,Y,Z,W)</span></dt><dd><p>Size of the output simulated data</p>\n</dd>\n<dt>origin<span class=\"classifier\">tuple, shape (3,)</span></dt><dd><p>Define the center for the volume</p>\n</dd>\n<dt>scale<span class=\"classifier\">tuple, shape (3,)</span></dt><dd><p>Scale the function before applying to the grid</p>\n</dd>\n<dt>angles<span class=\"classifier\">array, shape (L,)</span></dt><dd><p>Density angle points, always perpendicular to the first eigen vector\nDefault np.linspace(0, 2 * np.pi, 32).</p>\n</dd>\n<dt>radii<span class=\"classifier\">array, shape (M,)</span></dt><dd><p>Thickness radii.  Default <code class=\"docutils literal notranslate\"><span class=\"pre\">np.linspace(0.2,</span> <span class=\"pre\">2,</span> <span class=\"pre\">6)</span></code>.\nangles and radii define the total thickness options</p>\n</dd>\n<dt>S0<span class=\"classifier\">double, optional</span></dt><dd><p>Maximum simulated signal. Default 100.</p>\n</dd>\n<dt>snr<span class=\"classifier\">float, optional</span></dt><dd><p>The signal to noise ratio set to apply Rician noise to the data.\nDefault is to not add noise at all.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id8\">\n<h4>Returns<a class=\"headerlink\" href=\"#id8\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>data : array, shape (datashape)</p>\n</section>\n<section id=\"see-also\">\n<h4>See Also<a class=\"headerlink\" href=\"#see-also\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>add_noise</p>\n</section>\n<section id=\"id9\">\n<h4>Examples<a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>   <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>   <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>   <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span>   <span class=\"k\">return</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">orbital_phantom</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"diffusion-evals\">\n<h3>diffusion_evals<a class=\"headerlink\" href=\"#diffusion-evals\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.diffusion_evals\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">diffusion_evals</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.diffusion_evals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>ndarray(shape, dtype=float, buffer=None, offset=0,</dt><dd><p>strides=None, order=None)</p>\n</dd>\n</dl>\n<p>An array object represents a multidimensional, homogeneous array\nof fixed-size items.  An associated data-type object describes the\nformat of each element in the array (its byte-order, how many bytes it\noccupies in memory, whether it is an integer, a floating point number,\nor something else, etc.)</p>\n<p>Arrays should be constructed using <cite>array</cite>, <cite>zeros</cite> or <cite>empty</cite> (refer\nto the See Also section below).  The parameters given here refer to\na low-level method (<cite>ndarray(\u2026)</cite>) for instantiating an array.</p>\n<p>For more information, refer to the <cite>numpy</cite> module and examine the\nmethods and attributes of an array.</p>\n<section id=\"id10\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>(for the __new__ method; see Notes below)</p>\n<dl class=\"simple\">\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of created array.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">data-type, optional</span></dt><dd><p>Any object that can be interpreted as a numpy data type.</p>\n</dd>\n<dt>buffer<span class=\"classifier\">object exposing buffer interface, optional</span></dt><dd><p>Used to fill the array with data.</p>\n</dd>\n<dt>offset<span class=\"classifier\">int, optional</span></dt><dd><p>Offset of array data in buffer.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints, optional</span></dt><dd><p>Strides of data in memory.</p>\n</dd>\n<dt>order<span class=\"classifier\">{\u2018C\u2019, \u2018F\u2019}, optional</span></dt><dd><p>Row-major (C-style) or column-major (Fortran-style) order.</p>\n</dd>\n</dl>\n</section>\n<section id=\"attributes\">\n<h4>Attributes<a class=\"headerlink\" href=\"#attributes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>T<span class=\"classifier\">ndarray</span></dt><dd><p>Transpose of the array.</p>\n</dd>\n<dt>data<span class=\"classifier\">buffer</span></dt><dd><p>The array\u2019s elements, in memory.</p>\n</dd>\n<dt>dtype<span class=\"classifier\">dtype object</span></dt><dd><p>Describes the format of the elements in the array.</p>\n</dd>\n<dt>flags<span class=\"classifier\">dict</span></dt><dd><p>Dictionary containing information related to memory use, e.g.,\n\u2018C_CONTIGUOUS\u2019, \u2018OWNDATA\u2019, \u2018WRITEABLE\u2019, etc.</p>\n</dd>\n<dt>flat<span class=\"classifier\">numpy.flatiter object</span></dt><dd><p>Flattened version of the array as an iterator.  The iterator\nallows assignments, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">x.flat</span> <span class=\"pre\">=</span> <span class=\"pre\">3</span></code> (See <cite>ndarray.flat</cite> for\nassignment examples; TODO).</p>\n</dd>\n<dt>imag<span class=\"classifier\">ndarray</span></dt><dd><p>Imaginary part of the array.</p>\n</dd>\n<dt>real<span class=\"classifier\">ndarray</span></dt><dd><p>Real part of the array.</p>\n</dd>\n<dt>size<span class=\"classifier\">int</span></dt><dd><p>Number of elements in the array.</p>\n</dd>\n<dt>itemsize<span class=\"classifier\">int</span></dt><dd><p>The memory use of each array element in bytes.</p>\n</dd>\n<dt>nbytes<span class=\"classifier\">int</span></dt><dd><p>The total number of bytes required to store the array data,\ni.e., <code class=\"docutils literal notranslate\"><span class=\"pre\">itemsize</span> <span class=\"pre\">*</span> <span class=\"pre\">size</span></code>.</p>\n</dd>\n<dt>ndim<span class=\"classifier\">int</span></dt><dd><p>The array\u2019s number of dimensions.</p>\n</dd>\n<dt>shape<span class=\"classifier\">tuple of ints</span></dt><dd><p>Shape of the array.</p>\n</dd>\n<dt>strides<span class=\"classifier\">tuple of ints</span></dt><dd><p>The step-size required to move from one element to the next in\nmemory. For example, a contiguous <code class=\"docutils literal notranslate\"><span class=\"pre\">(3,</span> <span class=\"pre\">4)</span></code> array of type\n<code class=\"docutils literal notranslate\"><span class=\"pre\">int16</span></code> in C-order has strides <code class=\"docutils literal notranslate\"><span class=\"pre\">(8,</span> <span class=\"pre\">2)</span></code>.  This implies that\nto move from element to element in memory requires jumps of 2 bytes.\nTo move from row-to-row, one needs to jump 8 bytes at a time\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">2</span> <span class=\"pre\">*</span> <span class=\"pre\">4</span></code>).</p>\n</dd>\n<dt>ctypes<span class=\"classifier\">ctypes object</span></dt><dd><p>Class containing properties of the array needed for interaction\nwith ctypes.</p>\n</dd>\n<dt>base<span class=\"classifier\">ndarray</span></dt><dd><p>If the array is a view into another array, that array is its <cite>base</cite>\n(unless that array is also a view).  The <cite>base</cite> array is where the\narray data is actually stored.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id11\">\n<h4>See Also<a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>array : Construct an array.\nzeros : Create an array, each element of which is zero.\nempty : Create an array, but leave its allocated memory unchanged (i.e.,</p>\n<blockquote>\n<div><p>it contains \u201cgarbage\u201d).</p>\n</div></blockquote>\n<p>dtype : Create a data-type.\nnumpy.typing.NDArray : An ndarray alias <a class=\"reference external\" href=\"https://docs.python.org/3/glossary.html#term-generic-type\" title=\"(in Python v3.11)\"><span class=\"xref std std-term\">generic</span></a></p>\n<blockquote>\n<div><p>w.r.t. its <cite>dtype.type &lt;numpy.dtype.type&gt;</cite>.</p>\n</div></blockquote>\n</section>\n<section id=\"id12\">\n<h4>Notes<a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>There are two modes of creating an array using <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code>:</p>\n<ol class=\"arabic simple\">\n<li><p>If <cite>buffer</cite> is None, then only <cite>shape</cite>, <cite>dtype</cite>, and <cite>order</cite>\nare used.</p></li>\n<li><p>If <cite>buffer</cite> is an object exposing the buffer interface, then\nall keywords are interpreted.</p></li>\n</ol>\n<p>No <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__</span></code> method is needed because the array is fully initialized\nafter the <code class=\"docutils literal notranslate\"><span class=\"pre\">__new__</span></code> method.</p>\n</section>\n<section id=\"id13\">\n<h4>Examples<a class=\"headerlink\" href=\"#id13\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>These examples illustrate the low-level <cite>ndarray</cite> constructor.  Refer\nto the <cite>See Also</cite> section above for easier ways of constructing an\nndarray.</p>\n<p>First mode, <cite>buffer</cite> is None:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([[0.0e+000, 0.0e+000], # random</span>\n<span class=\"go\">       [     nan, 2.5e-323]])</span>\n</pre></div>\n</div>\n<p>Second mode:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,),</span> <span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]),</span>\n<span class=\"gp\">... </span>           <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int_</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">itemsize</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>           <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"c1\"># offset = 1*itemsize, i.e. skip first element</span>\n<span class=\"go\">array([2, 3])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"id14\">\n<h3>add_noise<a class=\"headerlink\" href=\"#id14\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.add_noise\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">add_noise</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">signal</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">snr</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">noise_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rician'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.add_noise\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add noise of specified distribution to the signal from a single voxel.</p>\n<section id=\"id15\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id15\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>signal<span class=\"classifier\">1-d ndarray</span></dt><dd><p>The signal in the voxel.</p>\n</dd>\n<dt>snr<span class=\"classifier\">float</span></dt><dd><p>The desired signal-to-noise ratio. (See notes below.)\nIf <cite>snr</cite> is None, return the signal as-is.</p>\n</dd>\n<dt>S0<span class=\"classifier\">float</span></dt><dd><p>Reference signal for specifying <cite>snr</cite>.</p>\n</dd>\n<dt>noise_type<span class=\"classifier\">string, optional</span></dt><dd><p>The distribution of noise added. Can be either \u2018gaussian\u2019 for Gaussian\ndistributed noise, \u2018rician\u2019 for Rice-distributed noise (default) or\n\u2018rayleigh\u2019 for a Rayleigh distribution.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id16\">\n<h4>Returns<a class=\"headerlink\" href=\"#id16\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>signal<span class=\"classifier\">array, same shape as the input</span></dt><dd><p>Signal with added noise.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id17\">\n<h4>Notes<a class=\"headerlink\" href=\"#id17\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>SNR is defined here, following <a href=\"#id103\"><span class=\"problematic\" id=\"id18\">[1]_</span></a>, as <code class=\"docutils literal notranslate\"><span class=\"pre\">S0</span> <span class=\"pre\">/</span> <span class=\"pre\">sigma</span></code>, where <code class=\"docutils literal notranslate\"><span class=\"pre\">sigma</span></code> is\nthe standard deviation of the two Gaussian distributions forming the real\nand imaginary components of the Rician noise distribution (see <a href=\"#id104\"><span class=\"problematic\" id=\"id19\">[2]_</span></a>).</p>\n</section>\n<section id=\"id20\">\n<h4>References<a class=\"headerlink\" href=\"#id20\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id21\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Descoteaux, Angelino, Fitzgibbons and Deriche (2007) Regularized,\nfast and robust q-ball imaging. MRM, 58: 497-510</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id22\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Gudbjartson and Patz (2008). The Rician distribution of noisy MRI\ndata. MRM 34: 910-914.</p>\n</aside>\n</aside>\n</section>\n<section id=\"id23\">\n<h4>Examples<a class=\"headerlink\" href=\"#id23\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">signal</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">800</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">signal_w_noise</span> <span class=\"o\">=</span> <span class=\"n\">add_noise</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"mf\">10.</span><span class=\"p\">,</span> <span class=\"mf\">100.</span><span class=\"p\">,</span> <span class=\"n\">noise_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;rician&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"sticks-and-ball\">\n<h3>sticks_and_ball<a class=\"headerlink\" href=\"#sticks-and-ball\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.sticks_and_ball\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sticks_and_ball</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">d</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0015</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angles</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">((0,</span> <span class=\"pre\">0),</span> <span class=\"pre\">(90,</span> <span class=\"pre\">0))</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fractions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(35,</span> <span class=\"pre\">35)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">snr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.sticks_and_ball\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate the signal for a Sticks &amp; Ball model.</p>\n<section id=\"id24\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id24\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gtab<span class=\"classifier\">GradientTable</span></dt><dd><p>Signal measurement directions.</p>\n</dd>\n<dt>d<span class=\"classifier\">float, optional</span></dt><dd><p>Diffusivity value.</p>\n</dd>\n<dt>S0<span class=\"classifier\">float, optional</span></dt><dd><p>Unweighted signal value.</p>\n</dd>\n<dt>angles<span class=\"classifier\">array (K, 2) or (K, 3), optional</span></dt><dd><p>List of K polar angles (in degrees) for the sticks or array of K\nsticks as unit vectors.</p>\n</dd>\n<dt>fractions<span class=\"classifier\">array-like, optional</span></dt><dd><p>Percentage of each stick.  Remainder to 100 specifies isotropic\ncomponent.</p>\n</dd>\n<dt>snr<span class=\"classifier\">float, optional</span></dt><dd><p>Signal to noise ratio, assuming Rician noise.  If set to None, no\nnoise is added.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id25\">\n<h4>Returns<a class=\"headerlink\" href=\"#id25\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>S<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>Simulated signal.</p>\n</dd>\n<dt>sticks<span class=\"classifier\">(M,3)</span></dt><dd><p>Sticks in cartesian coordinates.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id26\">\n<h4>References<a class=\"headerlink\" href=\"#id26\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id27\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Behrens et al., \u201cProbabilistic diffusion\ntractography with multiple fiber orientations:  what can we gain?\u201d,\nNeuroimage, 2007.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"callaghan-perpendicular\">\n<h3>callaghan_perpendicular<a class=\"headerlink\" href=\"#callaghan-perpendicular\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.callaghan_perpendicular\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">callaghan_perpendicular</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">q</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radius</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.callaghan_perpendicular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the perpendicular diffusion signal E(q) in a cylinder of\nradius R using the Soderman model <a href=\"#id105\"><span class=\"problematic\" id=\"id28\">[1]_</span></a>. Assumes that the pulse length\nis infinitely short and the diffusion time is infinitely long.</p>\n<section id=\"id29\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id29\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>q<span class=\"classifier\">array, shape (N,)</span></dt><dd><p>q-space value in 1/mm</p>\n</dd>\n<dt>radius<span class=\"classifier\">float</span></dt><dd><p>cylinder radius in mm</p>\n</dd>\n</dl>\n</section>\n<section id=\"id30\">\n<h4>Returns<a class=\"headerlink\" href=\"#id30\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>E<span class=\"classifier\">array, shape (N,)</span></dt><dd><p>signal attenuation</p>\n</dd>\n</dl>\n</section>\n<section id=\"id31\">\n<h4>References<a class=\"headerlink\" href=\"#id31\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id32\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>S\u00f6derman, Olle, and Bengt J\u00f6nsson. \u201cRestricted diffusion in\ncylindrical geometry.\u201d Journal of Magnetic Resonance, Series A\n117.1 (1995): 94-97.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"gaussian-parallel\">\n<h3>gaussian_parallel<a class=\"headerlink\" href=\"#gaussian-parallel\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.gaussian_parallel\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">gaussian_parallel</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">q</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tau</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">D</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0007</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.gaussian_parallel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the parallel Gaussian diffusion signal.</p>\n<section id=\"id33\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id33\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>q<span class=\"classifier\">array, shape (N,)</span></dt><dd><p>q-space value in 1/mm</p>\n</dd>\n<dt>tau<span class=\"classifier\">float</span></dt><dd><p>diffusion time in s</p>\n</dd>\n<dt>D<span class=\"classifier\">float, optional</span></dt><dd><p>diffusion constant</p>\n</dd>\n</dl>\n</section>\n<section id=\"id34\">\n<h4>Returns<a class=\"headerlink\" href=\"#id34\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>E<span class=\"classifier\">array, shape (N,)</span></dt><dd><p>signal attenuation</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"cylinders-and-ball-soderman\">\n<h3>cylinders_and_ball_soderman<a class=\"headerlink\" href=\"#cylinders-and-ball-soderman\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.cylinders_and_ball_soderman\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">cylinders_and_ball_soderman</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tau</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radii</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(0.005,</span> <span class=\"pre\">0.005)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">D</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0007</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angles</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">((0,</span> <span class=\"pre\">0),</span> <span class=\"pre\">(90,</span> <span class=\"pre\">0))</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fractions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(35,</span> <span class=\"pre\">35)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">snr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.cylinders_and_ball_soderman\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the three-dimensional signal attenuation E(q) originating\nfrom within a cylinder of radius R using the Soderman approximation <a href=\"#id106\"><span class=\"problematic\" id=\"id35\">[1]_</span></a>.\nThe diffusion signal is assumed to be separable perpendicular and parallel\nto the cylinder axis <a href=\"#id107\"><span class=\"problematic\" id=\"id36\">[2]_</span></a>.\nThis function is basically an extension of the ball and stick model.\nSetting the radius to zero makes them equivalent.</p>\n<section id=\"id37\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id37\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gtab<span class=\"classifier\">GradientTable</span></dt><dd><p>Signal measurement directions.</p>\n</dd>\n<dt>tau<span class=\"classifier\">float</span></dt><dd><p>diffusion time in s</p>\n</dd>\n<dt>radii<span class=\"classifier\">array-like, optional</span></dt><dd><p>cylinder radius in mm</p>\n</dd>\n<dt>D<span class=\"classifier\">float, optional</span></dt><dd><p>diffusion constant</p>\n</dd>\n<dt>S0<span class=\"classifier\">float, optional</span></dt><dd><p>Unweighted signal value.</p>\n</dd>\n<dt>angles<span class=\"classifier\">array (K, 2) or (K, 3), optional</span></dt><dd><p>List of K polar angles (in degrees) for the sticks or array of K\nsticks as unit vectors.</p>\n</dd>\n<dt>fractions<span class=\"classifier\">array-like, optional</span></dt><dd><p>Percentage of each stick.  Remainder to 100 specifies isotropic\ncomponent.</p>\n</dd>\n<dt>snr<span class=\"classifier\">float, optional</span></dt><dd><p>Signal to noise ratio, assuming Rician noise.  If set to None, no\nnoise is added.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id38\">\n<h4>Returns<a class=\"headerlink\" href=\"#id38\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>E<span class=\"classifier\">array, shape (N,)</span></dt><dd><p>signal attenuation</p>\n</dd>\n</dl>\n</section>\n<section id=\"id39\">\n<h4>References<a class=\"headerlink\" href=\"#id39\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id40\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>S\u00f6derman, Olle, and Bengt J\u00f6nsson. \u201cRestricted diffusion in\ncylindrical geometry.\u201d Journal of Magnetic Resonance, Series A\n117.1 (1995): 94-97.</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id41\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Assaf, Yaniv, et al. \u201cNew modeling and experimental framework to\ncharacterize hindered and restricted water diffusion in brain white\nmatter.\u201d Magnetic Resonance in Medicine 52.5 (2004): 965-978.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"single-tensor\">\n<h3>single_tensor<a class=\"headerlink\" href=\"#single-tensor\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.single_tensor\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">single_tensor</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evecs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">snr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.single_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate diffusion-weighted signals with a single tensor.</p>\n<section id=\"id42\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id42\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gtab<span class=\"classifier\">GradientTable</span></dt><dd><p>Table with information of b-values and gradient directions g.\nNote that if gtab has a btens attribute, simulations will be performed\naccording to the given b-tensor B information.</p>\n</dd>\n<dt>S0<span class=\"classifier\">double, optional</span></dt><dd><p>Strength of signal in the presence of no diffusion gradient (also\ncalled the <code class=\"docutils literal notranslate\"><span class=\"pre\">b=0</span></code> value).</p>\n</dd>\n<dt>evals<span class=\"classifier\">(3,) ndarray, optional</span></dt><dd><p>Eigenvalues of the diffusion tensor.  By default, values typical for\nprolate white matter are used.</p>\n</dd>\n<dt>evecs<span class=\"classifier\">(3, 3) ndarray, optional</span></dt><dd><p>Eigenvectors of the tensor.  You can also think of this as a rotation\nmatrix that transforms the direction of the tensor. The eigenvectors\nneed to be column wise.</p>\n</dd>\n<dt>snr<span class=\"classifier\">float, optional</span></dt><dd><p>Signal to noise ratio, assuming Rician noise.  None implies no noise.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id43\">\n<h4>Returns<a class=\"headerlink\" href=\"#id43\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>S<span class=\"classifier\">(N,) ndarray</span></dt><dd><dl class=\"simple\">\n<dt>Simulated signal:</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">S(b,</span> <span class=\"pre\">g)</span> <span class=\"pre\">=</span> <span class=\"pre\">S_0</span> <span class=\"pre\">e^(-b</span> <span class=\"pre\">g^T</span> <span class=\"pre\">R</span> <span class=\"pre\">D</span> <span class=\"pre\">R.T</span> <span class=\"pre\">g)</span></code>, if gtab.tens=None\n<code class=\"docutils literal notranslate\"><span class=\"pre\">S(B)</span> <span class=\"pre\">=</span> <span class=\"pre\">S_0</span> <span class=\"pre\">e^(-B:D)</span></code>, if gtab.tens information is given</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</section>\n<section id=\"id44\">\n<h4>References<a class=\"headerlink\" href=\"#id44\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id45\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>M. Descoteaux, \u201cHigh Angular Resolution Diffusion MRI: from Local\nEstimation to Segmentation and Tractography\u201d, PhD thesis,\nUniversity of Nice-Sophia Antipolis, p. 42, 2008.</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id46\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>E. Stejskal and J. Tanner, \u201cSpin diffusion measurements: spin echos\nin the presence of a time-dependent field gradient\u201d, Journal of\nChemical Physics, nr. 42, pp. 288\u2013292, 1965.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"multi-tensor\">\n<h3>multi_tensor<a class=\"headerlink\" href=\"#multi-tensor\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.multi_tensor\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">multi_tensor</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mevals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angles</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">((0,</span> <span class=\"pre\">0),</span> <span class=\"pre\">(90,</span> <span class=\"pre\">0))</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fractions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(50,</span> <span class=\"pre\">50)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">snr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.multi_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate a Multi-Tensor signal.</p>\n<section id=\"id47\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id47\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gtab<span class=\"classifier\">GradientTable</span></dt><dd><p>Table with information of b-values and gradient directions.\nNote that if gtab has a btens attribute, simulations will be performed\naccording to the given b-tensor information.</p>\n</dd>\n<dt>mevals<span class=\"classifier\">array (K, 3)</span></dt><dd><p>each tensor\u2019s eigenvalues in each row</p>\n</dd>\n<dt>S0<span class=\"classifier\">float, optional</span></dt><dd><p>Unweighted signal value (b0 signal).</p>\n</dd>\n<dt>angles<span class=\"classifier\">array (K, 2) or (K, 3), optional</span></dt><dd><p>List of K tensor directions in polar angles (in degrees) or unit\nvectors</p>\n</dd>\n<dt>fractions<span class=\"classifier\">array-like, optional</span></dt><dd><p>Percentage of the contribution of each tensor. The sum of fractions\nshould be equal to 100%.</p>\n</dd>\n<dt>snr<span class=\"classifier\">float, optional</span></dt><dd><p>Signal to noise ratio, assuming Rician noise.  If set to None, no\nnoise is added.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id48\">\n<h4>Returns<a class=\"headerlink\" href=\"#id48\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>S<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>Simulated signal.</p>\n</dd>\n<dt>sticks<span class=\"classifier\">(M,3)</span></dt><dd><p>Sticks in cartesian coordinates.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id49\">\n<h4>Examples<a class=\"headerlink\" href=\"#id49\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.sims.voxel</span> <span class=\"kn\">import</span> <span class=\"n\">multi_tensor</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fimg</span><span class=\"p\">,</span> <span class=\"n\">fbvals</span><span class=\"p\">,</span> <span class=\"n\">fbvecs</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;small_101D&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">fbvals</span><span class=\"p\">,</span> <span class=\"n\">fbvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mevals</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(([</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">],[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">]))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">e0</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">e1</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">mevals</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"multi-tensor-dki\">\n<h3>multi_tensor_dki<a class=\"headerlink\" href=\"#multi-tensor-dki\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.multi_tensor_dki\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">multi_tensor_dki</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mevals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angles</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">((90.0,</span> <span class=\"pre\">0.0),</span> <span class=\"pre\">(90.0,</span> <span class=\"pre\">0.0))</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fractions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(50,</span> <span class=\"pre\">50)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">snr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.multi_tensor_dki\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate the diffusion-weight signal, diffusion and kurtosis tensors\nbased on the DKI model</p>\n<section id=\"id50\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id50\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>gtab : GradientTable\nmevals : array (K, 3)</p>\n<blockquote>\n<div><p>eigenvalues of the diffusion tensor for each individual compartment</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>S0<span class=\"classifier\">float (optional)</span></dt><dd><p>Unweighted signal value (b0 signal).</p>\n</dd>\n<dt>angles<span class=\"classifier\">array (K,2) or (K,3) (optional)</span></dt><dd><p>List of K tensor directions of the diffusion tensor of each compartment\nin polar angles (in degrees) or unit vectors</p>\n</dd>\n<dt>fractions<span class=\"classifier\">float (K,) (optional)</span></dt><dd><p>Percentage of the contribution of each tensor. The sum of fractions\nshould be equal to 100%.</p>\n</dd>\n<dt>snr<span class=\"classifier\">float (optional)</span></dt><dd><p>Signal to noise ratio, assuming Rician noise.  If set to None, no\nnoise is added.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id51\">\n<h4>Returns<a class=\"headerlink\" href=\"#id51\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>S<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>Simulated signal based on the DKI model.</p>\n</dd>\n<dt>dt<span class=\"classifier\">(6,)</span></dt><dd><p>elements of the diffusion tensor.</p>\n</dd>\n<dt>kt<span class=\"classifier\">(15,)</span></dt><dd><p>elements of the kurtosis tensor.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id52\">\n<h4>Notes<a class=\"headerlink\" href=\"#id52\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Simulations are based on multicompartmental models which assumes that\ntissue is well described by impermeable diffusion compartments\ncharacterized by their only diffusion tensor. Since simulations are based\non the DKI model, coefficients larger than the fourth order of the signal\u2019s\ntaylor expansion approximation are neglected.</p>\n</section>\n<section id=\"id53\">\n<h4>Examples<a class=\"headerlink\" href=\"#id53\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.sims.voxel</span> <span class=\"kn\">import</span> <span class=\"n\">multi_tensor_dki</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"kn\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fimg</span><span class=\"p\">,</span> <span class=\"n\">fbvals</span><span class=\"p\">,</span> <span class=\"n\">fbvecs</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;small_64D&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">fbvals</span><span class=\"p\">,</span> <span class=\"n\">fbvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals_2s</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvals</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs_2s</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">bvecs</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals_2s</span><span class=\"p\">,</span> <span class=\"n\">bvecs_2s</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mevals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.00099</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mf\">0.00226</span><span class=\"p\">,</span> <span class=\"mf\">0.00087</span><span class=\"p\">,</span> <span class=\"mf\">0.00087</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">kt</span> <span class=\"o\">=</span>  <span class=\"n\">multi_tensor_dki</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">mevals</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id54\">\n<h4>References<a class=\"headerlink\" href=\"#id54\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id55\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>R. Neto Henriques et al., \u201cExploring the 3D geometry of the\ndiffusion kurtosis tensor - Impact on the development of robust\ntractography procedures and novel biomarkers\u201d, NeuroImage (2015)\n111, 85-99.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"kurtosis-element\">\n<h3>kurtosis_element<a class=\"headerlink\" href=\"#kurtosis-element\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.kurtosis_element\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">kurtosis_element</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">D_comps</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">frac</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ind_i</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ind_j</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ind_k</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ind_l</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">DT</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">MD</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.kurtosis_element\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the diffusion kurtosis tensor element (with indexes i, j, k\nand l) based on the individual diffusion tensor components of a\nmulticompartmental model.</p>\n<section id=\"id56\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id56\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>D_comps<span class=\"classifier\">(K,3,3) ndarray</span></dt><dd><p>Diffusion tensors for all K individual compartment of the\nmulticompartmental model.</p>\n</dd>\n<dt>frac<span class=\"classifier\">[float]</span></dt><dd><p>Percentage of the contribution of each tensor. The sum of fractions\nshould be equal to 100%.</p>\n</dd>\n<dt>ind_i<span class=\"classifier\">int</span></dt><dd><p>Element\u2019s index i (0 for x, 1 for y, 2 for z)</p>\n</dd>\n<dt>ind_j<span class=\"classifier\">int</span></dt><dd><p>Element\u2019s index j (0 for x, 1 for y, 2 for z)</p>\n</dd>\n<dt>ind_k<span class=\"classifier\">int</span></dt><dd><p>Element\u2019s index k (0 for x, 1 for y, 2 for z)</p>\n</dd>\n<dt>ind_l: int</dt><dd><p>Elements index l (0 for x, 1 for y, 2 for z)</p>\n</dd>\n<dt>DT<span class=\"classifier\">(3,3) ndarray (optional)</span></dt><dd><p>Voxel\u2019s global diffusion tensor.</p>\n</dd>\n<dt>MD<span class=\"classifier\">float (optional)</span></dt><dd><p>Voxel\u2019s global mean diffusivity.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id57\">\n<h4>Returns<a class=\"headerlink\" href=\"#id57\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>wijkl<span class=\"classifier\">float</span></dt><dd><p>kurtosis tensor element of index i, j, k, l</p>\n</dd>\n</dl>\n</section>\n<section id=\"id58\">\n<h4>Notes<a class=\"headerlink\" href=\"#id58\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>wijkl is calculated using equation 8 given in <a href=\"#id108\"><span class=\"problematic\" id=\"id59\">[1]_</span></a></p>\n</section>\n<section id=\"id60\">\n<h4>References<a class=\"headerlink\" href=\"#id60\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id61\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>R. Neto Henriques et al., \u201cExploring the 3D geometry of the\ndiffusion kurtosis tensor - Impact on the development of robust\ntractography procedures and novel biomarkers\u201d, NeuroImage (2015)\n111, 85-99.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"dki-signal\">\n<h3>dki_signal<a class=\"headerlink\" href=\"#dki-signal\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.dki_signal\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">dki_signal</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">kt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">S0</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">150</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">snr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.dki_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulated signal based on the diffusion and diffusion kurtosis\ntensors of a single voxel. Simulations are performed assuming the DKI\nmodel.</p>\n<section id=\"id62\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id62\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>gtab<span class=\"classifier\">GradientTable</span></dt><dd><p>Measurement directions.</p>\n</dd>\n<dt>dt<span class=\"classifier\">(6,) ndarray</span></dt><dd><p>Elements of the diffusion tensor.</p>\n</dd>\n<dt>kt<span class=\"classifier\">(15, ) ndarray</span></dt><dd><p>Elements of the diffusion kurtosis tensor.</p>\n</dd>\n<dt>S0<span class=\"classifier\">float (optional)</span></dt><dd><p>Strength of signal in the presence of no diffusion gradient.</p>\n</dd>\n<dt>snr<span class=\"classifier\">float (optional)</span></dt><dd><p>Signal to noise ratio, assuming Rician noise.  None implies no noise.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id63\">\n<h4>Returns<a class=\"headerlink\" href=\"#id63\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>S<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>Simulated signal based on the DKI model:</p>\n</dd>\n</dl>\n<div class=\"math notranslate nohighlight\">\n\\[S=S_{0}e^{-bD+\\frac{1}{6}b^{2}D^{2}K}\\]</div>\n</section>\n<section id=\"id64\">\n<h4>References<a class=\"headerlink\" href=\"#id64\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id65\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>R. Neto Henriques et al., \u201cExploring the 3D geometry of the\ndiffusion kurtosis tensor - Impact on the development of robust\ntractography procedures and novel biomarkers\u201d, NeuroImage (2015)\n111, 85-99.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"single-tensor-odf\">\n<h3>single_tensor_odf<a class=\"headerlink\" href=\"#single-tensor-odf\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.single_tensor_odf\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">single_tensor_odf</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">r</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evecs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.single_tensor_odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulated ODF with a single tensor.</p>\n<section id=\"id66\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id66\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>r<span class=\"classifier\">(N,3) or (M,N,3) ndarray</span></dt><dd><p>Measurement positions in (x, y, z), either as a list or on a grid.</p>\n</dd>\n<dt>evals<span class=\"classifier\">(3,)</span></dt><dd><p>Eigenvalues of diffusion tensor.  By default, use values typical for\nprolate white matter.</p>\n</dd>\n<dt>evecs<span class=\"classifier\">(3, 3) ndarray</span></dt><dd><p>Eigenvectors of the tensor, written column-wise.  You can also think\nof these as the rotation matrix that determines the orientation of\nthe diffusion tensor.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id67\">\n<h4>Returns<a class=\"headerlink\" href=\"#id67\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ODF<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>The diffusion probability at <code class=\"docutils literal notranslate\"><span class=\"pre\">r</span></code> after time <code class=\"docutils literal notranslate\"><span class=\"pre\">tau</span></code>.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id68\">\n<h4>References<a class=\"headerlink\" href=\"#id68\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id69\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Aganj et al., \u201cReconstruction of the Orientation Distribution\nFunction in Single- and Multiple-Shell q-Ball Imaging Within\nConstant Solid Angle\u201d, Magnetic Resonance in Medicine, nr. 64,\npp. 554\u2013566, 2010.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"all-tensor-evecs\">\n<h3>all_tensor_evecs<a class=\"headerlink\" href=\"#all-tensor-evecs\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.all_tensor_evecs\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">all_tensor_evecs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">e0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.all_tensor_evecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given the principle tensor axis, return the array of all\neigenvectors column-wise (or, the rotation matrix that orientates the\ntensor).</p>\n<section id=\"id70\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id70\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>e0<span class=\"classifier\">(3,) ndarray</span></dt><dd><p>Principle tensor axis.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id71\">\n<h4>Returns<a class=\"headerlink\" href=\"#id71\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>evecs<span class=\"classifier\">(3,3) ndarray</span></dt><dd><p>Tensor eigenvectors, arranged column-wise.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"multi-tensor-odf\">\n<h3>multi_tensor_odf<a class=\"headerlink\" href=\"#multi-tensor-odf\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.multi_tensor_odf\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">multi_tensor_odf</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">odf_verts</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mevals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angles</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fractions</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.multi_tensor_odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate a Multi-Tensor ODF.</p>\n<section id=\"id72\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id72\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>odf_verts<span class=\"classifier\">(N,3) ndarray</span></dt><dd><p>Vertices of the reconstruction sphere.</p>\n</dd>\n<dt>mevals<span class=\"classifier\">sequence of 1D arrays,</span></dt><dd><p>Eigen-values for each tensor.</p>\n</dd>\n<dt>angles<span class=\"classifier\">sequence of 2d tuples,</span></dt><dd><p>Sequence of principal directions for each tensor in polar angles\nor cartesian unit coordinates.</p>\n</dd>\n<dt>fractions<span class=\"classifier\">sequence of floats,</span></dt><dd><p>Percentages of the fractions for each tensor.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id73\">\n<h4>Returns<a class=\"headerlink\" href=\"#id73\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ODF<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>Orientation distribution function.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id74\">\n<h4>Examples<a class=\"headerlink\" href=\"#id74\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Simulate a MultiTensor ODF with two peaks and calculate its exact ODF.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.sims.voxel</span> <span class=\"kn\">import</span> <span class=\"n\">multi_tensor_odf</span><span class=\"p\">,</span> <span class=\"n\">all_tensor_evecs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">default_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">default_sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">default_sphere</span><span class=\"o\">.</span><span class=\"n\">faces</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mevals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(([</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">],[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">]))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angles</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">odf</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor_odf</span><span class=\"p\">(</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">mevals</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"single-tensor-rtop\">\n<h3>single_tensor_rtop<a class=\"headerlink\" href=\"#single-tensor-rtop\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.single_tensor_rtop\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">single_tensor_rtop</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tau</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.025330295910584444</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.single_tensor_rtop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate a Single-Tensor rtop.</p>\n<section id=\"id75\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id75\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>evals<span class=\"classifier\">1D arrays,</span></dt><dd><p>Eigen-values for the tensor.  By default, values typical for prolate\nwhite matter are used.</p>\n</dd>\n<dt>tau<span class=\"classifier\">float,</span></dt><dd><p>diffusion time. By default the value that makes q=sqrt(b).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id76\">\n<h4>Returns<a class=\"headerlink\" href=\"#id76\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>rtop<span class=\"classifier\">float,</span></dt><dd><p>Return to origin probability.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id77\">\n<h4>References<a class=\"headerlink\" href=\"#id77\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id78\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Cheng J., \u201cEstimation and Processing of Ensemble Average Propagator\nand Its Features in Diffusion MRI\u201d, PhD Thesis, 2012.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"multi-tensor-rtop\">\n<h3>multi_tensor_rtop<a class=\"headerlink\" href=\"#multi-tensor-rtop\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.multi_tensor_rtop\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">multi_tensor_rtop</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mevals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tau</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.025330295910584444</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.multi_tensor_rtop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate a Multi-Tensor rtop.</p>\n<section id=\"id79\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id79\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>mf<span class=\"classifier\">sequence of floats, bounded [0,1]</span></dt><dd><p>Percentages of the fractions for each tensor.</p>\n</dd>\n<dt>mevals<span class=\"classifier\">sequence of 1D arrays,</span></dt><dd><p>Eigen-values for each tensor.  By default, values typical for prolate\nwhite matter are used.</p>\n</dd>\n<dt>tau<span class=\"classifier\">float,</span></dt><dd><p>diffusion time. By default the value that makes q=sqrt(b).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id80\">\n<h4>Returns<a class=\"headerlink\" href=\"#id80\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>rtop<span class=\"classifier\">float,</span></dt><dd><p>Return to origin probability.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id81\">\n<h4>References<a class=\"headerlink\" href=\"#id81\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id82\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Cheng J., \u201cEstimation and Processing of Ensemble Average Propagator\nand Its Features in Diffusion MRI\u201d, PhD Thesis, 2012.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"single-tensor-pdf\">\n<h3>single_tensor_pdf<a class=\"headerlink\" href=\"#single-tensor-pdf\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.single_tensor_pdf\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">single_tensor_pdf</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">r</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evecs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tau</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.025330295910584444</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.single_tensor_pdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulated ODF with a single tensor.</p>\n<section id=\"id83\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id83\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>r<span class=\"classifier\">(N,3) or (M,N,3) ndarray</span></dt><dd><p>Measurement positions in (x, y, z), either as a list or on a grid.</p>\n</dd>\n<dt>evals<span class=\"classifier\">(3,)</span></dt><dd><p>Eigenvalues of diffusion tensor.  By default, use values typical for\nprolate white matter.</p>\n</dd>\n<dt>evecs<span class=\"classifier\">(3, 3) ndarray</span></dt><dd><p>Eigenvectors of the tensor.  You can also think of these as the\nrotation matrix that determines the orientation of the diffusion\ntensor.</p>\n</dd>\n<dt>tau<span class=\"classifier\">float,</span></dt><dd><p>diffusion time. By default the value that makes q=sqrt(b).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id84\">\n<h4>Returns<a class=\"headerlink\" href=\"#id84\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>pdf<span class=\"classifier\">(N,) ndarray</span></dt><dd><p>The diffusion probability at <code class=\"docutils literal notranslate\"><span class=\"pre\">r</span></code> after time <code class=\"docutils literal notranslate\"><span class=\"pre\">tau</span></code>.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id85\">\n<h4>References<a class=\"headerlink\" href=\"#id85\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id86\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Cheng J., \u201cEstimation and Processing of Ensemble Average Propagator\nand Its Features in Diffusion MRI\u201d, PhD Thesis, 2012.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"multi-tensor-pdf\">\n<h3>multi_tensor_pdf<a class=\"headerlink\" href=\"#multi-tensor-pdf\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.multi_tensor_pdf\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">multi_tensor_pdf</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pdf_points</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mevals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angles</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fractions</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tau</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.025330295910584444</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.multi_tensor_pdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate a Multi-Tensor ODF.</p>\n<section id=\"id87\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id87\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>pdf_points<span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Points to evaluate the PDF.</p>\n</dd>\n<dt>mevals<span class=\"classifier\">sequence of 1D arrays,</span></dt><dd><p>Eigen-values for each tensor.  By default, values typical for prolate\nwhite matter are used.</p>\n</dd>\n<dt>angles<span class=\"classifier\">sequence,</span></dt><dd><p>Sequence of principal directions for each tensor in polar angles\nor cartesian unit coordinates.</p>\n</dd>\n<dt>fractions<span class=\"classifier\">sequence of floats,</span></dt><dd><p>Percentages of the fractions for each tensor.</p>\n</dd>\n<dt>tau<span class=\"classifier\">float,</span></dt><dd><p>diffusion time. By default the value that makes q=sqrt(b).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id88\">\n<h4>Returns<a class=\"headerlink\" href=\"#id88\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>pdf<span class=\"classifier\">(N,) ndarray,</span></dt><dd><p>Probability density function of the water displacement.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id89\">\n<h4>References<a class=\"headerlink\" href=\"#id89\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id90\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Cheng J., \u201cEstimation and Processing of Ensemble Average Propagator\nand its Features in Diffusion MRI\u201d, PhD Thesis, 2012.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"single-tensor-msd\">\n<h3>single_tensor_msd<a class=\"headerlink\" href=\"#single-tensor-msd\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.single_tensor_msd\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">single_tensor_msd</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tau</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.025330295910584444</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.single_tensor_msd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate a Multi-Tensor rtop.</p>\n<section id=\"id91\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id91\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>evals<span class=\"classifier\">1D arrays,</span></dt><dd><p>Eigen-values for the tensor.  By default, values typical for prolate\nwhite matter are used.</p>\n</dd>\n<dt>tau<span class=\"classifier\">float,</span></dt><dd><p>diffusion time. By default the value that makes q=sqrt(b).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id92\">\n<h4>Returns<a class=\"headerlink\" href=\"#id92\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>msd<span class=\"classifier\">float,</span></dt><dd><p>Mean square displacement.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id93\">\n<h4>References<a class=\"headerlink\" href=\"#id93\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id94\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Cheng J., \u201cEstimation and Processing of Ensemble Average Propagator\nand Its Features in Diffusion MRI\u201d, PhD Thesis, 2012.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"multi-tensor-msd\">\n<h3>multi_tensor_msd<a class=\"headerlink\" href=\"#multi-tensor-msd\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.sims.voxel.multi_tensor_msd\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.sims.voxel.</span></span><span class=\"sig-name descname\"><span class=\"pre\">multi_tensor_msd</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mevals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tau</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.025330295910584444</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.sims.voxel.multi_tensor_msd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulate a Multi-Tensor rtop.</p>\n<section id=\"id95\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id95\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>mf<span class=\"classifier\">sequence of floats, bounded [0,1]</span></dt><dd><p>Percentages of the fractions for each tensor.</p>\n</dd>\n<dt>mevals<span class=\"classifier\">sequence of 1D arrays,</span></dt><dd><p>Eigen-values for each tensor.  By default, values typical for prolate\nwhite matter are used.</p>\n</dd>\n<dt>tau<span class=\"classifier\">float,</span></dt><dd><p>diffusion time. By default the value that makes q=sqrt(b).</p>\n</dd>\n</dl>\n</section>\n<section id=\"id96\">\n<h4>Returns<a class=\"headerlink\" href=\"#id96\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>msd<span class=\"classifier\">float,</span></dt><dd><p>Mean square displacement.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id97\">\n<h4>References<a class=\"headerlink\" href=\"#id97\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id98\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Cheng J., \u201cEstimation and Processing of Ensemble Average Propagator\nand Its Features in Diffusion MRI\u201d, PhD Thesis, 2012.</p>\n</aside>\n</aside>\n</section>\n</dd></dl>\n\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.stats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "N", "next"], ["reference/dipy.segment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>", "P", "previous"]], "sourcename": "reference/dipy.sims.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.sims.phantom\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims.phantom</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.sims.voxel\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims.voxel</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#add-noise\">add_noise</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.phantom.add_noise\"><code class=\"docutils literal notranslate\"><span class=\"pre\">add_noise()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#diff2eigenvectors\">diff2eigenvectors</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.phantom.diff2eigenvectors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">diff2eigenvectors()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#orbital-phantom\">orbital_phantom</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.phantom.orbital_phantom\"><code class=\"docutils literal notranslate\"><span class=\"pre\">orbital_phantom()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#diffusion-evals\">diffusion_evals</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.diffusion_evals\"><code class=\"docutils literal notranslate\"><span class=\"pre\">diffusion_evals()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id14\">add_noise</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.add_noise\"><code class=\"docutils literal notranslate\"><span class=\"pre\">add_noise()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sticks-and-ball\">sticks_and_ball</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.sticks_and_ball\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sticks_and_ball()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#callaghan-perpendicular\">callaghan_perpendicular</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.callaghan_perpendicular\"><code class=\"docutils literal notranslate\"><span class=\"pre\">callaghan_perpendicular()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#gaussian-parallel\">gaussian_parallel</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.gaussian_parallel\"><code class=\"docutils literal notranslate\"><span class=\"pre\">gaussian_parallel()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#cylinders-and-ball-soderman\">cylinders_and_ball_soderman</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.cylinders_and_ball_soderman\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cylinders_and_ball_soderman()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#single-tensor\">single_tensor</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor\"><code class=\"docutils literal notranslate\"><span class=\"pre\">single_tensor()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#multi-tensor\">multi_tensor</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multi_tensor()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#multi-tensor-dki\">multi_tensor_dki</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_dki\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multi_tensor_dki()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#kurtosis-element\">kurtosis_element</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.kurtosis_element\"><code class=\"docutils literal notranslate\"><span class=\"pre\">kurtosis_element()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dki-signal\">dki_signal</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.dki_signal\"><code class=\"docutils literal notranslate\"><span class=\"pre\">dki_signal()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#single-tensor-odf\">single_tensor_odf</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor_odf\"><code class=\"docutils literal notranslate\"><span class=\"pre\">single_tensor_odf()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#all-tensor-evecs\">all_tensor_evecs</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.all_tensor_evecs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">all_tensor_evecs()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#multi-tensor-odf\">multi_tensor_odf</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_odf\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multi_tensor_odf()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#single-tensor-rtop\">single_tensor_rtop</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor_rtop\"><code class=\"docutils literal notranslate\"><span class=\"pre\">single_tensor_rtop()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#multi-tensor-rtop\">multi_tensor_rtop</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_rtop\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multi_tensor_rtop()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#single-tensor-pdf\">single_tensor_pdf</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor_pdf\"><code class=\"docutils literal notranslate\"><span class=\"pre\">single_tensor_pdf()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#multi-tensor-pdf\">multi_tensor_pdf</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_pdf\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multi_tensor_pdf()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#single-tensor-msd\">single_tensor_msd</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.single_tensor_msd\"><code class=\"docutils literal notranslate\"><span class=\"pre\">single_tensor_msd()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#multi-tensor-msd\">multi_tensor_msd</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.sims.voxel.multi_tensor_msd\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multi_tensor_msd()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.sims", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}