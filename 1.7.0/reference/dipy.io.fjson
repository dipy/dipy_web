{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.direction/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>"}, "next": {"link": "../dipy.nn/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "meta": {}, "body": "<section id=\"module-dipy.io\">\n<span id=\"io\"></span><h1><a class=\"reference external\" href=\"https://docs.python.org/3/library/io.html#module-io\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code></a><a class=\"headerlink\" href=\"#module-dipy.io\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n<section id=\"module-dipy.io.bvectxt\">\n<span id=\"module-io-bvectxt\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.bvectxt</span></code><a class=\"headerlink\" href=\"#module-dipy.io.bvectxt\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.bvectxt.read_bvec_file\" title=\"dipy.io.bvectxt.read_bvec_file\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">read_bvec_file</span></code></a>(filename[,\u00a0atol])</p></td>\n<td><p>dipy.io.bvectxt module is deprecated, Please use dipy.core.gradients module instead</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.bvectxt.ornt_mapping\" title=\"dipy.io.bvectxt.ornt_mapping\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ornt_mapping</span></code></a>(ornt1,\u00a0ornt2)</p></td>\n<td><p>Calculate the mapping needing to get from orn1 to orn2.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.bvectxt.reorient_vectors\" title=\"dipy.io.bvectxt.reorient_vectors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reorient_vectors</span></code></a>(bvecs,\u00a0current_ornt,\u00a0new_ornt)</p></td>\n<td><p>Change the orientation of gradients or other vectors.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.bvectxt.reorient_on_axis\" title=\"dipy.io.bvectxt.reorient_on_axis\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reorient_on_axis</span></code></a>(bvecs,\u00a0current_ornt,\u00a0new_ornt)</p></td>\n<td><p>dipy.io.bvectxt module is deprecated, Please use dipy.core.gradients module instead</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.bvectxt.orientation_from_string\" title=\"dipy.io.bvectxt.orientation_from_string\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">orientation_from_string</span></code></a>(string_ornt)</p></td>\n<td><p>Return an array representation of an ornt string.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.bvectxt.orientation_to_string\" title=\"dipy.io.bvectxt.orientation_to_string\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">orientation_to_string</span></code></a>(ornt)</p></td>\n<td><p>Return a string representation of a 3d ornt.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.io.dpy\">\n<span id=\"module-io-dpy\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.dpy</span></code><a class=\"headerlink\" href=\"#module-dipy.io.dpy\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>A class for handling large tractography datasets.</p>\n<p>It is built using the h5py which in turn implement\nkey features of the HDF5 (hierarchical data format) API <a class=\"footnote-reference brackets\" href=\"#id2\" id=\"id1\" role=\"doc-noteref\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></a>.</p>\n<section id=\"references\">\n<h3>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id2\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id1\">1</a><span class=\"fn-bracket\">]</span></span>\n<p><a class=\"reference external\" href=\"http://www.hdfgroup.org/HDF5/doc/H5.intro.html\">http://www.hdfgroup.org/HDF5/doc/H5.intro.html</a></p>\n</aside>\n</aside>\n</section>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy\" title=\"dipy.io.dpy.Dpy\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Dpy</span></code></a>(fname[,\u00a0mode,\u00a0compression])</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.io.gradients\">\n<span id=\"module-io-gradients\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.gradients</span></code><a class=\"headerlink\" href=\"#module-dipy.io.gradients\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.gradients.read_bvals_bvecs\" title=\"dipy.io.gradients.read_bvals_bvecs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">read_bvals_bvecs</span></code></a>(fbvals,\u00a0fbvecs)</p></td>\n<td><p>Read b-values and b-vectors from disk.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.io.image\">\n<span id=\"module-io-image\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.image</span></code><a class=\"headerlink\" href=\"#module-dipy.io.image\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.image.load_nifti_data\" title=\"dipy.io.image.load_nifti_data\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_nifti_data</span></code></a>(fname[,\u00a0as_ndarray])</p></td>\n<td><p>Load only the data array from a nifti file.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.image.load_nifti\" title=\"dipy.io.image.load_nifti\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_nifti</span></code></a>(fname[,\u00a0return_img,\u00a0...])</p></td>\n<td><p>Load data and other information from a nifti file.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.image.save_nifti\" title=\"dipy.io.image.save_nifti\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_nifti</span></code></a>(fname,\u00a0data,\u00a0affine[,\u00a0hdr,\u00a0dtype])</p></td>\n<td><p>Save a data array into a nifti file.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.image.save_qa_metric\" title=\"dipy.io.image.save_qa_metric\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_qa_metric</span></code></a>(fname,\u00a0xopt,\u00a0fopt)</p></td>\n<td><p>Save Quality Assurance metrics.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.io.peaks\">\n<span id=\"module-io-peaks\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.peaks</span></code><a class=\"headerlink\" href=\"#module-dipy.io.peaks\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.peaks.load_peaks\" title=\"dipy.io.peaks.load_peaks\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_peaks</span></code></a>(fname[,\u00a0verbose])</p></td>\n<td><p>Load a PeaksAndMetrics HDF5 file (PAM5)</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.peaks.save_peaks\" title=\"dipy.io.peaks.save_peaks\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_peaks</span></code></a>(fname,\u00a0pam[,\u00a0affine,\u00a0verbose])</p></td>\n<td><p>Save all important attributes of object PeaksAndMetrics in a PAM5 file (HDF5).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.peaks.peaks_to_niftis\" title=\"dipy.io.peaks.peaks_to_niftis\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peaks_to_niftis</span></code></a>(pam,\u00a0fname_shm,\u00a0fname_dirs,\u00a0...)</p></td>\n<td><p>Save SH, directions, indices and values of peaks to Nifti.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.io.pickles\">\n<span id=\"module-io-pickles\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.pickles</span></code><a class=\"headerlink\" href=\"#module-dipy.io.pickles\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Load and save pickles</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.pickles.save_pickle\" title=\"dipy.io.pickles.save_pickle\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_pickle</span></code></a>(fname,\u00a0dix)</p></td>\n<td><p>Save <cite>dix</cite> to <cite>fname</cite> as pickle.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.pickles.load_pickle\" title=\"dipy.io.pickles.load_pickle\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_pickle</span></code></a>(fname)</p></td>\n<td><p>Load object from pickle file <cite>fname</cite>.</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.io.stateful_tractogram\">\n<span id=\"module-io-stateful-tractogram\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.stateful_tractogram</span></code><a class=\"headerlink\" href=\"#module-dipy.io.stateful_tractogram\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Space\" title=\"dipy.io.stateful_tractogram.Space\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Space</span></code></a>(value)</p></td>\n<td><p>Enum to simplify future change to convention</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Origin\" title=\"dipy.io.stateful_tractogram.Origin\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Origin</span></code></a>(value)</p></td>\n<td><p>Enum to simplify future change to convention</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram\" title=\"dipy.io.stateful_tractogram.StatefulTractogram\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">StatefulTractogram</span></code></a>(streamlines,\u00a0reference,\u00a0space)</p></td>\n<td><p>Class for stateful representation of collections of streamlines Object designed to be identical no matter the file format (trk, tck, vtk, fib, dpy).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.logger\" title=\"dipy.io.stateful_tractogram.logger\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">logger</span></code></a></p></td>\n<td><p>Instances of the Logger class represent a single logging channel.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.set_sft_logger_level\" title=\"dipy.io.stateful_tractogram.set_sft_logger_level\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_sft_logger_level</span></code></a>(log_level)</p></td>\n<td><p>Change the logger of the StatefulTractogram to one on the following: DEBUG, INFO, WARNING, CRITICAL, ERROR</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.io.streamline\">\n<span id=\"module-io-streamline\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.streamline</span></code><a class=\"headerlink\" href=\"#module-dipy.io.streamline\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.save_tractogram\" title=\"dipy.io.streamline.save_tractogram\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_tractogram</span></code></a>(sft,\u00a0filename[,\u00a0...])</p></td>\n<td><p>Save the stateful tractogram in any format (trk/tck/vtk/vtp/fib/dpy)</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.load_tractogram\" title=\"dipy.io.streamline.load_tractogram\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_tractogram</span></code></a>(filename,\u00a0reference[,\u00a0...])</p></td>\n<td><p>Load the stateful tractogram from any format (trk/tck/vtk/vtp/fib/dpy)</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.load_generator\" title=\"dipy.io.streamline.load_generator\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_generator</span></code></a>(ttype)</p></td>\n<td><p>Generate a loading function that performs a file extension check to restrict the user to a single file format.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.save_generator\" title=\"dipy.io.streamline.save_generator\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_generator</span></code></a>(ttype)</p></td>\n<td><p>Generate a saving function that performs a file extension check to restrict the user to a single file format.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.load_trk\" title=\"dipy.io.streamline.load_trk\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_trk</span></code></a>(filename,\u00a0reference[,\u00a0to_space,\u00a0...])</p></td>\n<td><p>Load the stateful tractogram of the .trk format</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.load_tck\" title=\"dipy.io.streamline.load_tck\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_tck</span></code></a>(filename,\u00a0reference[,\u00a0to_space,\u00a0...])</p></td>\n<td><p>Load the stateful tractogram of the .tck format</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.load_vtk\" title=\"dipy.io.streamline.load_vtk\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_vtk</span></code></a>(filename,\u00a0reference[,\u00a0to_space,\u00a0...])</p></td>\n<td><p>Load the stateful tractogram of the .vtk format</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.load_vtp\" title=\"dipy.io.streamline.load_vtp\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_vtp</span></code></a>(filename,\u00a0reference[,\u00a0to_space,\u00a0...])</p></td>\n<td><p>Load the stateful tractogram of the .vtp format</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.load_fib\" title=\"dipy.io.streamline.load_fib\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_fib</span></code></a>(filename,\u00a0reference[,\u00a0to_space,\u00a0...])</p></td>\n<td><p>Load the stateful tractogram of the .fib format</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.load_dpy\" title=\"dipy.io.streamline.load_dpy\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_dpy</span></code></a>(filename,\u00a0reference[,\u00a0to_space,\u00a0...])</p></td>\n<td><p>Load the stateful tractogram of the .dpy format</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.save_trk\" title=\"dipy.io.streamline.save_trk\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_trk</span></code></a>(sft,\u00a0filename[,\u00a0bbox_valid_check])</p></td>\n<td><p>Save the stateful tractogram of the .trk format</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.save_tck\" title=\"dipy.io.streamline.save_tck\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_tck</span></code></a>(sft,\u00a0filename[,\u00a0bbox_valid_check])</p></td>\n<td><p>Save the stateful tractogram of the .tck format</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.save_vtk\" title=\"dipy.io.streamline.save_vtk\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_vtk</span></code></a>(sft,\u00a0filename[,\u00a0bbox_valid_check])</p></td>\n<td><p>Save the stateful tractogram of the .vtk format</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.save_vtp\" title=\"dipy.io.streamline.save_vtp\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_vtp</span></code></a>(sft,\u00a0filename[,\u00a0bbox_valid_check])</p></td>\n<td><p>Save the stateful tractogram of the .vtp format</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.save_fib\" title=\"dipy.io.streamline.save_fib\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_fib</span></code></a>(sft,\u00a0filename[,\u00a0bbox_valid_check])</p></td>\n<td><p>Save the stateful tractogram of the .fib format</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.streamline.save_dpy\" title=\"dipy.io.streamline.save_dpy\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_dpy</span></code></a>(sft,\u00a0filename[,\u00a0bbox_valid_check])</p></td>\n<td><p>Save the stateful tractogram of the .dpy format</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.io.utils\">\n<span id=\"module-io-utils\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.utils</span></code><a class=\"headerlink\" href=\"#module-dipy.io.utils\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Utility functions for file formats</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.nifti1_symmat\" title=\"dipy.io.utils.nifti1_symmat\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">nifti1_symmat</span></code></a>(image_data,\u00a0*args,\u00a0**kwargs)</p></td>\n<td><p>Returns a Nifti1Image with a symmetric matrix intent</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.make5d\" title=\"dipy.io.utils.make5d\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">make5d</span></code></a>(data)</p></td>\n<td><p>reshapes the input to have 5 dimensions, adds extra dimensions just before the last dimension</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.decfa\" title=\"dipy.io.utils.decfa\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">decfa</span></code></a>(img_orig[,\u00a0scale])</p></td>\n<td><p>Create a nifti-compliant directional-encoded color FA image.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.decfa_to_float\" title=\"dipy.io.utils.decfa_to_float\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">decfa_to_float</span></code></a>(img_orig)</p></td>\n<td><p>Convert a nifti-compliant directional-encoded color FA image into a nifti image with RGB encoded in floating point resolution.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.is_reference_info_valid\" title=\"dipy.io.utils.is_reference_info_valid\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_reference_info_valid</span></code></a>(affine,\u00a0dimensions,\u00a0...)</p></td>\n<td><p>Validate basic data type and value of spatial attribute.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.get_reference_info\" title=\"dipy.io.utils.get_reference_info\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_reference_info</span></code></a>(reference)</p></td>\n<td><p>Will compare the spatial attribute of 2 references</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.is_header_compatible\" title=\"dipy.io.utils.is_header_compatible\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_header_compatible</span></code></a>(reference_1,\u00a0reference_2)</p></td>\n<td><p>Will compare the spatial attribute of 2 references</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.create_tractogram_header\" title=\"dipy.io.utils.create_tractogram_header\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">create_tractogram_header</span></code></a>(tractogram_type,\u00a0...)</p></td>\n<td><p>Write a standard trk/tck header from spatial attribute</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.create_nifti_header\" title=\"dipy.io.utils.create_nifti_header\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">create_nifti_header</span></code></a>(affine,\u00a0dimensions,\u00a0...)</p></td>\n<td><p>Write a standard nifti header from spatial attribute</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.save_buan_profiles_hdf5\" title=\"dipy.io.utils.save_buan_profiles_hdf5\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_buan_profiles_hdf5</span></code></a>(fname,\u00a0dt)</p></td>\n<td><p>Saves the given input dataframe to .h5 file</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.utils.read_img_arr_or_path\" title=\"dipy.io.utils.read_img_arr_or_path\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">read_img_arr_or_path</span></code></a>(data[,\u00a0affine])</p></td>\n<td><p>Helper function that handles inputs that can be paths, nifti img or arrays</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.io.vtk\">\n<span id=\"module-io-vtk\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.vtk</span></code><a class=\"headerlink\" href=\"#module-dipy.io.vtk\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.vtk.load_polydata\" title=\"dipy.io.vtk.load_polydata\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_polydata</span></code></a>(file_name)</p></td>\n<td><p>Load a vtk polydata to a supported format file.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.vtk.save_polydata\" title=\"dipy.io.vtk.save_polydata\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_polydata</span></code></a>(polydata,\u00a0file_name[,\u00a0binary,\u00a0...])</p></td>\n<td><p>Save a vtk polydata to a supported format file.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.io.vtk.save_vtk_streamlines\" title=\"dipy.io.vtk.save_vtk_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_vtk_streamlines</span></code></a>(streamlines,\u00a0filename)</p></td>\n<td><p>Save streamlines as vtk polydata to a supported format file.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.io.vtk.load_vtk_streamlines\" title=\"dipy.io.vtk.load_vtk_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_vtk_streamlines</span></code></a>(filename[,\u00a0to_lps])</p></td>\n<td><p>Load streamlines from vtk polydata.</p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"read-bvec-file\">\n<h3>read_bvec_file<a class=\"headerlink\" href=\"#read-bvec-file\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.bvectxt.read_bvec_file\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.bvectxt.</span></span><span class=\"sig-name descname\"><span class=\"pre\">read_bvec_file</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">atol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.001</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.bvectxt.read_bvec_file\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>dipy.io.bvectxt module is deprecated, Please use dipy.core.gradients module instead</p>\n<ul class=\"simple\">\n<li><p>deprecated from version: 1.4</p></li>\n<li><p>Raises &lt;class \u2018dipy.utils.deprecator.ExpiredDeprecationError\u2019&gt; as of version: 1.5</p></li>\n</ul>\n<p>Read gradient table information from a pair of files with extensions\n.bvec and .bval. The bval file should have one row of values\nrepresenting the bvalues of each volume in the dwi data set. The bvec\nfile should have three rows, where the rows are the x, y, and z\ncomponents of the normalized gradient direction for each of the\nvolumes.</p>\n<section id=\"parameters\">\n<h4>Parameters<a class=\"headerlink\" href=\"#parameters\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>filename :</dt><dd><p>The path to the either the bvec or bval file</p>\n</dd>\n<dt>atol<span class=\"classifier\">float, optional</span></dt><dd><p>The tolerance used to check all the gradient directions are\nnormalized. Default is .001</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"ornt-mapping\">\n<h3>ornt_mapping<a class=\"headerlink\" href=\"#ornt-mapping\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.bvectxt.ornt_mapping\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.bvectxt.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ornt_mapping</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ornt1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ornt2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.bvectxt.ornt_mapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the mapping needing to get from orn1 to orn2.</p>\n<p>dipy.io.bvectxt module is deprecated, Please use dipy.core.gradients module instead</p>\n<ul class=\"simple\">\n<li><p>deprecated from version: 1.4</p></li>\n<li><p>Raises &lt;class \u2018dipy.utils.deprecator.ExpiredDeprecationError\u2019&gt; as of version: 1.5</p></li>\n</ul>\n</dd></dl>\n\n</section>\n<section id=\"reorient-vectors\">\n<h3>reorient_vectors<a class=\"headerlink\" href=\"#reorient-vectors\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.bvectxt.reorient_vectors\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.bvectxt.</span></span><span class=\"sig-name descname\"><span class=\"pre\">reorient_vectors</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">current_ornt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_ornt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.bvectxt.reorient_vectors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Change the orientation of gradients or other vectors.</p>\n<p>dipy.io.bvectxt module is deprecated, Please use dipy.core.gradients module instead</p>\n<ul class=\"simple\">\n<li><p>deprecated from version: 1.4</p></li>\n<li><p>Raises &lt;class \u2018dipy.utils.deprecator.ExpiredDeprecationError\u2019&gt; as of version: 1.5</p></li>\n</ul>\n<p>Moves vectors, storted along axis, from current_ornt to new_ornt. For\nexample the vector [x, y, z] in \u201cRAS\u201d will be [-x, -y, z] in \u201cLPS\u201d.</p>\n<p>R: Right\nA: Anterior\nS: Superior\nL: Left\nP: Posterior\nI: Inferior</p>\n</dd></dl>\n\n</section>\n<section id=\"reorient-on-axis\">\n<h3>reorient_on_axis<a class=\"headerlink\" href=\"#reorient-on-axis\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.bvectxt.reorient_on_axis\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.bvectxt.</span></span><span class=\"sig-name descname\"><span class=\"pre\">reorient_on_axis</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvecs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">current_ornt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_ornt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.bvectxt.reorient_on_axis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>dipy.io.bvectxt module is deprecated, Please use dipy.core.gradients module instead</p>\n<ul class=\"simple\">\n<li><p>deprecated from version: 1.4</p></li>\n<li><p>Raises &lt;class \u2018dipy.utils.deprecator.ExpiredDeprecationError\u2019&gt; as of version: 1.5</p></li>\n</ul>\n</dd></dl>\n\n</section>\n<section id=\"orientation-from-string\">\n<h3>orientation_from_string<a class=\"headerlink\" href=\"#orientation-from-string\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.bvectxt.orientation_from_string\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.bvectxt.</span></span><span class=\"sig-name descname\"><span class=\"pre\">orientation_from_string</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">string_ornt</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.bvectxt.orientation_from_string\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return an array representation of an ornt string.</p>\n<p>dipy.io.bvectxt module is deprecated, Please use dipy.core.gradients module instead</p>\n<ul class=\"simple\">\n<li><p>deprecated from version: 1.4</p></li>\n<li><p>Raises &lt;class \u2018dipy.utils.deprecator.ExpiredDeprecationError\u2019&gt; as of version: 1.5</p></li>\n</ul>\n</dd></dl>\n\n</section>\n<section id=\"orientation-to-string\">\n<h3>orientation_to_string<a class=\"headerlink\" href=\"#orientation-to-string\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.bvectxt.orientation_to_string\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.bvectxt.</span></span><span class=\"sig-name descname\"><span class=\"pre\">orientation_to_string</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ornt</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.bvectxt.orientation_to_string\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a string representation of a 3d ornt.</p>\n<p>dipy.io.bvectxt module is deprecated, Please use dipy.core.gradients module instead</p>\n<ul class=\"simple\">\n<li><p>deprecated from version: 1.4</p></li>\n<li><p>Raises &lt;class \u2018dipy.utils.deprecator.ExpiredDeprecationError\u2019&gt; as of version: 1.5</p></li>\n</ul>\n</dd></dl>\n\n</section>\n<section id=\"dpy\">\n<h3><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy\" title=\"dipy.io.dpy.Dpy\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dpy</span></code></a><a class=\"headerlink\" href=\"#dpy\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.dpy.Dpy\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.dpy.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Dpy</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'r'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compression</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.dpy.Dpy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.dpy.Dpy.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'r'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compression</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.dpy.Dpy.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Advanced storage system for tractography based on HDF5</p>\n<section id=\"id3\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>fname : str, full filename\nmode : \u2018r\u2019 read</p>\n<blockquote>\n<div><p>\u2018w\u2019 write\n\u2018r+\u2019 read and write only if file already exists</p>\n</div></blockquote>\n<p>compression : 0 no compression to 9 maximum compression</p>\n</section>\n<section id=\"examples\">\n<h4>Examples<a class=\"headerlink\" href=\"#examples\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">tempfile</span> <span class=\"kn\">import</span> <span class=\"n\">mkstemp</span> <span class=\"c1\">#temp file</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.io.dpy</span> <span class=\"kn\">import</span> <span class=\"n\">Dpy</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">dpy_example</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>    <span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">mkstemp</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">fname</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;.dpy&#39;</span><span class=\"c1\">#add correct extension</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpw</span> <span class=\"o\">=</span> <span class=\"n\">Dpy</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">,</span><span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">A</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span>    <span class=\"n\">B</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">C</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpw</span><span class=\"o\">.</span><span class=\"n\">write_track</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpw</span><span class=\"o\">.</span><span class=\"n\">write_track</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpw</span><span class=\"o\">.</span><span class=\"n\">write_track</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpw</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpr</span> <span class=\"o\">=</span> <span class=\"n\">Dpy</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">,</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpr</span><span class=\"o\">.</span><span class=\"n\">read_track</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpr</span><span class=\"o\">.</span><span class=\"n\">read_track</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpr</span><span class=\"o\">.</span><span class=\"n\">read_tracksi</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">... </span>    <span class=\"n\">dpr</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">)</span> <span class=\"c1\">#delete file from disk</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpy_example</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</section>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.dpy.Dpy.close\">\n<span class=\"sig-name descname\"><span class=\"pre\">close</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.dpy.Dpy.close\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.dpy.Dpy.read_track\">\n<span class=\"sig-name descname\"><span class=\"pre\">read_track</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.dpy.Dpy.read_track\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>read one track each time</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.dpy.Dpy.read_tracks\">\n<span class=\"sig-name descname\"><span class=\"pre\">read_tracks</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.dpy.Dpy.read_tracks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>read the entire tractography</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.dpy.Dpy.read_tracksi\">\n<span class=\"sig-name descname\"><span class=\"pre\">read_tracksi</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">indices</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.dpy.Dpy.read_tracksi\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>read tracks with specific indices</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.dpy.Dpy.version\">\n<span class=\"sig-name descname\"><span class=\"pre\">version</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.dpy.Dpy.version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.dpy.Dpy.write_track\">\n<span class=\"sig-name descname\"><span class=\"pre\">write_track</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">track</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.dpy.Dpy.write_track\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>write on track each time</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.dpy.Dpy.write_tracks\">\n<span class=\"sig-name descname\"><span class=\"pre\">write_tracks</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tracks</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.dpy.Dpy.write_tracks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>write many tracks together</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"read-bvals-bvecs\">\n<h3>read_bvals_bvecs<a class=\"headerlink\" href=\"#read-bvals-bvecs\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.gradients.read_bvals_bvecs\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.gradients.</span></span><span class=\"sig-name descname\"><span class=\"pre\">read_bvals_bvecs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fbvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fbvecs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.gradients.read_bvals_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Read b-values and b-vectors from disk.</p>\n<section id=\"id4\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fbvals<span class=\"classifier\">str</span></dt><dd><p>Full path to file with b-values. None to not read bvals.</p>\n</dd>\n<dt>fbvecs<span class=\"classifier\">str</span></dt><dd><p>Full path of file with b-vectors. None to not read bvecs.</p>\n</dd>\n</dl>\n</section>\n<section id=\"returns\">\n<h4>Returns<a class=\"headerlink\" href=\"#returns\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>bvals : array, (N,) or None\nbvecs : array, (N, 3) or None</p>\n</section>\n<section id=\"notes\">\n<h4>Notes<a class=\"headerlink\" href=\"#notes\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Files can be either \u2018.bvals\u2019/\u2019.bvecs\u2019 or \u2018.txt\u2019 or \u2018.npy\u2019 (containing\narrays stored with the appropriate values).</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-nifti-data\">\n<h3>load_nifti_data<a class=\"headerlink\" href=\"#load-nifti-data\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.image.load_nifti_data\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.image.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_nifti_data</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">as_ndarray</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.image.load_nifti_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load only the data array from a nifti file.</p>\n<section id=\"id5\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fname<span class=\"classifier\">str</span></dt><dd><p>Full path to the file.</p>\n</dd>\n<dt>as_ndarray: bool, optional</dt><dd><p>convert nibabel ArrayProxy to a numpy.ndarray.\nIf you want to save memory and delay this casting, just turn this\noption to False (default: True)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id6\">\n<h4>Returns<a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>data: np.ndarray or nib.ArrayProxy</p>\n</section>\n<section id=\"see-also\">\n<h4>See Also<a class=\"headerlink\" href=\"#see-also\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>load_nifti</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-nifti\">\n<h3>load_nifti<a class=\"headerlink\" href=\"#load-nifti\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.image.load_nifti\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.image.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_nifti</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_img</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_voxsize</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_coords</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">as_ndarray</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.image.load_nifti\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load data and other information from a nifti file.</p>\n<section id=\"id7\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fname<span class=\"classifier\">str</span></dt><dd><p>Full path to a nifti file.</p>\n</dd>\n<dt>return_img<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to return the nibabel nifti img object. Default: False</p>\n</dd>\n<dt>return_voxsize: bool, optional</dt><dd><p>Whether to return the nifti header zooms. Default: False</p>\n</dd>\n<dt>return_coords<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to return the nifti header aff2axcodes. Default: False</p>\n</dd>\n<dt>as_ndarray: bool, optional</dt><dd><p>convert nibabel ArrayProxy to a numpy.ndarray.\nIf you want to save memory and delay this casting, just turn this\noption to False (default: True)</p>\n</dd>\n</dl>\n</section>\n<section id=\"id8\">\n<h4>Returns<a class=\"headerlink\" href=\"#id8\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>A tuple, with (at the most, if all keyword args are set to True):\n(data, img.affine, img, vox_size, nib.aff2axcodes(img.affine))</p>\n</section>\n<section id=\"id9\">\n<h4>See Also<a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>load_nifti_data</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-nifti\">\n<h3>save_nifti<a class=\"headerlink\" href=\"#save-nifti\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.image.save_nifti\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.image.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_nifti</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hdr</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dtype</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.image.save_nifti\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save a data array into a nifti file.</p>\n<section id=\"id10\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fname<span class=\"classifier\">str</span></dt><dd><p>The full path to the file to be saved.</p>\n</dd>\n<dt>data<span class=\"classifier\">ndarray</span></dt><dd><p>The array with the data to save.</p>\n</dd>\n<dt>affine<span class=\"classifier\">4x4 array</span></dt><dd><p>The affine transform associated with the file.</p>\n</dd>\n<dt>hdr<span class=\"classifier\">nifti header, optional</span></dt><dd><p>May contain additional information to store in the file header.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id11\">\n<h4>Returns<a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>None</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-qa-metric\">\n<h3>save_qa_metric<a class=\"headerlink\" href=\"#save-qa-metric\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.image.save_qa_metric\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.image.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_qa_metric</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xopt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fopt</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.image.save_qa_metric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save Quality Assurance metrics.</p>\n<section id=\"id12\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fname: string</dt><dd><p>File name to save the metric values.</p>\n</dd>\n<dt>xopt: numpy array</dt><dd><p>The metric containing the\noptimal parameters for\nimage registration.</p>\n</dd>\n<dt>fopt: int</dt><dd><p>The distance between the registered images.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-peaks\">\n<h3>load_peaks<a class=\"headerlink\" href=\"#load-peaks\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.peaks.load_peaks\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.peaks.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_peaks</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.peaks.load_peaks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load a PeaksAndMetrics HDF5 file (PAM5)</p>\n<section id=\"id13\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id13\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fname<span class=\"classifier\">string</span></dt><dd><p>Filename of PAM5 file.</p>\n</dd>\n<dt>verbose<span class=\"classifier\">bool</span></dt><dd><p>Print summary information about the loaded file.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id14\">\n<h4>Returns<a class=\"headerlink\" href=\"#id14\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>pam : PeaksAndMetrics object</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-peaks\">\n<h3>save_peaks<a class=\"headerlink\" href=\"#save-peaks\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.peaks.save_peaks\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.peaks.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_peaks</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pam</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.peaks.save_peaks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save all important attributes of object PeaksAndMetrics in a PAM5 file\n(HDF5).</p>\n<section id=\"id15\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id15\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fname<span class=\"classifier\">string</span></dt><dd><p>Filename of PAM5 file</p>\n</dd>\n<dt>pam<span class=\"classifier\">PeaksAndMetrics</span></dt><dd><p>Object holding peak_dirs, shm_coeffs and other attributes</p>\n</dd>\n<dt>affine<span class=\"classifier\">array</span></dt><dd><p>The 4x4 matrix transforming the date from native to world coordinates.\nPeaksAndMetrics should have that attribute but if not it can be\nprovided here. Default None.</p>\n</dd>\n<dt>verbose<span class=\"classifier\">bool</span></dt><dd><p>Print summary information about the saved file.</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"peaks-to-niftis\">\n<h3>peaks_to_niftis<a class=\"headerlink\" href=\"#peaks-to-niftis\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.peaks.peaks_to_niftis\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.peaks.</span></span><span class=\"sig-name descname\"><span class=\"pre\">peaks_to_niftis</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pam</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname_shm</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname_dirs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname_values</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname_indices</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname_gfa</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reshape_dirs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.peaks.peaks_to_niftis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save SH, directions, indices and values of peaks to Nifti.</p>\n</dd></dl>\n\n</section>\n<section id=\"save-pickle\">\n<h3>save_pickle<a class=\"headerlink\" href=\"#save-pickle\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.pickles.save_pickle\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.pickles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_pickle</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dix</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.pickles.save_pickle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save <cite>dix</cite> to <cite>fname</cite> as pickle.</p>\n<section id=\"id16\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id16\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fname<span class=\"classifier\">str</span></dt><dd><p>filename to save object e.g. a dictionary</p>\n</dd>\n<dt>dix<span class=\"classifier\">str</span></dt><dd><p>dictionary or other object</p>\n</dd>\n</dl>\n</section>\n<section id=\"id17\">\n<h4>Examples<a class=\"headerlink\" href=\"#id17\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">tempfile</span> <span class=\"kn\">import</span> <span class=\"n\">mkstemp</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fd</span><span class=\"p\">,</span> <span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">mkstemp</span><span class=\"p\">()</span> <span class=\"c1\"># make temporary file (opened, attached to fh)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">:{</span><span class=\"s1\">&#39;d&#39;</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">}}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">save_pickle</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d2</span><span class=\"o\">=</span><span class=\"n\">load_pickle</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We remove the temporary file we created for neatness</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span> <span class=\"c1\"># the file is still open, we need to close the fh</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id18\">\n<h4>See Also<a class=\"headerlink\" href=\"#id18\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>dipy.io.pickles.load_pickle</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-pickle\">\n<h3>load_pickle<a class=\"headerlink\" href=\"#load-pickle\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.pickles.load_pickle\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.pickles.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_pickle</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.pickles.load_pickle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load object from pickle file <cite>fname</cite>.</p>\n<section id=\"id19\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id19\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fname<span class=\"classifier\">str</span></dt><dd><p>filename to load dict or other python object</p>\n</dd>\n</dl>\n</section>\n<section id=\"id20\">\n<h4>Returns<a class=\"headerlink\" href=\"#id20\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>dix<span class=\"classifier\">object</span></dt><dd><p>dictionary or other object</p>\n</dd>\n</dl>\n</section>\n<section id=\"id21\">\n<h4>Examples<a class=\"headerlink\" href=\"#id21\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>dipy.io.pickles.save_pickle</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"space\">\n<h3><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Space\" title=\"dipy.io.stateful_tractogram.Space\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Space</span></code></a><a class=\"headerlink\" href=\"#space\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.Space\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.stateful_tractogram.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Space</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.Space\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/enum.html#enum.Enum\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a></p>\n<p>Enum to simplify future change to convention</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.Space.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.Space.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.Space.RASMM\">\n<span class=\"sig-name descname\"><span class=\"pre\">RASMM</span></span><em class=\"property\"><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"pre\">'rasmm'</span></em><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.Space.RASMM\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.Space.VOX\">\n<span class=\"sig-name descname\"><span class=\"pre\">VOX</span></span><em class=\"property\"><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"pre\">'vox'</span></em><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.Space.VOX\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.Space.VOXMM\">\n<span class=\"sig-name descname\"><span class=\"pre\">VOXMM</span></span><em class=\"property\"><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"pre\">'voxmm'</span></em><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.Space.VOXMM\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"origin\">\n<h3><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Origin\" title=\"dipy.io.stateful_tractogram.Origin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Origin</span></code></a><a class=\"headerlink\" href=\"#origin\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.Origin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.stateful_tractogram.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Origin</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.Origin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/enum.html#enum.Enum\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a></p>\n<p>Enum to simplify future change to convention</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.Origin.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.Origin.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.Origin.NIFTI\">\n<span class=\"sig-name descname\"><span class=\"pre\">NIFTI</span></span><em class=\"property\"><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"pre\">'center'</span></em><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.Origin.NIFTI\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.Origin.TRACKVIS\">\n<span class=\"sig-name descname\"><span class=\"pre\">TRACKVIS</span></span><em class=\"property\"><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"pre\">'corner'</span></em><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.Origin.TRACKVIS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"statefultractogram\">\n<h3><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram\" title=\"dipy.io.stateful_tractogram.StatefulTractogram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StatefulTractogram</span></code></a><a class=\"headerlink\" href=\"#statefultractogram\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.stateful_tractogram.</span></span><span class=\"sig-name descname\"><span class=\"pre\">StatefulTractogram</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">space</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Origin.NIFTI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_per_point</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_per_streamline</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Class for stateful representation of collections of streamlines\nObject designed to be identical no matter the file format\n(trk, tck, vtk, fib, dpy). Facilitate transformation between space and\ndata manipulation for each streamline / point.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">space</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Origin.NIFTI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_per_point</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_per_streamline</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a strict, state-aware, robust tractogram</p>\n<section id=\"id22\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id22\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list or ArraySequence</span></dt><dd><p>Streamlines of the tractogram</p>\n</dd>\n<dt>reference<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile,</span></dt><dd><p>Nifti1Header, trk.header (dict) or another Stateful Tractogram\nReference that provides the spatial attributes.\nTypically a nifti-related object from the native diffusion used for\nstreamlines generation</p>\n</dd>\n<dt>space<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Space)</span></dt><dd><p>Current space in which the streamlines are (vox, voxmm or rasmm)\nAfter tracking the space is VOX, after loading with nibabel\nthe space is RASMM</p>\n</dd>\n<dt>origin<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Origin), optional</span></dt><dd><p>Current origin in which the streamlines are (center or corner)\nAfter loading with nibabel the origin is CENTER</p>\n</dd>\n<dt>data_per_point<span class=\"classifier\">dict, optional</span></dt><dd><p>Dictionary in which each key has X items, each items has Y_i items\nX being the number of streamlines\nY_i being the number of points on streamlines #i</p>\n</dd>\n<dt>data_per_streamline<span class=\"classifier\">dict, optional</span></dt><dd><p>Dictionary in which each key has X items\nX being the number of streamlines</p>\n</dd>\n</dl>\n</section>\n<section id=\"id23\">\n<h4>Notes<a class=\"headerlink\" href=\"#id23\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Very important to respect the convention, verify that streamlines\nmatch the reference and are effectively in the right space.</p>\n<p>Any change to the number of streamlines, data_per_point or\ndata_per_streamline requires particular verification.</p>\n<p>In a case of manipulation not allowed by this object, use Nibabel\ndirectly and be careful.</p>\n</section>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.affine\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">affine</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.affine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the reference affine</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.are_compatible\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">are_compatible</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft_1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft_2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.are_compatible\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compatibility verification of two StatefulTractogram to ensure space,\norigin, data_per_point and data_per_streamline consistency</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box\">\n<span class=\"sig-name descname\"><span class=\"pre\">compute_bounding_box</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the bounding box of the streamlines in their current state</p>\n<section id=\"id24\">\n<h4>Returns<a class=\"headerlink\" href=\"#id24\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">ndarray</span></dt><dd><p>8 corners of the XYZ aligned box, all zeros if no streamlines</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.data_per_point\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">data_per_point</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.data_per_point\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for data_per_point</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">data_per_streamline</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for data_per_streamline</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.dimensions\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">dimensions</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.dimensions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the reference dimensions</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.dtype_dict\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">dtype_dict</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.dtype_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for dtype_dict</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.from_sft\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_sft</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_per_point</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_per_streamline</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.from_sft\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an instance of <cite>StatefulTractogram</cite> from another instance\nof <cite>StatefulTractogram</cite>.</p>\n<section id=\"id25\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id25\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list or ArraySequence</span></dt><dd><p>Streamlines of the tractogram</p>\n</dd>\n<dt>sft<span class=\"classifier\">StatefulTractogram,</span></dt><dd><p>The other StatefulTractogram to copy the space_attribute AND\nstate from.</p>\n</dd>\n<dt>data_per_point<span class=\"classifier\">dict, optional</span></dt><dd><p>Dictionary in which each key has X items, each items has Y_i items\nX being the number of streamlines\nY_i being the number of points on streamlines #i</p>\n</dd>\n<dt>data_per_streamline<span class=\"classifier\">dict, optional</span></dt><dd><p>Dictionary in which each key has X items\nX being the number of streamlines</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<hr class=\"docutils\" />\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_data_per_point_keys</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a list of the data_per_point attribute names</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_data_per_streamline_keys</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a list of the data_per_streamline attribute names</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_streamlines_copy</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe getter for streamlines (for slicing)</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid\">\n<span class=\"sig-name descname\"><span class=\"pre\">is_bbox_in_vox_valid</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Verify that the bounding box is valid in voxel space.\nNegative coordinates or coordinates above the volume dimensions\nare considered invalid in voxel space.</p>\n<section id=\"id26\">\n<h4>Returns<a class=\"headerlink\" href=\"#id26\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>Are the streamlines within the volume of the associated reference</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.origin\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">origin</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.origin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for origin standard</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines\">\n<span class=\"sig-name descname\"><span class=\"pre\">remove_invalid_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">epsilon</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.001</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove streamlines with invalid coordinates from the object.\nWill also remove the data_per_point and data_per_streamline.\nInvalid coordinates are any X,Y,Z values above the reference\ndimensions or below zero</p>\n<section id=\"id27\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id27\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>epsilon<span class=\"classifier\">float (optional)</span></dt><dd><p>Epsilon value for the bounding box verification.\nDefault is 1e-6.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id28\">\n<h4>Returns<a class=\"headerlink\" href=\"#id28\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">tuple</span></dt><dd><p>Tuple of two list, indices_to_remove, indices_to_keep</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.space\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">space</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.space\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the current space</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.space_attributes\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">space_attributes</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.space_attributes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for spatial attribute</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.streamlines\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">streamlines</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Partially safe getter for streamlines</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.to_center\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_center</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_center\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to shift streamlines so the center of voxel is\nthe origin</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.to_corner\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_corner</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_corner\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to shift streamlines so the corner of voxel is\nthe origin</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.to_origin\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_origin</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target_origin</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_origin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to change streamlines to a particular origin standard\nFalse means NIFTI (center) and True means TrackVis (corner)</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_rasmm</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to transform streamlines and update state</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.to_space\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_space</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target_space</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_space\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to transform streamlines to a particular space using\nan enum and update state</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.to_vox\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_vox</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_vox\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to transform streamlines and update state</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_voxmm</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to transform streamlines and update state</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.voxel_order\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">voxel_order</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.voxel_order\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the reference voxel order</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">voxel_sizes</span></span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the reference voxel sizes</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"logger\">\n<h3>logger<a class=\"headerlink\" href=\"#logger\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.logger\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.stateful_tractogram.</span></span><span class=\"sig-name descname\"><span class=\"pre\">logger</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Instances of the Logger class represent a single logging channel. A\n\u201clogging channel\u201d indicates an area of an application. Exactly how an\n\u201carea\u201d is defined is up to the application developer. Since an\napplication can have any number of areas, logging channels are identified\nby a unique string. Application areas can be nested (e.g. an area\nof \u201cinput processing\u201d might include sub-areas \u201cread CSV files\u201d, \u201cread\nXLS files\u201d and \u201cread Gnumeric files\u201d). To cater for this natural nesting,\nchannel names are organized into a namespace hierarchy where levels are\nseparated by periods, much like the Java or Python package namespace. So\nin the instance given above, channel names might be \u201cinput\u201d for the upper\nlevel, and \u201cinput.csv\u201d, \u201cinput.xls\u201d and \u201cinput.gnu\u201d for the sub-levels.\nThere is no arbitrary limit to the depth of nesting.</p>\n</dd></dl>\n\n</section>\n<section id=\"set-sft-logger-level\">\n<h3>set_sft_logger_level<a class=\"headerlink\" href=\"#set-sft-logger-level\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.stateful_tractogram.set_sft_logger_level\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.stateful_tractogram.</span></span><span class=\"sig-name descname\"><span class=\"pre\">set_sft_logger_level</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_level</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.stateful_tractogram.set_sft_logger_level\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Change the logger of the StatefulTractogram\nto one on the following: DEBUG, INFO, WARNING, CRITICAL, ERROR</p>\n<section id=\"id29\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id29\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>log_level<span class=\"classifier\">str</span></dt><dd><p>Log level for the StatefulTractogram only</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-tractogram\">\n<h3>save_tractogram<a class=\"headerlink\" href=\"#save-tractogram\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.save_tractogram\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_tractogram</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.save_tractogram\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save the stateful tractogram in any format (trk/tck/vtk/vtp/fib/dpy)</p>\n<section id=\"id30\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id30\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sft<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The stateful tractogram to save</p>\n</dd>\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id31\">\n<h4>Returns<a class=\"headerlink\" href=\"#id31\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>True if the saving operation was successful</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-tractogram\">\n<h3>load_tractogram<a class=\"headerlink\" href=\"#load-tractogram\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.load_tractogram\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_tractogram</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_space</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Space.RASMM</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Origin.NIFTI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trk_header_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.load_tractogram\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the stateful tractogram from any format (trk/tck/vtk/vtp/fib/dpy)</p>\n<section id=\"id32\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id32\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>reference<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile, Nifti1Header or</span></dt><dd><p>trk.header (dict), or \u2018same\u2019 if the input is a trk file.\nReference that provides the spatial attribute.\nTypically a nifti-related object from the native diffusion used for\nstreamlines generation</p>\n</dd>\n<dt>to_space<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Space)</span></dt><dd><p>Space to which the streamlines will be transformed after loading</p>\n</dd>\n<dt>to_origin<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Origin)</span></dt><dd><dl class=\"simple\">\n<dt>Origin to which the streamlines will be transformed after loading</dt><dd><p>NIFTI standard, default (center of the voxel)\nTRACKVIS standard (corner of the voxel)</p>\n</dd>\n</dl>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n<dt>trk_header_check<span class=\"classifier\">bool</span></dt><dd><p>Verification that the reference has the same header as the spatial\nattributes as the input tractogram when a Trk is loaded</p>\n</dd>\n</dl>\n</section>\n<section id=\"id33\">\n<h4>Returns<a class=\"headerlink\" href=\"#id33\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The tractogram to load (must have been saved properly)</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-generator\">\n<h3>load_generator<a class=\"headerlink\" href=\"#load-generator\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.load_generator\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_generator</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ttype</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.load_generator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate a loading function that performs a file extension\ncheck to restrict the user to a single file format.</p>\n<section id=\"id34\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id34\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ttype<span class=\"classifier\">string</span></dt><dd><p>Extension of the file format that requires a loader</p>\n</dd>\n</dl>\n</section>\n<section id=\"id35\">\n<h4>Returns<a class=\"headerlink\" href=\"#id35\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">function</span></dt><dd><p>Function (load_tractogram) that handle only one file format</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-generator\">\n<h3>save_generator<a class=\"headerlink\" href=\"#save-generator\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.save_generator\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_generator</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ttype</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.save_generator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate a saving function that performs a file extension\ncheck to restrict the user to a single file format.</p>\n<section id=\"id36\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id36\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>ttype<span class=\"classifier\">string</span></dt><dd><p>Extension of the file format that requires a saver</p>\n</dd>\n</dl>\n</section>\n<section id=\"id37\">\n<h4>Returns<a class=\"headerlink\" href=\"#id37\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">function</span></dt><dd><p>Function (save_tractogram) that handle only one file format</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-trk\">\n<h3>load_trk<a class=\"headerlink\" href=\"#load-trk\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.load_trk\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_trk</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_space</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Space.RASMM</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Origin.NIFTI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trk_header_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.load_trk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the stateful tractogram of the .trk format</p>\n<section id=\"id38\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id38\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>reference<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile, Nifti1Header or</span></dt><dd><p>trk.header (dict), or \u2018same\u2019 if the input is a trk file.\nReference that provides the spatial attribute.\nTypically a nifti-related object from the native diffusion used for\nstreamlines generation</p>\n</dd>\n<dt>to_space<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Space)</span></dt><dd><p>Space to which the streamlines will be transformed after loading</p>\n</dd>\n<dt>to_origin<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Origin)</span></dt><dd><dl class=\"simple\">\n<dt>Origin to which the streamlines will be transformed after loading</dt><dd><p>NIFTI standard, default (center of the voxel)\nTRACKVIS standard (corner of the voxel)</p>\n</dd>\n</dl>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n<dt>trk_header_check<span class=\"classifier\">bool</span></dt><dd><p>Verification that the reference has the same header as the spatial\nattributes as the input tractogram when a Trk is loaded</p>\n</dd>\n</dl>\n</section>\n<section id=\"id39\">\n<h4>Returns<a class=\"headerlink\" href=\"#id39\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The tractogram to load (must have been saved properly)</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-tck\">\n<h3>load_tck<a class=\"headerlink\" href=\"#load-tck\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.load_tck\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_tck</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_space</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Space.RASMM</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Origin.NIFTI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trk_header_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.load_tck\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the stateful tractogram of the .tck format</p>\n<section id=\"id40\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id40\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>reference<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile, Nifti1Header or</span></dt><dd><p>trk.header (dict), or \u2018same\u2019 if the input is a trk file.\nReference that provides the spatial attribute.\nTypically a nifti-related object from the native diffusion used for\nstreamlines generation</p>\n</dd>\n<dt>to_space<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Space)</span></dt><dd><p>Space to which the streamlines will be transformed after loading</p>\n</dd>\n<dt>to_origin<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Origin)</span></dt><dd><dl class=\"simple\">\n<dt>Origin to which the streamlines will be transformed after loading</dt><dd><p>NIFTI standard, default (center of the voxel)\nTRACKVIS standard (corner of the voxel)</p>\n</dd>\n</dl>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n<dt>trk_header_check<span class=\"classifier\">bool</span></dt><dd><p>Verification that the reference has the same header as the spatial\nattributes as the input tractogram when a Trk is loaded</p>\n</dd>\n</dl>\n</section>\n<section id=\"id41\">\n<h4>Returns<a class=\"headerlink\" href=\"#id41\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The tractogram to load (must have been saved properly)</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-vtk\">\n<h3>load_vtk<a class=\"headerlink\" href=\"#load-vtk\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.load_vtk\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_vtk</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_space</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Space.RASMM</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Origin.NIFTI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trk_header_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.load_vtk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the stateful tractogram of the .vtk format</p>\n<section id=\"id42\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id42\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>reference<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile, Nifti1Header or</span></dt><dd><p>trk.header (dict), or \u2018same\u2019 if the input is a trk file.\nReference that provides the spatial attribute.\nTypically a nifti-related object from the native diffusion used for\nstreamlines generation</p>\n</dd>\n<dt>to_space<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Space)</span></dt><dd><p>Space to which the streamlines will be transformed after loading</p>\n</dd>\n<dt>to_origin<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Origin)</span></dt><dd><dl class=\"simple\">\n<dt>Origin to which the streamlines will be transformed after loading</dt><dd><p>NIFTI standard, default (center of the voxel)\nTRACKVIS standard (corner of the voxel)</p>\n</dd>\n</dl>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n<dt>trk_header_check<span class=\"classifier\">bool</span></dt><dd><p>Verification that the reference has the same header as the spatial\nattributes as the input tractogram when a Trk is loaded</p>\n</dd>\n</dl>\n</section>\n<section id=\"id43\">\n<h4>Returns<a class=\"headerlink\" href=\"#id43\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The tractogram to load (must have been saved properly)</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-vtp\">\n<h3>load_vtp<a class=\"headerlink\" href=\"#load-vtp\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.load_vtp\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_vtp</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_space</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Space.RASMM</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Origin.NIFTI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trk_header_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.load_vtp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the stateful tractogram of the .vtp format</p>\n<section id=\"id44\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id44\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>reference<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile, Nifti1Header or</span></dt><dd><p>trk.header (dict), or \u2018same\u2019 if the input is a trk file.\nReference that provides the spatial attribute.\nTypically a nifti-related object from the native diffusion used for\nstreamlines generation</p>\n</dd>\n<dt>to_space<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Space)</span></dt><dd><p>Space to which the streamlines will be transformed after loading</p>\n</dd>\n<dt>to_origin<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Origin)</span></dt><dd><dl class=\"simple\">\n<dt>Origin to which the streamlines will be transformed after loading</dt><dd><p>NIFTI standard, default (center of the voxel)\nTRACKVIS standard (corner of the voxel)</p>\n</dd>\n</dl>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n<dt>trk_header_check<span class=\"classifier\">bool</span></dt><dd><p>Verification that the reference has the same header as the spatial\nattributes as the input tractogram when a Trk is loaded</p>\n</dd>\n</dl>\n</section>\n<section id=\"id45\">\n<h4>Returns<a class=\"headerlink\" href=\"#id45\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The tractogram to load (must have been saved properly)</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-fib\">\n<h3>load_fib<a class=\"headerlink\" href=\"#load-fib\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.load_fib\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_fib</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_space</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Space.RASMM</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Origin.NIFTI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trk_header_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.load_fib\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the stateful tractogram of the .fib format</p>\n<section id=\"id46\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id46\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>reference<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile, Nifti1Header or</span></dt><dd><p>trk.header (dict), or \u2018same\u2019 if the input is a trk file.\nReference that provides the spatial attribute.\nTypically a nifti-related object from the native diffusion used for\nstreamlines generation</p>\n</dd>\n<dt>to_space<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Space)</span></dt><dd><p>Space to which the streamlines will be transformed after loading</p>\n</dd>\n<dt>to_origin<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Origin)</span></dt><dd><dl class=\"simple\">\n<dt>Origin to which the streamlines will be transformed after loading</dt><dd><p>NIFTI standard, default (center of the voxel)\nTRACKVIS standard (corner of the voxel)</p>\n</dd>\n</dl>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n<dt>trk_header_check<span class=\"classifier\">bool</span></dt><dd><p>Verification that the reference has the same header as the spatial\nattributes as the input tractogram when a Trk is loaded</p>\n</dd>\n</dl>\n</section>\n<section id=\"id47\">\n<h4>Returns<a class=\"headerlink\" href=\"#id47\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The tractogram to load (must have been saved properly)</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-dpy\">\n<h3>load_dpy<a class=\"headerlink\" href=\"#load-dpy\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.load_dpy\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_dpy</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_space</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Space.RASMM</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Origin.NIFTI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trk_header_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.load_dpy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the stateful tractogram of the .dpy format</p>\n<section id=\"id48\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id48\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>reference<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile, Nifti1Header or</span></dt><dd><p>trk.header (dict), or \u2018same\u2019 if the input is a trk file.\nReference that provides the spatial attribute.\nTypically a nifti-related object from the native diffusion used for\nstreamlines generation</p>\n</dd>\n<dt>to_space<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Space)</span></dt><dd><p>Space to which the streamlines will be transformed after loading</p>\n</dd>\n<dt>to_origin<span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Origin)</span></dt><dd><dl class=\"simple\">\n<dt>Origin to which the streamlines will be transformed after loading</dt><dd><p>NIFTI standard, default (center of the voxel)\nTRACKVIS standard (corner of the voxel)</p>\n</dd>\n</dl>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n<dt>trk_header_check<span class=\"classifier\">bool</span></dt><dd><p>Verification that the reference has the same header as the spatial\nattributes as the input tractogram when a Trk is loaded</p>\n</dd>\n</dl>\n</section>\n<section id=\"id49\">\n<h4>Returns<a class=\"headerlink\" href=\"#id49\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The tractogram to load (must have been saved properly)</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-trk\">\n<h3>save_trk<a class=\"headerlink\" href=\"#save-trk\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.save_trk\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_trk</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.save_trk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save the stateful tractogram of the .trk format</p>\n<section id=\"id50\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id50\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sft<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The stateful tractogram to save</p>\n</dd>\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id51\">\n<h4>Returns<a class=\"headerlink\" href=\"#id51\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>True if the saving operation was successful</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-tck\">\n<h3>save_tck<a class=\"headerlink\" href=\"#save-tck\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.save_tck\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_tck</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.save_tck\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save the stateful tractogram of the .tck format</p>\n<section id=\"id52\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id52\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sft<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The stateful tractogram to save</p>\n</dd>\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id53\">\n<h4>Returns<a class=\"headerlink\" href=\"#id53\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>True if the saving operation was successful</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-vtk\">\n<h3>save_vtk<a class=\"headerlink\" href=\"#save-vtk\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.save_vtk\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_vtk</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.save_vtk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save the stateful tractogram of the .vtk format</p>\n<section id=\"id54\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id54\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sft<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The stateful tractogram to save</p>\n</dd>\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id55\">\n<h4>Returns<a class=\"headerlink\" href=\"#id55\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>True if the saving operation was successful</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-vtp\">\n<h3>save_vtp<a class=\"headerlink\" href=\"#save-vtp\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.save_vtp\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_vtp</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.save_vtp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save the stateful tractogram of the .vtp format</p>\n<section id=\"id56\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id56\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sft<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The stateful tractogram to save</p>\n</dd>\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id57\">\n<h4>Returns<a class=\"headerlink\" href=\"#id57\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>True if the saving operation was successful</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-fib\">\n<h3>save_fib<a class=\"headerlink\" href=\"#save-fib\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.save_fib\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_fib</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.save_fib\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save the stateful tractogram of the .fib format</p>\n<section id=\"id58\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id58\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sft<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The stateful tractogram to save</p>\n</dd>\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id59\">\n<h4>Returns<a class=\"headerlink\" href=\"#id59\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>True if the saving operation was successful</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-dpy\">\n<h3>save_dpy<a class=\"headerlink\" href=\"#save-dpy\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.streamline.save_dpy\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.streamline.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_dpy</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sft</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bbox_valid_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.streamline.save_dpy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save the stateful tractogram of the .dpy format</p>\n<section id=\"id60\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id60\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>sft<span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The stateful tractogram to save</p>\n</dd>\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt>bbox_valid_check<span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id61\">\n<h4>Returns<a class=\"headerlink\" href=\"#id61\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>True if the saving operation was successful</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"nifti1-symmat\">\n<h3>nifti1_symmat<a class=\"headerlink\" href=\"#nifti1-symmat\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.nifti1_symmat\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">nifti1_symmat</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">image_data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.nifti1_symmat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a Nifti1Image with a symmetric matrix intent</p>\n<section id=\"id62\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id62\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>image_data<span class=\"classifier\">array-like</span></dt><dd><p>should have lower triangular elements of a symmetric matrix along the\nlast dimension</p>\n</dd>\n</dl>\n<p>all other arguments and keywords are passed to Nifti1Image</p>\n</section>\n<section id=\"id63\">\n<h4>Returns<a class=\"headerlink\" href=\"#id63\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>image<span class=\"classifier\">Nifti1Image</span></dt><dd><p>5d, extra dimensions added before the last. Has symmetric matrix intent\ncode</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"make5d\">\n<h3>make5d<a class=\"headerlink\" href=\"#make5d\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.make5d\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">make5d</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.make5d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>reshapes the input to have 5 dimensions, adds extra dimensions just\nbefore the last dimension</p>\n</dd></dl>\n\n</section>\n<section id=\"decfa\">\n<h3>decfa<a class=\"headerlink\" href=\"#decfa\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.decfa\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">decfa</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">img_orig</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.decfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a nifti-compliant directional-encoded color FA image.</p>\n<section id=\"id64\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id64\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>img_orig<span class=\"classifier\">Nifti1Image class instance.</span></dt><dd><p>Contains encoding of the DEC FA image with a 4D volume of data, where\nthe elements on the last dimension represent R, G and B components.</p>\n</dd>\n<dt>scale: bool.</dt><dd><p>Whether to scale the incoming data from the 0-1 to the 0-255 range\nexpected in the output.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id65\">\n<h4>Returns<a class=\"headerlink\" href=\"#id65\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>img<span class=\"classifier\">Nifti1Image class instance with dtype set to store tuples of</span></dt><dd><p>uint8 in (R, G, B) order.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id66\">\n<h4>Notes<a class=\"headerlink\" href=\"#id66\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>For a description of this format, see:</p>\n<p><a class=\"reference external\" href=\"https://nifti.nimh.nih.gov/nifti-1/documentation/nifti1fields/nifti1fields_pages/datatype.html\">https://nifti.nimh.nih.gov/nifti-1/documentation/nifti1fields/nifti1fields_pages/datatype.html</a></p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"decfa-to-float\">\n<h3>decfa_to_float<a class=\"headerlink\" href=\"#decfa-to-float\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.decfa_to_float\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">decfa_to_float</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">img_orig</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.decfa_to_float\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Convert a nifti-compliant directional-encoded color FA image into a\nnifti image with RGB encoded in floating point resolution.</p>\n<section id=\"id67\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id67\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>img_orig<span class=\"classifier\">Nifti1Image class instance.</span></dt><dd><p>Contains encoding of the DEC FA image with a 3D volume of data, where\neach element is a (R, G, B) tuple in uint8.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id68\">\n<h4>Returns<a class=\"headerlink\" href=\"#id68\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>img : Nifti1Image class instance with float dtype.</p>\n</section>\n<section id=\"id69\">\n<h4>Notes<a class=\"headerlink\" href=\"#id69\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>For a description of this format, see:</p>\n<p><a class=\"reference external\" href=\"https://nifti.nimh.nih.gov/nifti-1/documentation/nifti1fields/nifti1fields_pages/datatype.html\">https://nifti.nimh.nih.gov/nifti-1/documentation/nifti1fields/nifti1fields_pages/datatype.html</a></p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"is-reference-info-valid\">\n<h3>is_reference_info_valid<a class=\"headerlink\" href=\"#is-reference-info-valid\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.is_reference_info_valid\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">is_reference_info_valid</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dimensions</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">voxel_sizes</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">voxel_order</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.is_reference_info_valid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Validate basic data type and value of spatial attribute.</p>\n<p>Does not ensure that voxel_sizes and voxel_order are self-coherent with\nthe affine.\nOnly verify the following:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>affine is of the right type (float) and dimension (4,4)</p></li>\n<li><p>affine contain values in the rotation part</p></li>\n<li><p>dimensions is of right type (int) and length (3)</p></li>\n<li><p>voxel_sizes is of right type (float) and length (3)</p></li>\n<li><p>voxel_order is of right type (str) and length (3)</p></li>\n</ul>\n</div></blockquote>\n<p>The listed parameters are what is expected, provide something else and this\nfunction should fail (cover common mistakes).</p>\n<section id=\"id70\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id70\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>affine: ndarray (4,4)</dt><dd><p>Transformation of VOX to RASMM</p>\n</dd>\n<dt>dimensions: ndarray (3,), int16</dt><dd><p>Volume shape for each axis</p>\n</dd>\n<dt>voxel_sizes:  ndarray (3,), float32</dt><dd><p>Size of voxel for each axis</p>\n</dd>\n<dt>voxel_order: string</dt><dd><p>Typically \u2018RAS\u2019 or \u2018LPS\u2019</p>\n</dd>\n</dl>\n</section>\n<section id=\"id71\">\n<h4>Returns<a class=\"headerlink\" href=\"#id71\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>Does the input represent a valid \u2018state\u2019 of spatial attribute</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"get-reference-info\">\n<h3>get_reference_info<a class=\"headerlink\" href=\"#get-reference-info\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.get_reference_info\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">get_reference_info</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.get_reference_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Will compare the spatial attribute of 2 references</p>\n<section id=\"id72\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id72\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>reference<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile, Nifti1Header or</span></dt><dd><p>trk.header (dict)\nReference that provides the spatial attribute.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id73\">\n<h4>Returns<a class=\"headerlink\" href=\"#id73\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">tuple</span></dt><dd><ul class=\"simple\">\n<li><p>affine ndarray (4,4), np.float32, transformation of VOX to RASMM</p></li>\n<li><p>dimensions ndarray (3,), int16, volume shape for each axis</p></li>\n<li><p>voxel_sizes  ndarray (3,), float32, size of voxel for each axis</p></li>\n<li><p>voxel_order, string, Typically \u2018RAS\u2019 or \u2018LPS\u2019</p></li>\n</ul>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"is-header-compatible\">\n<h3>is_header_compatible<a class=\"headerlink\" href=\"#is-header-compatible\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.is_header_compatible\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">is_header_compatible</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference_1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference_2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.is_header_compatible\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Will compare the spatial attribute of 2 references</p>\n<section id=\"id74\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id74\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>reference_1<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile,</span></dt><dd><p>Nifti1Header or trk.header (dict)\nReference that provides the spatial attribute.</p>\n</dd>\n<dt>reference_2<span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile,</span></dt><dd><p>Nifti1Header or trk.header (dict)\nReference that provides the spatial attribute.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id75\">\n<h4>Returns<a class=\"headerlink\" href=\"#id75\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">bool</span></dt><dd><p>Does all the spatial attribute match</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"create-tractogram-header\">\n<h3>create_tractogram_header<a class=\"headerlink\" href=\"#create-tractogram-header\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.create_tractogram_header\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">create_tractogram_header</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tractogram_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dimensions</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">voxel_sizes</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">voxel_order</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.create_tractogram_header\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Write a standard trk/tck header from spatial attribute</p>\n</dd></dl>\n\n</section>\n<section id=\"create-nifti-header\">\n<h3>create_nifti_header<a class=\"headerlink\" href=\"#create-nifti-header\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.create_nifti_header\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">create_nifti_header</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dimensions</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">voxel_sizes</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.create_nifti_header\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Write a standard nifti header from spatial attribute</p>\n</dd></dl>\n\n</section>\n<section id=\"save-buan-profiles-hdf5\">\n<h3>save_buan_profiles_hdf5<a class=\"headerlink\" href=\"#save-buan-profiles-hdf5\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.save_buan_profiles_hdf5\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_buan_profiles_hdf5</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dt</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.save_buan_profiles_hdf5\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Saves the given input dataframe to .h5 file</p>\n<section id=\"id76\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id76\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>fname<span class=\"classifier\">string</span></dt><dd><p>file name for saving the hdf5 file</p>\n</dd>\n<dt>dt<span class=\"classifier\">Pandas DataFrame</span></dt><dd><p>DataFrame to be saved as .h5 file</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"read-img-arr-or-path\">\n<h3>read_img_arr_or_path<a class=\"headerlink\" href=\"#read-img-arr-or-path\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.utils.read_img_arr_or_path\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.utils.</span></span><span class=\"sig-name descname\"><span class=\"pre\">read_img_arr_or_path</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.utils.read_img_arr_or_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Helper function that handles inputs that can be paths, nifti img or arrays</p>\n<section id=\"id77\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id77\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>data<span class=\"classifier\">array or nib.Nifti1Image or str.</span></dt><dd><p>Either as a 3D/4D array or as a nifti image object, or as\na string containing the full path to a nifti file.</p>\n</dd>\n<dt>affine<span class=\"classifier\">4x4 array, optional.</span></dt><dd><p>Must be provided for <cite>data</cite> provided as an array. If provided together\nwith Nifti1Image or str <cite>data</cite>, this input will over-ride the affine\nthat is stored in the <cite>data</cite> input. Default: use the affine stored\nin <cite>data</cite>.</p>\n</dd>\n</dl>\n</section>\n<section id=\"id78\">\n<h4>Returns<a class=\"headerlink\" href=\"#id78\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>data, affine : ndarray and 4x4 array</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-polydata\">\n<h3>load_polydata<a class=\"headerlink\" href=\"#load-polydata\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.vtk.load_polydata\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.vtk.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_polydata</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">file_name</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.vtk.load_polydata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load a vtk polydata to a supported format file.</p>\n<p>Supported file formats are OBJ, VTK, VTP, FIB, PLY, STL and XML</p>\n<section id=\"id79\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id79\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>file_name : string</p>\n</section>\n<section id=\"id80\">\n<h4>Returns<a class=\"headerlink\" href=\"#id80\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>output : vtkPolyData</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-polydata\">\n<h3>save_polydata<a class=\"headerlink\" href=\"#save-polydata\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.vtk.save_polydata\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.vtk.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_polydata</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">polydata</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">file_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">binary</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color_array_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.vtk.save_polydata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save a vtk polydata to a supported format file.</p>\n<p>Save formats can be VTK, VTP, FIB, PLY, STL and XML.</p>\n<section id=\"id81\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id81\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>polydata : vtkPolyData\nfile_name : string</p>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"save-vtk-streamlines\">\n<h3>save_vtk_streamlines<a class=\"headerlink\" href=\"#save-vtk-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.vtk.save_vtk_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.vtk.</span></span><span class=\"sig-name descname\"><span class=\"pre\">save_vtk_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">streamlines</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_lps</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">binary</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.vtk.save_vtk_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save streamlines as vtk polydata to a supported format file.</p>\n<p>File formats can be OBJ, VTK, VTP, FIB, PLY, STL and XML</p>\n<section id=\"id82\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id82\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>streamlines<span class=\"classifier\">list</span></dt><dd><p>list of 2D arrays or ArraySequence</p>\n</dd>\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>output filename (.obj, .vtk, .fib, .ply, .stl and .xml)</p>\n</dd>\n<dt>to_lps<span class=\"classifier\">bool</span></dt><dd><p>Default to True, will follow the vtk file convention for streamlines\nWill be supported by MITKDiffusion and MI-Brain</p>\n</dd>\n<dt>binary<span class=\"classifier\">bool</span></dt><dd><p>save the file as binary</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n<section id=\"load-vtk-streamlines\">\n<h3>load_vtk_streamlines<a class=\"headerlink\" href=\"#load-vtk-streamlines\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.io.vtk.load_vtk_streamlines\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.io.vtk.</span></span><span class=\"sig-name descname\"><span class=\"pre\">load_vtk_streamlines</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filename</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">to_lps</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.io.vtk.load_vtk_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load streamlines from vtk polydata.</p>\n<p>Load formats can be VTK, FIB</p>\n<section id=\"id83\">\n<h4>Parameters<a class=\"headerlink\" href=\"#id83\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>filename<span class=\"classifier\">string</span></dt><dd><p>input filename (.vtk or .fib)</p>\n</dd>\n<dt>to_lps<span class=\"classifier\">bool</span></dt><dd><p>Default to True, will follow the vtk file convention for streamlines\nWill be supported by MITKDiffusion and MI-Brain</p>\n</dd>\n</dl>\n</section>\n<section id=\"id84\">\n<h4>Returns<a class=\"headerlink\" href=\"#id84\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<dl class=\"simple\">\n<dt>output<span class=\"classifier\">list</span></dt><dd><p>list of 2D arrays</p>\n</dd>\n</dl>\n</section>\n</dd></dl>\n\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.nn", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>", "N", "next"], ["reference/dipy.direction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "P", "previous"]], "sourcename": "reference/dipy.io.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.bvectxt\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.bvectxt</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.dpy\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.dpy</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.gradients\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.gradients</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.image\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.image</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.peaks\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.peaks</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.pickles\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.pickles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.stateful_tractogram\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.stateful_tractogram</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.streamline\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.streamline</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.utils\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.utils</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.io.vtk\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io.vtk</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#read-bvec-file\">read_bvec_file</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.bvectxt.read_bvec_file\"><code class=\"docutils literal notranslate\"><span class=\"pre\">read_bvec_file()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ornt-mapping\">ornt_mapping</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.bvectxt.ornt_mapping\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ornt_mapping()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reorient-vectors\">reorient_vectors</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.bvectxt.reorient_vectors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reorient_vectors()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reorient-on-axis\">reorient_on_axis</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.bvectxt.reorient_on_axis\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reorient_on_axis()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#orientation-from-string\">orientation_from_string</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.bvectxt.orientation_from_string\"><code class=\"docutils literal notranslate\"><span class=\"pre\">orientation_from_string()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#orientation-to-string\">orientation_to_string</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.bvectxt.orientation_to_string\"><code class=\"docutils literal notranslate\"><span class=\"pre\">orientation_to_string()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dpy\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dpy</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Dpy</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Dpy.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy.close\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Dpy.close()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy.read_track\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Dpy.read_track()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy.read_tracks\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Dpy.read_tracks()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy.read_tracksi\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Dpy.read_tracksi()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy.version\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Dpy.version()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy.write_track\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Dpy.write_track()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.dpy.Dpy.write_tracks\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Dpy.write_tracks()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#read-bvals-bvecs\">read_bvals_bvecs</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.gradients.read_bvals_bvecs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">read_bvals_bvecs()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-nifti-data\">load_nifti_data</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.image.load_nifti_data\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_nifti_data()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-nifti\">load_nifti</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.image.load_nifti\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_nifti()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-nifti\">save_nifti</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.image.save_nifti\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_nifti()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-qa-metric\">save_qa_metric</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.image.save_qa_metric\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_qa_metric()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-peaks\">load_peaks</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.peaks.load_peaks\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_peaks()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-peaks\">save_peaks</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.peaks.save_peaks\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_peaks()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#peaks-to-niftis\">peaks_to_niftis</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.peaks.peaks_to_niftis\"><code class=\"docutils literal notranslate\"><span class=\"pre\">peaks_to_niftis()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-pickle\">save_pickle</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.pickles.save_pickle\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_pickle()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-pickle\">load_pickle</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.pickles.load_pickle\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_pickle()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#space\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Space</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Space\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Space</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Space.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Space.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Space.RASMM\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Space.RASMM</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Space.VOX\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Space.VOX</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Space.VOXMM\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Space.VOXMM</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#origin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Origin</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Origin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Origin</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Origin.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Origin.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Origin.NIFTI\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Origin.NIFTI</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.Origin.TRACKVIS\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Origin.TRACKVIS</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#statefultractogram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StatefulTractogram</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.affine\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.affine</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.are_compatible\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.are_compatible()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.compute_bounding_box()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.data_per_point\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.data_per_point</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.data_per_streamline</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.dimensions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.dimensions</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.dtype_dict\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.dtype_dict</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.from_sft\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.from_sft()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.get_data_per_point_keys()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.get_data_per_streamline_keys()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.get_streamlines_copy()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.is_bbox_in_vox_valid()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.origin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.origin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.remove_invalid_streamlines()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.space\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.space</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.space_attributes\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.space_attributes</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.streamlines</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_center\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.to_center()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_corner\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.to_corner()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_origin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.to_origin()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.to_rasmm()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_space\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.to_space()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_vox\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.to_vox()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.to_voxmm()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.voxel_order\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.voxel_order</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StatefulTractogram.voxel_sizes</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#logger\">logger</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.logger\"><code class=\"docutils literal notranslate\"><span class=\"pre\">logger()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#set-sft-logger-level\">set_sft_logger_level</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.stateful_tractogram.set_sft_logger_level\"><code class=\"docutils literal notranslate\"><span class=\"pre\">set_sft_logger_level()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-tractogram\">save_tractogram</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.save_tractogram\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_tractogram()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-tractogram\">load_tractogram</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.load_tractogram\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_tractogram()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-generator\">load_generator</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.load_generator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_generator()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-generator\">save_generator</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.save_generator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_generator()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-trk\">load_trk</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.load_trk\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_trk()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-tck\">load_tck</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.load_tck\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_tck()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-vtk\">load_vtk</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.load_vtk\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_vtk()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-vtp\">load_vtp</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.load_vtp\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_vtp()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-fib\">load_fib</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.load_fib\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_fib()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-dpy\">load_dpy</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.load_dpy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_dpy()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-trk\">save_trk</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.save_trk\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_trk()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-tck\">save_tck</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.save_tck\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_tck()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-vtk\">save_vtk</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.save_vtk\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_vtk()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-vtp\">save_vtp</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.save_vtp\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_vtp()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-fib\">save_fib</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.save_fib\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_fib()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-dpy\">save_dpy</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.streamline.save_dpy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_dpy()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#nifti1-symmat\">nifti1_symmat</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.nifti1_symmat\"><code class=\"docutils literal notranslate\"><span class=\"pre\">nifti1_symmat()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#make5d\">make5d</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.make5d\"><code class=\"docutils literal notranslate\"><span class=\"pre\">make5d()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#decfa\">decfa</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.decfa\"><code class=\"docutils literal notranslate\"><span class=\"pre\">decfa()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#decfa-to-float\">decfa_to_float</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.decfa_to_float\"><code class=\"docutils literal notranslate\"><span class=\"pre\">decfa_to_float()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#is-reference-info-valid\">is_reference_info_valid</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.is_reference_info_valid\"><code class=\"docutils literal notranslate\"><span class=\"pre\">is_reference_info_valid()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#get-reference-info\">get_reference_info</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.get_reference_info\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_reference_info()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#is-header-compatible\">is_header_compatible</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.is_header_compatible\"><code class=\"docutils literal notranslate\"><span class=\"pre\">is_header_compatible()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#create-tractogram-header\">create_tractogram_header</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.create_tractogram_header\"><code class=\"docutils literal notranslate\"><span class=\"pre\">create_tractogram_header()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#create-nifti-header\">create_nifti_header</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.create_nifti_header\"><code class=\"docutils literal notranslate\"><span class=\"pre\">create_nifti_header()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-buan-profiles-hdf5\">save_buan_profiles_hdf5</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.save_buan_profiles_hdf5\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_buan_profiles_hdf5()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#read-img-arr-or-path\">read_img_arr_or_path</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.utils.read_img_arr_or_path\"><code class=\"docutils literal notranslate\"><span class=\"pre\">read_img_arr_or_path()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-polydata\">load_polydata</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.vtk.load_polydata\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_polydata()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-polydata\">save_polydata</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.vtk.save_polydata\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_polydata()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#save-vtk-streamlines\">save_vtk_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.vtk.save_vtk_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_vtk_streamlines()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#load-vtk-streamlines\">load_vtk_streamlines</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.io.vtk.load_vtk_streamlines\"><code class=\"docutils literal notranslate\"><span class=\"pre\">load_vtk_streamlines()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.io", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}