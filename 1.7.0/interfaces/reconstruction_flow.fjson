{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "DIPY Workflows Interfaces"}], "prev": {"link": "../registration_flow/", "title": "Registration"}, "next": {"link": "../tracking_flow/", "title": "Tracking"}, "title": "Reconstruction", "meta": {}, "body": "<section id=\"reconstruction\">\n<span id=\"reconstruction-flow\"></span><h1>Reconstruction<a class=\"headerlink\" href=\"#reconstruction\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>This tutorial walks through the steps to perform reconstruction using DIPY.\nMultiple reconstruction methods are available in DIPY.</p>\n<p>You can try these methods using your own data; we will be using the data in\nDIPY. You can check how to <a class=\"reference internal\" href=\"../data_fetch/#data-fetch\"><span class=\"std std-ref\">fetch the DIPY data</span></a>.</p>\n<section id=\"constrained-spherical-deconvolution-csd\">\n<h2>Constrained Spherical Deconvolution (CSD)<a class=\"headerlink\" href=\"#constrained-spherical-deconvolution-csd\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>This method is mainly useful with datasets with gradient directions acquired in\nCartesian coordinates that can be resampled to spherical coordinates so as to\nuse SD methods.</p>\n<p>The basic idea of spherical deconvolution methods lies in the fact that the\nunderlying fiber distribution can be obtained by deconvolving the measured\ndiffusion signal with a fiber response function, provided that we are able to\naccurately estimate the latter.</p>\n<p>In this way, the reconstruction of the fiber orientation distribution function\n(fODF) in CSD involves two steps:</p>\n<ul class=\"simple\">\n<li><p>Estimation of the fiber response function.</p></li>\n<li><p>Use the response function to reconstruct the fODF.</p></li>\n</ul>\n<p>We will be using the <code class=\"docutils literal notranslate\"><span class=\"pre\">stanford_hardi</span></code> dataset for the CSD command line\ninterface demonstration purposes.</p>\n<p>We will start by creating the directories to which to save the peaks volume\n(e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">recons_csd_output</span></code>) and mask file (e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">stanford_hardi_mask</span></code>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mkdir</span> <span class=\"n\">recons_csd_output</span> <span class=\"n\">stanford_hardi_mask</span>\n</pre></div>\n</div>\n<p>The workflow for the CSD reconstruction method requires the paths to the\ndiffusion input file, b-values file, b-vectors file and mask file. The optional\narguments can also be provided. In this case, we will specify the FA threshold\nfor calculating the response function (<code class=\"docutils literal notranslate\"><span class=\"pre\">fa_thr</span></code>), spherical harmonics order\nused in the CSA fit (<code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code>), whether to use parallelization in\npeak-finding during the calibration procedure or not (<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel</span></code>), and the\noutput directory (<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>).</p>\n<p>To get the mask file, we will use the median Otsu thresholding method by\ncalling the <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy_median_otsu</span></code> command:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_median_otsu</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"o\">--</span><span class=\"n\">vol_idx</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">6</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;stanford_hardi_mask&quot;</span>\n</pre></div>\n</div>\n<p>Then, to perform the CSD reconstruction we will run the <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy_fit_csd</span></code>\ncommand as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_fit_csd</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">bval</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">bvec</span> <span class=\"n\">stanford_hardi_mask</span><span class=\"o\">/</span><span class=\"n\">brain_mask</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"o\">--</span><span class=\"n\">fa_thr</span> <span class=\"mf\">0.7</span> <span class=\"o\">--</span><span class=\"n\">sh_order</span> <span class=\"mi\">8</span> <span class=\"o\">--</span><span class=\"n\">parallel</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;recons_csd_output&quot;</span>\n</pre></div>\n</div>\n<p>This command will save the CSD metrics to the specified output directory.</p>\n</section>\n<section id=\"mean-apparent-propagator-map-mri\">\n<h2>Mean Apparent Propagator (MAP)-MRI<a class=\"headerlink\" href=\"#mean-apparent-propagator-map-mri\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>The MAP-MRI basis allows for the computation of directional indices, such as\nthe Return To the Axis Probability (RTAP), the Return To the Plane Probability\n(RTPP), and the parallel and perpendicular Non-Gaussianity.</p>\n<p>The estimation of analytical Orientation Distribution Function (ODF) and a\nvariety of scalar indices from noisy DWIs requires that the fitting of the\nMAPMRI basis is regularized.</p>\n<p>We will use the <code class=\"docutils literal notranslate\"><span class=\"pre\">cfin_multib</span></code> dataset in DIPY to showcase this reconstruction\nmethod. You can also use your own data!</p>\n<p>We will create the output directory in which to save the MAP-MRI metrics (e.g.:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">recons_mapmri_output</span></code>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mkdir</span> <span class=\"n\">recons_mapmri_output</span>\n</pre></div>\n</div>\n<p>The Mean Apparent Propagator reconstruction method requires the paths to the\ndiffusion input file, b-values file, b-vectors file, small delta value, big\ndelta value. The optional parameters can also be provided. In this case, we\nwill be specifying the threshold used to find b0 volumes (<code class=\"docutils literal notranslate\"><span class=\"pre\">b0_threshold</span></code>)\nand the output directory (<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>).</p>\n<p>To run the MAP-MRI reconstruction method on the data, execute the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dipy_fit_mapmri</span></code> command, e.g.:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_fit_mapmri</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">cfin_multib</span><span class=\"o\">/</span><span class=\"n\">__DTI_AX_ep2d_2_5_iso_33d_20141015095334_4</span><span class=\"o\">.</span><span class=\"n\">nii</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">cfin_multib</span><span class=\"o\">/</span><span class=\"n\">__DTI_AX_ep2d_2_5_iso_33d_20141015095334_4</span><span class=\"o\">.</span><span class=\"n\">bval</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">cfin_multib</span><span class=\"o\">/</span><span class=\"n\">__DTI_AX_ep2d_2_5_iso_33d_20141015095334_4</span><span class=\"o\">.</span><span class=\"n\">bvec</span> <span class=\"mf\">0.0157</span> <span class=\"mf\">0.0365</span> <span class=\"o\">--</span><span class=\"n\">b0_threshold</span> <span class=\"mf\">80.0</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"n\">recons_mapmri_output</span>\n</pre></div>\n</div>\n<p>This command will save the MAP-MRI metrics to the specified output directory.</p>\n</section>\n<section id=\"diffusion-tensor-imaging-dti\">\n<h2>Diffusion Tensor Imaging (DTI)<a class=\"headerlink\" href=\"#diffusion-tensor-imaging-dti\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>The diffusion tensor model is a model that describes the diffusion within a\nvoxel. First proposed by Basser and colleagues <a class=\"reference internal\" href=\"../../examples_built/07_reconstruction/reconst_dti/#basser1994\" id=\"id1\"><span>[Basser1994]</span></a>, it has been very\ninfluential in demonstrating the utility of diffusion MRI in characterizing the\nmicro-structure of white matter tissue and of the biophysical properties of\ntissue, inferred from local diffusion properties and it is still very commonly\nused.</p>\n<p>The diffusion tensor models the diffusion signal as:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\frac{S(\\mathbf{g}, b)}{S_0} = e^{-b\\mathbf{g}^T \\mathbf{D} \\mathbf{g}}\\]</div>\n<p>Where <span class=\"math notranslate nohighlight\">\\(\\mathbf{g}\\)</span> is a unit vector in 3D space indicating the direction of\nmeasurement and b are the parameters of measurement, such as the strength and\nduration of the diffusion-weighting gradient. <span class=\"math notranslate nohighlight\">\\(S(\\mathbf{g}, b)\\)</span> is the\nmeasured diffusion-weighted signal and <span class=\"math notranslate nohighlight\">\\(S_0\\)</span> is the signal conducted in a\nmeasurement with no diffusion weighting. <span class=\"math notranslate nohighlight\">\\(\\mathbf{D}\\)</span> is a positive-definite\nquadratic form, which contains six free parameters to be fit. These six\nparameters are:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\\begin{split}\\mathbf{D} = \\begin{pmatrix} D_{xx} &amp; D_{xy} &amp; D_{xz} \\\\\n                    D_{yx} &amp; D_{yy} &amp; D_{yz} \\\\\n                    D_{zx} &amp; D_{zy} &amp; D_{zz} \\\\ \\end{pmatrix}\\end{split}\\]</div>\n<p>This matrix is a variance/covariance matrix of the diffusivity along the three\nspatial dimensions. Note that we can assume that diffusivity has antipodal\nsymmetry, so elements across the diagonal are equal. For example:\n<span class=\"math notranslate nohighlight\">\\(D_{xy} = D_{yx}\\)</span>. This is why there are only 6 free parameters to estimate\nhere.</p>\n<p>We will use the <code class=\"docutils literal notranslate\"><span class=\"pre\">stanford_hardi</span></code> dataset in DIPY to showcase this\nreconstruction method. As with any other workflow in DIPY, you can also use\nyour own data!</p>\n<p>We will first create a directory in which to save the output volumes(e.g.:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">recons_dti_output</span></code>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mkdir</span> <span class=\"n\">recons_dti_output</span>\n</pre></div>\n</div>\n<p>To run the Diffusion Tensor Imaging reconstruction method, we need to specify\nthe paths to the diffusion input file, b-values file, b-vectors file and mask\nfile, followed by optional arguments. In this case, we will be specifying the\nlist of metrics to save (<code class=\"docutils literal notranslate\"><span class=\"pre\">save_metrics</span></code>), the output directory (<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>),\nand the name of the tensors volume to be saved (<code class=\"docutils literal notranslate\"><span class=\"pre\">out_tensor</span></code>).</p>\n<p>The DTI reconstruction is performed by calling the <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy_fit_dti</span></code> command,\ne.g.:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_fit_dti</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">bval</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">bvec</span> <span class=\"n\">stanford_hardi_mask</span><span class=\"o\">/</span><span class=\"n\">brain_mask</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"o\">--</span><span class=\"n\">save_metrics</span> <span class=\"s2\">&quot;md&quot;</span> <span class=\"s2\">&quot;mode&quot;</span> <span class=\"s2\">&quot;tensor&quot;</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;recons_dti_output&quot;</span> <span class=\"o\">--</span><span class=\"n\">out_tensor</span> <span class=\"s2\">&quot;dti_tensors.nii.gz&quot;</span>\n</pre></div>\n</div>\n<p>This command will save the DTI metrics to the specified output directory. The tensors will be saved as a 4D data with last dimension representing (Dxx, Dxy, Dyy, Dxz, Dyz, Dzz).</p>\n</section>\n<section id=\"diffusion-kurtosis-imaging-dki\">\n<h2>Diffusion Kurtosis Imaging (DKI)<a class=\"headerlink\" href=\"#diffusion-kurtosis-imaging-dki\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>The diffusion kurtosis model is an expansion of the diffusion tensor model. In\naddition to the diffusion tensor (DT), the diffusion kurtosis model quantifies\nthe degree to which water diffusion in biological tissues is non-Gaussian using\nthe kurtosis tensor (KT) <a class=\"reference internal\" href=\"../../examples_built/07_reconstruction/reconst_msdki/#jensen2005\" id=\"id2\"><span>[Jensen2005]</span></a>.</p>\n<p>Measurements of non-Gaussian diffusion from the diffusion kurtosis model are of\ninterest because they can be used to characterize tissue microstructural\nheterogeneity <a class=\"reference internal\" href=\"../../examples_built/07_reconstruction/reconst_dki/#jensen2010\" id=\"id3\"><span>[Jensen2010]</span></a>.</p>\n<p>Moreover, DKI can be used to:</p>\n<ul class=\"simple\">\n<li><p>Derive concrete biophysical parameters, such as the density of axonal fibers\nand diffusion tortuosity <a class=\"reference internal\" href=\"../../examples_built/07_reconstruction/reconst_dki_micro/#fierem2011\" id=\"id4\"><span>[Fierem2011]</span></a>.</p></li>\n<li><p>Resolve crossing fibers in tractography and to obtain invariant rotational\nmeasures not limited to well-aligned fiber populations <a class=\"reference internal\" href=\"../../examples_built/07_reconstruction/reconst_msdki/#netohe2015\" id=\"id5\"><span>[NetoHe2015]</span></a>.</p></li>\n</ul>\n<p>We will use the <code class=\"docutils literal notranslate\"><span class=\"pre\">cfin_multib</span></code> dataset in DIPY to showcase this reconstruction\nmethod. You can also use your own data!</p>\n<p>We will create the directories in which to save the DKI metrics (e.g.:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">recons_dki_output</span></code>) and mask file (e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">cfin_multib_mask</span></code>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mkdir</span> <span class=\"n\">recons_dki_output</span> <span class=\"n\">cfin_multib_mask</span>\n</pre></div>\n</div>\n<p>The Diffusion Kurtosis Imaging reconstruction method requires the paths to the\ndiffusion input file, b-values file, b-vectors file and mask file. The optional\nparameters can also be provided. In this case, we will be specifying the threshold\nused to find b0 volumes (<code class=\"docutils literal notranslate\"><span class=\"pre\">b0_threshold</span></code>) and the output\ndirectory (<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>).</p>\n<p>To get the mask file, we will use the median Otsu thresholding method by calling\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy_median_otsu</span></code> command:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_median_otsu</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">cfin_multib</span><span class=\"o\">/</span><span class=\"n\">__DTI_AX_ep2d_2_5_iso_33d_20141015095334_4</span><span class=\"o\">.</span><span class=\"n\">nii</span> <span class=\"o\">--</span><span class=\"n\">vol_idx</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">6</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;cfin_multib_mask&quot;</span>\n</pre></div>\n</div>\n<p>To run the DKI reconstruction method on the data, execute the <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy_fit_dki</span></code>\ncommand, e.g.:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_fit_dki</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">cfin_multib</span><span class=\"o\">/</span><span class=\"n\">__DTI_AX_ep2d_2_5_iso_33d_20141015095334_4</span><span class=\"o\">.</span><span class=\"n\">nii</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">cfin_multib</span><span class=\"o\">/</span><span class=\"n\">__DTI_AX_ep2d_2_5_iso_33d_20141015095334_4</span><span class=\"o\">.</span><span class=\"n\">bval</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">cfin_multib</span><span class=\"o\">/</span><span class=\"n\">__DTI_AX_ep2d_2_5_iso_33d_20141015095334_4</span><span class=\"o\">.</span><span class=\"n\">bvec</span> <span class=\"n\">cfin_multib_mask</span><span class=\"o\">/</span><span class=\"n\">brain_mask</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"o\">--</span><span class=\"n\">b0_threshold</span> <span class=\"mf\">70.0</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"n\">recons_dki_output</span>\n</pre></div>\n</div>\n<p>This command will save the DKI metrics to the specified output directory.</p>\n</section>\n<section id=\"constant-solid-angle-csa\">\n<h2>Constant Solid Angle (CSA)<a class=\"headerlink\" href=\"#constant-solid-angle-csa\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>We are using <code class=\"docutils literal notranslate\"><span class=\"pre\">stanford_hardi</span></code> dataset. As with any other workflow in DIPY,\nyou can also use your own data!</p>\n<p>We will create a directory in which to save the peaks volume (e.g.:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">recons_csa_output</span></code>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mkdir</span> <span class=\"n\">recons_csa_output</span>\n</pre></div>\n</div>\n<p>The workflow for the CSA reconstruction method requires the paths to the\ndiffusion input file, b-values file, b-vectors file and mask file. The optional\narguments can also be provided. In this case, we will be specifying whether or\nnot to save pam volumes as single nifti files (<code class=\"docutils literal notranslate\"><span class=\"pre\">extract_pam_values</span></code>) and the\noutput directory (<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>).</p>\n<p>Then, to perform the CSA reconstruction we will run the <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy_fit_csa</span></code> command\nas:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_fit_csa</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">bval</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">bvec</span> <span class=\"n\">stanford_hardi_mask</span><span class=\"o\">/</span><span class=\"n\">brain_mask</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"o\">--</span><span class=\"n\">extract_pam_values</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;recons_csa_output&quot;</span>\n</pre></div>\n</div>\n<p>This command will save the CSA metrics to the specified output directory.</p>\n</section>\n<section id=\"intravoxel-incoherent-motion-ivim\">\n<h2>Intravoxel Incoherent Motion (IVIM)<a class=\"headerlink\" href=\"#intravoxel-incoherent-motion-ivim\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>The intravoxel incoherent motion (IVIM) model describes diffusion and perfusion\nin the signal acquired with a diffusion MRI sequence that contains multiple low\nb-values. The IVIM model can be understood as an adaptation of the work of\nStejskal and Tanner <a class=\"reference internal\" href=\"../../examples_built/07_reconstruction/reconst_ivim/#stejskal65\" id=\"id6\"><span>[Stejskal65]</span></a> in biological tissue, and was proposed by Le\nBihan <a class=\"reference internal\" href=\"../../examples_built/07_reconstruction/reconst_ivim/#lebihan84\" id=\"id7\"><span>[LeBihan84]</span></a>. The model assumes two compartments: a slow moving\ncompartment, where particles diffuse in a Brownian fashion as a consequence of\nthermal energy, and a fast moving compartment (the vascular compartment), where\nblood moves as a consequence of a pressure gradient. In the first compartment,\nthe diffusion coefficient is <span class=\"math notranslate nohighlight\">\\(\\mathbf{D}\\)</span> while in the second compartment, a\npseudo diffusion term <span class=\"math notranslate nohighlight\">\\(\\mathbf{D^*}\\)</span> is introduced that describes the\ndisplacement of the blood elements in an assumed randomly laid out vascular\nnetwork, at the macroscopic level. According to <a class=\"reference internal\" href=\"../../examples_built/07_reconstruction/reconst_ivim/#lebihan84\" id=\"id8\"><span>[LeBihan84]</span></a>, <span class=\"math notranslate nohighlight\">\\(\\mathbf{D^*}\\)</span> is\ngreater than <span class=\"math notranslate nohighlight\">\\(\\mathbf{D}\\)</span>.</p>\n<p>We will be using the <code class=\"docutils literal notranslate\"><span class=\"pre\">ivim</span></code> dataset for the IVIM command line interface\ndemonstration purposes.</p>\n<p>We will start by creating the directories in which to save the output volumes\n(e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">recons_ivim_output</span></code>) and mask file (e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">ivim_mask</span></code>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mkdir</span> <span class=\"n\">recons_ivim_output</span> <span class=\"n\">ivim_mask</span>\n</pre></div>\n</div>\n<p>In order to run the IVIM reconstruction method, we need to specify the locations\nof the diffusion input file, b-values file, b-vectors file and mask file\nfollowed by the optional arguments. In this case, we will be  specifying the\nvalue to split the bvals to estimate D for the two-stage process of fitting\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">split_b_D</span></code>) and the output directory (<code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>).</p>\n<p>To get the mask file, we will use the median Otsu thresholding method by calling\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">dipy_median_otsu</span></code> command:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_median_otsu</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ivim</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"o\">--</span><span class=\"n\">vol_idx</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">6</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;ivim_mask&quot;</span>\n</pre></div>\n</div>\n<p>Then, to perform the IVIM reconstruction we will run the command as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_fit_ivim</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ivim</span><span class=\"o\">/</span><span class=\"n\">ivim</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ivim</span><span class=\"o\">/</span><span class=\"n\">ivim</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span><span class=\"o\">.</span><span class=\"n\">bval</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ivim</span><span class=\"o\">/</span><span class=\"n\">ivim</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span><span class=\"o\">.</span><span class=\"n\">bvec</span> <span class=\"n\">ivim_mask</span><span class=\"o\">/</span><span class=\"n\">brain_mask</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"o\">--</span><span class=\"n\">split_b_D</span> <span class=\"mi\">250</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;recons_ivim_output&quot;</span>\n</pre></div>\n</div>\n<p>This command will save the IVIM metrics to the directory <code class=\"docutils literal notranslate\"><span class=\"pre\">recons_ivim_output</span></code>.</p>\n<p>In case the output directory was not specified, the output volumes will be\nsaved to the current directory by default.</p>\n<section id=\"references\">\n<h3>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"basser1994\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id1\">Basser1994</a><span class=\"fn-bracket\">]</span></span>\n<p>Basser PJ, Mattielo J, LeBihan (1994). MR diffusion tensor\nspectroscopy and imaging.</p>\n</div>\n<div class=\"citation\" id=\"jensen2005\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id2\">Jensen2005</a><span class=\"fn-bracket\">]</span></span>\n<p>Jensen JH, Helpern JA, Ramani A, Lu H, Kaczynski K (2005).\nDiffusional Kurtosis Imaging: The Quantification of\nNon_Gaussian Water Diffusion by Means of Magnetic Resonance\nImaging. Magnetic Resonance in Medicine 53: 1432-1440</p>\n</div>\n<div class=\"citation\" id=\"jensen2010\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id3\">Jensen2010</a><span class=\"fn-bracket\">]</span></span>\n<p>Jensen JH, Helpern JA (2010). MRI quantification of\nnon-Gaussian water diffusion by kurtosis analysis. NMR in\nBiomedicine 23(7): 698-710</p>\n</div>\n<div class=\"citation\" id=\"fierem2011\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id4\">Fierem2011</a><span class=\"fn-bracket\">]</span></span>\n<p>Fieremans E, Jensen JH, Helpern JA (2011). White matter\ncharacterization with diffusion kurtosis imaging. NeuroImage\n58: 177-188</p>\n</div>\n<div class=\"citation\" id=\"netohe2015\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id5\">NetoHe2015</a><span class=\"fn-bracket\">]</span></span>\n<p>Neto Henriques R, Correia MM, Nunes RG, Ferreira HA (2015).\nExploring the 3D geometry of the diffusion kurtosis tensor -\nImpact on the development of robust tractography procedures and\nnovel biomarkers, NeuroImage 111: 85-99</p>\n</div>\n<div class=\"citation\" id=\"stejskal65\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id6\">Stejskal65</a><span class=\"fn-bracket\">]</span></span>\n<p>Stejskal, E. O.; Tanner, J. E. (1 January 1965).\n\u201cSpin Diffusion Measurements: Spin Echoes in the Presence\nof a Time-Dependent Field Gradient\u201d. The Journal of Chemical\nPhysics 42 (1): 288. Bibcode: 1965JChPh..42..288S.\ndoi:10.1063/1.1695690.</p>\n</div>\n<div class=\"citation\" id=\"lebihan84\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>LeBihan84<span class=\"fn-bracket\">]</span></span>\n<span class=\"backrefs\">(<a role=\"doc-backlink\" href=\"#id7\">1</a>,<a role=\"doc-backlink\" href=\"#id8\">2</a>)</span>\n<p>Le Bihan, Denis, et al. \u201cSeparation of diffusion\nand perfusion in intravoxel incoherent motion MR\nimaging.\u201d Radiology 168.2 (1988): 497-505.</p>\n</div>\n</div>\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["interfaces/tracking_flow", "Tracking", "N", "next"], ["interfaces/registration_flow", "Registration", "P", "previous"]], "sourcename": "interfaces/reconstruction_flow.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Reconstruction</a><ul>\n<li><a class=\"reference internal\" href=\"#constrained-spherical-deconvolution-csd\">Constrained Spherical Deconvolution (CSD)</a></li>\n<li><a class=\"reference internal\" href=\"#mean-apparent-propagator-map-mri\">Mean Apparent Propagator (MAP)-MRI</a></li>\n<li><a class=\"reference internal\" href=\"#diffusion-tensor-imaging-dti\">Diffusion Tensor Imaging (DTI)</a></li>\n<li><a class=\"reference internal\" href=\"#diffusion-kurtosis-imaging-dki\">Diffusion Kurtosis Imaging (DKI)</a></li>\n<li><a class=\"reference internal\" href=\"#constant-solid-angle-csa\">Constant Solid Angle (CSA)</a></li>\n<li><a class=\"reference internal\" href=\"#intravoxel-incoherent-motion-ivim\">Intravoxel Incoherent Motion (IVIM)</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "interfaces/reconstruction_flow", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}